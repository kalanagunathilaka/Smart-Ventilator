
Smart Ventilator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000025c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ba  00800060  000025c8  0000265c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000361  0080011a  0080011a  00002716  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002716  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002774  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  000027b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b5f  00000000  00000000  00002958  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a6d  00000000  00000000  000044b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000efc  00000000  00000000  00004f24  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000518  00000000  00000000  00005e20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000824  00000000  00000000  00006338  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010ae  00000000  00000000  00006b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  00007c0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
       4:	0c 94 8b 01 	jmp	0x316	; 0x316 <__vector_1>
       8:	0c 94 95 01 	jmp	0x32a	; 0x32a <__vector_2>
       c:	0c 94 9f 01 	jmp	0x33e	; 0x33e <__vector_3>
      10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      1c:	0c 94 66 0b 	jmp	0x16cc	; 0x16cc <__vector_7>
      20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      54:	63 06       	cpc	r6, r19
      56:	98 06       	cpc	r9, r24
      58:	cd 06       	cpc	r12, r29
      5a:	02 07       	cpc	r16, r18
      5c:	37 07       	cpc	r19, r23
      5e:	6c 07       	cpc	r22, r28
      60:	a1 07       	cpc	r26, r17
      62:	d6 07       	cpc	r29, r22
      64:	0b 08       	sbc	r0, r11
      66:	40 08       	sbc	r4, r0
      68:	75 08       	sbc	r7, r5
      6a:	aa 08       	sbc	r10, r10
      6c:	df 08       	sbc	r13, r15
      6e:	1d 0a       	sbc	r1, r29
      70:	14 09       	sbc	r17, r4
      72:	49 09       	sbc	r20, r9
      74:	7e 09       	sbc	r23, r14
      76:	b3 09       	sbc	r27, r3
      78:	e8 09       	sbc	r30, r8

0000007a <__ctors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf e5       	ldi	r28, 0x5F	; 95
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	11 e0       	ldi	r17, 0x01	; 1
      88:	a0 e6       	ldi	r26, 0x60	; 96
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	e8 ec       	ldi	r30, 0xC8	; 200
      8e:	f5 e2       	ldi	r31, 0x25	; 37
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	aa 31       	cpi	r26, 0x1A	; 26
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	24 e0       	ldi	r18, 0x04	; 4
      9e:	aa e1       	ldi	r26, 0x1A	; 26
      a0:	b1 e0       	ldi	r27, 0x01	; 1
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	ab 37       	cpi	r26, 0x7B	; 123
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
      ac:	0e 94 63 0a 	call	0x14c6	; 0x14c6 <main>
      b0:	0c 94 e2 12 	jmp	0x25c4	; 0x25c4 <_exit>

000000b4 <__bad_interrupt>:
      b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <delay>:
        return 1;
    }
    //if normal return 1 else notify speaker and gsm
}

void getParametersFromKnobs() {
      b8:	40 e0       	ldi	r20, 0x00	; 0
      ba:	50 e0       	ldi	r21, 0x00	; 0
      bc:	0a c0       	rjmp	.+20     	; 0xd2 <delay+0x1a>
      be:	2f 5f       	subi	r18, 0xFF	; 255
      c0:	3f 4f       	sbci	r19, 0xFF	; 255
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <delay+0x10>
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	29 37       	cpi	r18, 0x79	; 121
      ca:	31 05       	cpc	r19, r1
      cc:	c4 f3       	brlt	.-16     	; 0xbe <delay+0x6>
      ce:	4f 5f       	subi	r20, 0xFF	; 255
      d0:	5f 4f       	sbci	r21, 0xFF	; 255
      d2:	84 17       	cp	r24, r20
      d4:	95 07       	cpc	r25, r21
      d6:	b4 f7       	brge	.-20     	; 0xc4 <delay+0xc>
      d8:	08 95       	ret

000000da <toggle>:
      da:	83 b1       	in	r24, 0x03	; 3
      dc:	82 60       	ori	r24, 0x02	; 2
      de:	83 b9       	out	0x03, r24	; 3
      e0:	84 e8       	ldi	r24, 0x84	; 132
      e2:	86 bf       	out	0x36, r24	; 54
      e4:	06 b6       	in	r0, 0x36	; 54
      e6:	07 fe       	sbrs	r0, 7
      e8:	fd cf       	rjmp	.-6      	; 0xe4 <toggle+0xa>
      ea:	81 e0       	ldi	r24, 0x01	; 1
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay>
      f2:	83 b1       	in	r24, 0x03	; 3
      f4:	8d 7f       	andi	r24, 0xFD	; 253
      f6:	83 b9       	out	0x03, r24	; 3
      f8:	84 e8       	ldi	r24, 0x84	; 132
      fa:	86 bf       	out	0x36, r24	; 54
      fc:	06 b6       	in	r0, 0x36	; 54
      fe:	07 fe       	sbrs	r0, 7
     100:	fd cf       	rjmp	.-6      	; 0xfc <toggle+0x22>
     102:	08 95       	ret

00000104 <lcd_cmd_hf>:
     104:	93 b1       	in	r25, 0x03	; 3
     106:	9e 7f       	andi	r25, 0xFE	; 254
     108:	93 b9       	out	0x03, r25	; 3
     10a:	94 e8       	ldi	r25, 0x84	; 132
     10c:	96 bf       	out	0x36, r25	; 54
     10e:	06 b6       	in	r0, 0x36	; 54
     110:	07 fe       	sbrs	r0, 7
     112:	fd cf       	rjmp	.-6      	; 0x10e <lcd_cmd_hf+0xa>
     114:	93 b1       	in	r25, 0x03	; 3
     116:	9f 70       	andi	r25, 0x0F	; 15
     118:	93 b9       	out	0x03, r25	; 3
     11a:	94 e8       	ldi	r25, 0x84	; 132
     11c:	96 bf       	out	0x36, r25	; 54
     11e:	06 b6       	in	r0, 0x36	; 54
     120:	07 fe       	sbrs	r0, 7
     122:	fd cf       	rjmp	.-6      	; 0x11e <lcd_cmd_hf+0x1a>
     124:	93 b1       	in	r25, 0x03	; 3
     126:	80 7f       	andi	r24, 0xF0	; 240
     128:	89 2b       	or	r24, r25
     12a:	83 b9       	out	0x03, r24	; 3
     12c:	84 e8       	ldi	r24, 0x84	; 132
     12e:	86 bf       	out	0x36, r24	; 54
     130:	06 b6       	in	r0, 0x36	; 54
     132:	07 fe       	sbrs	r0, 7
     134:	fd cf       	rjmp	.-6      	; 0x130 <lcd_cmd_hf+0x2c>
     136:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     13a:	08 95       	ret

0000013c <lcd_cmd>:
     13c:	cf 93       	push	r28
     13e:	c8 2f       	mov	r28, r24
     140:	83 b1       	in	r24, 0x03	; 3
     142:	8e 7f       	andi	r24, 0xFE	; 254
     144:	83 b9       	out	0x03, r24	; 3
     146:	84 e8       	ldi	r24, 0x84	; 132
     148:	86 bf       	out	0x36, r24	; 54
     14a:	06 b6       	in	r0, 0x36	; 54
     14c:	07 fe       	sbrs	r0, 7
     14e:	fd cf       	rjmp	.-6      	; 0x14a <lcd_cmd+0xe>
     150:	83 b1       	in	r24, 0x03	; 3
     152:	8f 70       	andi	r24, 0x0F	; 15
     154:	83 b9       	out	0x03, r24	; 3
     156:	84 e8       	ldi	r24, 0x84	; 132
     158:	86 bf       	out	0x36, r24	; 54
     15a:	06 b6       	in	r0, 0x36	; 54
     15c:	07 fe       	sbrs	r0, 7
     15e:	fd cf       	rjmp	.-6      	; 0x15a <lcd_cmd+0x1e>
     160:	83 b1       	in	r24, 0x03	; 3
     162:	9c 2f       	mov	r25, r28
     164:	90 7f       	andi	r25, 0xF0	; 240
     166:	89 2b       	or	r24, r25
     168:	83 b9       	out	0x03, r24	; 3
     16a:	84 e8       	ldi	r24, 0x84	; 132
     16c:	86 bf       	out	0x36, r24	; 54
     16e:	06 b6       	in	r0, 0x36	; 54
     170:	07 fe       	sbrs	r0, 7
     172:	fd cf       	rjmp	.-6      	; 0x16e <lcd_cmd+0x32>
     174:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     178:	83 b1       	in	r24, 0x03	; 3
     17a:	8f 70       	andi	r24, 0x0F	; 15
     17c:	83 b9       	out	0x03, r24	; 3
     17e:	84 e8       	ldi	r24, 0x84	; 132
     180:	86 bf       	out	0x36, r24	; 54
     182:	06 b6       	in	r0, 0x36	; 54
     184:	07 fe       	sbrs	r0, 7
     186:	fd cf       	rjmp	.-6      	; 0x182 <lcd_cmd+0x46>
     188:	23 b1       	in	r18, 0x03	; 3
     18a:	30 e1       	ldi	r19, 0x10	; 16
     18c:	c3 9f       	mul	r28, r19
     18e:	c0 01       	movw	r24, r0
     190:	11 24       	eor	r1, r1
     192:	82 2b       	or	r24, r18
     194:	83 b9       	out	0x03, r24	; 3
     196:	84 e8       	ldi	r24, 0x84	; 132
     198:	86 bf       	out	0x36, r24	; 54
     19a:	06 b6       	in	r0, 0x36	; 54
     19c:	07 fe       	sbrs	r0, 7
     19e:	fd cf       	rjmp	.-6      	; 0x19a <lcd_cmd+0x5e>
     1a0:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     1a4:	cf 91       	pop	r28
     1a6:	08 95       	ret

000001a8 <lcd_init>:
     1a8:	80 e3       	ldi	r24, 0x30	; 48
     1aa:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1ae:	80 e3       	ldi	r24, 0x30	; 48
     1b0:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1b4:	80 e2       	ldi	r24, 0x20	; 32
     1b6:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1ba:	88 e2       	ldi	r24, 0x28	; 40
     1bc:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1c0:	8c e0       	ldi	r24, 0x0C	; 12
     1c2:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1cc:	86 e0       	ldi	r24, 0x06	; 6
     1ce:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1d2:	80 e8       	ldi	r24, 0x80	; 128
     1d4:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1d8:	08 95       	ret

000001da <lcd_dwr>:
     1da:	cf 93       	push	r28
     1dc:	c8 2f       	mov	r28, r24
     1de:	83 b1       	in	r24, 0x03	; 3
     1e0:	81 60       	ori	r24, 0x01	; 1
     1e2:	83 b9       	out	0x03, r24	; 3
     1e4:	84 e8       	ldi	r24, 0x84	; 132
     1e6:	86 bf       	out	0x36, r24	; 54
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <lcd_dwr+0xe>
     1ee:	83 b1       	in	r24, 0x03	; 3
     1f0:	8f 70       	andi	r24, 0x0F	; 15
     1f2:	83 b9       	out	0x03, r24	; 3
     1f4:	84 e8       	ldi	r24, 0x84	; 132
     1f6:	86 bf       	out	0x36, r24	; 54
     1f8:	06 b6       	in	r0, 0x36	; 54
     1fa:	07 fe       	sbrs	r0, 7
     1fc:	fd cf       	rjmp	.-6      	; 0x1f8 <lcd_dwr+0x1e>
     1fe:	83 b1       	in	r24, 0x03	; 3
     200:	9c 2f       	mov	r25, r28
     202:	90 7f       	andi	r25, 0xF0	; 240
     204:	89 2b       	or	r24, r25
     206:	83 b9       	out	0x03, r24	; 3
     208:	84 e8       	ldi	r24, 0x84	; 132
     20a:	86 bf       	out	0x36, r24	; 54
     20c:	06 b6       	in	r0, 0x36	; 54
     20e:	07 fe       	sbrs	r0, 7
     210:	fd cf       	rjmp	.-6      	; 0x20c <lcd_dwr+0x32>
     212:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     216:	83 b1       	in	r24, 0x03	; 3
     218:	8f 70       	andi	r24, 0x0F	; 15
     21a:	83 b9       	out	0x03, r24	; 3
     21c:	84 e8       	ldi	r24, 0x84	; 132
     21e:	86 bf       	out	0x36, r24	; 54
     220:	06 b6       	in	r0, 0x36	; 54
     222:	07 fe       	sbrs	r0, 7
     224:	fd cf       	rjmp	.-6      	; 0x220 <lcd_dwr+0x46>
     226:	23 b1       	in	r18, 0x03	; 3
     228:	30 e1       	ldi	r19, 0x10	; 16
     22a:	c3 9f       	mul	r28, r19
     22c:	c0 01       	movw	r24, r0
     22e:	11 24       	eor	r1, r1
     230:	82 2b       	or	r24, r18
     232:	83 b9       	out	0x03, r24	; 3
     234:	84 e8       	ldi	r24, 0x84	; 132
     236:	86 bf       	out	0x36, r24	; 54
     238:	06 b6       	in	r0, 0x36	; 54
     23a:	07 fe       	sbrs	r0, 7
     23c:	fd cf       	rjmp	.-6      	; 0x238 <lcd_dwr+0x5e>
     23e:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     242:	cf 91       	pop	r28
     244:	08 95       	ret

00000246 <lcd_msg>:
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	ec 01       	movw	r28, r24
     24c:	03 c0       	rjmp	.+6      	; 0x254 <lcd_msg+0xe>
     24e:	21 96       	adiw	r28, 0x01	; 1
     250:	0e 94 ed 00 	call	0x1da	; 0x1da <lcd_dwr>
     254:	88 81       	ld	r24, Y
     256:	81 11       	cpse	r24, r1
     258:	fa cf       	rjmp	.-12     	; 0x24e <lcd_msg+0x8>
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <i2c_init>:
     260:	82 e6       	ldi	r24, 0x62	; 98
     262:	80 b9       	out	0x00, r24	; 0
     264:	84 e0       	ldi	r24, 0x04	; 4
     266:	86 bf       	out	0x36, r24	; 54
     268:	11 b8       	out	0x01, r1	; 1
     26a:	08 95       	ret

0000026c <i2c_start>:
     26c:	84 ea       	ldi	r24, 0xA4	; 164
     26e:	86 bf       	out	0x36, r24	; 54
     270:	06 b6       	in	r0, 0x36	; 54
     272:	07 fe       	sbrs	r0, 7
     274:	fd cf       	rjmp	.-6      	; 0x270 <i2c_start+0x4>
     276:	08 95       	ret

00000278 <i2c_write>:
     278:	83 b9       	out	0x03, r24	; 3
     27a:	84 e8       	ldi	r24, 0x84	; 132
     27c:	86 bf       	out	0x36, r24	; 54
     27e:	06 b6       	in	r0, 0x36	; 54
     280:	07 fe       	sbrs	r0, 7
     282:	fd cf       	rjmp	.-6      	; 0x27e <i2c_write+0x6>
     284:	08 95       	ret

00000286 <USART_Init>:
     286:	2a b1       	in	r18, 0x0a	; 10
     288:	28 69       	ori	r18, 0x98	; 152
     28a:	2a b9       	out	0x0a, r18	; 10
     28c:	20 b5       	in	r18, 0x20	; 32
     28e:	26 68       	ori	r18, 0x86	; 134
     290:	20 bd       	out	0x20, r18	; 32
     292:	dc 01       	movw	r26, r24
     294:	cb 01       	movw	r24, r22
     296:	88 0f       	add	r24, r24
     298:	99 1f       	adc	r25, r25
     29a:	aa 1f       	adc	r26, r26
     29c:	bb 1f       	adc	r27, r27
     29e:	88 0f       	add	r24, r24
     2a0:	99 1f       	adc	r25, r25
     2a2:	aa 1f       	adc	r26, r26
     2a4:	bb 1f       	adc	r27, r27
     2a6:	9c 01       	movw	r18, r24
     2a8:	ad 01       	movw	r20, r26
     2aa:	22 0f       	add	r18, r18
     2ac:	33 1f       	adc	r19, r19
     2ae:	44 1f       	adc	r20, r20
     2b0:	55 1f       	adc	r21, r21
     2b2:	22 0f       	add	r18, r18
     2b4:	33 1f       	adc	r19, r19
     2b6:	44 1f       	adc	r20, r20
     2b8:	55 1f       	adc	r21, r21
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	72 e1       	ldi	r23, 0x12	; 18
     2be:	8a e7       	ldi	r24, 0x7A	; 122
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__udivmodsi4>
     2c6:	8f ef       	ldi	r24, 0xFF	; 255
     2c8:	82 0f       	add	r24, r18
     2ca:	89 b9       	out	0x09, r24	; 9
     2cc:	da 01       	movw	r26, r20
     2ce:	c9 01       	movw	r24, r18
     2d0:	01 97       	sbiw	r24, 0x01	; 1
     2d2:	a1 09       	sbc	r26, r1
     2d4:	b1 09       	sbc	r27, r1
     2d6:	89 2f       	mov	r24, r25
     2d8:	9a 2f       	mov	r25, r26
     2da:	ab 2f       	mov	r26, r27
     2dc:	bb 27       	eor	r27, r27
     2de:	80 bd       	out	0x20, r24	; 32
     2e0:	08 95       	ret

000002e2 <USART_TxChar>:
     2e2:	8c b9       	out	0x0c, r24	; 12
     2e4:	5d 9b       	sbis	0x0b, 5	; 11
     2e6:	fe cf       	rjmp	.-4      	; 0x2e4 <USART_TxChar+0x2>
     2e8:	08 95       	ret

000002ea <USART_SendString>:
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	8c 01       	movw	r16, r24
     2f4:	c0 e0       	ldi	r28, 0x00	; 0
     2f6:	d0 e0       	ldi	r29, 0x00	; 0
     2f8:	03 c0       	rjmp	.+6      	; 0x300 <USART_SendString+0x16>
     2fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <USART_TxChar>
     2fe:	21 96       	adiw	r28, 0x01	; 1
     300:	f8 01       	movw	r30, r16
     302:	ec 0f       	add	r30, r28
     304:	fd 1f       	adc	r31, r29
     306:	80 81       	ld	r24, Z
     308:	81 11       	cpse	r24, r1
     30a:	f7 cf       	rjmp	.-18     	; 0x2fa <USART_SendString+0x10>
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	0f 91       	pop	r16
     314:	08 95       	ret

00000316 <__vector_1>:
     316:	1f 92       	push	r1
     318:	0f 92       	push	r0
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	0f 92       	push	r0
     31e:	11 24       	eor	r1, r1
     320:	0f 90       	pop	r0
     322:	0f be       	out	0x3f, r0	; 63
     324:	0f 90       	pop	r0
     326:	1f 90       	pop	r1
     328:	18 95       	reti

0000032a <__vector_2>:
     32a:	1f 92       	push	r1
     32c:	0f 92       	push	r0
     32e:	0f b6       	in	r0, 0x3f	; 63
     330:	0f 92       	push	r0
     332:	11 24       	eor	r1, r1
     334:	0f 90       	pop	r0
     336:	0f be       	out	0x3f, r0	; 63
     338:	0f 90       	pop	r0
     33a:	1f 90       	pop	r1
     33c:	18 95       	reti

0000033e <__vector_3>:
     33e:	1f 92       	push	r1
     340:	0f 92       	push	r0
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	0f 92       	push	r0
     346:	11 24       	eor	r1, r1
     348:	0f 90       	pop	r0
     34a:	0f be       	out	0x3f, r0	; 63
     34c:	0f 90       	pop	r0
     34e:	1f 90       	pop	r1
     350:	18 95       	reti

00000352 <ADC_Init>:
     352:	82 30       	cpi	r24, 0x02	; 2
     354:	91 05       	cpc	r25, r1
     356:	59 f0       	breq	.+22     	; 0x36e <ADC_Init+0x1c>
     358:	83 30       	cpi	r24, 0x03	; 3
     35a:	91 05       	cpc	r25, r1
     35c:	71 f0       	breq	.+28     	; 0x37a <ADC_Init+0x28>
     35e:	01 97       	sbiw	r24, 0x01	; 1
     360:	89 f4       	brne	.+34     	; 0x384 <ADC_Init+0x32>
     362:	1a ba       	out	0x1a, r1	; 26
     364:	87 e8       	ldi	r24, 0x87	; 135
     366:	86 b9       	out	0x06, r24	; 6
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	87 b9       	out	0x07, r24	; 7
     36c:	08 95       	ret
     36e:	1a ba       	out	0x1a, r1	; 26
     370:	87 e8       	ldi	r24, 0x87	; 135
     372:	86 b9       	out	0x06, r24	; 6
     374:	83 e0       	ldi	r24, 0x03	; 3
     376:	87 b9       	out	0x07, r24	; 7
     378:	08 95       	ret
     37a:	1a ba       	out	0x1a, r1	; 26
     37c:	87 e8       	ldi	r24, 0x87	; 135
     37e:	86 b9       	out	0x06, r24	; 6
     380:	84 e0       	ldi	r24, 0x04	; 4
     382:	87 b9       	out	0x07, r24	; 7
     384:	08 95       	ret

00000386 <ADC_Read>:
     386:	97 b1       	in	r25, 0x07	; 7
     388:	8f 70       	andi	r24, 0x0F	; 15
     38a:	98 2b       	or	r25, r24
     38c:	97 b9       	out	0x07, r25	; 7
     38e:	86 b1       	in	r24, 0x06	; 6
     390:	80 64       	ori	r24, 0x40	; 64
     392:	86 b9       	out	0x06, r24	; 6
     394:	34 9b       	sbis	0x06, 4	; 6
     396:	fe cf       	rjmp	.-4      	; 0x394 <ADC_Read+0xe>
     398:	8a e1       	ldi	r24, 0x1A	; 26
     39a:	8a 95       	dec	r24
     39c:	f1 f7       	brne	.-4      	; 0x39a <ADC_Read+0x14>
     39e:	00 c0       	rjmp	.+0      	; 0x3a0 <ADC_Read+0x1a>
     3a0:	24 b1       	in	r18, 0x04	; 4
     3a2:	85 b1       	in	r24, 0x05	; 5
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	98 2f       	mov	r25, r24
     3a8:	88 27       	eor	r24, r24
     3aa:	82 0f       	add	r24, r18
     3ac:	91 1d       	adc	r25, r1
     3ae:	08 95       	ret

000003b0 <GSMConnect>:
     3b0:	0f 93       	push	r16
     3b2:	1f 93       	push	r17
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	cd b7       	in	r28, 0x3d	; 61
     3ba:	de b7       	in	r29, 0x3e	; 62
     3bc:	c4 56       	subi	r28, 0x64	; 100
     3be:	d1 09       	sbc	r29, r1
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
     3ca:	8e e6       	ldi	r24, 0x6E	; 110
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     3d2:	8f e1       	ldi	r24, 0x1F	; 31
     3d4:	9e e4       	ldi	r25, 0x4E	; 78
     3d6:	01 97       	sbiw	r24, 0x01	; 1
     3d8:	f1 f7       	brne	.-4      	; 0x3d6 <GSMConnect+0x26>
     3da:	00 c0       	rjmp	.+0      	; 0x3dc <GSMConnect+0x2c>
     3dc:	00 00       	nop
     3de:	84 e7       	ldi	r24, 0x74	; 116
     3e0:	90 e0       	ldi	r25, 0x00	; 0
     3e2:	9f 93       	push	r25
     3e4:	8f 93       	push	r24
     3e6:	9f 93       	push	r25
     3e8:	8f 93       	push	r24
     3ea:	8c e7       	ldi	r24, 0x7C	; 124
     3ec:	90 e0       	ldi	r25, 0x00	; 0
     3ee:	9f 93       	push	r25
     3f0:	8f 93       	push	r24
     3f2:	83 e8       	ldi	r24, 0x83	; 131
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	9f 93       	push	r25
     3f8:	8f 93       	push	r24
     3fa:	8e 01       	movw	r16, r28
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
     400:	1f 93       	push	r17
     402:	0f 93       	push	r16
     404:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <sprintf>
     408:	c8 01       	movw	r24, r16
     40a:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     40e:	84 e6       	ldi	r24, 0x64	; 100
     410:	ea e1       	ldi	r30, 0x1A	; 26
     412:	f1 e0       	ldi	r31, 0x01	; 1
     414:	df 01       	movw	r26, r30
     416:	1d 92       	st	X+, r1
     418:	8a 95       	dec	r24
     41a:	e9 f7       	brne	.-6      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
     41c:	8f e1       	ldi	r24, 0x1F	; 31
     41e:	9e e4       	ldi	r25, 0x4E	; 78
     420:	01 97       	sbiw	r24, 0x01	; 1
     422:	f1 f7       	brne	.-4      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     424:	00 c0       	rjmp	.+0      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     426:	00 00       	nop
     428:	8b e9       	ldi	r24, 0x9B	; 155
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
     43a:	cc 59       	subi	r28, 0x9C	; 156
     43c:	df 4f       	sbci	r29, 0xFF	; 255
     43e:	0f b6       	in	r0, 0x3f	; 63
     440:	f8 94       	cli
     442:	de bf       	out	0x3e, r29	; 62
     444:	0f be       	out	0x3f, r0	; 63
     446:	cd bf       	out	0x3d, r28	; 61
     448:	df 91       	pop	r29
     44a:	cf 91       	pop	r28
     44c:	1f 91       	pop	r17
     44e:	0f 91       	pop	r16
     450:	08 95       	ret

00000452 <openSolenoidValves>:
     452:	8f 92       	push	r8
     454:	9f 92       	push	r9
     456:	af 92       	push	r10
     458:	bf 92       	push	r11
     45a:	cf 92       	push	r12
     45c:	df 92       	push	r13
     45e:	ef 92       	push	r14
     460:	ff 92       	push	r15
     462:	0f 93       	push	r16
     464:	1f 93       	push	r17
     466:	4b 01       	movw	r8, r22
     468:	5c 01       	movw	r10, r24
     46a:	ca 01       	movw	r24, r20
     46c:	b9 01       	movw	r22, r18
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	30 e0       	ldi	r19, 0x00	; 0
     472:	4a e7       	ldi	r20, 0x7A	; 122
     474:	54 e4       	ldi	r21, 0x44	; 68
     476:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__mulsf3>
     47a:	6b 01       	movw	r12, r22
     47c:	7c 01       	movw	r14, r24
     47e:	20 e0       	ldi	r18, 0x00	; 0
     480:	30 e0       	ldi	r19, 0x00	; 0
     482:	4a e7       	ldi	r20, 0x7A	; 122
     484:	54 e4       	ldi	r21, 0x44	; 68
     486:	c5 01       	movw	r24, r10
     488:	b4 01       	movw	r22, r8
     48a:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__mulsf3>
     48e:	4b 01       	movw	r8, r22
     490:	5c 01       	movw	r10, r24
     492:	9b 01       	movw	r18, r22
     494:	ac 01       	movw	r20, r24
     496:	c7 01       	movw	r24, r14
     498:	b6 01       	movw	r22, r12
     49a:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <__gesf2>
     49e:	18 16       	cp	r1, r24
     4a0:	0c f0       	brlt	.+2      	; 0x4a4 <openSolenoidValves+0x52>
     4a2:	b7 c1       	rjmp	.+878    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     4a4:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <prev_millis1>
     4a8:	90 91 c6 03 	lds	r25, 0x03C6	; 0x8003c6 <prev_millis1+0x1>
     4ac:	89 2b       	or	r24, r25
     4ae:	09 f0       	breq	.+2      	; 0x4b2 <openSolenoidValves+0x60>
     4b0:	40 c0       	rjmp	.+128    	; 0x532 <openSolenoidValves+0xe0>
     4b2:	0e 94 9e 0b 	call	0x173c	; 0x173c <millis>
     4b6:	60 93 c5 03 	sts	0x03C5, r22	; 0x8003c5 <prev_millis1>
     4ba:	70 93 c6 03 	sts	0x03C6, r23	; 0x8003c6 <prev_millis1+0x1>
     4be:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <prev_millis1+0x2>
     4c2:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <prev_millis1+0x3>
     4c6:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__floatunsisf>
     4ca:	a5 01       	movw	r20, r10
     4cc:	94 01       	movw	r18, r8
     4ce:	0e 94 af 0b 	call	0x175e	; 0x175e <__addsf3>
     4d2:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fixunssfsi>
     4d6:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <need_millis1>
     4da:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <need_millis1+0x1>
     4de:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <need_millis1+0x2>
     4e2:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <need_millis1+0x3>
     4e6:	81 e0       	ldi	r24, 0x01	; 1
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	a0 e0       	ldi	r26, 0x00	; 0
     4ec:	b0 e0       	ldi	r27, 0x00	; 0
     4ee:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     4f2:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     4f6:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     4fa:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     4fe:	85 b3       	in	r24, 0x15	; 21
     500:	84 60       	ori	r24, 0x04	; 4
     502:	85 bb       	out	0x15, r24	; 21
     504:	85 b3       	in	r24, 0x15	; 21
     506:	87 7f       	andi	r24, 0xF7	; 247
     508:	85 bb       	out	0x15, r24	; 21
     50a:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     50e:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     512:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     516:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     51a:	01 96       	adiw	r24, 0x01	; 1
     51c:	a1 1d       	adc	r26, r1
     51e:	b1 1d       	adc	r27, r1
     520:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     524:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     528:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     52c:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     530:	70 c1       	rjmp	.+736    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     532:	0e 94 9e 0b 	call	0x173c	; 0x173c <millis>
     536:	00 91 c1 03 	lds	r16, 0x03C1	; 0x8003c1 <need_millis1>
     53a:	10 91 c2 03 	lds	r17, 0x03C2	; 0x8003c2 <need_millis1+0x1>
     53e:	20 91 c3 03 	lds	r18, 0x03C3	; 0x8003c3 <need_millis1+0x2>
     542:	30 91 c4 03 	lds	r19, 0x03C4	; 0x8003c4 <need_millis1+0x3>
     546:	06 17       	cp	r16, r22
     548:	17 07       	cpc	r17, r23
     54a:	28 07       	cpc	r18, r24
     54c:	39 07       	cpc	r19, r25
     54e:	08 f0       	brcs	.+2      	; 0x552 <openSolenoidValves+0x100>
     550:	85 c0       	rjmp	.+266    	; 0x65c <openSolenoidValves+0x20a>
     552:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     556:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     55a:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     55e:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     562:	82 30       	cpi	r24, 0x02	; 2
     564:	91 05       	cpc	r25, r1
     566:	a1 05       	cpc	r26, r1
     568:	b1 05       	cpc	r27, r1
     56a:	29 f0       	breq	.+10     	; 0x576 <openSolenoidValves+0x124>
     56c:	03 97       	sbiw	r24, 0x03	; 3
     56e:	a1 05       	cpc	r26, r1
     570:	b1 05       	cpc	r27, r1
     572:	a1 f1       	breq	.+104    	; 0x5dc <openSolenoidValves+0x18a>
     574:	62 c0       	rjmp	.+196    	; 0x63a <openSolenoidValves+0x1e8>
     576:	85 b3       	in	r24, 0x15	; 21
     578:	8b 7f       	andi	r24, 0xFB	; 251
     57a:	85 bb       	out	0x15, r24	; 21
     57c:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     580:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     584:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     588:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     58c:	01 96       	adiw	r24, 0x01	; 1
     58e:	a1 1d       	adc	r26, r1
     590:	b1 1d       	adc	r27, r1
     592:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     596:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     59a:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     59e:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     5a2:	60 91 c1 03 	lds	r22, 0x03C1	; 0x8003c1 <need_millis1>
     5a6:	70 91 c2 03 	lds	r23, 0x03C2	; 0x8003c2 <need_millis1+0x1>
     5aa:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <need_millis1+0x2>
     5ae:	90 91 c4 03 	lds	r25, 0x03C4	; 0x8003c4 <need_millis1+0x3>
     5b2:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__floatunsisf>
     5b6:	a7 01       	movw	r20, r14
     5b8:	96 01       	movw	r18, r12
     5ba:	0e 94 af 0b 	call	0x175e	; 0x175e <__addsf3>
     5be:	a5 01       	movw	r20, r10
     5c0:	94 01       	movw	r18, r8
     5c2:	0e 94 ae 0b 	call	0x175c	; 0x175c <__subsf3>
     5c6:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fixunssfsi>
     5ca:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <need_millis1>
     5ce:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <need_millis1+0x1>
     5d2:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <need_millis1+0x2>
     5d6:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <need_millis1+0x3>
     5da:	1b c1       	rjmp	.+566    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     5dc:	85 b3       	in	r24, 0x15	; 21
     5de:	88 60       	ori	r24, 0x08	; 8
     5e0:	85 bb       	out	0x15, r24	; 21
     5e2:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     5e6:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     5ea:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     5ee:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     5f2:	01 96       	adiw	r24, 0x01	; 1
     5f4:	a1 1d       	adc	r26, r1
     5f6:	b1 1d       	adc	r27, r1
     5f8:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     5fc:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     600:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     604:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     608:	60 91 c1 03 	lds	r22, 0x03C1	; 0x8003c1 <need_millis1>
     60c:	70 91 c2 03 	lds	r23, 0x03C2	; 0x8003c2 <need_millis1+0x1>
     610:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <need_millis1+0x2>
     614:	90 91 c4 03 	lds	r25, 0x03C4	; 0x8003c4 <need_millis1+0x3>
     618:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__floatunsisf>
     61c:	a7 01       	movw	r20, r14
     61e:	96 01       	movw	r18, r12
     620:	0e 94 af 0b 	call	0x175e	; 0x175e <__addsf3>
     624:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fixunssfsi>
     628:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <need_millis1>
     62c:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <need_millis1+0x1>
     630:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <need_millis1+0x2>
     634:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <need_millis1+0x3>
     638:	ec c0       	rjmp	.+472    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     63a:	10 92 10 03 	sts	0x0310, r1	; 0x800310 <case_num1>
     63e:	10 92 11 03 	sts	0x0311, r1	; 0x800311 <case_num1+0x1>
     642:	10 92 12 03 	sts	0x0312, r1	; 0x800312 <case_num1+0x2>
     646:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <case_num1+0x3>
     64a:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <prev_millis1>
     64e:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <prev_millis1+0x1>
     652:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <prev_millis1+0x2>
     656:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <prev_millis1+0x3>
     65a:	db c0       	rjmp	.+438    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     65c:	80 91 c5 03 	lds	r24, 0x03C5	; 0x8003c5 <prev_millis1>
     660:	90 91 c6 03 	lds	r25, 0x03C6	; 0x8003c6 <prev_millis1+0x1>
     664:	89 2b       	or	r24, r25
     666:	09 f0       	breq	.+2      	; 0x66a <openSolenoidValves+0x218>
     668:	40 c0       	rjmp	.+128    	; 0x6ea <openSolenoidValves+0x298>
     66a:	0e 94 9e 0b 	call	0x173c	; 0x173c <millis>
     66e:	60 93 c5 03 	sts	0x03C5, r22	; 0x8003c5 <prev_millis1>
     672:	70 93 c6 03 	sts	0x03C6, r23	; 0x8003c6 <prev_millis1+0x1>
     676:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <prev_millis1+0x2>
     67a:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <prev_millis1+0x3>
     67e:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__floatunsisf>
     682:	a7 01       	movw	r20, r14
     684:	96 01       	movw	r18, r12
     686:	0e 94 af 0b 	call	0x175e	; 0x175e <__addsf3>
     68a:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fixunssfsi>
     68e:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <need_millis1>
     692:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <need_millis1+0x1>
     696:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <need_millis1+0x2>
     69a:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <need_millis1+0x3>
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	a0 e0       	ldi	r26, 0x00	; 0
     6a4:	b0 e0       	ldi	r27, 0x00	; 0
     6a6:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     6aa:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     6ae:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     6b2:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     6b6:	85 b3       	in	r24, 0x15	; 21
     6b8:	84 60       	ori	r24, 0x04	; 4
     6ba:	85 bb       	out	0x15, r24	; 21
     6bc:	85 b3       	in	r24, 0x15	; 21
     6be:	87 7f       	andi	r24, 0xF7	; 247
     6c0:	85 bb       	out	0x15, r24	; 21
     6c2:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     6c6:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     6ca:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     6ce:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     6d2:	01 96       	adiw	r24, 0x01	; 1
     6d4:	a1 1d       	adc	r26, r1
     6d6:	b1 1d       	adc	r27, r1
     6d8:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     6dc:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     6e0:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     6e4:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     6e8:	94 c0       	rjmp	.+296    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     6ea:	0e 94 9e 0b 	call	0x173c	; 0x173c <millis>
     6ee:	00 91 c1 03 	lds	r16, 0x03C1	; 0x8003c1 <need_millis1>
     6f2:	10 91 c2 03 	lds	r17, 0x03C2	; 0x8003c2 <need_millis1+0x1>
     6f6:	20 91 c3 03 	lds	r18, 0x03C3	; 0x8003c3 <need_millis1+0x2>
     6fa:	30 91 c4 03 	lds	r19, 0x03C4	; 0x8003c4 <need_millis1+0x3>
     6fe:	06 17       	cp	r16, r22
     700:	17 07       	cpc	r17, r23
     702:	28 07       	cpc	r18, r24
     704:	39 07       	cpc	r19, r25
     706:	08 f0       	brcs	.+2      	; 0x70a <openSolenoidValves+0x2b8>
     708:	84 c0       	rjmp	.+264    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     70a:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     70e:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     712:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     716:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     71a:	82 30       	cpi	r24, 0x02	; 2
     71c:	91 05       	cpc	r25, r1
     71e:	a1 05       	cpc	r26, r1
     720:	b1 05       	cpc	r27, r1
     722:	29 f0       	breq	.+10     	; 0x72e <openSolenoidValves+0x2dc>
     724:	03 97       	sbiw	r24, 0x03	; 3
     726:	a1 05       	cpc	r26, r1
     728:	b1 05       	cpc	r27, r1
     72a:	a1 f1       	breq	.+104    	; 0x794 <openSolenoidValves+0x342>
     72c:	62 c0       	rjmp	.+196    	; 0x7f2 <openSolenoidValves+0x3a0>
     72e:	85 b3       	in	r24, 0x15	; 21
     730:	88 60       	ori	r24, 0x08	; 8
     732:	85 bb       	out	0x15, r24	; 21
     734:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     738:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     73c:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     740:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     744:	01 96       	adiw	r24, 0x01	; 1
     746:	a1 1d       	adc	r26, r1
     748:	b1 1d       	adc	r27, r1
     74a:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     74e:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     752:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     756:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     75a:	60 91 c1 03 	lds	r22, 0x03C1	; 0x8003c1 <need_millis1>
     75e:	70 91 c2 03 	lds	r23, 0x03C2	; 0x8003c2 <need_millis1+0x1>
     762:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <need_millis1+0x2>
     766:	90 91 c4 03 	lds	r25, 0x03C4	; 0x8003c4 <need_millis1+0x3>
     76a:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__floatunsisf>
     76e:	a5 01       	movw	r20, r10
     770:	94 01       	movw	r18, r8
     772:	0e 94 af 0b 	call	0x175e	; 0x175e <__addsf3>
     776:	a7 01       	movw	r20, r14
     778:	96 01       	movw	r18, r12
     77a:	0e 94 ae 0b 	call	0x175c	; 0x175c <__subsf3>
     77e:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fixunssfsi>
     782:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <need_millis1>
     786:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <need_millis1+0x1>
     78a:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <need_millis1+0x2>
     78e:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <need_millis1+0x3>
     792:	3f c0       	rjmp	.+126    	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     794:	85 b3       	in	r24, 0x15	; 21
     796:	8b 7f       	andi	r24, 0xFB	; 251
     798:	85 bb       	out	0x15, r24	; 21
     79a:	80 91 10 03 	lds	r24, 0x0310	; 0x800310 <case_num1>
     79e:	90 91 11 03 	lds	r25, 0x0311	; 0x800311 <case_num1+0x1>
     7a2:	a0 91 12 03 	lds	r26, 0x0312	; 0x800312 <case_num1+0x2>
     7a6:	b0 91 13 03 	lds	r27, 0x0313	; 0x800313 <case_num1+0x3>
     7aa:	01 96       	adiw	r24, 0x01	; 1
     7ac:	a1 1d       	adc	r26, r1
     7ae:	b1 1d       	adc	r27, r1
     7b0:	80 93 10 03 	sts	0x0310, r24	; 0x800310 <case_num1>
     7b4:	90 93 11 03 	sts	0x0311, r25	; 0x800311 <case_num1+0x1>
     7b8:	a0 93 12 03 	sts	0x0312, r26	; 0x800312 <case_num1+0x2>
     7bc:	b0 93 13 03 	sts	0x0313, r27	; 0x800313 <case_num1+0x3>
     7c0:	60 91 c1 03 	lds	r22, 0x03C1	; 0x8003c1 <need_millis1>
     7c4:	70 91 c2 03 	lds	r23, 0x03C2	; 0x8003c2 <need_millis1+0x1>
     7c8:	80 91 c3 03 	lds	r24, 0x03C3	; 0x8003c3 <need_millis1+0x2>
     7cc:	90 91 c4 03 	lds	r25, 0x03C4	; 0x8003c4 <need_millis1+0x3>
     7d0:	0e 94 c1 0c 	call	0x1982	; 0x1982 <__floatunsisf>
     7d4:	a5 01       	movw	r20, r10
     7d6:	94 01       	movw	r18, r8
     7d8:	0e 94 af 0b 	call	0x175e	; 0x175e <__addsf3>
     7dc:	0e 94 92 0c 	call	0x1924	; 0x1924 <__fixunssfsi>
     7e0:	60 93 c1 03 	sts	0x03C1, r22	; 0x8003c1 <need_millis1>
     7e4:	70 93 c2 03 	sts	0x03C2, r23	; 0x8003c2 <need_millis1+0x1>
     7e8:	80 93 c3 03 	sts	0x03C3, r24	; 0x8003c3 <need_millis1+0x2>
     7ec:	90 93 c4 03 	sts	0x03C4, r25	; 0x8003c4 <need_millis1+0x3>
     7f0:	10 c0       	rjmp	.+32     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     7f2:	10 92 10 03 	sts	0x0310, r1	; 0x800310 <case_num1>
     7f6:	10 92 11 03 	sts	0x0311, r1	; 0x800311 <case_num1+0x1>
     7fa:	10 92 12 03 	sts	0x0312, r1	; 0x800312 <case_num1+0x2>
     7fe:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <case_num1+0x3>
     802:	10 92 c5 03 	sts	0x03C5, r1	; 0x8003c5 <prev_millis1>
     806:	10 92 c6 03 	sts	0x03C6, r1	; 0x8003c6 <prev_millis1+0x1>
     80a:	10 92 c7 03 	sts	0x03C7, r1	; 0x8003c7 <prev_millis1+0x2>
     80e:	10 92 c8 03 	sts	0x03C8, r1	; 0x8003c8 <prev_millis1+0x3>
     812:	1f 91       	pop	r17
     814:	0f 91       	pop	r16
     816:	ff 90       	pop	r15
     818:	ef 90       	pop	r14
     81a:	df 90       	pop	r13
     81c:	cf 90       	pop	r12
     81e:	bf 90       	pop	r11
     820:	af 90       	pop	r10
     822:	9f 90       	pop	r9
     824:	8f 90       	pop	r8
     826:	08 95       	ret

00000828 <getOxygenTankPressure>:
     828:	60 e0       	ldi	r22, 0x00	; 0
     82a:	70 e8       	ldi	r23, 0x80	; 128
     82c:	8b e3       	ldi	r24, 0x3B	; 59
     82e:	96 e4       	ldi	r25, 0x46	; 70
     830:	08 95       	ret

00000832 <controlSolenoidValve>:
     832:	4f 92       	push	r4
     834:	5f 92       	push	r5
     836:	6f 92       	push	r6
     838:	7f 92       	push	r7
     83a:	8f 92       	push	r8
     83c:	9f 92       	push	r9
     83e:	af 92       	push	r10
     840:	bf 92       	push	r11
     842:	cf 92       	push	r12
     844:	df 92       	push	r13
     846:	ef 92       	push	r14
     848:	ff 92       	push	r15
     84a:	6b 01       	movw	r12, r22
     84c:	7c 01       	movw	r14, r24
     84e:	ba 01       	movw	r22, r20
     850:	55 0f       	add	r21, r21
     852:	88 0b       	sbc	r24, r24
     854:	99 0b       	sbc	r25, r25
     856:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__floatsisf>
     85a:	9b 01       	movw	r18, r22
     85c:	ac 01       	movw	r20, r24
     85e:	60 e0       	ldi	r22, 0x00	; 0
     860:	70 e0       	ldi	r23, 0x00	; 0
     862:	80 ef       	ldi	r24, 0xF0	; 240
     864:	91 e4       	ldi	r25, 0x41	; 65
     866:	0e 94 20 0c 	call	0x1840	; 0x1840 <__divsf3>
     86a:	4b 01       	movw	r8, r22
     86c:	5c 01       	movw	r10, r24
     86e:	2a e4       	ldi	r18, 0x4A	; 74
     870:	3c e0       	ldi	r19, 0x0C	; 12
     872:	42 ea       	ldi	r20, 0xA2	; 162
     874:	5f e3       	ldi	r21, 0x3F	; 63
     876:	c7 01       	movw	r24, r14
     878:	b6 01       	movw	r22, r12
     87a:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__mulsf3>
     87e:	29 e2       	ldi	r18, 0x29	; 41
     880:	3c e5       	ldi	r19, 0x5C	; 92
     882:	45 ed       	ldi	r20, 0xD5	; 213
     884:	51 e4       	ldi	r21, 0x41	; 65
     886:	0e 94 ae 0b 	call	0x175c	; 0x175c <__subsf3>
     88a:	21 e7       	ldi	r18, 0x71	; 113
     88c:	3d e3       	ldi	r19, 0x3D	; 61
     88e:	4a e4       	ldi	r20, 0x4A	; 74
     890:	5f e3       	ldi	r21, 0x3F	; 63
     892:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__mulsf3>
     896:	2b 01       	movw	r4, r22
     898:	3c 01       	movw	r6, r24
     89a:	a7 01       	movw	r20, r14
     89c:	96 01       	movw	r18, r12
     89e:	60 e0       	ldi	r22, 0x00	; 0
     8a0:	70 e0       	ldi	r23, 0x00	; 0
     8a2:	88 ec       	ldi	r24, 0xC8	; 200
     8a4:	92 e4       	ldi	r25, 0x42	; 66
     8a6:	0e 94 ae 0b 	call	0x175c	; 0x175c <__subsf3>
     8aa:	9b 01       	movw	r18, r22
     8ac:	ac 01       	movw	r20, r24
     8ae:	c3 01       	movw	r24, r6
     8b0:	b2 01       	movw	r22, r4
     8b2:	0e 94 20 0c 	call	0x1840	; 0x1840 <__divsf3>
     8b6:	2b 01       	movw	r4, r22
     8b8:	3c 01       	movw	r6, r24
     8ba:	0e 94 14 04 	call	0x828	; 0x828 <getOxygenTankPressure>
     8be:	9b 01       	movw	r18, r22
     8c0:	ac 01       	movw	r20, r24
     8c2:	68 ed       	ldi	r22, 0xD8	; 216
     8c4:	73 e1       	ldi	r23, 0x13	; 19
     8c6:	86 e0       	ldi	r24, 0x06	; 6
     8c8:	98 e4       	ldi	r25, 0x48	; 72
     8ca:	0e 94 20 0c 	call	0x1840	; 0x1840 <__divsf3>
     8ce:	6b 01       	movw	r12, r22
     8d0:	7c 01       	movw	r14, r24
     8d2:	2d ec       	ldi	r18, 0xCD	; 205
     8d4:	3c ec       	ldi	r19, 0xCC	; 204
     8d6:	4c e9       	ldi	r20, 0x9C	; 156
     8d8:	5f e3       	ldi	r21, 0x3F	; 63
     8da:	c7 01       	movw	r24, r14
     8dc:	b6 01       	movw	r22, r12
     8de:	0e 94 20 0c 	call	0x1840	; 0x1840 <__divsf3>
     8e2:	0e 94 eb 0d 	call	0x1bd6	; 0x1bd6 <sqrt>
     8e6:	9b 01       	movw	r18, r22
     8e8:	ac 01       	movw	r20, r24
     8ea:	c3 01       	movw	r24, r6
     8ec:	b2 01       	movw	r22, r4
     8ee:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__mulsf3>
     8f2:	6b 01       	movw	r12, r22
     8f4:	7c 01       	movw	r14, r24
     8f6:	20 e0       	ldi	r18, 0x00	; 0
     8f8:	30 e0       	ldi	r19, 0x00	; 0
     8fa:	40 e8       	ldi	r20, 0x80	; 128
     8fc:	5f e3       	ldi	r21, 0x3F	; 63
     8fe:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <__gesf2>
     902:	18 16       	cp	r1, r24
     904:	5c f4       	brge	.+22     	; 0x91c <__stack+0xbd>
     906:	a7 01       	movw	r20, r14
     908:	96 01       	movw	r18, r12
     90a:	c5 01       	movw	r24, r10
     90c:	b4 01       	movw	r22, r8
     90e:	0e 94 20 0c 	call	0x1840	; 0x1840 <__divsf3>
     912:	a5 01       	movw	r20, r10
     914:	94 01       	movw	r18, r8
     916:	0e 94 29 02 	call	0x452	; 0x452 <openSolenoidValves>
     91a:	0c c0       	rjmp	.+24     	; 0x934 <__stack+0xd5>
     91c:	a7 01       	movw	r20, r14
     91e:	96 01       	movw	r18, r12
     920:	c5 01       	movw	r24, r10
     922:	b4 01       	movw	r22, r8
     924:	0e 94 78 0d 	call	0x1af0	; 0x1af0 <__mulsf3>
     928:	9b 01       	movw	r18, r22
     92a:	ac 01       	movw	r20, r24
     92c:	c5 01       	movw	r24, r10
     92e:	b4 01       	movw	r22, r8
     930:	0e 94 29 02 	call	0x452	; 0x452 <openSolenoidValves>
     934:	ff 90       	pop	r15
     936:	ef 90       	pop	r14
     938:	df 90       	pop	r13
     93a:	cf 90       	pop	r12
     93c:	bf 90       	pop	r11
     93e:	af 90       	pop	r10
     940:	9f 90       	pop	r9
     942:	8f 90       	pop	r8
     944:	7f 90       	pop	r7
     946:	6f 90       	pop	r6
     948:	5f 90       	pop	r5
     94a:	4f 90       	pop	r4
     94c:	08 95       	ret

0000094e <checkBloodOxygenLevel>:
     94e:	80 e0       	ldi	r24, 0x00	; 0
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	08 95       	ret

00000954 <PatientTemp>:
     954:	85 e2       	ldi	r24, 0x25	; 37
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	08 95       	ret

0000095a <automationOn>:
    //get values and update  Breath per min,Oxygen Percentage,Breath Length
}

bool automationOn() {
    return 1;//Check Automation On/Off
}
     95a:	81 e0       	ldi	r24, 0x01	; 1
     95c:	08 95       	ret

0000095e <turnOn>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}
     95e:	81 e0       	ldi	r24, 0x01	; 1
     960:	08 95       	ret

00000962 <notifyDisplay>:
        } else { return 1; }
    }else{return 0;}
}

void notifyDisplay(const char *string) {
   lcd_msg(string);
     962:	0e 94 23 01 	call	0x246	; 0x246 <lcd_msg>
     966:	08 95       	ret

00000968 <concatS>:
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
}
const char *concatS(const char *string, char sPercentage[4]) {
     968:	ef 92       	push	r14
     96a:	ff 92       	push	r15
     96c:	0f 93       	push	r16
     96e:	1f 93       	push	r17
     970:	cf 93       	push	r28
     972:	df 93       	push	r29
     974:	8c 01       	movw	r16, r24
     976:	eb 01       	movw	r28, r22
    char *result = malloc(strlen(string) + strlen(sPercentage) + 1);
     978:	fc 01       	movw	r30, r24
     97a:	01 90       	ld	r0, Z+
     97c:	00 20       	and	r0, r0
     97e:	e9 f7       	brne	.-6      	; 0x97a <concatS+0x12>
     980:	31 97       	sbiw	r30, 0x01	; 1
     982:	cf 01       	movw	r24, r30
     984:	80 1b       	sub	r24, r16
     986:	91 0b       	sbc	r25, r17
     988:	fb 01       	movw	r30, r22
     98a:	01 90       	ld	r0, Z+
     98c:	00 20       	and	r0, r0
     98e:	e9 f7       	brne	.-6      	; 0x98a <concatS+0x22>
     990:	31 97       	sbiw	r30, 0x01	; 1
     992:	e6 1b       	sub	r30, r22
     994:	f7 0b       	sbc	r31, r23
     996:	8e 0f       	add	r24, r30
     998:	9f 1f       	adc	r25, r31
     99a:	01 96       	adiw	r24, 0x01	; 1
     99c:	0e 94 90 0e 	call	0x1d20	; 0x1d20 <malloc>
     9a0:	7c 01       	movw	r14, r24
    strcpy(result, string);
     9a2:	b8 01       	movw	r22, r16
     9a4:	0e 94 bc 0f 	call	0x1f78	; 0x1f78 <strcpy>
    strcat(result, sPercentage);
     9a8:	be 01       	movw	r22, r28
     9aa:	c7 01       	movw	r24, r14
     9ac:	0e 94 b1 0f 	call	0x1f62	; 0x1f62 <strcat>
    return result;
}
     9b0:	c7 01       	movw	r24, r14
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	ff 90       	pop	r15
     9bc:	ef 90       	pop	r14
     9be:	08 95       	ret

000009c0 <sendSMS>:




void sendSMS(char no[], const char *string) {
     9c0:	bf 92       	push	r11
     9c2:	cf 92       	push	r12
     9c4:	df 92       	push	r13
     9c6:	ef 92       	push	r14
     9c8:	ff 92       	push	r15
     9ca:	0f 93       	push	r16
     9cc:	1f 93       	push	r17
     9ce:	cf 93       	push	r28
     9d0:	df 93       	push	r29
     9d2:	cd b7       	in	r28, 0x3d	; 61
     9d4:	de b7       	in	r29, 0x3e	; 62
     9d6:	c4 56       	subi	r28, 0x64	; 100
     9d8:	d1 09       	sbc	r29, r1
     9da:	0f b6       	in	r0, 0x3f	; 63
     9dc:	f8 94       	cli
     9de:	de bf       	out	0x3e, r29	; 62
     9e0:	0f be       	out	0x3f, r0	; 63
     9e2:	cd bf       	out	0x3d, r28	; 61
     9e4:	18 2f       	mov	r17, r24
     9e6:	09 2f       	mov	r16, r25
     9e8:	c6 2e       	mov	r12, r22
     9ea:	b7 2e       	mov	r11, r23
    USART_SendString("AT\r");
     9ec:	84 eb       	ldi	r24, 0xB4	; 180
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9f4:	8f e1       	ldi	r24, 0x1F	; 31
     9f6:	9e e4       	ldi	r25, 0x4E	; 78
     9f8:	01 97       	sbiw	r24, 0x01	; 1
     9fa:	f1 f7       	brne	.-4      	; 0x9f8 <sendSMS+0x38>
     9fc:	00 c0       	rjmp	.+0      	; 0x9fe <sendSMS+0x3e>
     9fe:	00 00       	nop
    _delay_ms(10);
    USART_SendString("AT+CMGF=1\r");
     a00:	88 eb       	ldi	r24, 0xB8	; 184
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     a08:	ef e1       	ldi	r30, 0x1F	; 31
     a0a:	fe e4       	ldi	r31, 0x4E	; 78
     a0c:	31 97       	sbiw	r30, 0x01	; 1
     a0e:	f1 f7       	brne	.-4      	; 0xa0c <sendSMS+0x4c>
     a10:	00 c0       	rjmp	.+0      	; 0xa12 <sendSMS+0x52>
     a12:	00 00       	nop
    _delay_ms(10);
    char data_buffer[100];
    sprintf(data_buffer,"AT+CMGS=%s\r",no);
     a14:	0f 93       	push	r16
     a16:	1f 93       	push	r17
     a18:	83 ec       	ldi	r24, 0xC3	; 195
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	9f 93       	push	r25
     a1e:	8f 93       	push	r24
     a20:	8e 01       	movw	r16, r28
     a22:	0f 5f       	subi	r16, 0xFF	; 255
     a24:	1f 4f       	sbci	r17, 0xFF	; 255
     a26:	1f 93       	push	r17
     a28:	0f 93       	push	r16
     a2a:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <sprintf>
    USART_SendString(data_buffer);
     a2e:	c8 01       	movw	r24, r16
     a30:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
    memset(USART_BUFFER, 0, 100);
     a34:	0f 2e       	mov	r0, r31
     a36:	fa e1       	ldi	r31, 0x1A	; 26
     a38:	ef 2e       	mov	r14, r31
     a3a:	f1 e0       	ldi	r31, 0x01	; 1
     a3c:	ff 2e       	mov	r15, r31
     a3e:	f0 2d       	mov	r31, r0
     a40:	0f 2e       	mov	r0, r31
     a42:	f4 e6       	ldi	r31, 0x64	; 100
     a44:	df 2e       	mov	r13, r31
     a46:	f0 2d       	mov	r31, r0
     a48:	f7 01       	movw	r30, r14
     a4a:	8d 2d       	mov	r24, r13
     a4c:	11 92       	st	Z+, r1
     a4e:	8a 95       	dec	r24
     a50:	e9 f7       	brne	.-6      	; 0xa4c <sendSMS+0x8c>
    sprintf(data_buffer,"%s\r",string);
     a52:	bf 92       	push	r11
     a54:	cf 92       	push	r12
     a56:	8b ec       	ldi	r24, 0xCB	; 203
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	9f 93       	push	r25
     a5c:	8f 93       	push	r24
     a5e:	1f 93       	push	r17
     a60:	0f 93       	push	r16
     a62:	0e 94 e8 0f 	call	0x1fd0	; 0x1fd0 <sprintf>
    USART_SendString(data_buffer);
     a66:	c8 01       	movw	r24, r16
     a68:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
    memset(USART_BUFFER, 0, 100);//clear data buffer
     a6c:	f7 01       	movw	r30, r14
     a6e:	11 92       	st	Z+, r1
     a70:	da 94       	dec	r13
     a72:	e9 f7       	brne	.-6      	; 0xa6e <sendSMS+0xae>

}
     a74:	0f b6       	in	r0, 0x3f	; 63
     a76:	f8 94       	cli
     a78:	de bf       	out	0x3e, r29	; 62
     a7a:	0f be       	out	0x3f, r0	; 63
     a7c:	cd bf       	out	0x3d, r28	; 61
     a7e:	cc 59       	subi	r28, 0x9C	; 156
     a80:	df 4f       	sbci	r29, 0xFF	; 255
     a82:	0f b6       	in	r0, 0x3f	; 63
     a84:	f8 94       	cli
     a86:	de bf       	out	0x3e, r29	; 62
     a88:	0f be       	out	0x3f, r0	; 63
     a8a:	cd bf       	out	0x3d, r28	; 61
     a8c:	df 91       	pop	r29
     a8e:	cf 91       	pop	r28
     a90:	1f 91       	pop	r17
     a92:	0f 91       	pop	r16
     a94:	ff 90       	pop	r15
     a96:	ef 90       	pop	r14
     a98:	df 90       	pop	r13
     a9a:	cf 90       	pop	r12
     a9c:	bf 90       	pop	r11
     a9e:	08 95       	ret

00000aa0 <notifyGSM>:

void notifyDisplay(const char *string) {
   lcd_msg(string);
}

void notifyGSM(const char *string, int percentage) {
     aa0:	0f 93       	push	r16
     aa2:	1f 93       	push	r17
     aa4:	cf 93       	push	r28
     aa6:	df 93       	push	r29
     aa8:	00 d0       	rcall	.+0      	; 0xaaa <notifyGSM+0xa>
     aaa:	00 d0       	rcall	.+0      	; 0xaac <notifyGSM+0xc>
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	8c 01       	movw	r16, r24
     ab2:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     ab4:	4a e0       	ldi	r20, 0x0A	; 10
     ab6:	be 01       	movw	r22, r28
     ab8:	6f 5f       	subi	r22, 0xFF	; 255
     aba:	7f 4f       	sbci	r23, 0xFF	; 255
     abc:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__itoa_ncheck>
    char Spercentage[4];
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
     ac0:	be 01       	movw	r22, r28
     ac2:	6f 5f       	subi	r22, 0xFF	; 255
     ac4:	7f 4f       	sbci	r23, 0xFF	; 255
     ac6:	c8 01       	movw	r24, r16
     ac8:	0e 94 b4 04 	call	0x968	; 0x968 <concatS>
     acc:	bc 01       	movw	r22, r24
     ace:	83 e6       	ldi	r24, 0x63	; 99
     ad0:	94 e0       	ldi	r25, 0x04	; 4
     ad2:	0e 94 e0 04 	call	0x9c0	; 0x9c0 <sendSMS>
}
     ad6:	0f 90       	pop	r0
     ad8:	0f 90       	pop	r0
     ada:	0f 90       	pop	r0
     adc:	0f 90       	pop	r0
     ade:	df 91       	pop	r29
     ae0:	cf 91       	pop	r28
     ae2:	1f 91       	pop	r17
     ae4:	0f 91       	pop	r16
     ae6:	08 95       	ret

00000ae8 <checkPatientTemp>:

void notifySpeaker() {

}

bool checkPatientTemp() {
     ae8:	cf 92       	push	r12
     aea:	df 92       	push	r13
     aec:	ef 92       	push	r14
     aee:	ff 92       	push	r15
     af0:	0f 93       	push	r16
     af2:	1f 93       	push	r17
     af4:	cf 93       	push	r28
     af6:	df 93       	push	r29
     af8:	00 d0       	rcall	.+0      	; 0xafa <checkPatientTemp+0x12>
     afa:	00 d0       	rcall	.+0      	; 0xafc <checkPatientTemp+0x14>
     afc:	cd b7       	in	r28, 0x3d	; 61
     afe:	de b7       	in	r29, 0x3e	; 62
    if(PatientTemp()>37.2||PatientTemp()<36.1){
     b00:	0e 94 aa 04 	call	0x954	; 0x954 <PatientTemp>
     b04:	8c 01       	movw	r16, r24
     b06:	bc 01       	movw	r22, r24
     b08:	99 0f       	add	r25, r25
     b0a:	88 0b       	sbc	r24, r24
     b0c:	99 0b       	sbc	r25, r25
     b0e:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__floatsisf>
     b12:	6b 01       	movw	r12, r22
     b14:	7c 01       	movw	r14, r24
     b16:	2d ec       	ldi	r18, 0xCD	; 205
     b18:	3c ec       	ldi	r19, 0xCC	; 204
     b1a:	44 e1       	ldi	r20, 0x14	; 20
     b1c:	52 e4       	ldi	r21, 0x42	; 66
     b1e:	0e 94 73 0d 	call	0x1ae6	; 0x1ae6 <__gesf2>
     b22:	18 16       	cp	r1, r24
     b24:	54 f0       	brlt	.+20     	; 0xb3a <checkPatientTemp+0x52>
     b26:	26 e6       	ldi	r18, 0x66	; 102
     b28:	36 e6       	ldi	r19, 0x66	; 102
     b2a:	40 e1       	ldi	r20, 0x10	; 16
     b2c:	52 e4       	ldi	r21, 0x42	; 66
     b2e:	c7 01       	movw	r24, r14
     b30:	b6 01       	movw	r22, r12
     b32:	0e 94 1b 0c 	call	0x1836	; 0x1836 <__cmpsf2>
     b36:	88 23       	and	r24, r24
     b38:	bc f4       	brge	.+46     	; 0xb68 <checkPatientTemp+0x80>
        notifyGSM("Temperature Not Normal-",PatientTemp());
     b3a:	b8 01       	movw	r22, r16
     b3c:	8f ec       	ldi	r24, 0xCF	; 207
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	0e 94 50 05 	call	0xaa0	; 0xaa0 <notifyGSM>
     b44:	4a e0       	ldi	r20, 0x0A	; 10
     b46:	be 01       	movw	r22, r28
     b48:	6f 5f       	subi	r22, 0xFF	; 255
     b4a:	7f 4f       	sbci	r23, 0xFF	; 255
     b4c:	c8 01       	movw	r24, r16
     b4e:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__itoa_ncheck>
		char Spercentage[4];
		itoa(PatientTemp(),Spercentage,10);//convert int to string
		notifyDisplay(concatS("Temperature Not Normal-", Spercentage)); 
     b52:	be 01       	movw	r22, r28
     b54:	6f 5f       	subi	r22, 0xFF	; 255
     b56:	7f 4f       	sbci	r23, 0xFF	; 255
     b58:	8f ec       	ldi	r24, 0xCF	; 207
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	0e 94 b4 04 	call	0x968	; 0x968 <concatS>
     b60:	0e 94 b1 04 	call	0x962	; 0x962 <notifyDisplay>
        notifySpeaker();
        return 0;
     b64:	80 e0       	ldi	r24, 0x00	; 0
     b66:	01 c0       	rjmp	.+2      	; 0xb6a <checkPatientTemp+0x82>
    }else{
        return 1;
     b68:	81 e0       	ldi	r24, 0x01	; 1
    }
    //if normal return 1 else notify speaker and gsm
}
     b6a:	0f 90       	pop	r0
     b6c:	0f 90       	pop	r0
     b6e:	0f 90       	pop	r0
     b70:	0f 90       	pop	r0
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	1f 91       	pop	r17
     b78:	0f 91       	pop	r16
     b7a:	ff 90       	pop	r15
     b7c:	ef 90       	pop	r14
     b7e:	df 90       	pop	r13
     b80:	cf 90       	pop	r12
     b82:	08 95       	ret

00000b84 <oxygenTankPercentage>:

}

int oxygenTankPercentage() {
    return 80;
}
     b84:	80 e5       	ldi	r24, 0x50	; 80
     b86:	90 e0       	ldi	r25, 0x00	; 0
     b88:	08 95       	ret

00000b8a <checkStatus>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}

bool checkStatus() {
     b8a:	ef 92       	push	r14
     b8c:	ff 92       	push	r15
     b8e:	1f 93       	push	r17
     b90:	cf 93       	push	r28
     b92:	df 93       	push	r29
     b94:	00 d0       	rcall	.+0      	; 0xb96 <checkStatus+0xc>
     b96:	00 d0       	rcall	.+0      	; 0xb98 <checkStatus+0xe>
     b98:	cd b7       	in	r28, 0x3d	; 61
     b9a:	de b7       	in	r29, 0x3e	; 62
    if (turnOn()) {
     b9c:	0e 94 af 04 	call	0x95e	; 0x95e <turnOn>
     ba0:	18 2f       	mov	r17, r24
     ba2:	88 23       	and	r24, r24
     ba4:	e9 f0       	breq	.+58     	; 0xbe0 <checkStatus+0x56>
        if (oxygenTankPercentage() < 10) {
     ba6:	0e 94 c2 05 	call	0xb84	; 0xb84 <oxygenTankPercentage>
     baa:	7c 01       	movw	r14, r24
     bac:	8a e0       	ldi	r24, 0x0A	; 10
     bae:	e8 16       	cp	r14, r24
     bb0:	f1 04       	cpc	r15, r1
     bb2:	b4 f4       	brge	.+44     	; 0xbe0 <checkStatus+0x56>
            notifyGSM("Oxygen Tank Percentage : ", oxygenTankPercentage());
     bb4:	b7 01       	movw	r22, r14
     bb6:	87 ee       	ldi	r24, 0xE7	; 231
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0e 94 50 05 	call	0xaa0	; 0xaa0 <notifyGSM>
     bbe:	4a e0       	ldi	r20, 0x0A	; 10
     bc0:	be 01       	movw	r22, r28
     bc2:	6f 5f       	subi	r22, 0xFF	; 255
     bc4:	7f 4f       	sbci	r23, 0xFF	; 255
     bc6:	c7 01       	movw	r24, r14
     bc8:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__itoa_ncheck>
			char Spercentage[4];
			itoa(oxygenTankPercentage(),Spercentage,10);//convert int to string
            notifyDisplay(concatS("Oxygen Tank Percentage ", Spercentage));
     bcc:	be 01       	movw	r22, r28
     bce:	6f 5f       	subi	r22, 0xFF	; 255
     bd0:	7f 4f       	sbci	r23, 0xFF	; 255
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	91 e0       	ldi	r25, 0x01	; 1
     bd6:	0e 94 b4 04 	call	0x968	; 0x968 <concatS>
     bda:	0e 94 b1 04 	call	0x962	; 0x962 <notifyDisplay>
            return 0;
     bde:	10 e0       	ldi	r17, 0x00	; 0
        } else { return 1; }
    }else{return 0;}
}
     be0:	81 2f       	mov	r24, r17
     be2:	0f 90       	pop	r0
     be4:	0f 90       	pop	r0
     be6:	0f 90       	pop	r0
     be8:	0f 90       	pop	r0
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	1f 91       	pop	r17
     bf0:	ff 90       	pop	r15
     bf2:	ef 90       	pop	r14
     bf4:	08 95       	ret

00000bf6 <startStepperMotor>:
}

int oxygenTankPercentage() {
    return 80;
}
void startStepperMotor(int breathPerMin, int BreathLength) {
     bf6:	0f 93       	push	r16
     bf8:	1f 93       	push	r17
     bfa:	cf 93       	push	r28
     bfc:	df 93       	push	r29
     bfe:	ec 01       	movw	r28, r24
	if(prev_millis0==NULL){
     c00:	80 91 71 04 	lds	r24, 0x0471	; 0x800471 <prev_millis0>
     c04:	90 91 72 04 	lds	r25, 0x0472	; 0x800472 <prev_millis0+0x1>
     c08:	89 2b       	or	r24, r25
     c0a:	09 f0       	breq	.+2      	; 0xc0e <startStepperMotor+0x18>
     c0c:	3f c0       	rjmp	.+126    	; 0xc8c <startStepperMotor+0x96>
		
		prev_millis0=millis();
     c0e:	0e 94 9e 0b 	call	0x173c	; 0x173c <millis>
     c12:	8b 01       	movw	r16, r22
     c14:	9c 01       	movw	r18, r24
     c16:	60 93 71 04 	sts	0x0471, r22	; 0x800471 <prev_millis0>
     c1a:	70 93 72 04 	sts	0x0472, r23	; 0x800472 <prev_millis0+0x1>
     c1e:	80 93 73 04 	sts	0x0473, r24	; 0x800473 <prev_millis0+0x2>
     c22:	90 93 74 04 	sts	0x0474, r25	; 0x800474 <prev_millis0+0x3>
		need_millis0=30000/(breathPerMin*10)+prev_millis0;
     c26:	ce 01       	movw	r24, r28
     c28:	88 0f       	add	r24, r24
     c2a:	99 1f       	adc	r25, r25
     c2c:	be 01       	movw	r22, r28
     c2e:	66 0f       	add	r22, r22
     c30:	77 1f       	adc	r23, r23
     c32:	66 0f       	add	r22, r22
     c34:	77 1f       	adc	r23, r23
     c36:	66 0f       	add	r22, r22
     c38:	77 1f       	adc	r23, r23
     c3a:	68 0f       	add	r22, r24
     c3c:	79 1f       	adc	r23, r25
     c3e:	80 e3       	ldi	r24, 0x30	; 48
     c40:	95 e7       	ldi	r25, 0x75	; 117
     c42:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     c46:	cb 01       	movw	r24, r22
     c48:	77 0f       	add	r23, r23
     c4a:	aa 0b       	sbc	r26, r26
     c4c:	bb 0b       	sbc	r27, r27
     c4e:	08 0f       	add	r16, r24
     c50:	19 1f       	adc	r17, r25
     c52:	2a 1f       	adc	r18, r26
     c54:	3b 1f       	adc	r19, r27
     c56:	00 93 15 03 	sts	0x0315, r16	; 0x800315 <need_millis0>
     c5a:	10 93 16 03 	sts	0x0316, r17	; 0x800316 <need_millis0+0x1>
     c5e:	20 93 17 03 	sts	0x0317, r18	; 0x800317 <need_millis0+0x2>
     c62:	30 93 18 03 	sts	0x0318, r19	; 0x800318 <need_millis0+0x3>
		case_num0=1;
     c66:	81 e0       	ldi	r24, 0x01	; 1
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     c6e:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
		PORTC = PORTC | (1<<4);case_num0++;
     c72:	85 b3       	in	r24, 0x15	; 21
     c74:	80 61       	ori	r24, 0x10	; 16
     c76:	85 bb       	out	0x15, r24	; 21
     c78:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     c7c:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     c80:	01 96       	adiw	r24, 0x01	; 1
     c82:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     c86:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     c8a:	e3 c3       	rjmp	.+1990   	; 0x1452 <startStepperMotor+0x85c>
		}else if(need_millis0<millis()){
     c8c:	0e 94 9e 0b 	call	0x173c	; 0x173c <millis>
     c90:	00 91 15 03 	lds	r16, 0x0315	; 0x800315 <need_millis0>
     c94:	10 91 16 03 	lds	r17, 0x0316	; 0x800316 <need_millis0+0x1>
     c98:	20 91 17 03 	lds	r18, 0x0317	; 0x800317 <need_millis0+0x2>
     c9c:	30 91 18 03 	lds	r19, 0x0318	; 0x800318 <need_millis0+0x3>
     ca0:	06 17       	cp	r16, r22
     ca2:	17 07       	cpc	r17, r23
     ca4:	28 07       	cpc	r18, r24
     ca6:	39 07       	cpc	r19, r25
     ca8:	08 f0       	brcs	.+2      	; 0xcac <startStepperMotor+0xb6>
     caa:	d3 c3       	rjmp	.+1958   	; 0x1452 <startStepperMotor+0x85c>
		
		switch(case_num0){
     cac:	e0 91 bd 03 	lds	r30, 0x03BD	; 0x8003bd <case_num0>
     cb0:	f0 91 be 03 	lds	r31, 0x03BE	; 0x8003be <case_num0+0x1>
     cb4:	32 97       	sbiw	r30, 0x02	; 2
     cb6:	e3 31       	cpi	r30, 0x13	; 19
     cb8:	f1 05       	cpc	r31, r1
     cba:	08 f0       	brcs	.+2      	; 0xcbe <startStepperMotor+0xc8>
     cbc:	be c3       	rjmp	.+1916   	; 0x143a <startStepperMotor+0x844>
     cbe:	e6 5d       	subi	r30, 0xD6	; 214
     cc0:	ff 4f       	sbci	r31, 0xFF	; 255
     cc2:	0c 94 76 0e 	jmp	0x1cec	; 0x1cec <__tablejump2__>
			
			case 2:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     cc6:	85 b3       	in	r24, 0x15	; 21
     cc8:	80 64       	ori	r24, 0x40	; 64
     cca:	85 bb       	out	0x15, r24	; 21
     ccc:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     cd0:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     cda:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     cde:	ce 01       	movw	r24, r28
     ce0:	88 0f       	add	r24, r24
     ce2:	99 1f       	adc	r25, r25
     ce4:	be 01       	movw	r22, r28
     ce6:	66 0f       	add	r22, r22
     ce8:	77 1f       	adc	r23, r23
     cea:	66 0f       	add	r22, r22
     cec:	77 1f       	adc	r23, r23
     cee:	66 0f       	add	r22, r22
     cf0:	77 1f       	adc	r23, r23
     cf2:	68 0f       	add	r22, r24
     cf4:	79 1f       	adc	r23, r25
     cf6:	80 e3       	ldi	r24, 0x30	; 48
     cf8:	95 e7       	ldi	r25, 0x75	; 117
     cfa:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     cfe:	ab 01       	movw	r20, r22
     d00:	77 0f       	add	r23, r23
     d02:	66 0b       	sbc	r22, r22
     d04:	77 0b       	sbc	r23, r23
     d06:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     d0a:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     d0e:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     d12:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     d16:	84 0f       	add	r24, r20
     d18:	95 1f       	adc	r25, r21
     d1a:	a6 1f       	adc	r26, r22
     d1c:	b7 1f       	adc	r27, r23
     d1e:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
     d22:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
     d26:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
     d2a:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
     d2e:	91 c3       	rjmp	.+1826   	; 0x1452 <startStepperMotor+0x85c>
			case 3:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     d30:	85 b3       	in	r24, 0x15	; 21
     d32:	8f 7e       	andi	r24, 0xEF	; 239
     d34:	85 bb       	out	0x15, r24	; 21
     d36:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     d3a:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     d3e:	01 96       	adiw	r24, 0x01	; 1
     d40:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     d44:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     d48:	ce 01       	movw	r24, r28
     d4a:	88 0f       	add	r24, r24
     d4c:	99 1f       	adc	r25, r25
     d4e:	be 01       	movw	r22, r28
     d50:	66 0f       	add	r22, r22
     d52:	77 1f       	adc	r23, r23
     d54:	66 0f       	add	r22, r22
     d56:	77 1f       	adc	r23, r23
     d58:	66 0f       	add	r22, r22
     d5a:	77 1f       	adc	r23, r23
     d5c:	68 0f       	add	r22, r24
     d5e:	79 1f       	adc	r23, r25
     d60:	80 e3       	ldi	r24, 0x30	; 48
     d62:	95 e7       	ldi	r25, 0x75	; 117
     d64:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     d68:	ab 01       	movw	r20, r22
     d6a:	77 0f       	add	r23, r23
     d6c:	66 0b       	sbc	r22, r22
     d6e:	77 0b       	sbc	r23, r23
     d70:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     d74:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     d78:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     d7c:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     d80:	84 0f       	add	r24, r20
     d82:	95 1f       	adc	r25, r21
     d84:	a6 1f       	adc	r26, r22
     d86:	b7 1f       	adc	r27, r23
     d88:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
     d8c:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
     d90:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
     d94:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
     d98:	5c c3       	rjmp	.+1720   	; 0x1452 <startStepperMotor+0x85c>
			case 4:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     d9a:	85 b3       	in	r24, 0x15	; 21
     d9c:	80 62       	ori	r24, 0x20	; 32
     d9e:	85 bb       	out	0x15, r24	; 21
     da0:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     da4:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     da8:	01 96       	adiw	r24, 0x01	; 1
     daa:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     dae:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     db2:	ce 01       	movw	r24, r28
     db4:	88 0f       	add	r24, r24
     db6:	99 1f       	adc	r25, r25
     db8:	be 01       	movw	r22, r28
     dba:	66 0f       	add	r22, r22
     dbc:	77 1f       	adc	r23, r23
     dbe:	66 0f       	add	r22, r22
     dc0:	77 1f       	adc	r23, r23
     dc2:	66 0f       	add	r22, r22
     dc4:	77 1f       	adc	r23, r23
     dc6:	68 0f       	add	r22, r24
     dc8:	79 1f       	adc	r23, r25
     dca:	80 e3       	ldi	r24, 0x30	; 48
     dcc:	95 e7       	ldi	r25, 0x75	; 117
     dce:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     dd2:	ab 01       	movw	r20, r22
     dd4:	77 0f       	add	r23, r23
     dd6:	66 0b       	sbc	r22, r22
     dd8:	77 0b       	sbc	r23, r23
     dda:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     dde:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     de2:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     de6:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     dea:	84 0f       	add	r24, r20
     dec:	95 1f       	adc	r25, r21
     dee:	a6 1f       	adc	r26, r22
     df0:	b7 1f       	adc	r27, r23
     df2:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
     df6:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
     dfa:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
     dfe:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
     e02:	27 c3       	rjmp	.+1614   	; 0x1452 <startStepperMotor+0x85c>
			case 5:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     e04:	85 b3       	in	r24, 0x15	; 21
     e06:	8f 7b       	andi	r24, 0xBF	; 191
     e08:	85 bb       	out	0x15, r24	; 21
     e0a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     e0e:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     e12:	01 96       	adiw	r24, 0x01	; 1
     e14:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     e18:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     e1c:	ce 01       	movw	r24, r28
     e1e:	88 0f       	add	r24, r24
     e20:	99 1f       	adc	r25, r25
     e22:	be 01       	movw	r22, r28
     e24:	66 0f       	add	r22, r22
     e26:	77 1f       	adc	r23, r23
     e28:	66 0f       	add	r22, r22
     e2a:	77 1f       	adc	r23, r23
     e2c:	66 0f       	add	r22, r22
     e2e:	77 1f       	adc	r23, r23
     e30:	68 0f       	add	r22, r24
     e32:	79 1f       	adc	r23, r25
     e34:	80 e3       	ldi	r24, 0x30	; 48
     e36:	95 e7       	ldi	r25, 0x75	; 117
     e38:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     e3c:	ab 01       	movw	r20, r22
     e3e:	77 0f       	add	r23, r23
     e40:	66 0b       	sbc	r22, r22
     e42:	77 0b       	sbc	r23, r23
     e44:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     e48:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     e4c:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     e50:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     e54:	84 0f       	add	r24, r20
     e56:	95 1f       	adc	r25, r21
     e58:	a6 1f       	adc	r26, r22
     e5a:	b7 1f       	adc	r27, r23
     e5c:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
     e60:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
     e64:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
     e68:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
     e6c:	f2 c2       	rjmp	.+1508   	; 0x1452 <startStepperMotor+0x85c>
			case 6:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     e6e:	85 b3       	in	r24, 0x15	; 21
     e70:	80 68       	ori	r24, 0x80	; 128
     e72:	85 bb       	out	0x15, r24	; 21
     e74:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     e78:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     e7c:	01 96       	adiw	r24, 0x01	; 1
     e7e:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     e82:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     e86:	ce 01       	movw	r24, r28
     e88:	88 0f       	add	r24, r24
     e8a:	99 1f       	adc	r25, r25
     e8c:	be 01       	movw	r22, r28
     e8e:	66 0f       	add	r22, r22
     e90:	77 1f       	adc	r23, r23
     e92:	66 0f       	add	r22, r22
     e94:	77 1f       	adc	r23, r23
     e96:	66 0f       	add	r22, r22
     e98:	77 1f       	adc	r23, r23
     e9a:	68 0f       	add	r22, r24
     e9c:	79 1f       	adc	r23, r25
     e9e:	80 e3       	ldi	r24, 0x30	; 48
     ea0:	95 e7       	ldi	r25, 0x75	; 117
     ea2:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     ea6:	ab 01       	movw	r20, r22
     ea8:	77 0f       	add	r23, r23
     eaa:	66 0b       	sbc	r22, r22
     eac:	77 0b       	sbc	r23, r23
     eae:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     eb2:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     eb6:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     eba:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     ebe:	84 0f       	add	r24, r20
     ec0:	95 1f       	adc	r25, r21
     ec2:	a6 1f       	adc	r26, r22
     ec4:	b7 1f       	adc	r27, r23
     ec6:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
     eca:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
     ece:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
     ed2:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
     ed6:	bd c2       	rjmp	.+1402   	; 0x1452 <startStepperMotor+0x85c>
			case 7:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     ed8:	85 b3       	in	r24, 0x15	; 21
     eda:	8f 7d       	andi	r24, 0xDF	; 223
     edc:	85 bb       	out	0x15, r24	; 21
     ede:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     ee2:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     ee6:	01 96       	adiw	r24, 0x01	; 1
     ee8:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     eec:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     ef0:	ce 01       	movw	r24, r28
     ef2:	88 0f       	add	r24, r24
     ef4:	99 1f       	adc	r25, r25
     ef6:	be 01       	movw	r22, r28
     ef8:	66 0f       	add	r22, r22
     efa:	77 1f       	adc	r23, r23
     efc:	66 0f       	add	r22, r22
     efe:	77 1f       	adc	r23, r23
     f00:	66 0f       	add	r22, r22
     f02:	77 1f       	adc	r23, r23
     f04:	68 0f       	add	r22, r24
     f06:	79 1f       	adc	r23, r25
     f08:	80 e3       	ldi	r24, 0x30	; 48
     f0a:	95 e7       	ldi	r25, 0x75	; 117
     f0c:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     f10:	ab 01       	movw	r20, r22
     f12:	77 0f       	add	r23, r23
     f14:	66 0b       	sbc	r22, r22
     f16:	77 0b       	sbc	r23, r23
     f18:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     f1c:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     f20:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     f24:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     f28:	84 0f       	add	r24, r20
     f2a:	95 1f       	adc	r25, r21
     f2c:	a6 1f       	adc	r26, r22
     f2e:	b7 1f       	adc	r27, r23
     f30:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
     f34:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
     f38:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
     f3c:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
     f40:	88 c2       	rjmp	.+1296   	; 0x1452 <startStepperMotor+0x85c>
			case 8:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     f42:	85 b3       	in	r24, 0x15	; 21
     f44:	80 61       	ori	r24, 0x10	; 16
     f46:	85 bb       	out	0x15, r24	; 21
     f48:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     f4c:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     f50:	01 96       	adiw	r24, 0x01	; 1
     f52:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     f56:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     f5a:	ce 01       	movw	r24, r28
     f5c:	88 0f       	add	r24, r24
     f5e:	99 1f       	adc	r25, r25
     f60:	be 01       	movw	r22, r28
     f62:	66 0f       	add	r22, r22
     f64:	77 1f       	adc	r23, r23
     f66:	66 0f       	add	r22, r22
     f68:	77 1f       	adc	r23, r23
     f6a:	66 0f       	add	r22, r22
     f6c:	77 1f       	adc	r23, r23
     f6e:	68 0f       	add	r22, r24
     f70:	79 1f       	adc	r23, r25
     f72:	80 e3       	ldi	r24, 0x30	; 48
     f74:	95 e7       	ldi	r25, 0x75	; 117
     f76:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     f7a:	ab 01       	movw	r20, r22
     f7c:	77 0f       	add	r23, r23
     f7e:	66 0b       	sbc	r22, r22
     f80:	77 0b       	sbc	r23, r23
     f82:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     f86:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     f8a:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     f8e:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     f92:	84 0f       	add	r24, r20
     f94:	95 1f       	adc	r25, r21
     f96:	a6 1f       	adc	r26, r22
     f98:	b7 1f       	adc	r27, r23
     f9a:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
     f9e:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
     fa2:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
     fa6:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
     faa:	53 c2       	rjmp	.+1190   	; 0x1452 <startStepperMotor+0x85c>
			case 9:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     fac:	85 b3       	in	r24, 0x15	; 21
     fae:	8f 77       	andi	r24, 0x7F	; 127
     fb0:	85 bb       	out	0x15, r24	; 21
     fb2:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
     fb6:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
     fba:	01 96       	adiw	r24, 0x01	; 1
     fbc:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
     fc0:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
     fc4:	ce 01       	movw	r24, r28
     fc6:	88 0f       	add	r24, r24
     fc8:	99 1f       	adc	r25, r25
     fca:	be 01       	movw	r22, r28
     fcc:	66 0f       	add	r22, r22
     fce:	77 1f       	adc	r23, r23
     fd0:	66 0f       	add	r22, r22
     fd2:	77 1f       	adc	r23, r23
     fd4:	66 0f       	add	r22, r22
     fd6:	77 1f       	adc	r23, r23
     fd8:	68 0f       	add	r22, r24
     fda:	79 1f       	adc	r23, r25
     fdc:	80 e3       	ldi	r24, 0x30	; 48
     fde:	95 e7       	ldi	r25, 0x75	; 117
     fe0:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
     fe4:	ab 01       	movw	r20, r22
     fe6:	77 0f       	add	r23, r23
     fe8:	66 0b       	sbc	r22, r22
     fea:	77 0b       	sbc	r23, r23
     fec:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
     ff0:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
     ff4:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
     ff8:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
     ffc:	84 0f       	add	r24, r20
     ffe:	95 1f       	adc	r25, r21
    1000:	a6 1f       	adc	r26, r22
    1002:	b7 1f       	adc	r27, r23
    1004:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    1008:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    100c:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    1010:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    1014:	1e c2       	rjmp	.+1084   	; 0x1452 <startStepperMotor+0x85c>
			case 10:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1016:	85 b3       	in	r24, 0x15	; 21
    1018:	8f 7e       	andi	r24, 0xEF	; 239
    101a:	85 bb       	out	0x15, r24	; 21
    101c:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    1020:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    1024:	01 96       	adiw	r24, 0x01	; 1
    1026:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    102a:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    102e:	ce 01       	movw	r24, r28
    1030:	88 0f       	add	r24, r24
    1032:	99 1f       	adc	r25, r25
    1034:	be 01       	movw	r22, r28
    1036:	66 0f       	add	r22, r22
    1038:	77 1f       	adc	r23, r23
    103a:	66 0f       	add	r22, r22
    103c:	77 1f       	adc	r23, r23
    103e:	66 0f       	add	r22, r22
    1040:	77 1f       	adc	r23, r23
    1042:	68 0f       	add	r22, r24
    1044:	79 1f       	adc	r23, r25
    1046:	80 e3       	ldi	r24, 0x30	; 48
    1048:	95 e7       	ldi	r25, 0x75	; 117
    104a:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    104e:	ab 01       	movw	r20, r22
    1050:	77 0f       	add	r23, r23
    1052:	66 0b       	sbc	r22, r22
    1054:	77 0b       	sbc	r23, r23
    1056:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    105a:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    105e:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    1062:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    1066:	84 0f       	add	r24, r20
    1068:	95 1f       	adc	r25, r21
    106a:	a6 1f       	adc	r26, r22
    106c:	b7 1f       	adc	r27, r23
    106e:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    1072:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    1076:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    107a:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    107e:	e9 c1       	rjmp	.+978    	; 0x1452 <startStepperMotor+0x85c>
			case 11:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1080:	85 b3       	in	r24, 0x15	; 21
    1082:	80 61       	ori	r24, 0x10	; 16
    1084:	85 bb       	out	0x15, r24	; 21
    1086:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    108a:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    108e:	01 96       	adiw	r24, 0x01	; 1
    1090:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    1094:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    1098:	ce 01       	movw	r24, r28
    109a:	88 0f       	add	r24, r24
    109c:	99 1f       	adc	r25, r25
    109e:	be 01       	movw	r22, r28
    10a0:	66 0f       	add	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	66 0f       	add	r22, r22
    10a6:	77 1f       	adc	r23, r23
    10a8:	66 0f       	add	r22, r22
    10aa:	77 1f       	adc	r23, r23
    10ac:	68 0f       	add	r22, r24
    10ae:	79 1f       	adc	r23, r25
    10b0:	80 e3       	ldi	r24, 0x30	; 48
    10b2:	95 e7       	ldi	r25, 0x75	; 117
    10b4:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    10b8:	ab 01       	movw	r20, r22
    10ba:	77 0f       	add	r23, r23
    10bc:	66 0b       	sbc	r22, r22
    10be:	77 0b       	sbc	r23, r23
    10c0:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    10c4:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    10c8:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    10cc:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    10d0:	84 0f       	add	r24, r20
    10d2:	95 1f       	adc	r25, r21
    10d4:	a6 1f       	adc	r26, r22
    10d6:	b7 1f       	adc	r27, r23
    10d8:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    10dc:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    10e0:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    10e4:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    10e8:	b4 c1       	rjmp	.+872    	; 0x1452 <startStepperMotor+0x85c>
			case 12:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    10ea:	85 b3       	in	r24, 0x15	; 21
    10ec:	80 68       	ori	r24, 0x80	; 128
    10ee:	85 bb       	out	0x15, r24	; 21
    10f0:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    10f4:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    10f8:	01 96       	adiw	r24, 0x01	; 1
    10fa:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    10fe:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    1102:	ce 01       	movw	r24, r28
    1104:	88 0f       	add	r24, r24
    1106:	99 1f       	adc	r25, r25
    1108:	be 01       	movw	r22, r28
    110a:	66 0f       	add	r22, r22
    110c:	77 1f       	adc	r23, r23
    110e:	66 0f       	add	r22, r22
    1110:	77 1f       	adc	r23, r23
    1112:	66 0f       	add	r22, r22
    1114:	77 1f       	adc	r23, r23
    1116:	68 0f       	add	r22, r24
    1118:	79 1f       	adc	r23, r25
    111a:	80 e3       	ldi	r24, 0x30	; 48
    111c:	95 e7       	ldi	r25, 0x75	; 117
    111e:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    1122:	ab 01       	movw	r20, r22
    1124:	77 0f       	add	r23, r23
    1126:	66 0b       	sbc	r22, r22
    1128:	77 0b       	sbc	r23, r23
    112a:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    112e:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    1132:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    1136:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    113a:	84 0f       	add	r24, r20
    113c:	95 1f       	adc	r25, r21
    113e:	a6 1f       	adc	r26, r22
    1140:	b7 1f       	adc	r27, r23
    1142:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    1146:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    114a:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    114e:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    1152:	7f c1       	rjmp	.+766    	; 0x1452 <startStepperMotor+0x85c>
			case 13:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1154:	85 b3       	in	r24, 0x15	; 21
    1156:	8f 7e       	andi	r24, 0xEF	; 239
    1158:	85 bb       	out	0x15, r24	; 21
    115a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    115e:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    1162:	01 96       	adiw	r24, 0x01	; 1
    1164:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    1168:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    116c:	ce 01       	movw	r24, r28
    116e:	88 0f       	add	r24, r24
    1170:	99 1f       	adc	r25, r25
    1172:	be 01       	movw	r22, r28
    1174:	66 0f       	add	r22, r22
    1176:	77 1f       	adc	r23, r23
    1178:	66 0f       	add	r22, r22
    117a:	77 1f       	adc	r23, r23
    117c:	66 0f       	add	r22, r22
    117e:	77 1f       	adc	r23, r23
    1180:	68 0f       	add	r22, r24
    1182:	79 1f       	adc	r23, r25
    1184:	80 e3       	ldi	r24, 0x30	; 48
    1186:	95 e7       	ldi	r25, 0x75	; 117
    1188:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    118c:	ab 01       	movw	r20, r22
    118e:	77 0f       	add	r23, r23
    1190:	66 0b       	sbc	r22, r22
    1192:	77 0b       	sbc	r23, r23
    1194:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    1198:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    119c:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    11a0:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    11a4:	84 0f       	add	r24, r20
    11a6:	95 1f       	adc	r25, r21
    11a8:	a6 1f       	adc	r26, r22
    11aa:	b7 1f       	adc	r27, r23
    11ac:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    11b0:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    11b4:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    11b8:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    11bc:	4a c1       	rjmp	.+660    	; 0x1452 <startStepperMotor+0x85c>
			case 14:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    11be:	85 b3       	in	r24, 0x15	; 21
    11c0:	80 62       	ori	r24, 0x20	; 32
    11c2:	85 bb       	out	0x15, r24	; 21
    11c4:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    11c8:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    11cc:	01 96       	adiw	r24, 0x01	; 1
    11ce:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    11d2:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    11d6:	ce 01       	movw	r24, r28
    11d8:	88 0f       	add	r24, r24
    11da:	99 1f       	adc	r25, r25
    11dc:	be 01       	movw	r22, r28
    11de:	66 0f       	add	r22, r22
    11e0:	77 1f       	adc	r23, r23
    11e2:	66 0f       	add	r22, r22
    11e4:	77 1f       	adc	r23, r23
    11e6:	66 0f       	add	r22, r22
    11e8:	77 1f       	adc	r23, r23
    11ea:	68 0f       	add	r22, r24
    11ec:	79 1f       	adc	r23, r25
    11ee:	80 e3       	ldi	r24, 0x30	; 48
    11f0:	95 e7       	ldi	r25, 0x75	; 117
    11f2:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    11f6:	ab 01       	movw	r20, r22
    11f8:	77 0f       	add	r23, r23
    11fa:	66 0b       	sbc	r22, r22
    11fc:	77 0b       	sbc	r23, r23
    11fe:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    1202:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    1206:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    120a:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    120e:	84 0f       	add	r24, r20
    1210:	95 1f       	adc	r25, r21
    1212:	a6 1f       	adc	r26, r22
    1214:	b7 1f       	adc	r27, r23
    1216:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    121a:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    121e:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    1222:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    1226:	15 c1       	rjmp	.+554    	; 0x1452 <startStepperMotor+0x85c>
			case 16:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1228:	85 b3       	in	r24, 0x15	; 21
    122a:	8f 77       	andi	r24, 0x7F	; 127
    122c:	85 bb       	out	0x15, r24	; 21
    122e:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    1232:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    1236:	01 96       	adiw	r24, 0x01	; 1
    1238:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    123c:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    1240:	ce 01       	movw	r24, r28
    1242:	88 0f       	add	r24, r24
    1244:	99 1f       	adc	r25, r25
    1246:	be 01       	movw	r22, r28
    1248:	66 0f       	add	r22, r22
    124a:	77 1f       	adc	r23, r23
    124c:	66 0f       	add	r22, r22
    124e:	77 1f       	adc	r23, r23
    1250:	66 0f       	add	r22, r22
    1252:	77 1f       	adc	r23, r23
    1254:	68 0f       	add	r22, r24
    1256:	79 1f       	adc	r23, r25
    1258:	80 e3       	ldi	r24, 0x30	; 48
    125a:	95 e7       	ldi	r25, 0x75	; 117
    125c:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    1260:	ab 01       	movw	r20, r22
    1262:	77 0f       	add	r23, r23
    1264:	66 0b       	sbc	r22, r22
    1266:	77 0b       	sbc	r23, r23
    1268:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    126c:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    1270:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    1274:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    1278:	84 0f       	add	r24, r20
    127a:	95 1f       	adc	r25, r21
    127c:	a6 1f       	adc	r26, r22
    127e:	b7 1f       	adc	r27, r23
    1280:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    1284:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    1288:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    128c:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    1290:	e0 c0       	rjmp	.+448    	; 0x1452 <startStepperMotor+0x85c>
			case 17:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1292:	85 b3       	in	r24, 0x15	; 21
    1294:	80 64       	ori	r24, 0x40	; 64
    1296:	85 bb       	out	0x15, r24	; 21
    1298:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    129c:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    12a6:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    12aa:	ce 01       	movw	r24, r28
    12ac:	88 0f       	add	r24, r24
    12ae:	99 1f       	adc	r25, r25
    12b0:	be 01       	movw	r22, r28
    12b2:	66 0f       	add	r22, r22
    12b4:	77 1f       	adc	r23, r23
    12b6:	66 0f       	add	r22, r22
    12b8:	77 1f       	adc	r23, r23
    12ba:	66 0f       	add	r22, r22
    12bc:	77 1f       	adc	r23, r23
    12be:	68 0f       	add	r22, r24
    12c0:	79 1f       	adc	r23, r25
    12c2:	80 e3       	ldi	r24, 0x30	; 48
    12c4:	95 e7       	ldi	r25, 0x75	; 117
    12c6:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    12ca:	ab 01       	movw	r20, r22
    12cc:	77 0f       	add	r23, r23
    12ce:	66 0b       	sbc	r22, r22
    12d0:	77 0b       	sbc	r23, r23
    12d2:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    12d6:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    12da:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    12de:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    12e2:	84 0f       	add	r24, r20
    12e4:	95 1f       	adc	r25, r21
    12e6:	a6 1f       	adc	r26, r22
    12e8:	b7 1f       	adc	r27, r23
    12ea:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    12ee:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    12f2:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    12f6:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    12fa:	ab c0       	rjmp	.+342    	; 0x1452 <startStepperMotor+0x85c>
			case 18:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    12fc:	85 b3       	in	r24, 0x15	; 21
    12fe:	8f 7d       	andi	r24, 0xDF	; 223
    1300:	85 bb       	out	0x15, r24	; 21
    1302:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    1306:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    130a:	01 96       	adiw	r24, 0x01	; 1
    130c:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    1310:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    1314:	ce 01       	movw	r24, r28
    1316:	88 0f       	add	r24, r24
    1318:	99 1f       	adc	r25, r25
    131a:	be 01       	movw	r22, r28
    131c:	66 0f       	add	r22, r22
    131e:	77 1f       	adc	r23, r23
    1320:	66 0f       	add	r22, r22
    1322:	77 1f       	adc	r23, r23
    1324:	66 0f       	add	r22, r22
    1326:	77 1f       	adc	r23, r23
    1328:	68 0f       	add	r22, r24
    132a:	79 1f       	adc	r23, r25
    132c:	80 e3       	ldi	r24, 0x30	; 48
    132e:	95 e7       	ldi	r25, 0x75	; 117
    1330:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    1334:	ab 01       	movw	r20, r22
    1336:	77 0f       	add	r23, r23
    1338:	66 0b       	sbc	r22, r22
    133a:	77 0b       	sbc	r23, r23
    133c:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    1340:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    1344:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    1348:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    134c:	84 0f       	add	r24, r20
    134e:	95 1f       	adc	r25, r21
    1350:	a6 1f       	adc	r26, r22
    1352:	b7 1f       	adc	r27, r23
    1354:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    1358:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    135c:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    1360:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    1364:	76 c0       	rjmp	.+236    	; 0x1452 <startStepperMotor+0x85c>
			case 19:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1366:	85 b3       	in	r24, 0x15	; 21
    1368:	8f 7b       	andi	r24, 0xBF	; 191
    136a:	85 bb       	out	0x15, r24	; 21
    136c:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    1370:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    1374:	01 96       	adiw	r24, 0x01	; 1
    1376:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    137a:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    137e:	ce 01       	movw	r24, r28
    1380:	88 0f       	add	r24, r24
    1382:	99 1f       	adc	r25, r25
    1384:	be 01       	movw	r22, r28
    1386:	66 0f       	add	r22, r22
    1388:	77 1f       	adc	r23, r23
    138a:	66 0f       	add	r22, r22
    138c:	77 1f       	adc	r23, r23
    138e:	66 0f       	add	r22, r22
    1390:	77 1f       	adc	r23, r23
    1392:	68 0f       	add	r22, r24
    1394:	79 1f       	adc	r23, r25
    1396:	80 e3       	ldi	r24, 0x30	; 48
    1398:	95 e7       	ldi	r25, 0x75	; 117
    139a:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    139e:	ab 01       	movw	r20, r22
    13a0:	77 0f       	add	r23, r23
    13a2:	66 0b       	sbc	r22, r22
    13a4:	77 0b       	sbc	r23, r23
    13a6:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    13aa:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    13ae:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    13b2:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    13b6:	84 0f       	add	r24, r20
    13b8:	95 1f       	adc	r25, r21
    13ba:	a6 1f       	adc	r26, r22
    13bc:	b7 1f       	adc	r27, r23
    13be:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    13c2:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    13c6:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    13ca:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    13ce:	41 c0       	rjmp	.+130    	; 0x1452 <startStepperMotor+0x85c>
			case 20:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    13d0:	85 b3       	in	r24, 0x15	; 21
    13d2:	8f 7e       	andi	r24, 0xEF	; 239
    13d4:	85 bb       	out	0x15, r24	; 21
    13d6:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <case_num0>
    13da:	90 91 be 03 	lds	r25, 0x03BE	; 0x8003be <case_num0+0x1>
    13de:	01 96       	adiw	r24, 0x01	; 1
    13e0:	90 93 be 03 	sts	0x03BE, r25	; 0x8003be <case_num0+0x1>
    13e4:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <case_num0>
    13e8:	ce 01       	movw	r24, r28
    13ea:	88 0f       	add	r24, r24
    13ec:	99 1f       	adc	r25, r25
    13ee:	be 01       	movw	r22, r28
    13f0:	66 0f       	add	r22, r22
    13f2:	77 1f       	adc	r23, r23
    13f4:	66 0f       	add	r22, r22
    13f6:	77 1f       	adc	r23, r23
    13f8:	66 0f       	add	r22, r22
    13fa:	77 1f       	adc	r23, r23
    13fc:	68 0f       	add	r22, r24
    13fe:	79 1f       	adc	r23, r25
    1400:	80 e3       	ldi	r24, 0x30	; 48
    1402:	95 e7       	ldi	r25, 0x75	; 117
    1404:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <__divmodhi4>
    1408:	ab 01       	movw	r20, r22
    140a:	77 0f       	add	r23, r23
    140c:	66 0b       	sbc	r22, r22
    140e:	77 0b       	sbc	r23, r23
    1410:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <need_millis0>
    1414:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <need_millis0+0x1>
    1418:	a0 91 17 03 	lds	r26, 0x0317	; 0x800317 <need_millis0+0x2>
    141c:	b0 91 18 03 	lds	r27, 0x0318	; 0x800318 <need_millis0+0x3>
    1420:	84 0f       	add	r24, r20
    1422:	95 1f       	adc	r25, r21
    1424:	a6 1f       	adc	r26, r22
    1426:	b7 1f       	adc	r27, r23
    1428:	80 93 15 03 	sts	0x0315, r24	; 0x800315 <need_millis0>
    142c:	90 93 16 03 	sts	0x0316, r25	; 0x800316 <need_millis0+0x1>
    1430:	a0 93 17 03 	sts	0x0317, r26	; 0x800317 <need_millis0+0x2>
    1434:	b0 93 18 03 	sts	0x0318, r27	; 0x800318 <need_millis0+0x3>
    1438:	0c c0       	rjmp	.+24     	; 0x1452 <startStepperMotor+0x85c>
			default:case_num0=NULL;prev_millis0=NULL;
    143a:	10 92 be 03 	sts	0x03BE, r1	; 0x8003be <case_num0+0x1>
    143e:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <case_num0>
    1442:	10 92 71 04 	sts	0x0471, r1	; 0x800471 <prev_millis0>
    1446:	10 92 72 04 	sts	0x0472, r1	; 0x800472 <prev_millis0+0x1>
    144a:	10 92 73 04 	sts	0x0473, r1	; 0x800473 <prev_millis0+0x2>
    144e:	10 92 74 04 	sts	0x0474, r1	; 0x800474 <prev_millis0+0x3>
	



	
}
    1452:	df 91       	pop	r29
    1454:	cf 91       	pop	r28
    1456:	1f 91       	pop	r17
    1458:	0f 91       	pop	r16
    145a:	08 95       	ret

0000145c <startOxygenAndAirSupply>:
    memset(USART_BUFFER, 0, 100);
    _delay_ms(10);
    USART_SendString("AT+SAPBR=1,1\r");
}
char *boolstring( _Bool b ) { return b ? "true" : "false"; }
void startOxygenAndAirSupply(int percentage) {
    145c:	cf 93       	push	r28
    145e:	df 93       	push	r29
    controlOxygenPercentage(checkBloodOxygenLevel());
	controlSolenoidValve(Oxygen_percentage, Average_Breath_Per_Min);
    1460:	c0 91 68 00 	lds	r28, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    1464:	d0 91 69 00 	lds	r29, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    1468:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <Oxygen_percentage>
    146c:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    1470:	07 2e       	mov	r0, r23
    1472:	00 0c       	add	r0, r0
    1474:	88 0b       	sbc	r24, r24
    1476:	99 0b       	sbc	r25, r25
    1478:	0e 94 c3 0c 	call	0x1986	; 0x1986 <__floatsisf>
    147c:	ae 01       	movw	r20, r28
    147e:	0e 94 19 04 	call	0x832	; 0x832 <controlSolenoidValve>
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    1482:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    1486:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    148a:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    148e:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    1492:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <startStepperMotor>
    
}
    1496:	df 91       	pop	r29
    1498:	cf 91       	pop	r28
    149a:	08 95       	ret

0000149c <startAirSupply>:
}



void startAirSupply() {
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    149c:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    14a0:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    14a4:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    14a8:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    14ac:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <startStepperMotor>
    controlSolenoidValve(100, Average_Breath_Per_Min);
    14b0:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    14b4:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    14b8:	60 e0       	ldi	r22, 0x00	; 0
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	88 ec       	ldi	r24, 0xC8	; 200
    14be:	92 e4       	ldi	r25, 0x42	; 66
    14c0:	0e 94 19 04 	call	0x832	; 0x832 <controlSolenoidValve>
    14c4:	08 95       	ret

000014c6 <main>:
int rOP;
int i;


int main(void)
{
    14c6:	ef 92       	push	r14
    14c8:	ff 92       	push	r15
    14ca:	0f 93       	push	r16
    14cc:	1f 93       	push	r17
    14ce:	cf 93       	push	r28
    14d0:	df 93       	push	r29
    /* Replace with your application code */
    DDRC = DDRC | (1<<2); // solenoid valve
    14d2:	84 b3       	in	r24, 0x14	; 20
    14d4:	84 60       	ori	r24, 0x04	; 4
    14d6:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<3); // solenoid valve
    14d8:	84 b3       	in	r24, 0x14	; 20
    14da:	88 60       	ori	r24, 0x08	; 8
    14dc:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<4); // stepper motor
    14de:	84 b3       	in	r24, 0x14	; 20
    14e0:	80 61       	ori	r24, 0x10	; 16
    14e2:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<5); // stepper motor
    14e4:	84 b3       	in	r24, 0x14	; 20
    14e6:	80 62       	ori	r24, 0x20	; 32
    14e8:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<6); // stepper motor
    14ea:	84 b3       	in	r24, 0x14	; 20
    14ec:	80 64       	ori	r24, 0x40	; 64
    14ee:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<7); // stepper motor
    14f0:	84 b3       	in	r24, 0x14	; 20
    14f2:	80 68       	ori	r24, 0x80	; 128
    14f4:	84 bb       	out	0x14, r24	; 20
	
	 DDRB=0x8B; // 0,1,3,7--->1 2,4,5,6-->0 for keypad and switch
    14f6:	8b e8       	ldi	r24, 0x8B	; 139
    14f8:	87 bb       	out	0x17, r24	; 23
	 DDRD=DDRD | (0<<2);
    14fa:	81 b3       	in	r24, 0x11	; 17
    14fc:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (0<<3);
    14fe:	81 b3       	in	r24, 0x11	; 17
    1500:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (0<<6);//PD6 as input for power on
    1502:	81 b3       	in	r24, 0x11	; 17
    1504:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (0<<5);//PD5 as Oxygen Automation
    1506:	81 b3       	in	r24, 0x11	; 17
    1508:	81 bb       	out	0x11, r24	; 17
	 GICR=0xe0;// Enable INT 0,1,2
    150a:	80 ee       	ldi	r24, 0xE0	; 224
    150c:	8b bf       	out	0x3b, r24	; 59
	 MCUCR=0x05;
    150e:	85 e0       	ldi	r24, 0x05	; 5
    1510:	85 bf       	out	0x35, r24	; 53
	 MCUCSR=0x40;
    1512:	80 e4       	ldi	r24, 0x40	; 64
    1514:	84 bf       	out	0x34, r24	; 52
	init_millis(8000000UL);
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	72 e1       	ldi	r23, 0x12	; 18
    151a:	8a e7       	ldi	r24, 0x7A	; 122
    151c:	90 e0       	ldi	r25, 0x00	; 0
    151e:	0e 94 8b 0b 	call	0x1716	; 0x1716 <init_millis>
	sei();
    1522:	78 94       	sei
     i2c_init();
    1524:	0e 94 30 01 	call	0x260	; 0x260 <i2c_init>
	 i2c_start();
    1528:	0e 94 36 01 	call	0x26c	; 0x26c <i2c_start>
	 i2c_write(0x70);
    152c:	80 e7       	ldi	r24, 0x70	; 112
    152e:	0e 94 3c 01 	call	0x278	; 0x278 <i2c_write>
	 lcd_init();
    1532:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_init>
    USART_Init(9600);
    1536:	60 e8       	ldi	r22, 0x80	; 128
    1538:	75 e2       	ldi	r23, 0x25	; 37
    153a:	80 e0       	ldi	r24, 0x00	; 0
    153c:	90 e0       	ldi	r25, 0x00	; 0
    153e:	0e 94 43 01 	call	0x286	; 0x286 <USART_Init>
    1542:	2f ef       	ldi	r18, 0xFF	; 255
    1544:	89 e6       	ldi	r24, 0x69	; 105
    1546:	98 e1       	ldi	r25, 0x18	; 24
    1548:	21 50       	subi	r18, 0x01	; 1
    154a:	80 40       	sbci	r24, 0x00	; 0
    154c:	90 40       	sbci	r25, 0x00	; 0
    154e:	e1 f7       	brne	.-8      	; 0x1548 <main+0x82>
    1550:	00 c0       	rjmp	.+0      	; 0x1552 <main+0x8c>
    1552:	00 00       	nop
    _delay_ms(1000);
    GSMConnect();
    1554:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <GSMConnect>
	 //	if(PINB!=0xF0)
	 //	{
	 //		x=Keypad();
	 //		LCD_Char(x);
	 //	}
	 PORTB = PORTB | (1<<4);
    1558:	88 b3       	in	r24, 0x18	; 24
    155a:	80 61       	ori	r24, 0x10	; 16
    155c:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB | (1<<5);
    155e:	88 b3       	in	r24, 0x18	; 24
    1560:	80 62       	ori	r24, 0x20	; 32
    1562:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB | (1<<6);
    1564:	88 b3       	in	r24, 0x18	; 24
    1566:	80 64       	ori	r24, 0x40	; 64
    1568:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<0));
    156a:	88 b3       	in	r24, 0x18	; 24
    156c:	8e 7f       	andi	r24, 0xFE	; 254
    156e:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<1));
    1570:	88 b3       	in	r24, 0x18	; 24
    1572:	8d 7f       	andi	r24, 0xFD	; 253
    1574:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<3));
    1576:	88 b3       	in	r24, 0x18	; 24
    1578:	87 7f       	andi	r24, 0xF7	; 247
    157a:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<7));
    157c:	88 b3       	in	r24, 0x18	; 24
    157e:	8f 77       	andi	r24, 0x7F	; 127
    1580:	88 bb       	out	0x18, r24	; 24
	 	
		
	 
    while (1)
    {   
		for ( i=1;i<4;i++)
    1582:	81 e0       	ldi	r24, 0x01	; 1
    1584:	90 e0       	ldi	r25, 0x00	; 0
    1586:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <i+0x1>
    158a:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <i>
    158e:	31 c0       	rjmp	.+98     	; 0x15f2 <main+0x12c>
		{
			ADC_Init(i);
    1590:	0e 94 a9 01 	call	0x352	; 0x352 <ADC_Init>

			if(i==3){
    1594:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <i>
    1598:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <i+0x1>
    159c:	83 30       	cpi	r24, 0x03	; 3
    159e:	91 05       	cpc	r25, r1
    15a0:	49 f4       	brne	.+18     	; 0x15b4 <main+0xee>
				rOP=ADC_Read(4);
    15a2:	84 e0       	ldi	r24, 0x04	; 4
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	0e 94 c3 01 	call	0x386	; 0x386 <ADC_Read>
    15aa:	90 93 0f 03 	sts	0x030F, r25	; 0x80030f <rOP+0x1>
    15ae:	80 93 0e 03 	sts	0x030E, r24	; 0x80030e <rOP>
    15b2:	16 c0       	rjmp	.+44     	; 0x15e0 <main+0x11a>
				
				}else if(i==1){
    15b4:	81 30       	cpi	r24, 0x01	; 1
    15b6:	91 05       	cpc	r25, r1
    15b8:	49 f4       	brne	.+18     	; 0x15cc <main+0x106>
				rBPM=ADC_Read(1);
    15ba:	81 e0       	ldi	r24, 0x01	; 1
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	0e 94 c3 01 	call	0x386	; 0x386 <ADC_Read>
    15c2:	90 93 bc 03 	sts	0x03BC, r25	; 0x8003bc <rBPM+0x1>
    15c6:	80 93 bb 03 	sts	0x03BB, r24	; 0x8003bb <rBPM>
    15ca:	0a c0       	rjmp	.+20     	; 0x15e0 <main+0x11a>
				}else if(i==2){
    15cc:	02 97       	sbiw	r24, 0x02	; 2
    15ce:	41 f4       	brne	.+16     	; 0x15e0 <main+0x11a>
				rBL=ADC_Read(3);
    15d0:	83 e0       	ldi	r24, 0x03	; 3
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	0e 94 c3 01 	call	0x386	; 0x386 <ADC_Read>
    15d8:	90 93 ba 03 	sts	0x03BA, r25	; 0x8003ba <rBL+0x1>
    15dc:	80 93 b9 03 	sts	0x03B9, r24	; 0x8003b9 <rBL>
	 	
		
	 
    while (1)
    {   
		for ( i=1;i<4;i++)
    15e0:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <i>
    15e4:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <i+0x1>
    15e8:	01 96       	adiw	r24, 0x01	; 1
    15ea:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <i+0x1>
    15ee:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <i>
    15f2:	80 91 bf 03 	lds	r24, 0x03BF	; 0x8003bf <i>
    15f6:	90 91 c0 03 	lds	r25, 0x03C0	; 0x8003c0 <i+0x1>
    15fa:	84 30       	cpi	r24, 0x04	; 4
    15fc:	91 05       	cpc	r25, r1
    15fe:	44 f2       	brlt	.-112    	; 0x1590 <main+0xca>
				rBPM=ADC_Read(1);
				}else if(i==2){
				rBL=ADC_Read(3);
			}
		}
		i=1;
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	90 93 c0 03 	sts	0x03C0, r25	; 0x8003c0 <i+0x1>
    1608:	80 93 bf 03 	sts	0x03BF, r24	; 0x8003bf <i>

		lcd_cmd(0x28);
    160c:	88 e2       	ldi	r24, 0x28	; 40
    160e:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
    1612:	4a e0       	ldi	r20, 0x0A	; 10
    1614:	e1 2c       	mov	r14, r1
    1616:	f1 2c       	mov	r15, r1
    1618:	b7 01       	movw	r22, r14
    161a:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rOP>
    161e:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rOP+0x1>
    1622:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__itoa_ncheck>
		char* rSOP,rSBPM,rSBL;
		itoa(rOP,rSOP,10);
		itoa(rOP,rSBPM,10);
    1626:	00 e0       	ldi	r16, 0x00	; 0
    1628:	10 e0       	ldi	r17, 0x00	; 0
    162a:	4a e0       	ldi	r20, 0x0A	; 10
    162c:	b8 01       	movw	r22, r16
    162e:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rOP>
    1632:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rOP+0x1>
    1636:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__itoa_ncheck>
		itoa(rOP,rSBL,10);
    163a:	c0 e0       	ldi	r28, 0x00	; 0
    163c:	d0 e0       	ldi	r29, 0x00	; 0
    163e:	4a e0       	ldi	r20, 0x0A	; 10
    1640:	be 01       	movw	r22, r28
    1642:	80 91 0e 03 	lds	r24, 0x030E	; 0x80030e <rOP>
    1646:	90 91 0f 03 	lds	r25, 0x030F	; 0x80030f <rOP+0x1>
    164a:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <__itoa_ncheck>
		lcd_msg(rSOP);
    164e:	c7 01       	movw	r24, r14
    1650:	0e 94 23 01 	call	0x246	; 0x246 <lcd_msg>
		lcd_msg(rSBPM);
    1654:	c8 01       	movw	r24, r16
    1656:	0e 94 23 01 	call	0x246	; 0x246 <lcd_msg>
		lcd_msg(rSBL);
    165a:	ce 01       	movw	r24, r28
    165c:	0e 94 23 01 	call	0x246	; 0x246 <lcd_msg>

     startOxygenAndAirSupply(60);
    1660:	8c e3       	ldi	r24, 0x3C	; 60
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	0e 94 2e 0a 	call	0x145c	; 0x145c <startOxygenAndAirSupply>



        if(checkStatus()){
    1668:	0e 94 c5 05 	call	0xb8a	; 0xb8a <checkStatus>
    166c:	88 23       	and	r24, r24
    166e:	29 f1       	breq	.+74     	; 0x16ba <main+0x1f4>
            if(automationOn()){
    1670:	0e 94 ad 04 	call	0x95a	; 0x95a <automationOn>
    1674:	88 23       	and	r24, r24
    1676:	c1 f0       	breq	.+48     	; 0x16a8 <main+0x1e2>
                if(checkPatientTemp()){
    1678:	0e 94 74 05 	call	0xae8	; 0xae8 <checkPatientTemp>
    167c:	88 23       	and	r24, r24
    167e:	09 f4       	brne	.+2      	; 0x1682 <main+0x1bc>
    1680:	80 cf       	rjmp	.-256    	; 0x1582 <main+0xbc>

                    if(checkBloodOxygenLevel() < Average_Blood_Oxygen_level){
    1682:	0e 94 a7 04 	call	0x94e	; 0x94e <checkBloodOxygenLevel>
    1686:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <Average_Blood_Oxygen_level>
    168a:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <Average_Blood_Oxygen_level+0x1>
    168e:	82 17       	cp	r24, r18
    1690:	93 07       	cpc	r25, r19
    1692:	3c f4       	brge	.+14     	; 0x16a2 <main+0x1dc>
                        startOxygenAndAirSupply(Oxygen_percentage);
    1694:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    1698:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    169c:	0e 94 2e 0a 	call	0x145c	; 0x145c <startOxygenAndAirSupply>
    16a0:	70 cf       	rjmp	.-288    	; 0x1582 <main+0xbc>
                    }else{
                        startAirSupply();
    16a2:	0e 94 4e 0a 	call	0x149c	; 0x149c <startAirSupply>
    16a6:	6d cf       	rjmp	.-294    	; 0x1582 <main+0xbc>
                    }
                }
            }else{
                checkPatientTemp();
    16a8:	0e 94 74 05 	call	0xae8	; 0xae8 <checkPatientTemp>
                getParametersFromKnobs();
                startOxygenAndAirSupply(Oxygen_percentage);
    16ac:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    16b0:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    16b4:	0e 94 2e 0a 	call	0x145c	; 0x145c <startOxygenAndAirSupply>
    16b8:	64 cf       	rjmp	.-312    	; 0x1582 <main+0xbc>
            }
        }else{return 0;}
    }
}
    16ba:	80 e0       	ldi	r24, 0x00	; 0
    16bc:	90 e0       	ldi	r25, 0x00	; 0
    16be:	df 91       	pop	r29
    16c0:	cf 91       	pop	r28
    16c2:	1f 91       	pop	r17
    16c4:	0f 91       	pop	r16
    16c6:	ff 90       	pop	r15
    16c8:	ef 90       	pop	r14
    16ca:	08 95       	ret

000016cc <__vector_7>:
#include <avr/interrupt.h>

#include "millis.h"

ISR(TIMER1_COMPA_vect)
{
    16cc:	1f 92       	push	r1
    16ce:	0f 92       	push	r0
    16d0:	0f b6       	in	r0, 0x3f	; 63
    16d2:	0f 92       	push	r0
    16d4:	11 24       	eor	r1, r1
    16d6:	8f 93       	push	r24
    16d8:	9f 93       	push	r25
    16da:	af 93       	push	r26
    16dc:	bf 93       	push	r27
  timer1_millis++;
    16de:	80 91 c9 03 	lds	r24, 0x03C9	; 0x8003c9 <timer1_millis>
    16e2:	90 91 ca 03 	lds	r25, 0x03CA	; 0x8003ca <timer1_millis+0x1>
    16e6:	a0 91 cb 03 	lds	r26, 0x03CB	; 0x8003cb <timer1_millis+0x2>
    16ea:	b0 91 cc 03 	lds	r27, 0x03CC	; 0x8003cc <timer1_millis+0x3>
    16ee:	01 96       	adiw	r24, 0x01	; 1
    16f0:	a1 1d       	adc	r26, r1
    16f2:	b1 1d       	adc	r27, r1
    16f4:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <timer1_millis>
    16f8:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <timer1_millis+0x1>
    16fc:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <timer1_millis+0x2>
    1700:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <timer1_millis+0x3>
}
    1704:	bf 91       	pop	r27
    1706:	af 91       	pop	r26
    1708:	9f 91       	pop	r25
    170a:	8f 91       	pop	r24
    170c:	0f 90       	pop	r0
    170e:	0f be       	out	0x3f, r0	; 63
    1710:	0f 90       	pop	r0
    1712:	1f 90       	pop	r1
    1714:	18 95       	reti

00001716 <init_millis>:

void init_millis(unsigned long f_cpu)
{
  unsigned long ctc_match_overflow;

  ctc_match_overflow = ((f_cpu / 1000) / 8); //when timer1 is this value, 1ms has passed
    1716:	20 e4       	ldi	r18, 0x40	; 64
    1718:	3f e1       	ldi	r19, 0x1F	; 31
    171a:	40 e0       	ldi	r20, 0x00	; 0
    171c:	50 e0       	ldi	r21, 0x00	; 0
    171e:	0e 94 54 0e 	call	0x1ca8	; 0x1ca8 <__udivmodsi4>

  // (Set timer to clear when matching ctc_match_overflow) | (Set clock divisor to 8)
  TCCR1B |= (1 << WGM12) | (1 << CS11);
    1722:	8e b5       	in	r24, 0x2e	; 46
    1724:	8a 60       	ori	r24, 0x0A	; 10
    1726:	8e bd       	out	0x2e, r24	; 46

  // high byte first, then low byte
  OCR1AH = (ctc_match_overflow >> 8);
    1728:	bb 27       	eor	r27, r27
    172a:	a5 2f       	mov	r26, r21
    172c:	94 2f       	mov	r25, r20
    172e:	83 2f       	mov	r24, r19
    1730:	8b bd       	out	0x2b, r24	; 43
  OCR1AL = ctc_match_overflow;
    1732:	2a bd       	out	0x2a, r18	; 42

  // Enable the compare match interrupt
  TIMSK |= (1 << OCIE1A);
    1734:	89 b7       	in	r24, 0x39	; 57
    1736:	80 61       	ori	r24, 0x10	; 16
    1738:	89 bf       	out	0x39, r24	; 57
    173a:	08 95       	ret

0000173c <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    173c:	f8 94       	cli
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    173e:	21 e0       	ldi	r18, 0x01	; 1
    1740:	09 c0       	rjmp	.+18     	; 0x1754 <millis+0x18>
    millis_return = timer1_millis;
    1742:	60 91 c9 03 	lds	r22, 0x03C9	; 0x8003c9 <timer1_millis>
    1746:	70 91 ca 03 	lds	r23, 0x03CA	; 0x8003ca <timer1_millis+0x1>
    174a:	80 91 cb 03 	lds	r24, 0x03CB	; 0x8003cb <timer1_millis+0x2>
    174e:	90 91 cc 03 	lds	r25, 0x03CC	; 0x8003cc <timer1_millis+0x3>
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	21 11       	cpse	r18, r1
    1756:	f5 cf       	rjmp	.-22     	; 0x1742 <millis+0x6>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
    1758:	78 94       	sei
    millis_return = timer1_millis;
  }
  return millis_return;
}
    175a:	08 95       	ret

0000175c <__subsf3>:
    175c:	50 58       	subi	r21, 0x80	; 128

0000175e <__addsf3>:
    175e:	bb 27       	eor	r27, r27
    1760:	aa 27       	eor	r26, r26
    1762:	0e 94 c6 0b 	call	0x178c	; 0x178c <__addsf3x>
    1766:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_round>
    176a:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <__fp_pscA>
    176e:	38 f0       	brcs	.+14     	; 0x177e <__addsf3+0x20>
    1770:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__fp_pscB>
    1774:	20 f0       	brcs	.+8      	; 0x177e <__addsf3+0x20>
    1776:	39 f4       	brne	.+14     	; 0x1786 <__addsf3+0x28>
    1778:	9f 3f       	cpi	r25, 0xFF	; 255
    177a:	19 f4       	brne	.+6      	; 0x1782 <__addsf3+0x24>
    177c:	26 f4       	brtc	.+8      	; 0x1786 <__addsf3+0x28>
    177e:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_nan>
    1782:	0e f4       	brtc	.+2      	; 0x1786 <__addsf3+0x28>
    1784:	e0 95       	com	r30
    1786:	e7 fb       	bst	r30, 7
    1788:	0c 94 22 0d 	jmp	0x1a44	; 0x1a44 <__fp_inf>

0000178c <__addsf3x>:
    178c:	e9 2f       	mov	r30, r25
    178e:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <__fp_split3>
    1792:	58 f3       	brcs	.-42     	; 0x176a <__addsf3+0xc>
    1794:	ba 17       	cp	r27, r26
    1796:	62 07       	cpc	r22, r18
    1798:	73 07       	cpc	r23, r19
    179a:	84 07       	cpc	r24, r20
    179c:	95 07       	cpc	r25, r21
    179e:	20 f0       	brcs	.+8      	; 0x17a8 <__addsf3x+0x1c>
    17a0:	79 f4       	brne	.+30     	; 0x17c0 <__addsf3x+0x34>
    17a2:	a6 f5       	brtc	.+104    	; 0x180c <__addsf3x+0x80>
    17a4:	0c 94 6c 0d 	jmp	0x1ad8	; 0x1ad8 <__fp_zero>
    17a8:	0e f4       	brtc	.+2      	; 0x17ac <__addsf3x+0x20>
    17aa:	e0 95       	com	r30
    17ac:	0b 2e       	mov	r0, r27
    17ae:	ba 2f       	mov	r27, r26
    17b0:	a0 2d       	mov	r26, r0
    17b2:	0b 01       	movw	r0, r22
    17b4:	b9 01       	movw	r22, r18
    17b6:	90 01       	movw	r18, r0
    17b8:	0c 01       	movw	r0, r24
    17ba:	ca 01       	movw	r24, r20
    17bc:	a0 01       	movw	r20, r0
    17be:	11 24       	eor	r1, r1
    17c0:	ff 27       	eor	r31, r31
    17c2:	59 1b       	sub	r21, r25
    17c4:	99 f0       	breq	.+38     	; 0x17ec <__addsf3x+0x60>
    17c6:	59 3f       	cpi	r21, 0xF9	; 249
    17c8:	50 f4       	brcc	.+20     	; 0x17de <__addsf3x+0x52>
    17ca:	50 3e       	cpi	r21, 0xE0	; 224
    17cc:	68 f1       	brcs	.+90     	; 0x1828 <__addsf3x+0x9c>
    17ce:	1a 16       	cp	r1, r26
    17d0:	f0 40       	sbci	r31, 0x00	; 0
    17d2:	a2 2f       	mov	r26, r18
    17d4:	23 2f       	mov	r18, r19
    17d6:	34 2f       	mov	r19, r20
    17d8:	44 27       	eor	r20, r20
    17da:	58 5f       	subi	r21, 0xF8	; 248
    17dc:	f3 cf       	rjmp	.-26     	; 0x17c4 <__addsf3x+0x38>
    17de:	46 95       	lsr	r20
    17e0:	37 95       	ror	r19
    17e2:	27 95       	ror	r18
    17e4:	a7 95       	ror	r26
    17e6:	f0 40       	sbci	r31, 0x00	; 0
    17e8:	53 95       	inc	r21
    17ea:	c9 f7       	brne	.-14     	; 0x17de <__addsf3x+0x52>
    17ec:	7e f4       	brtc	.+30     	; 0x180c <__addsf3x+0x80>
    17ee:	1f 16       	cp	r1, r31
    17f0:	ba 0b       	sbc	r27, r26
    17f2:	62 0b       	sbc	r22, r18
    17f4:	73 0b       	sbc	r23, r19
    17f6:	84 0b       	sbc	r24, r20
    17f8:	ba f0       	brmi	.+46     	; 0x1828 <__addsf3x+0x9c>
    17fa:	91 50       	subi	r25, 0x01	; 1
    17fc:	a1 f0       	breq	.+40     	; 0x1826 <__addsf3x+0x9a>
    17fe:	ff 0f       	add	r31, r31
    1800:	bb 1f       	adc	r27, r27
    1802:	66 1f       	adc	r22, r22
    1804:	77 1f       	adc	r23, r23
    1806:	88 1f       	adc	r24, r24
    1808:	c2 f7       	brpl	.-16     	; 0x17fa <__addsf3x+0x6e>
    180a:	0e c0       	rjmp	.+28     	; 0x1828 <__addsf3x+0x9c>
    180c:	ba 0f       	add	r27, r26
    180e:	62 1f       	adc	r22, r18
    1810:	73 1f       	adc	r23, r19
    1812:	84 1f       	adc	r24, r20
    1814:	48 f4       	brcc	.+18     	; 0x1828 <__addsf3x+0x9c>
    1816:	87 95       	ror	r24
    1818:	77 95       	ror	r23
    181a:	67 95       	ror	r22
    181c:	b7 95       	ror	r27
    181e:	f7 95       	ror	r31
    1820:	9e 3f       	cpi	r25, 0xFE	; 254
    1822:	08 f0       	brcs	.+2      	; 0x1826 <__addsf3x+0x9a>
    1824:	b0 cf       	rjmp	.-160    	; 0x1786 <__addsf3+0x28>
    1826:	93 95       	inc	r25
    1828:	88 0f       	add	r24, r24
    182a:	08 f0       	brcs	.+2      	; 0x182e <__addsf3x+0xa2>
    182c:	99 27       	eor	r25, r25
    182e:	ee 0f       	add	r30, r30
    1830:	97 95       	ror	r25
    1832:	87 95       	ror	r24
    1834:	08 95       	ret

00001836 <__cmpsf2>:
    1836:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fp_cmp>
    183a:	08 f4       	brcc	.+2      	; 0x183e <__cmpsf2+0x8>
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	08 95       	ret

00001840 <__divsf3>:
    1840:	0e 94 34 0c 	call	0x1868	; 0x1868 <__divsf3x>
    1844:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_round>
    1848:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__fp_pscB>
    184c:	58 f0       	brcs	.+22     	; 0x1864 <__divsf3+0x24>
    184e:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <__fp_pscA>
    1852:	40 f0       	brcs	.+16     	; 0x1864 <__divsf3+0x24>
    1854:	29 f4       	brne	.+10     	; 0x1860 <__divsf3+0x20>
    1856:	5f 3f       	cpi	r21, 0xFF	; 255
    1858:	29 f0       	breq	.+10     	; 0x1864 <__divsf3+0x24>
    185a:	0c 94 22 0d 	jmp	0x1a44	; 0x1a44 <__fp_inf>
    185e:	51 11       	cpse	r21, r1
    1860:	0c 94 6d 0d 	jmp	0x1ada	; 0x1ada <__fp_szero>
    1864:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_nan>

00001868 <__divsf3x>:
    1868:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <__fp_split3>
    186c:	68 f3       	brcs	.-38     	; 0x1848 <__divsf3+0x8>

0000186e <__divsf3_pse>:
    186e:	99 23       	and	r25, r25
    1870:	b1 f3       	breq	.-20     	; 0x185e <__divsf3+0x1e>
    1872:	55 23       	and	r21, r21
    1874:	91 f3       	breq	.-28     	; 0x185a <__divsf3+0x1a>
    1876:	95 1b       	sub	r25, r21
    1878:	55 0b       	sbc	r21, r21
    187a:	bb 27       	eor	r27, r27
    187c:	aa 27       	eor	r26, r26
    187e:	62 17       	cp	r22, r18
    1880:	73 07       	cpc	r23, r19
    1882:	84 07       	cpc	r24, r20
    1884:	38 f0       	brcs	.+14     	; 0x1894 <__divsf3_pse+0x26>
    1886:	9f 5f       	subi	r25, 0xFF	; 255
    1888:	5f 4f       	sbci	r21, 0xFF	; 255
    188a:	22 0f       	add	r18, r18
    188c:	33 1f       	adc	r19, r19
    188e:	44 1f       	adc	r20, r20
    1890:	aa 1f       	adc	r26, r26
    1892:	a9 f3       	breq	.-22     	; 0x187e <__divsf3_pse+0x10>
    1894:	35 d0       	rcall	.+106    	; 0x1900 <__divsf3_pse+0x92>
    1896:	0e 2e       	mov	r0, r30
    1898:	3a f0       	brmi	.+14     	; 0x18a8 <__divsf3_pse+0x3a>
    189a:	e0 e8       	ldi	r30, 0x80	; 128
    189c:	32 d0       	rcall	.+100    	; 0x1902 <__divsf3_pse+0x94>
    189e:	91 50       	subi	r25, 0x01	; 1
    18a0:	50 40       	sbci	r21, 0x00	; 0
    18a2:	e6 95       	lsr	r30
    18a4:	00 1c       	adc	r0, r0
    18a6:	ca f7       	brpl	.-14     	; 0x189a <__divsf3_pse+0x2c>
    18a8:	2b d0       	rcall	.+86     	; 0x1900 <__divsf3_pse+0x92>
    18aa:	fe 2f       	mov	r31, r30
    18ac:	29 d0       	rcall	.+82     	; 0x1900 <__divsf3_pse+0x92>
    18ae:	66 0f       	add	r22, r22
    18b0:	77 1f       	adc	r23, r23
    18b2:	88 1f       	adc	r24, r24
    18b4:	bb 1f       	adc	r27, r27
    18b6:	26 17       	cp	r18, r22
    18b8:	37 07       	cpc	r19, r23
    18ba:	48 07       	cpc	r20, r24
    18bc:	ab 07       	cpc	r26, r27
    18be:	b0 e8       	ldi	r27, 0x80	; 128
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <__divsf3_pse+0x56>
    18c2:	bb 0b       	sbc	r27, r27
    18c4:	80 2d       	mov	r24, r0
    18c6:	bf 01       	movw	r22, r30
    18c8:	ff 27       	eor	r31, r31
    18ca:	93 58       	subi	r25, 0x83	; 131
    18cc:	5f 4f       	sbci	r21, 0xFF	; 255
    18ce:	3a f0       	brmi	.+14     	; 0x18de <__divsf3_pse+0x70>
    18d0:	9e 3f       	cpi	r25, 0xFE	; 254
    18d2:	51 05       	cpc	r21, r1
    18d4:	78 f0       	brcs	.+30     	; 0x18f4 <__divsf3_pse+0x86>
    18d6:	0c 94 22 0d 	jmp	0x1a44	; 0x1a44 <__fp_inf>
    18da:	0c 94 6d 0d 	jmp	0x1ada	; 0x1ada <__fp_szero>
    18de:	5f 3f       	cpi	r21, 0xFF	; 255
    18e0:	e4 f3       	brlt	.-8      	; 0x18da <__divsf3_pse+0x6c>
    18e2:	98 3e       	cpi	r25, 0xE8	; 232
    18e4:	d4 f3       	brlt	.-12     	; 0x18da <__divsf3_pse+0x6c>
    18e6:	86 95       	lsr	r24
    18e8:	77 95       	ror	r23
    18ea:	67 95       	ror	r22
    18ec:	b7 95       	ror	r27
    18ee:	f7 95       	ror	r31
    18f0:	9f 5f       	subi	r25, 0xFF	; 255
    18f2:	c9 f7       	brne	.-14     	; 0x18e6 <__divsf3_pse+0x78>
    18f4:	88 0f       	add	r24, r24
    18f6:	91 1d       	adc	r25, r1
    18f8:	96 95       	lsr	r25
    18fa:	87 95       	ror	r24
    18fc:	97 f9       	bld	r25, 7
    18fe:	08 95       	ret
    1900:	e1 e0       	ldi	r30, 0x01	; 1
    1902:	66 0f       	add	r22, r22
    1904:	77 1f       	adc	r23, r23
    1906:	88 1f       	adc	r24, r24
    1908:	bb 1f       	adc	r27, r27
    190a:	62 17       	cp	r22, r18
    190c:	73 07       	cpc	r23, r19
    190e:	84 07       	cpc	r24, r20
    1910:	ba 07       	cpc	r27, r26
    1912:	20 f0       	brcs	.+8      	; 0x191c <__divsf3_pse+0xae>
    1914:	62 1b       	sub	r22, r18
    1916:	73 0b       	sbc	r23, r19
    1918:	84 0b       	sbc	r24, r20
    191a:	ba 0b       	sbc	r27, r26
    191c:	ee 1f       	adc	r30, r30
    191e:	88 f7       	brcc	.-30     	; 0x1902 <__divsf3_pse+0x94>
    1920:	e0 95       	com	r30
    1922:	08 95       	ret

00001924 <__fixunssfsi>:
    1924:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__fp_splitA>
    1928:	88 f0       	brcs	.+34     	; 0x194c <__fixunssfsi+0x28>
    192a:	9f 57       	subi	r25, 0x7F	; 127
    192c:	98 f0       	brcs	.+38     	; 0x1954 <__fixunssfsi+0x30>
    192e:	b9 2f       	mov	r27, r25
    1930:	99 27       	eor	r25, r25
    1932:	b7 51       	subi	r27, 0x17	; 23
    1934:	b0 f0       	brcs	.+44     	; 0x1962 <__fixunssfsi+0x3e>
    1936:	e1 f0       	breq	.+56     	; 0x1970 <__fixunssfsi+0x4c>
    1938:	66 0f       	add	r22, r22
    193a:	77 1f       	adc	r23, r23
    193c:	88 1f       	adc	r24, r24
    193e:	99 1f       	adc	r25, r25
    1940:	1a f0       	brmi	.+6      	; 0x1948 <__fixunssfsi+0x24>
    1942:	ba 95       	dec	r27
    1944:	c9 f7       	brne	.-14     	; 0x1938 <__fixunssfsi+0x14>
    1946:	14 c0       	rjmp	.+40     	; 0x1970 <__fixunssfsi+0x4c>
    1948:	b1 30       	cpi	r27, 0x01	; 1
    194a:	91 f0       	breq	.+36     	; 0x1970 <__fixunssfsi+0x4c>
    194c:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <__fp_zero>
    1950:	b1 e0       	ldi	r27, 0x01	; 1
    1952:	08 95       	ret
    1954:	0c 94 6c 0d 	jmp	0x1ad8	; 0x1ad8 <__fp_zero>
    1958:	67 2f       	mov	r22, r23
    195a:	78 2f       	mov	r23, r24
    195c:	88 27       	eor	r24, r24
    195e:	b8 5f       	subi	r27, 0xF8	; 248
    1960:	39 f0       	breq	.+14     	; 0x1970 <__fixunssfsi+0x4c>
    1962:	b9 3f       	cpi	r27, 0xF9	; 249
    1964:	cc f3       	brlt	.-14     	; 0x1958 <__fixunssfsi+0x34>
    1966:	86 95       	lsr	r24
    1968:	77 95       	ror	r23
    196a:	67 95       	ror	r22
    196c:	b3 95       	inc	r27
    196e:	d9 f7       	brne	.-10     	; 0x1966 <__fixunssfsi+0x42>
    1970:	3e f4       	brtc	.+14     	; 0x1980 <__fixunssfsi+0x5c>
    1972:	90 95       	com	r25
    1974:	80 95       	com	r24
    1976:	70 95       	com	r23
    1978:	61 95       	neg	r22
    197a:	7f 4f       	sbci	r23, 0xFF	; 255
    197c:	8f 4f       	sbci	r24, 0xFF	; 255
    197e:	9f 4f       	sbci	r25, 0xFF	; 255
    1980:	08 95       	ret

00001982 <__floatunsisf>:
    1982:	e8 94       	clt
    1984:	09 c0       	rjmp	.+18     	; 0x1998 <__floatsisf+0x12>

00001986 <__floatsisf>:
    1986:	97 fb       	bst	r25, 7
    1988:	3e f4       	brtc	.+14     	; 0x1998 <__floatsisf+0x12>
    198a:	90 95       	com	r25
    198c:	80 95       	com	r24
    198e:	70 95       	com	r23
    1990:	61 95       	neg	r22
    1992:	7f 4f       	sbci	r23, 0xFF	; 255
    1994:	8f 4f       	sbci	r24, 0xFF	; 255
    1996:	9f 4f       	sbci	r25, 0xFF	; 255
    1998:	99 23       	and	r25, r25
    199a:	a9 f0       	breq	.+42     	; 0x19c6 <__floatsisf+0x40>
    199c:	f9 2f       	mov	r31, r25
    199e:	96 e9       	ldi	r25, 0x96	; 150
    19a0:	bb 27       	eor	r27, r27
    19a2:	93 95       	inc	r25
    19a4:	f6 95       	lsr	r31
    19a6:	87 95       	ror	r24
    19a8:	77 95       	ror	r23
    19aa:	67 95       	ror	r22
    19ac:	b7 95       	ror	r27
    19ae:	f1 11       	cpse	r31, r1
    19b0:	f8 cf       	rjmp	.-16     	; 0x19a2 <__floatsisf+0x1c>
    19b2:	fa f4       	brpl	.+62     	; 0x19f2 <__floatsisf+0x6c>
    19b4:	bb 0f       	add	r27, r27
    19b6:	11 f4       	brne	.+4      	; 0x19bc <__floatsisf+0x36>
    19b8:	60 ff       	sbrs	r22, 0
    19ba:	1b c0       	rjmp	.+54     	; 0x19f2 <__floatsisf+0x6c>
    19bc:	6f 5f       	subi	r22, 0xFF	; 255
    19be:	7f 4f       	sbci	r23, 0xFF	; 255
    19c0:	8f 4f       	sbci	r24, 0xFF	; 255
    19c2:	9f 4f       	sbci	r25, 0xFF	; 255
    19c4:	16 c0       	rjmp	.+44     	; 0x19f2 <__floatsisf+0x6c>
    19c6:	88 23       	and	r24, r24
    19c8:	11 f0       	breq	.+4      	; 0x19ce <__floatsisf+0x48>
    19ca:	96 e9       	ldi	r25, 0x96	; 150
    19cc:	11 c0       	rjmp	.+34     	; 0x19f0 <__floatsisf+0x6a>
    19ce:	77 23       	and	r23, r23
    19d0:	21 f0       	breq	.+8      	; 0x19da <__floatsisf+0x54>
    19d2:	9e e8       	ldi	r25, 0x8E	; 142
    19d4:	87 2f       	mov	r24, r23
    19d6:	76 2f       	mov	r23, r22
    19d8:	05 c0       	rjmp	.+10     	; 0x19e4 <__floatsisf+0x5e>
    19da:	66 23       	and	r22, r22
    19dc:	71 f0       	breq	.+28     	; 0x19fa <__floatsisf+0x74>
    19de:	96 e8       	ldi	r25, 0x86	; 134
    19e0:	86 2f       	mov	r24, r22
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	60 e0       	ldi	r22, 0x00	; 0
    19e6:	2a f0       	brmi	.+10     	; 0x19f2 <__floatsisf+0x6c>
    19e8:	9a 95       	dec	r25
    19ea:	66 0f       	add	r22, r22
    19ec:	77 1f       	adc	r23, r23
    19ee:	88 1f       	adc	r24, r24
    19f0:	da f7       	brpl	.-10     	; 0x19e8 <__floatsisf+0x62>
    19f2:	88 0f       	add	r24, r24
    19f4:	96 95       	lsr	r25
    19f6:	87 95       	ror	r24
    19f8:	97 f9       	bld	r25, 7
    19fa:	08 95       	ret

000019fc <__fp_cmp>:
    19fc:	99 0f       	add	r25, r25
    19fe:	00 08       	sbc	r0, r0
    1a00:	55 0f       	add	r21, r21
    1a02:	aa 0b       	sbc	r26, r26
    1a04:	e0 e8       	ldi	r30, 0x80	; 128
    1a06:	fe ef       	ldi	r31, 0xFE	; 254
    1a08:	16 16       	cp	r1, r22
    1a0a:	17 06       	cpc	r1, r23
    1a0c:	e8 07       	cpc	r30, r24
    1a0e:	f9 07       	cpc	r31, r25
    1a10:	c0 f0       	brcs	.+48     	; 0x1a42 <__fp_cmp+0x46>
    1a12:	12 16       	cp	r1, r18
    1a14:	13 06       	cpc	r1, r19
    1a16:	e4 07       	cpc	r30, r20
    1a18:	f5 07       	cpc	r31, r21
    1a1a:	98 f0       	brcs	.+38     	; 0x1a42 <__fp_cmp+0x46>
    1a1c:	62 1b       	sub	r22, r18
    1a1e:	73 0b       	sbc	r23, r19
    1a20:	84 0b       	sbc	r24, r20
    1a22:	95 0b       	sbc	r25, r21
    1a24:	39 f4       	brne	.+14     	; 0x1a34 <__fp_cmp+0x38>
    1a26:	0a 26       	eor	r0, r26
    1a28:	61 f0       	breq	.+24     	; 0x1a42 <__fp_cmp+0x46>
    1a2a:	23 2b       	or	r18, r19
    1a2c:	24 2b       	or	r18, r20
    1a2e:	25 2b       	or	r18, r21
    1a30:	21 f4       	brne	.+8      	; 0x1a3a <__fp_cmp+0x3e>
    1a32:	08 95       	ret
    1a34:	0a 26       	eor	r0, r26
    1a36:	09 f4       	brne	.+2      	; 0x1a3a <__fp_cmp+0x3e>
    1a38:	a1 40       	sbci	r26, 0x01	; 1
    1a3a:	a6 95       	lsr	r26
    1a3c:	8f ef       	ldi	r24, 0xFF	; 255
    1a3e:	81 1d       	adc	r24, r1
    1a40:	81 1d       	adc	r24, r1
    1a42:	08 95       	ret

00001a44 <__fp_inf>:
    1a44:	97 f9       	bld	r25, 7
    1a46:	9f 67       	ori	r25, 0x7F	; 127
    1a48:	80 e8       	ldi	r24, 0x80	; 128
    1a4a:	70 e0       	ldi	r23, 0x00	; 0
    1a4c:	60 e0       	ldi	r22, 0x00	; 0
    1a4e:	08 95       	ret

00001a50 <__fp_nan>:
    1a50:	9f ef       	ldi	r25, 0xFF	; 255
    1a52:	80 ec       	ldi	r24, 0xC0	; 192
    1a54:	08 95       	ret

00001a56 <__fp_pscA>:
    1a56:	00 24       	eor	r0, r0
    1a58:	0a 94       	dec	r0
    1a5a:	16 16       	cp	r1, r22
    1a5c:	17 06       	cpc	r1, r23
    1a5e:	18 06       	cpc	r1, r24
    1a60:	09 06       	cpc	r0, r25
    1a62:	08 95       	ret

00001a64 <__fp_pscB>:
    1a64:	00 24       	eor	r0, r0
    1a66:	0a 94       	dec	r0
    1a68:	12 16       	cp	r1, r18
    1a6a:	13 06       	cpc	r1, r19
    1a6c:	14 06       	cpc	r1, r20
    1a6e:	05 06       	cpc	r0, r21
    1a70:	08 95       	ret

00001a72 <__fp_round>:
    1a72:	09 2e       	mov	r0, r25
    1a74:	03 94       	inc	r0
    1a76:	00 0c       	add	r0, r0
    1a78:	11 f4       	brne	.+4      	; 0x1a7e <__fp_round+0xc>
    1a7a:	88 23       	and	r24, r24
    1a7c:	52 f0       	brmi	.+20     	; 0x1a92 <__fp_round+0x20>
    1a7e:	bb 0f       	add	r27, r27
    1a80:	40 f4       	brcc	.+16     	; 0x1a92 <__fp_round+0x20>
    1a82:	bf 2b       	or	r27, r31
    1a84:	11 f4       	brne	.+4      	; 0x1a8a <__fp_round+0x18>
    1a86:	60 ff       	sbrs	r22, 0
    1a88:	04 c0       	rjmp	.+8      	; 0x1a92 <__fp_round+0x20>
    1a8a:	6f 5f       	subi	r22, 0xFF	; 255
    1a8c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a8e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a90:	9f 4f       	sbci	r25, 0xFF	; 255
    1a92:	08 95       	ret

00001a94 <__fp_split3>:
    1a94:	57 fd       	sbrc	r21, 7
    1a96:	90 58       	subi	r25, 0x80	; 128
    1a98:	44 0f       	add	r20, r20
    1a9a:	55 1f       	adc	r21, r21
    1a9c:	59 f0       	breq	.+22     	; 0x1ab4 <__fp_splitA+0x10>
    1a9e:	5f 3f       	cpi	r21, 0xFF	; 255
    1aa0:	71 f0       	breq	.+28     	; 0x1abe <__fp_splitA+0x1a>
    1aa2:	47 95       	ror	r20

00001aa4 <__fp_splitA>:
    1aa4:	88 0f       	add	r24, r24
    1aa6:	97 fb       	bst	r25, 7
    1aa8:	99 1f       	adc	r25, r25
    1aaa:	61 f0       	breq	.+24     	; 0x1ac4 <__fp_splitA+0x20>
    1aac:	9f 3f       	cpi	r25, 0xFF	; 255
    1aae:	79 f0       	breq	.+30     	; 0x1ace <__fp_splitA+0x2a>
    1ab0:	87 95       	ror	r24
    1ab2:	08 95       	ret
    1ab4:	12 16       	cp	r1, r18
    1ab6:	13 06       	cpc	r1, r19
    1ab8:	14 06       	cpc	r1, r20
    1aba:	55 1f       	adc	r21, r21
    1abc:	f2 cf       	rjmp	.-28     	; 0x1aa2 <__fp_split3+0xe>
    1abe:	46 95       	lsr	r20
    1ac0:	f1 df       	rcall	.-30     	; 0x1aa4 <__fp_splitA>
    1ac2:	08 c0       	rjmp	.+16     	; 0x1ad4 <__fp_splitA+0x30>
    1ac4:	16 16       	cp	r1, r22
    1ac6:	17 06       	cpc	r1, r23
    1ac8:	18 06       	cpc	r1, r24
    1aca:	99 1f       	adc	r25, r25
    1acc:	f1 cf       	rjmp	.-30     	; 0x1ab0 <__fp_splitA+0xc>
    1ace:	86 95       	lsr	r24
    1ad0:	71 05       	cpc	r23, r1
    1ad2:	61 05       	cpc	r22, r1
    1ad4:	08 94       	sec
    1ad6:	08 95       	ret

00001ad8 <__fp_zero>:
    1ad8:	e8 94       	clt

00001ada <__fp_szero>:
    1ada:	bb 27       	eor	r27, r27
    1adc:	66 27       	eor	r22, r22
    1ade:	77 27       	eor	r23, r23
    1ae0:	cb 01       	movw	r24, r22
    1ae2:	97 f9       	bld	r25, 7
    1ae4:	08 95       	ret

00001ae6 <__gesf2>:
    1ae6:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fp_cmp>
    1aea:	08 f4       	brcc	.+2      	; 0x1aee <__gesf2+0x8>
    1aec:	8f ef       	ldi	r24, 0xFF	; 255
    1aee:	08 95       	ret

00001af0 <__mulsf3>:
    1af0:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <__mulsf3x>
    1af4:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__fp_round>
    1af8:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <__fp_pscA>
    1afc:	38 f0       	brcs	.+14     	; 0x1b0c <__mulsf3+0x1c>
    1afe:	0e 94 32 0d 	call	0x1a64	; 0x1a64 <__fp_pscB>
    1b02:	20 f0       	brcs	.+8      	; 0x1b0c <__mulsf3+0x1c>
    1b04:	95 23       	and	r25, r21
    1b06:	11 f0       	breq	.+4      	; 0x1b0c <__mulsf3+0x1c>
    1b08:	0c 94 22 0d 	jmp	0x1a44	; 0x1a44 <__fp_inf>
    1b0c:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_nan>
    1b10:	11 24       	eor	r1, r1
    1b12:	0c 94 6d 0d 	jmp	0x1ada	; 0x1ada <__fp_szero>

00001b16 <__mulsf3x>:
    1b16:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <__fp_split3>
    1b1a:	70 f3       	brcs	.-36     	; 0x1af8 <__mulsf3+0x8>

00001b1c <__mulsf3_pse>:
    1b1c:	95 9f       	mul	r25, r21
    1b1e:	c1 f3       	breq	.-16     	; 0x1b10 <__mulsf3+0x20>
    1b20:	95 0f       	add	r25, r21
    1b22:	50 e0       	ldi	r21, 0x00	; 0
    1b24:	55 1f       	adc	r21, r21
    1b26:	62 9f       	mul	r22, r18
    1b28:	f0 01       	movw	r30, r0
    1b2a:	72 9f       	mul	r23, r18
    1b2c:	bb 27       	eor	r27, r27
    1b2e:	f0 0d       	add	r31, r0
    1b30:	b1 1d       	adc	r27, r1
    1b32:	63 9f       	mul	r22, r19
    1b34:	aa 27       	eor	r26, r26
    1b36:	f0 0d       	add	r31, r0
    1b38:	b1 1d       	adc	r27, r1
    1b3a:	aa 1f       	adc	r26, r26
    1b3c:	64 9f       	mul	r22, r20
    1b3e:	66 27       	eor	r22, r22
    1b40:	b0 0d       	add	r27, r0
    1b42:	a1 1d       	adc	r26, r1
    1b44:	66 1f       	adc	r22, r22
    1b46:	82 9f       	mul	r24, r18
    1b48:	22 27       	eor	r18, r18
    1b4a:	b0 0d       	add	r27, r0
    1b4c:	a1 1d       	adc	r26, r1
    1b4e:	62 1f       	adc	r22, r18
    1b50:	73 9f       	mul	r23, r19
    1b52:	b0 0d       	add	r27, r0
    1b54:	a1 1d       	adc	r26, r1
    1b56:	62 1f       	adc	r22, r18
    1b58:	83 9f       	mul	r24, r19
    1b5a:	a0 0d       	add	r26, r0
    1b5c:	61 1d       	adc	r22, r1
    1b5e:	22 1f       	adc	r18, r18
    1b60:	74 9f       	mul	r23, r20
    1b62:	33 27       	eor	r19, r19
    1b64:	a0 0d       	add	r26, r0
    1b66:	61 1d       	adc	r22, r1
    1b68:	23 1f       	adc	r18, r19
    1b6a:	84 9f       	mul	r24, r20
    1b6c:	60 0d       	add	r22, r0
    1b6e:	21 1d       	adc	r18, r1
    1b70:	82 2f       	mov	r24, r18
    1b72:	76 2f       	mov	r23, r22
    1b74:	6a 2f       	mov	r22, r26
    1b76:	11 24       	eor	r1, r1
    1b78:	9f 57       	subi	r25, 0x7F	; 127
    1b7a:	50 40       	sbci	r21, 0x00	; 0
    1b7c:	9a f0       	brmi	.+38     	; 0x1ba4 <__mulsf3_pse+0x88>
    1b7e:	f1 f0       	breq	.+60     	; 0x1bbc <__mulsf3_pse+0xa0>
    1b80:	88 23       	and	r24, r24
    1b82:	4a f0       	brmi	.+18     	; 0x1b96 <__mulsf3_pse+0x7a>
    1b84:	ee 0f       	add	r30, r30
    1b86:	ff 1f       	adc	r31, r31
    1b88:	bb 1f       	adc	r27, r27
    1b8a:	66 1f       	adc	r22, r22
    1b8c:	77 1f       	adc	r23, r23
    1b8e:	88 1f       	adc	r24, r24
    1b90:	91 50       	subi	r25, 0x01	; 1
    1b92:	50 40       	sbci	r21, 0x00	; 0
    1b94:	a9 f7       	brne	.-22     	; 0x1b80 <__mulsf3_pse+0x64>
    1b96:	9e 3f       	cpi	r25, 0xFE	; 254
    1b98:	51 05       	cpc	r21, r1
    1b9a:	80 f0       	brcs	.+32     	; 0x1bbc <__mulsf3_pse+0xa0>
    1b9c:	0c 94 22 0d 	jmp	0x1a44	; 0x1a44 <__fp_inf>
    1ba0:	0c 94 6d 0d 	jmp	0x1ada	; 0x1ada <__fp_szero>
    1ba4:	5f 3f       	cpi	r21, 0xFF	; 255
    1ba6:	e4 f3       	brlt	.-8      	; 0x1ba0 <__mulsf3_pse+0x84>
    1ba8:	98 3e       	cpi	r25, 0xE8	; 232
    1baa:	d4 f3       	brlt	.-12     	; 0x1ba0 <__mulsf3_pse+0x84>
    1bac:	86 95       	lsr	r24
    1bae:	77 95       	ror	r23
    1bb0:	67 95       	ror	r22
    1bb2:	b7 95       	ror	r27
    1bb4:	f7 95       	ror	r31
    1bb6:	e7 95       	ror	r30
    1bb8:	9f 5f       	subi	r25, 0xFF	; 255
    1bba:	c1 f7       	brne	.-16     	; 0x1bac <__mulsf3_pse+0x90>
    1bbc:	fe 2b       	or	r31, r30
    1bbe:	88 0f       	add	r24, r24
    1bc0:	91 1d       	adc	r25, r1
    1bc2:	96 95       	lsr	r25
    1bc4:	87 95       	ror	r24
    1bc6:	97 f9       	bld	r25, 7
    1bc8:	08 95       	ret
    1bca:	19 f4       	brne	.+6      	; 0x1bd2 <__mulsf3_pse+0xb6>
    1bcc:	16 f4       	brtc	.+4      	; 0x1bd2 <__mulsf3_pse+0xb6>
    1bce:	0c 94 28 0d 	jmp	0x1a50	; 0x1a50 <__fp_nan>
    1bd2:	0c 94 2b 0e 	jmp	0x1c56	; 0x1c56 <__fp_mpack>

00001bd6 <sqrt>:
    1bd6:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__fp_splitA>
    1bda:	b8 f3       	brcs	.-18     	; 0x1bca <__mulsf3_pse+0xae>
    1bdc:	99 23       	and	r25, r25
    1bde:	c9 f3       	breq	.-14     	; 0x1bd2 <__mulsf3_pse+0xb6>
    1be0:	b6 f3       	brts	.-20     	; 0x1bce <__mulsf3_pse+0xb2>
    1be2:	9f 57       	subi	r25, 0x7F	; 127
    1be4:	55 0b       	sbc	r21, r21
    1be6:	87 ff       	sbrs	r24, 7
    1be8:	0e 94 39 0e 	call	0x1c72	; 0x1c72 <__fp_norm2>
    1bec:	00 24       	eor	r0, r0
    1bee:	a0 e6       	ldi	r26, 0x60	; 96
    1bf0:	40 ea       	ldi	r20, 0xA0	; 160
    1bf2:	90 01       	movw	r18, r0
    1bf4:	80 58       	subi	r24, 0x80	; 128
    1bf6:	56 95       	lsr	r21
    1bf8:	97 95       	ror	r25
    1bfa:	28 f4       	brcc	.+10     	; 0x1c06 <sqrt+0x30>
    1bfc:	80 5c       	subi	r24, 0xC0	; 192
    1bfe:	66 0f       	add	r22, r22
    1c00:	77 1f       	adc	r23, r23
    1c02:	88 1f       	adc	r24, r24
    1c04:	20 f0       	brcs	.+8      	; 0x1c0e <sqrt+0x38>
    1c06:	26 17       	cp	r18, r22
    1c08:	37 07       	cpc	r19, r23
    1c0a:	48 07       	cpc	r20, r24
    1c0c:	30 f4       	brcc	.+12     	; 0x1c1a <sqrt+0x44>
    1c0e:	62 1b       	sub	r22, r18
    1c10:	73 0b       	sbc	r23, r19
    1c12:	84 0b       	sbc	r24, r20
    1c14:	20 29       	or	r18, r0
    1c16:	31 29       	or	r19, r1
    1c18:	4a 2b       	or	r20, r26
    1c1a:	a6 95       	lsr	r26
    1c1c:	17 94       	ror	r1
    1c1e:	07 94       	ror	r0
    1c20:	20 25       	eor	r18, r0
    1c22:	31 25       	eor	r19, r1
    1c24:	4a 27       	eor	r20, r26
    1c26:	58 f7       	brcc	.-42     	; 0x1bfe <sqrt+0x28>
    1c28:	66 0f       	add	r22, r22
    1c2a:	77 1f       	adc	r23, r23
    1c2c:	88 1f       	adc	r24, r24
    1c2e:	20 f0       	brcs	.+8      	; 0x1c38 <sqrt+0x62>
    1c30:	26 17       	cp	r18, r22
    1c32:	37 07       	cpc	r19, r23
    1c34:	48 07       	cpc	r20, r24
    1c36:	30 f4       	brcc	.+12     	; 0x1c44 <sqrt+0x6e>
    1c38:	62 0b       	sbc	r22, r18
    1c3a:	73 0b       	sbc	r23, r19
    1c3c:	84 0b       	sbc	r24, r20
    1c3e:	20 0d       	add	r18, r0
    1c40:	31 1d       	adc	r19, r1
    1c42:	41 1d       	adc	r20, r1
    1c44:	a0 95       	com	r26
    1c46:	81 f7       	brne	.-32     	; 0x1c28 <sqrt+0x52>
    1c48:	b9 01       	movw	r22, r18
    1c4a:	84 2f       	mov	r24, r20
    1c4c:	91 58       	subi	r25, 0x81	; 129
    1c4e:	88 0f       	add	r24, r24
    1c50:	96 95       	lsr	r25
    1c52:	87 95       	ror	r24
    1c54:	08 95       	ret

00001c56 <__fp_mpack>:
    1c56:	9f 3f       	cpi	r25, 0xFF	; 255
    1c58:	31 f0       	breq	.+12     	; 0x1c66 <__fp_mpack_finite+0xc>

00001c5a <__fp_mpack_finite>:
    1c5a:	91 50       	subi	r25, 0x01	; 1
    1c5c:	20 f4       	brcc	.+8      	; 0x1c66 <__fp_mpack_finite+0xc>
    1c5e:	87 95       	ror	r24
    1c60:	77 95       	ror	r23
    1c62:	67 95       	ror	r22
    1c64:	b7 95       	ror	r27
    1c66:	88 0f       	add	r24, r24
    1c68:	91 1d       	adc	r25, r1
    1c6a:	96 95       	lsr	r25
    1c6c:	87 95       	ror	r24
    1c6e:	97 f9       	bld	r25, 7
    1c70:	08 95       	ret

00001c72 <__fp_norm2>:
    1c72:	91 50       	subi	r25, 0x01	; 1
    1c74:	50 40       	sbci	r21, 0x00	; 0
    1c76:	66 0f       	add	r22, r22
    1c78:	77 1f       	adc	r23, r23
    1c7a:	88 1f       	adc	r24, r24
    1c7c:	d2 f7       	brpl	.-12     	; 0x1c72 <__fp_norm2>
    1c7e:	08 95       	ret

00001c80 <__divmodhi4>:
    1c80:	97 fb       	bst	r25, 7
    1c82:	07 2e       	mov	r0, r23
    1c84:	16 f4       	brtc	.+4      	; 0x1c8a <__divmodhi4+0xa>
    1c86:	00 94       	com	r0
    1c88:	07 d0       	rcall	.+14     	; 0x1c98 <__divmodhi4_neg1>
    1c8a:	77 fd       	sbrc	r23, 7
    1c8c:	09 d0       	rcall	.+18     	; 0x1ca0 <__divmodhi4_neg2>
    1c8e:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__udivmodhi4>
    1c92:	07 fc       	sbrc	r0, 7
    1c94:	05 d0       	rcall	.+10     	; 0x1ca0 <__divmodhi4_neg2>
    1c96:	3e f4       	brtc	.+14     	; 0x1ca6 <__divmodhi4_exit>

00001c98 <__divmodhi4_neg1>:
    1c98:	90 95       	com	r25
    1c9a:	81 95       	neg	r24
    1c9c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c9e:	08 95       	ret

00001ca0 <__divmodhi4_neg2>:
    1ca0:	70 95       	com	r23
    1ca2:	61 95       	neg	r22
    1ca4:	7f 4f       	sbci	r23, 0xFF	; 255

00001ca6 <__divmodhi4_exit>:
    1ca6:	08 95       	ret

00001ca8 <__udivmodsi4>:
    1ca8:	a1 e2       	ldi	r26, 0x21	; 33
    1caa:	1a 2e       	mov	r1, r26
    1cac:	aa 1b       	sub	r26, r26
    1cae:	bb 1b       	sub	r27, r27
    1cb0:	fd 01       	movw	r30, r26
    1cb2:	0d c0       	rjmp	.+26     	; 0x1cce <__udivmodsi4_ep>

00001cb4 <__udivmodsi4_loop>:
    1cb4:	aa 1f       	adc	r26, r26
    1cb6:	bb 1f       	adc	r27, r27
    1cb8:	ee 1f       	adc	r30, r30
    1cba:	ff 1f       	adc	r31, r31
    1cbc:	a2 17       	cp	r26, r18
    1cbe:	b3 07       	cpc	r27, r19
    1cc0:	e4 07       	cpc	r30, r20
    1cc2:	f5 07       	cpc	r31, r21
    1cc4:	20 f0       	brcs	.+8      	; 0x1cce <__udivmodsi4_ep>
    1cc6:	a2 1b       	sub	r26, r18
    1cc8:	b3 0b       	sbc	r27, r19
    1cca:	e4 0b       	sbc	r30, r20
    1ccc:	f5 0b       	sbc	r31, r21

00001cce <__udivmodsi4_ep>:
    1cce:	66 1f       	adc	r22, r22
    1cd0:	77 1f       	adc	r23, r23
    1cd2:	88 1f       	adc	r24, r24
    1cd4:	99 1f       	adc	r25, r25
    1cd6:	1a 94       	dec	r1
    1cd8:	69 f7       	brne	.-38     	; 0x1cb4 <__udivmodsi4_loop>
    1cda:	60 95       	com	r22
    1cdc:	70 95       	com	r23
    1cde:	80 95       	com	r24
    1ce0:	90 95       	com	r25
    1ce2:	9b 01       	movw	r18, r22
    1ce4:	ac 01       	movw	r20, r24
    1ce6:	bd 01       	movw	r22, r26
    1ce8:	cf 01       	movw	r24, r30
    1cea:	08 95       	ret

00001cec <__tablejump2__>:
    1cec:	ee 0f       	add	r30, r30
    1cee:	ff 1f       	adc	r31, r31
    1cf0:	05 90       	lpm	r0, Z+
    1cf2:	f4 91       	lpm	r31, Z
    1cf4:	e0 2d       	mov	r30, r0
    1cf6:	09 94       	ijmp

00001cf8 <__udivmodhi4>:
    1cf8:	aa 1b       	sub	r26, r26
    1cfa:	bb 1b       	sub	r27, r27
    1cfc:	51 e1       	ldi	r21, 0x11	; 17
    1cfe:	07 c0       	rjmp	.+14     	; 0x1d0e <__udivmodhi4_ep>

00001d00 <__udivmodhi4_loop>:
    1d00:	aa 1f       	adc	r26, r26
    1d02:	bb 1f       	adc	r27, r27
    1d04:	a6 17       	cp	r26, r22
    1d06:	b7 07       	cpc	r27, r23
    1d08:	10 f0       	brcs	.+4      	; 0x1d0e <__udivmodhi4_ep>
    1d0a:	a6 1b       	sub	r26, r22
    1d0c:	b7 0b       	sbc	r27, r23

00001d0e <__udivmodhi4_ep>:
    1d0e:	88 1f       	adc	r24, r24
    1d10:	99 1f       	adc	r25, r25
    1d12:	5a 95       	dec	r21
    1d14:	a9 f7       	brne	.-22     	; 0x1d00 <__udivmodhi4_loop>
    1d16:	80 95       	com	r24
    1d18:	90 95       	com	r25
    1d1a:	bc 01       	movw	r22, r24
    1d1c:	cd 01       	movw	r24, r26
    1d1e:	08 95       	ret

00001d20 <malloc>:
    1d20:	0f 93       	push	r16
    1d22:	1f 93       	push	r17
    1d24:	cf 93       	push	r28
    1d26:	df 93       	push	r29
    1d28:	82 30       	cpi	r24, 0x02	; 2
    1d2a:	91 05       	cpc	r25, r1
    1d2c:	10 f4       	brcc	.+4      	; 0x1d32 <malloc+0x12>
    1d2e:	82 e0       	ldi	r24, 0x02	; 2
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	e0 91 79 04 	lds	r30, 0x0479	; 0x800479 <__flp>
    1d36:	f0 91 7a 04 	lds	r31, 0x047A	; 0x80047a <__flp+0x1>
    1d3a:	20 e0       	ldi	r18, 0x00	; 0
    1d3c:	30 e0       	ldi	r19, 0x00	; 0
    1d3e:	a0 e0       	ldi	r26, 0x00	; 0
    1d40:	b0 e0       	ldi	r27, 0x00	; 0
    1d42:	30 97       	sbiw	r30, 0x00	; 0
    1d44:	19 f1       	breq	.+70     	; 0x1d8c <malloc+0x6c>
    1d46:	40 81       	ld	r20, Z
    1d48:	51 81       	ldd	r21, Z+1	; 0x01
    1d4a:	02 81       	ldd	r16, Z+2	; 0x02
    1d4c:	13 81       	ldd	r17, Z+3	; 0x03
    1d4e:	48 17       	cp	r20, r24
    1d50:	59 07       	cpc	r21, r25
    1d52:	c8 f0       	brcs	.+50     	; 0x1d86 <malloc+0x66>
    1d54:	84 17       	cp	r24, r20
    1d56:	95 07       	cpc	r25, r21
    1d58:	69 f4       	brne	.+26     	; 0x1d74 <malloc+0x54>
    1d5a:	10 97       	sbiw	r26, 0x00	; 0
    1d5c:	31 f0       	breq	.+12     	; 0x1d6a <malloc+0x4a>
    1d5e:	12 96       	adiw	r26, 0x02	; 2
    1d60:	0c 93       	st	X, r16
    1d62:	12 97       	sbiw	r26, 0x02	; 2
    1d64:	13 96       	adiw	r26, 0x03	; 3
    1d66:	1c 93       	st	X, r17
    1d68:	27 c0       	rjmp	.+78     	; 0x1db8 <malloc+0x98>
    1d6a:	00 93 79 04 	sts	0x0479, r16	; 0x800479 <__flp>
    1d6e:	10 93 7a 04 	sts	0x047A, r17	; 0x80047a <__flp+0x1>
    1d72:	22 c0       	rjmp	.+68     	; 0x1db8 <malloc+0x98>
    1d74:	21 15       	cp	r18, r1
    1d76:	31 05       	cpc	r19, r1
    1d78:	19 f0       	breq	.+6      	; 0x1d80 <malloc+0x60>
    1d7a:	42 17       	cp	r20, r18
    1d7c:	53 07       	cpc	r21, r19
    1d7e:	18 f4       	brcc	.+6      	; 0x1d86 <malloc+0x66>
    1d80:	9a 01       	movw	r18, r20
    1d82:	bd 01       	movw	r22, r26
    1d84:	ef 01       	movw	r28, r30
    1d86:	df 01       	movw	r26, r30
    1d88:	f8 01       	movw	r30, r16
    1d8a:	db cf       	rjmp	.-74     	; 0x1d42 <malloc+0x22>
    1d8c:	21 15       	cp	r18, r1
    1d8e:	31 05       	cpc	r19, r1
    1d90:	f9 f0       	breq	.+62     	; 0x1dd0 <malloc+0xb0>
    1d92:	28 1b       	sub	r18, r24
    1d94:	39 0b       	sbc	r19, r25
    1d96:	24 30       	cpi	r18, 0x04	; 4
    1d98:	31 05       	cpc	r19, r1
    1d9a:	80 f4       	brcc	.+32     	; 0x1dbc <malloc+0x9c>
    1d9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1da0:	61 15       	cp	r22, r1
    1da2:	71 05       	cpc	r23, r1
    1da4:	21 f0       	breq	.+8      	; 0x1dae <malloc+0x8e>
    1da6:	fb 01       	movw	r30, r22
    1da8:	93 83       	std	Z+3, r25	; 0x03
    1daa:	82 83       	std	Z+2, r24	; 0x02
    1dac:	04 c0       	rjmp	.+8      	; 0x1db6 <malloc+0x96>
    1dae:	90 93 7a 04 	sts	0x047A, r25	; 0x80047a <__flp+0x1>
    1db2:	80 93 79 04 	sts	0x0479, r24	; 0x800479 <__flp>
    1db6:	fe 01       	movw	r30, r28
    1db8:	32 96       	adiw	r30, 0x02	; 2
    1dba:	44 c0       	rjmp	.+136    	; 0x1e44 <malloc+0x124>
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	e2 0f       	add	r30, r18
    1dc0:	f3 1f       	adc	r31, r19
    1dc2:	81 93       	st	Z+, r24
    1dc4:	91 93       	st	Z+, r25
    1dc6:	22 50       	subi	r18, 0x02	; 2
    1dc8:	31 09       	sbc	r19, r1
    1dca:	39 83       	std	Y+1, r19	; 0x01
    1dcc:	28 83       	st	Y, r18
    1dce:	3a c0       	rjmp	.+116    	; 0x1e44 <malloc+0x124>
    1dd0:	20 91 77 04 	lds	r18, 0x0477	; 0x800477 <__brkval>
    1dd4:	30 91 78 04 	lds	r19, 0x0478	; 0x800478 <__brkval+0x1>
    1dd8:	23 2b       	or	r18, r19
    1dda:	41 f4       	brne	.+16     	; 0x1dec <malloc+0xcc>
    1ddc:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    1de0:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    1de4:	30 93 78 04 	sts	0x0478, r19	; 0x800478 <__brkval+0x1>
    1de8:	20 93 77 04 	sts	0x0477, r18	; 0x800477 <__brkval>
    1dec:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1df0:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1df4:	21 15       	cp	r18, r1
    1df6:	31 05       	cpc	r19, r1
    1df8:	41 f4       	brne	.+16     	; 0x1e0a <malloc+0xea>
    1dfa:	2d b7       	in	r18, 0x3d	; 61
    1dfc:	3e b7       	in	r19, 0x3e	; 62
    1dfe:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    1e02:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    1e06:	24 1b       	sub	r18, r20
    1e08:	35 0b       	sbc	r19, r21
    1e0a:	e0 91 77 04 	lds	r30, 0x0477	; 0x800477 <__brkval>
    1e0e:	f0 91 78 04 	lds	r31, 0x0478	; 0x800478 <__brkval+0x1>
    1e12:	e2 17       	cp	r30, r18
    1e14:	f3 07       	cpc	r31, r19
    1e16:	a0 f4       	brcc	.+40     	; 0x1e40 <malloc+0x120>
    1e18:	2e 1b       	sub	r18, r30
    1e1a:	3f 0b       	sbc	r19, r31
    1e1c:	28 17       	cp	r18, r24
    1e1e:	39 07       	cpc	r19, r25
    1e20:	78 f0       	brcs	.+30     	; 0x1e40 <malloc+0x120>
    1e22:	ac 01       	movw	r20, r24
    1e24:	4e 5f       	subi	r20, 0xFE	; 254
    1e26:	5f 4f       	sbci	r21, 0xFF	; 255
    1e28:	24 17       	cp	r18, r20
    1e2a:	35 07       	cpc	r19, r21
    1e2c:	48 f0       	brcs	.+18     	; 0x1e40 <malloc+0x120>
    1e2e:	4e 0f       	add	r20, r30
    1e30:	5f 1f       	adc	r21, r31
    1e32:	50 93 78 04 	sts	0x0478, r21	; 0x800478 <__brkval+0x1>
    1e36:	40 93 77 04 	sts	0x0477, r20	; 0x800477 <__brkval>
    1e3a:	81 93       	st	Z+, r24
    1e3c:	91 93       	st	Z+, r25
    1e3e:	02 c0       	rjmp	.+4      	; 0x1e44 <malloc+0x124>
    1e40:	e0 e0       	ldi	r30, 0x00	; 0
    1e42:	f0 e0       	ldi	r31, 0x00	; 0
    1e44:	cf 01       	movw	r24, r30
    1e46:	df 91       	pop	r29
    1e48:	cf 91       	pop	r28
    1e4a:	1f 91       	pop	r17
    1e4c:	0f 91       	pop	r16
    1e4e:	08 95       	ret

00001e50 <free>:
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	00 97       	sbiw	r24, 0x00	; 0
    1e56:	09 f4       	brne	.+2      	; 0x1e5a <free+0xa>
    1e58:	81 c0       	rjmp	.+258    	; 0x1f5c <free+0x10c>
    1e5a:	fc 01       	movw	r30, r24
    1e5c:	32 97       	sbiw	r30, 0x02	; 2
    1e5e:	13 82       	std	Z+3, r1	; 0x03
    1e60:	12 82       	std	Z+2, r1	; 0x02
    1e62:	a0 91 79 04 	lds	r26, 0x0479	; 0x800479 <__flp>
    1e66:	b0 91 7a 04 	lds	r27, 0x047A	; 0x80047a <__flp+0x1>
    1e6a:	10 97       	sbiw	r26, 0x00	; 0
    1e6c:	81 f4       	brne	.+32     	; 0x1e8e <free+0x3e>
    1e6e:	20 81       	ld	r18, Z
    1e70:	31 81       	ldd	r19, Z+1	; 0x01
    1e72:	82 0f       	add	r24, r18
    1e74:	93 1f       	adc	r25, r19
    1e76:	20 91 77 04 	lds	r18, 0x0477	; 0x800477 <__brkval>
    1e7a:	30 91 78 04 	lds	r19, 0x0478	; 0x800478 <__brkval+0x1>
    1e7e:	28 17       	cp	r18, r24
    1e80:	39 07       	cpc	r19, r25
    1e82:	51 f5       	brne	.+84     	; 0x1ed8 <free+0x88>
    1e84:	f0 93 78 04 	sts	0x0478, r31	; 0x800478 <__brkval+0x1>
    1e88:	e0 93 77 04 	sts	0x0477, r30	; 0x800477 <__brkval>
    1e8c:	67 c0       	rjmp	.+206    	; 0x1f5c <free+0x10c>
    1e8e:	ed 01       	movw	r28, r26
    1e90:	20 e0       	ldi	r18, 0x00	; 0
    1e92:	30 e0       	ldi	r19, 0x00	; 0
    1e94:	ce 17       	cp	r28, r30
    1e96:	df 07       	cpc	r29, r31
    1e98:	40 f4       	brcc	.+16     	; 0x1eaa <free+0x5a>
    1e9a:	4a 81       	ldd	r20, Y+2	; 0x02
    1e9c:	5b 81       	ldd	r21, Y+3	; 0x03
    1e9e:	9e 01       	movw	r18, r28
    1ea0:	41 15       	cp	r20, r1
    1ea2:	51 05       	cpc	r21, r1
    1ea4:	f1 f0       	breq	.+60     	; 0x1ee2 <free+0x92>
    1ea6:	ea 01       	movw	r28, r20
    1ea8:	f5 cf       	rjmp	.-22     	; 0x1e94 <free+0x44>
    1eaa:	d3 83       	std	Z+3, r29	; 0x03
    1eac:	c2 83       	std	Z+2, r28	; 0x02
    1eae:	40 81       	ld	r20, Z
    1eb0:	51 81       	ldd	r21, Z+1	; 0x01
    1eb2:	84 0f       	add	r24, r20
    1eb4:	95 1f       	adc	r25, r21
    1eb6:	c8 17       	cp	r28, r24
    1eb8:	d9 07       	cpc	r29, r25
    1eba:	59 f4       	brne	.+22     	; 0x1ed2 <free+0x82>
    1ebc:	88 81       	ld	r24, Y
    1ebe:	99 81       	ldd	r25, Y+1	; 0x01
    1ec0:	84 0f       	add	r24, r20
    1ec2:	95 1f       	adc	r25, r21
    1ec4:	02 96       	adiw	r24, 0x02	; 2
    1ec6:	91 83       	std	Z+1, r25	; 0x01
    1ec8:	80 83       	st	Z, r24
    1eca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ecc:	9b 81       	ldd	r25, Y+3	; 0x03
    1ece:	93 83       	std	Z+3, r25	; 0x03
    1ed0:	82 83       	std	Z+2, r24	; 0x02
    1ed2:	21 15       	cp	r18, r1
    1ed4:	31 05       	cpc	r19, r1
    1ed6:	29 f4       	brne	.+10     	; 0x1ee2 <free+0x92>
    1ed8:	f0 93 7a 04 	sts	0x047A, r31	; 0x80047a <__flp+0x1>
    1edc:	e0 93 79 04 	sts	0x0479, r30	; 0x800479 <__flp>
    1ee0:	3d c0       	rjmp	.+122    	; 0x1f5c <free+0x10c>
    1ee2:	e9 01       	movw	r28, r18
    1ee4:	fb 83       	std	Y+3, r31	; 0x03
    1ee6:	ea 83       	std	Y+2, r30	; 0x02
    1ee8:	49 91       	ld	r20, Y+
    1eea:	59 91       	ld	r21, Y+
    1eec:	c4 0f       	add	r28, r20
    1eee:	d5 1f       	adc	r29, r21
    1ef0:	ec 17       	cp	r30, r28
    1ef2:	fd 07       	cpc	r31, r29
    1ef4:	61 f4       	brne	.+24     	; 0x1f0e <free+0xbe>
    1ef6:	80 81       	ld	r24, Z
    1ef8:	91 81       	ldd	r25, Z+1	; 0x01
    1efa:	84 0f       	add	r24, r20
    1efc:	95 1f       	adc	r25, r21
    1efe:	02 96       	adiw	r24, 0x02	; 2
    1f00:	e9 01       	movw	r28, r18
    1f02:	99 83       	std	Y+1, r25	; 0x01
    1f04:	88 83       	st	Y, r24
    1f06:	82 81       	ldd	r24, Z+2	; 0x02
    1f08:	93 81       	ldd	r25, Z+3	; 0x03
    1f0a:	9b 83       	std	Y+3, r25	; 0x03
    1f0c:	8a 83       	std	Y+2, r24	; 0x02
    1f0e:	e0 e0       	ldi	r30, 0x00	; 0
    1f10:	f0 e0       	ldi	r31, 0x00	; 0
    1f12:	12 96       	adiw	r26, 0x02	; 2
    1f14:	8d 91       	ld	r24, X+
    1f16:	9c 91       	ld	r25, X
    1f18:	13 97       	sbiw	r26, 0x03	; 3
    1f1a:	00 97       	sbiw	r24, 0x00	; 0
    1f1c:	19 f0       	breq	.+6      	; 0x1f24 <free+0xd4>
    1f1e:	fd 01       	movw	r30, r26
    1f20:	dc 01       	movw	r26, r24
    1f22:	f7 cf       	rjmp	.-18     	; 0x1f12 <free+0xc2>
    1f24:	8d 91       	ld	r24, X+
    1f26:	9c 91       	ld	r25, X
    1f28:	11 97       	sbiw	r26, 0x01	; 1
    1f2a:	9d 01       	movw	r18, r26
    1f2c:	2e 5f       	subi	r18, 0xFE	; 254
    1f2e:	3f 4f       	sbci	r19, 0xFF	; 255
    1f30:	82 0f       	add	r24, r18
    1f32:	93 1f       	adc	r25, r19
    1f34:	20 91 77 04 	lds	r18, 0x0477	; 0x800477 <__brkval>
    1f38:	30 91 78 04 	lds	r19, 0x0478	; 0x800478 <__brkval+0x1>
    1f3c:	28 17       	cp	r18, r24
    1f3e:	39 07       	cpc	r19, r25
    1f40:	69 f4       	brne	.+26     	; 0x1f5c <free+0x10c>
    1f42:	30 97       	sbiw	r30, 0x00	; 0
    1f44:	29 f4       	brne	.+10     	; 0x1f50 <free+0x100>
    1f46:	10 92 7a 04 	sts	0x047A, r1	; 0x80047a <__flp+0x1>
    1f4a:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <__flp>
    1f4e:	02 c0       	rjmp	.+4      	; 0x1f54 <free+0x104>
    1f50:	13 82       	std	Z+3, r1	; 0x03
    1f52:	12 82       	std	Z+2, r1	; 0x02
    1f54:	b0 93 78 04 	sts	0x0478, r27	; 0x800478 <__brkval+0x1>
    1f58:	a0 93 77 04 	sts	0x0477, r26	; 0x800477 <__brkval>
    1f5c:	df 91       	pop	r29
    1f5e:	cf 91       	pop	r28
    1f60:	08 95       	ret

00001f62 <strcat>:
    1f62:	fb 01       	movw	r30, r22
    1f64:	dc 01       	movw	r26, r24
    1f66:	0d 90       	ld	r0, X+
    1f68:	00 20       	and	r0, r0
    1f6a:	e9 f7       	brne	.-6      	; 0x1f66 <strcat+0x4>
    1f6c:	11 97       	sbiw	r26, 0x01	; 1
    1f6e:	01 90       	ld	r0, Z+
    1f70:	0d 92       	st	X+, r0
    1f72:	00 20       	and	r0, r0
    1f74:	e1 f7       	brne	.-8      	; 0x1f6e <strcat+0xc>
    1f76:	08 95       	ret

00001f78 <strcpy>:
    1f78:	fb 01       	movw	r30, r22
    1f7a:	dc 01       	movw	r26, r24
    1f7c:	01 90       	ld	r0, Z+
    1f7e:	0d 92       	st	X+, r0
    1f80:	00 20       	and	r0, r0
    1f82:	e1 f7       	brne	.-8      	; 0x1f7c <strcpy+0x4>
    1f84:	08 95       	ret

00001f86 <__itoa_ncheck>:
    1f86:	bb 27       	eor	r27, r27
    1f88:	4a 30       	cpi	r20, 0x0A	; 10
    1f8a:	31 f4       	brne	.+12     	; 0x1f98 <__itoa_ncheck+0x12>
    1f8c:	99 23       	and	r25, r25
    1f8e:	22 f4       	brpl	.+8      	; 0x1f98 <__itoa_ncheck+0x12>
    1f90:	bd e2       	ldi	r27, 0x2D	; 45
    1f92:	90 95       	com	r25
    1f94:	81 95       	neg	r24
    1f96:	9f 4f       	sbci	r25, 0xFF	; 255
    1f98:	0c 94 cf 0f 	jmp	0x1f9e	; 0x1f9e <__utoa_common>

00001f9c <__utoa_ncheck>:
    1f9c:	bb 27       	eor	r27, r27

00001f9e <__utoa_common>:
    1f9e:	fb 01       	movw	r30, r22
    1fa0:	55 27       	eor	r21, r21
    1fa2:	aa 27       	eor	r26, r26
    1fa4:	88 0f       	add	r24, r24
    1fa6:	99 1f       	adc	r25, r25
    1fa8:	aa 1f       	adc	r26, r26
    1faa:	a4 17       	cp	r26, r20
    1fac:	10 f0       	brcs	.+4      	; 0x1fb2 <__utoa_common+0x14>
    1fae:	a4 1b       	sub	r26, r20
    1fb0:	83 95       	inc	r24
    1fb2:	50 51       	subi	r21, 0x10	; 16
    1fb4:	b9 f7       	brne	.-18     	; 0x1fa4 <__utoa_common+0x6>
    1fb6:	a0 5d       	subi	r26, 0xD0	; 208
    1fb8:	aa 33       	cpi	r26, 0x3A	; 58
    1fba:	08 f0       	brcs	.+2      	; 0x1fbe <__utoa_common+0x20>
    1fbc:	a9 5d       	subi	r26, 0xD9	; 217
    1fbe:	a1 93       	st	Z+, r26
    1fc0:	00 97       	sbiw	r24, 0x00	; 0
    1fc2:	79 f7       	brne	.-34     	; 0x1fa2 <__utoa_common+0x4>
    1fc4:	b1 11       	cpse	r27, r1
    1fc6:	b1 93       	st	Z+, r27
    1fc8:	11 92       	st	Z+, r1
    1fca:	cb 01       	movw	r24, r22
    1fcc:	0c 94 01 12 	jmp	0x2402	; 0x2402 <strrev>

00001fd0 <sprintf>:
    1fd0:	ae e0       	ldi	r26, 0x0E	; 14
    1fd2:	b0 e0       	ldi	r27, 0x00	; 0
    1fd4:	ee ee       	ldi	r30, 0xEE	; 238
    1fd6:	ff e0       	ldi	r31, 0x0F	; 15
    1fd8:	0c 94 b9 12 	jmp	0x2572	; 0x2572 <__prologue_saves__+0x1c>
    1fdc:	0d 89       	ldd	r16, Y+21	; 0x15
    1fde:	1e 89       	ldd	r17, Y+22	; 0x16
    1fe0:	86 e0       	ldi	r24, 0x06	; 6
    1fe2:	8c 83       	std	Y+4, r24	; 0x04
    1fe4:	1a 83       	std	Y+2, r17	; 0x02
    1fe6:	09 83       	std	Y+1, r16	; 0x01
    1fe8:	8f ef       	ldi	r24, 0xFF	; 255
    1fea:	9f e7       	ldi	r25, 0x7F	; 127
    1fec:	9e 83       	std	Y+6, r25	; 0x06
    1fee:	8d 83       	std	Y+5, r24	; 0x05
    1ff0:	ae 01       	movw	r20, r28
    1ff2:	47 5e       	subi	r20, 0xE7	; 231
    1ff4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ff6:	6f 89       	ldd	r22, Y+23	; 0x17
    1ff8:	78 8d       	ldd	r23, Y+24	; 0x18
    1ffa:	ce 01       	movw	r24, r28
    1ffc:	01 96       	adiw	r24, 0x01	; 1
    1ffe:	0e 94 0a 10 	call	0x2014	; 0x2014 <vfprintf>
    2002:	ef 81       	ldd	r30, Y+7	; 0x07
    2004:	f8 85       	ldd	r31, Y+8	; 0x08
    2006:	e0 0f       	add	r30, r16
    2008:	f1 1f       	adc	r31, r17
    200a:	10 82       	st	Z, r1
    200c:	2e 96       	adiw	r28, 0x0e	; 14
    200e:	e4 e0       	ldi	r30, 0x04	; 4
    2010:	0c 94 d5 12 	jmp	0x25aa	; 0x25aa <__epilogue_restores__+0x1c>

00002014 <vfprintf>:
    2014:	ab e0       	ldi	r26, 0x0B	; 11
    2016:	b0 e0       	ldi	r27, 0x00	; 0
    2018:	e0 e1       	ldi	r30, 0x10	; 16
    201a:	f0 e1       	ldi	r31, 0x10	; 16
    201c:	0c 94 ab 12 	jmp	0x2556	; 0x2556 <__prologue_saves__>
    2020:	6c 01       	movw	r12, r24
    2022:	7b 01       	movw	r14, r22
    2024:	8a 01       	movw	r16, r20
    2026:	fc 01       	movw	r30, r24
    2028:	17 82       	std	Z+7, r1	; 0x07
    202a:	16 82       	std	Z+6, r1	; 0x06
    202c:	83 81       	ldd	r24, Z+3	; 0x03
    202e:	81 ff       	sbrs	r24, 1
    2030:	cc c1       	rjmp	.+920    	; 0x23ca <vfprintf+0x3b6>
    2032:	ce 01       	movw	r24, r28
    2034:	01 96       	adiw	r24, 0x01	; 1
    2036:	3c 01       	movw	r6, r24
    2038:	f6 01       	movw	r30, r12
    203a:	93 81       	ldd	r25, Z+3	; 0x03
    203c:	f7 01       	movw	r30, r14
    203e:	93 fd       	sbrc	r25, 3
    2040:	85 91       	lpm	r24, Z+
    2042:	93 ff       	sbrs	r25, 3
    2044:	81 91       	ld	r24, Z+
    2046:	7f 01       	movw	r14, r30
    2048:	88 23       	and	r24, r24
    204a:	09 f4       	brne	.+2      	; 0x204e <vfprintf+0x3a>
    204c:	ba c1       	rjmp	.+884    	; 0x23c2 <vfprintf+0x3ae>
    204e:	85 32       	cpi	r24, 0x25	; 37
    2050:	39 f4       	brne	.+14     	; 0x2060 <vfprintf+0x4c>
    2052:	93 fd       	sbrc	r25, 3
    2054:	85 91       	lpm	r24, Z+
    2056:	93 ff       	sbrs	r25, 3
    2058:	81 91       	ld	r24, Z+
    205a:	7f 01       	movw	r14, r30
    205c:	85 32       	cpi	r24, 0x25	; 37
    205e:	29 f4       	brne	.+10     	; 0x206a <vfprintf+0x56>
    2060:	b6 01       	movw	r22, r12
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    2068:	e7 cf       	rjmp	.-50     	; 0x2038 <vfprintf+0x24>
    206a:	91 2c       	mov	r9, r1
    206c:	21 2c       	mov	r2, r1
    206e:	31 2c       	mov	r3, r1
    2070:	ff e1       	ldi	r31, 0x1F	; 31
    2072:	f3 15       	cp	r31, r3
    2074:	d8 f0       	brcs	.+54     	; 0x20ac <vfprintf+0x98>
    2076:	8b 32       	cpi	r24, 0x2B	; 43
    2078:	79 f0       	breq	.+30     	; 0x2098 <vfprintf+0x84>
    207a:	38 f4       	brcc	.+14     	; 0x208a <vfprintf+0x76>
    207c:	80 32       	cpi	r24, 0x20	; 32
    207e:	79 f0       	breq	.+30     	; 0x209e <vfprintf+0x8a>
    2080:	83 32       	cpi	r24, 0x23	; 35
    2082:	a1 f4       	brne	.+40     	; 0x20ac <vfprintf+0x98>
    2084:	23 2d       	mov	r18, r3
    2086:	20 61       	ori	r18, 0x10	; 16
    2088:	1d c0       	rjmp	.+58     	; 0x20c4 <vfprintf+0xb0>
    208a:	8d 32       	cpi	r24, 0x2D	; 45
    208c:	61 f0       	breq	.+24     	; 0x20a6 <vfprintf+0x92>
    208e:	80 33       	cpi	r24, 0x30	; 48
    2090:	69 f4       	brne	.+26     	; 0x20ac <vfprintf+0x98>
    2092:	23 2d       	mov	r18, r3
    2094:	21 60       	ori	r18, 0x01	; 1
    2096:	16 c0       	rjmp	.+44     	; 0x20c4 <vfprintf+0xb0>
    2098:	83 2d       	mov	r24, r3
    209a:	82 60       	ori	r24, 0x02	; 2
    209c:	38 2e       	mov	r3, r24
    209e:	e3 2d       	mov	r30, r3
    20a0:	e4 60       	ori	r30, 0x04	; 4
    20a2:	3e 2e       	mov	r3, r30
    20a4:	2a c0       	rjmp	.+84     	; 0x20fa <vfprintf+0xe6>
    20a6:	f3 2d       	mov	r31, r3
    20a8:	f8 60       	ori	r31, 0x08	; 8
    20aa:	1d c0       	rjmp	.+58     	; 0x20e6 <vfprintf+0xd2>
    20ac:	37 fc       	sbrc	r3, 7
    20ae:	2d c0       	rjmp	.+90     	; 0x210a <vfprintf+0xf6>
    20b0:	20 ed       	ldi	r18, 0xD0	; 208
    20b2:	28 0f       	add	r18, r24
    20b4:	2a 30       	cpi	r18, 0x0A	; 10
    20b6:	40 f0       	brcs	.+16     	; 0x20c8 <vfprintf+0xb4>
    20b8:	8e 32       	cpi	r24, 0x2E	; 46
    20ba:	b9 f4       	brne	.+46     	; 0x20ea <vfprintf+0xd6>
    20bc:	36 fc       	sbrc	r3, 6
    20be:	81 c1       	rjmp	.+770    	; 0x23c2 <vfprintf+0x3ae>
    20c0:	23 2d       	mov	r18, r3
    20c2:	20 64       	ori	r18, 0x40	; 64
    20c4:	32 2e       	mov	r3, r18
    20c6:	19 c0       	rjmp	.+50     	; 0x20fa <vfprintf+0xe6>
    20c8:	36 fe       	sbrs	r3, 6
    20ca:	06 c0       	rjmp	.+12     	; 0x20d8 <vfprintf+0xc4>
    20cc:	8a e0       	ldi	r24, 0x0A	; 10
    20ce:	98 9e       	mul	r9, r24
    20d0:	20 0d       	add	r18, r0
    20d2:	11 24       	eor	r1, r1
    20d4:	92 2e       	mov	r9, r18
    20d6:	11 c0       	rjmp	.+34     	; 0x20fa <vfprintf+0xe6>
    20d8:	ea e0       	ldi	r30, 0x0A	; 10
    20da:	2e 9e       	mul	r2, r30
    20dc:	20 0d       	add	r18, r0
    20de:	11 24       	eor	r1, r1
    20e0:	22 2e       	mov	r2, r18
    20e2:	f3 2d       	mov	r31, r3
    20e4:	f0 62       	ori	r31, 0x20	; 32
    20e6:	3f 2e       	mov	r3, r31
    20e8:	08 c0       	rjmp	.+16     	; 0x20fa <vfprintf+0xe6>
    20ea:	8c 36       	cpi	r24, 0x6C	; 108
    20ec:	21 f4       	brne	.+8      	; 0x20f6 <vfprintf+0xe2>
    20ee:	83 2d       	mov	r24, r3
    20f0:	80 68       	ori	r24, 0x80	; 128
    20f2:	38 2e       	mov	r3, r24
    20f4:	02 c0       	rjmp	.+4      	; 0x20fa <vfprintf+0xe6>
    20f6:	88 36       	cpi	r24, 0x68	; 104
    20f8:	41 f4       	brne	.+16     	; 0x210a <vfprintf+0xf6>
    20fa:	f7 01       	movw	r30, r14
    20fc:	93 fd       	sbrc	r25, 3
    20fe:	85 91       	lpm	r24, Z+
    2100:	93 ff       	sbrs	r25, 3
    2102:	81 91       	ld	r24, Z+
    2104:	7f 01       	movw	r14, r30
    2106:	81 11       	cpse	r24, r1
    2108:	b3 cf       	rjmp	.-154    	; 0x2070 <vfprintf+0x5c>
    210a:	98 2f       	mov	r25, r24
    210c:	9f 7d       	andi	r25, 0xDF	; 223
    210e:	95 54       	subi	r25, 0x45	; 69
    2110:	93 30       	cpi	r25, 0x03	; 3
    2112:	28 f4       	brcc	.+10     	; 0x211e <vfprintf+0x10a>
    2114:	0c 5f       	subi	r16, 0xFC	; 252
    2116:	1f 4f       	sbci	r17, 0xFF	; 255
    2118:	9f e3       	ldi	r25, 0x3F	; 63
    211a:	99 83       	std	Y+1, r25	; 0x01
    211c:	0d c0       	rjmp	.+26     	; 0x2138 <vfprintf+0x124>
    211e:	83 36       	cpi	r24, 0x63	; 99
    2120:	31 f0       	breq	.+12     	; 0x212e <vfprintf+0x11a>
    2122:	83 37       	cpi	r24, 0x73	; 115
    2124:	71 f0       	breq	.+28     	; 0x2142 <vfprintf+0x12e>
    2126:	83 35       	cpi	r24, 0x53	; 83
    2128:	09 f0       	breq	.+2      	; 0x212c <vfprintf+0x118>
    212a:	59 c0       	rjmp	.+178    	; 0x21de <vfprintf+0x1ca>
    212c:	21 c0       	rjmp	.+66     	; 0x2170 <vfprintf+0x15c>
    212e:	f8 01       	movw	r30, r16
    2130:	80 81       	ld	r24, Z
    2132:	89 83       	std	Y+1, r24	; 0x01
    2134:	0e 5f       	subi	r16, 0xFE	; 254
    2136:	1f 4f       	sbci	r17, 0xFF	; 255
    2138:	88 24       	eor	r8, r8
    213a:	83 94       	inc	r8
    213c:	91 2c       	mov	r9, r1
    213e:	53 01       	movw	r10, r6
    2140:	13 c0       	rjmp	.+38     	; 0x2168 <vfprintf+0x154>
    2142:	28 01       	movw	r4, r16
    2144:	f2 e0       	ldi	r31, 0x02	; 2
    2146:	4f 0e       	add	r4, r31
    2148:	51 1c       	adc	r5, r1
    214a:	f8 01       	movw	r30, r16
    214c:	a0 80       	ld	r10, Z
    214e:	b1 80       	ldd	r11, Z+1	; 0x01
    2150:	36 fe       	sbrs	r3, 6
    2152:	03 c0       	rjmp	.+6      	; 0x215a <vfprintf+0x146>
    2154:	69 2d       	mov	r22, r9
    2156:	70 e0       	ldi	r23, 0x00	; 0
    2158:	02 c0       	rjmp	.+4      	; 0x215e <vfprintf+0x14a>
    215a:	6f ef       	ldi	r22, 0xFF	; 255
    215c:	7f ef       	ldi	r23, 0xFF	; 255
    215e:	c5 01       	movw	r24, r10
    2160:	0e 94 f6 11 	call	0x23ec	; 0x23ec <strnlen>
    2164:	4c 01       	movw	r8, r24
    2166:	82 01       	movw	r16, r4
    2168:	f3 2d       	mov	r31, r3
    216a:	ff 77       	andi	r31, 0x7F	; 127
    216c:	3f 2e       	mov	r3, r31
    216e:	16 c0       	rjmp	.+44     	; 0x219c <vfprintf+0x188>
    2170:	28 01       	movw	r4, r16
    2172:	22 e0       	ldi	r18, 0x02	; 2
    2174:	42 0e       	add	r4, r18
    2176:	51 1c       	adc	r5, r1
    2178:	f8 01       	movw	r30, r16
    217a:	a0 80       	ld	r10, Z
    217c:	b1 80       	ldd	r11, Z+1	; 0x01
    217e:	36 fe       	sbrs	r3, 6
    2180:	03 c0       	rjmp	.+6      	; 0x2188 <vfprintf+0x174>
    2182:	69 2d       	mov	r22, r9
    2184:	70 e0       	ldi	r23, 0x00	; 0
    2186:	02 c0       	rjmp	.+4      	; 0x218c <vfprintf+0x178>
    2188:	6f ef       	ldi	r22, 0xFF	; 255
    218a:	7f ef       	ldi	r23, 0xFF	; 255
    218c:	c5 01       	movw	r24, r10
    218e:	0e 94 eb 11 	call	0x23d6	; 0x23d6 <strnlen_P>
    2192:	4c 01       	movw	r8, r24
    2194:	f3 2d       	mov	r31, r3
    2196:	f0 68       	ori	r31, 0x80	; 128
    2198:	3f 2e       	mov	r3, r31
    219a:	82 01       	movw	r16, r4
    219c:	33 fc       	sbrc	r3, 3
    219e:	1b c0       	rjmp	.+54     	; 0x21d6 <vfprintf+0x1c2>
    21a0:	82 2d       	mov	r24, r2
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	88 16       	cp	r8, r24
    21a6:	99 06       	cpc	r9, r25
    21a8:	b0 f4       	brcc	.+44     	; 0x21d6 <vfprintf+0x1c2>
    21aa:	b6 01       	movw	r22, r12
    21ac:	80 e2       	ldi	r24, 0x20	; 32
    21ae:	90 e0       	ldi	r25, 0x00	; 0
    21b0:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    21b4:	2a 94       	dec	r2
    21b6:	f4 cf       	rjmp	.-24     	; 0x21a0 <vfprintf+0x18c>
    21b8:	f5 01       	movw	r30, r10
    21ba:	37 fc       	sbrc	r3, 7
    21bc:	85 91       	lpm	r24, Z+
    21be:	37 fe       	sbrs	r3, 7
    21c0:	81 91       	ld	r24, Z+
    21c2:	5f 01       	movw	r10, r30
    21c4:	b6 01       	movw	r22, r12
    21c6:	90 e0       	ldi	r25, 0x00	; 0
    21c8:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    21cc:	21 10       	cpse	r2, r1
    21ce:	2a 94       	dec	r2
    21d0:	21 e0       	ldi	r18, 0x01	; 1
    21d2:	82 1a       	sub	r8, r18
    21d4:	91 08       	sbc	r9, r1
    21d6:	81 14       	cp	r8, r1
    21d8:	91 04       	cpc	r9, r1
    21da:	71 f7       	brne	.-36     	; 0x21b8 <vfprintf+0x1a4>
    21dc:	e8 c0       	rjmp	.+464    	; 0x23ae <vfprintf+0x39a>
    21de:	84 36       	cpi	r24, 0x64	; 100
    21e0:	11 f0       	breq	.+4      	; 0x21e6 <vfprintf+0x1d2>
    21e2:	89 36       	cpi	r24, 0x69	; 105
    21e4:	41 f5       	brne	.+80     	; 0x2236 <vfprintf+0x222>
    21e6:	f8 01       	movw	r30, r16
    21e8:	37 fe       	sbrs	r3, 7
    21ea:	07 c0       	rjmp	.+14     	; 0x21fa <vfprintf+0x1e6>
    21ec:	60 81       	ld	r22, Z
    21ee:	71 81       	ldd	r23, Z+1	; 0x01
    21f0:	82 81       	ldd	r24, Z+2	; 0x02
    21f2:	93 81       	ldd	r25, Z+3	; 0x03
    21f4:	0c 5f       	subi	r16, 0xFC	; 252
    21f6:	1f 4f       	sbci	r17, 0xFF	; 255
    21f8:	08 c0       	rjmp	.+16     	; 0x220a <vfprintf+0x1f6>
    21fa:	60 81       	ld	r22, Z
    21fc:	71 81       	ldd	r23, Z+1	; 0x01
    21fe:	07 2e       	mov	r0, r23
    2200:	00 0c       	add	r0, r0
    2202:	88 0b       	sbc	r24, r24
    2204:	99 0b       	sbc	r25, r25
    2206:	0e 5f       	subi	r16, 0xFE	; 254
    2208:	1f 4f       	sbci	r17, 0xFF	; 255
    220a:	f3 2d       	mov	r31, r3
    220c:	ff 76       	andi	r31, 0x6F	; 111
    220e:	3f 2e       	mov	r3, r31
    2210:	97 ff       	sbrs	r25, 7
    2212:	09 c0       	rjmp	.+18     	; 0x2226 <vfprintf+0x212>
    2214:	90 95       	com	r25
    2216:	80 95       	com	r24
    2218:	70 95       	com	r23
    221a:	61 95       	neg	r22
    221c:	7f 4f       	sbci	r23, 0xFF	; 255
    221e:	8f 4f       	sbci	r24, 0xFF	; 255
    2220:	9f 4f       	sbci	r25, 0xFF	; 255
    2222:	f0 68       	ori	r31, 0x80	; 128
    2224:	3f 2e       	mov	r3, r31
    2226:	2a e0       	ldi	r18, 0x0A	; 10
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	a3 01       	movw	r20, r6
    222c:	0e 94 4d 12 	call	0x249a	; 0x249a <__ultoa_invert>
    2230:	88 2e       	mov	r8, r24
    2232:	86 18       	sub	r8, r6
    2234:	45 c0       	rjmp	.+138    	; 0x22c0 <vfprintf+0x2ac>
    2236:	85 37       	cpi	r24, 0x75	; 117
    2238:	31 f4       	brne	.+12     	; 0x2246 <vfprintf+0x232>
    223a:	23 2d       	mov	r18, r3
    223c:	2f 7e       	andi	r18, 0xEF	; 239
    223e:	b2 2e       	mov	r11, r18
    2240:	2a e0       	ldi	r18, 0x0A	; 10
    2242:	30 e0       	ldi	r19, 0x00	; 0
    2244:	25 c0       	rjmp	.+74     	; 0x2290 <vfprintf+0x27c>
    2246:	93 2d       	mov	r25, r3
    2248:	99 7f       	andi	r25, 0xF9	; 249
    224a:	b9 2e       	mov	r11, r25
    224c:	8f 36       	cpi	r24, 0x6F	; 111
    224e:	c1 f0       	breq	.+48     	; 0x2280 <vfprintf+0x26c>
    2250:	18 f4       	brcc	.+6      	; 0x2258 <vfprintf+0x244>
    2252:	88 35       	cpi	r24, 0x58	; 88
    2254:	79 f0       	breq	.+30     	; 0x2274 <vfprintf+0x260>
    2256:	b5 c0       	rjmp	.+362    	; 0x23c2 <vfprintf+0x3ae>
    2258:	80 37       	cpi	r24, 0x70	; 112
    225a:	19 f0       	breq	.+6      	; 0x2262 <vfprintf+0x24e>
    225c:	88 37       	cpi	r24, 0x78	; 120
    225e:	21 f0       	breq	.+8      	; 0x2268 <vfprintf+0x254>
    2260:	b0 c0       	rjmp	.+352    	; 0x23c2 <vfprintf+0x3ae>
    2262:	e9 2f       	mov	r30, r25
    2264:	e0 61       	ori	r30, 0x10	; 16
    2266:	be 2e       	mov	r11, r30
    2268:	b4 fe       	sbrs	r11, 4
    226a:	0d c0       	rjmp	.+26     	; 0x2286 <vfprintf+0x272>
    226c:	fb 2d       	mov	r31, r11
    226e:	f4 60       	ori	r31, 0x04	; 4
    2270:	bf 2e       	mov	r11, r31
    2272:	09 c0       	rjmp	.+18     	; 0x2286 <vfprintf+0x272>
    2274:	34 fe       	sbrs	r3, 4
    2276:	0a c0       	rjmp	.+20     	; 0x228c <vfprintf+0x278>
    2278:	29 2f       	mov	r18, r25
    227a:	26 60       	ori	r18, 0x06	; 6
    227c:	b2 2e       	mov	r11, r18
    227e:	06 c0       	rjmp	.+12     	; 0x228c <vfprintf+0x278>
    2280:	28 e0       	ldi	r18, 0x08	; 8
    2282:	30 e0       	ldi	r19, 0x00	; 0
    2284:	05 c0       	rjmp	.+10     	; 0x2290 <vfprintf+0x27c>
    2286:	20 e1       	ldi	r18, 0x10	; 16
    2288:	30 e0       	ldi	r19, 0x00	; 0
    228a:	02 c0       	rjmp	.+4      	; 0x2290 <vfprintf+0x27c>
    228c:	20 e1       	ldi	r18, 0x10	; 16
    228e:	32 e0       	ldi	r19, 0x02	; 2
    2290:	f8 01       	movw	r30, r16
    2292:	b7 fe       	sbrs	r11, 7
    2294:	07 c0       	rjmp	.+14     	; 0x22a4 <vfprintf+0x290>
    2296:	60 81       	ld	r22, Z
    2298:	71 81       	ldd	r23, Z+1	; 0x01
    229a:	82 81       	ldd	r24, Z+2	; 0x02
    229c:	93 81       	ldd	r25, Z+3	; 0x03
    229e:	0c 5f       	subi	r16, 0xFC	; 252
    22a0:	1f 4f       	sbci	r17, 0xFF	; 255
    22a2:	06 c0       	rjmp	.+12     	; 0x22b0 <vfprintf+0x29c>
    22a4:	60 81       	ld	r22, Z
    22a6:	71 81       	ldd	r23, Z+1	; 0x01
    22a8:	80 e0       	ldi	r24, 0x00	; 0
    22aa:	90 e0       	ldi	r25, 0x00	; 0
    22ac:	0e 5f       	subi	r16, 0xFE	; 254
    22ae:	1f 4f       	sbci	r17, 0xFF	; 255
    22b0:	a3 01       	movw	r20, r6
    22b2:	0e 94 4d 12 	call	0x249a	; 0x249a <__ultoa_invert>
    22b6:	88 2e       	mov	r8, r24
    22b8:	86 18       	sub	r8, r6
    22ba:	fb 2d       	mov	r31, r11
    22bc:	ff 77       	andi	r31, 0x7F	; 127
    22be:	3f 2e       	mov	r3, r31
    22c0:	36 fe       	sbrs	r3, 6
    22c2:	0d c0       	rjmp	.+26     	; 0x22de <vfprintf+0x2ca>
    22c4:	23 2d       	mov	r18, r3
    22c6:	2e 7f       	andi	r18, 0xFE	; 254
    22c8:	a2 2e       	mov	r10, r18
    22ca:	89 14       	cp	r8, r9
    22cc:	58 f4       	brcc	.+22     	; 0x22e4 <vfprintf+0x2d0>
    22ce:	34 fe       	sbrs	r3, 4
    22d0:	0b c0       	rjmp	.+22     	; 0x22e8 <vfprintf+0x2d4>
    22d2:	32 fc       	sbrc	r3, 2
    22d4:	09 c0       	rjmp	.+18     	; 0x22e8 <vfprintf+0x2d4>
    22d6:	83 2d       	mov	r24, r3
    22d8:	8e 7e       	andi	r24, 0xEE	; 238
    22da:	a8 2e       	mov	r10, r24
    22dc:	05 c0       	rjmp	.+10     	; 0x22e8 <vfprintf+0x2d4>
    22de:	b8 2c       	mov	r11, r8
    22e0:	a3 2c       	mov	r10, r3
    22e2:	03 c0       	rjmp	.+6      	; 0x22ea <vfprintf+0x2d6>
    22e4:	b8 2c       	mov	r11, r8
    22e6:	01 c0       	rjmp	.+2      	; 0x22ea <vfprintf+0x2d6>
    22e8:	b9 2c       	mov	r11, r9
    22ea:	a4 fe       	sbrs	r10, 4
    22ec:	0f c0       	rjmp	.+30     	; 0x230c <vfprintf+0x2f8>
    22ee:	fe 01       	movw	r30, r28
    22f0:	e8 0d       	add	r30, r8
    22f2:	f1 1d       	adc	r31, r1
    22f4:	80 81       	ld	r24, Z
    22f6:	80 33       	cpi	r24, 0x30	; 48
    22f8:	21 f4       	brne	.+8      	; 0x2302 <vfprintf+0x2ee>
    22fa:	9a 2d       	mov	r25, r10
    22fc:	99 7e       	andi	r25, 0xE9	; 233
    22fe:	a9 2e       	mov	r10, r25
    2300:	09 c0       	rjmp	.+18     	; 0x2314 <vfprintf+0x300>
    2302:	a2 fe       	sbrs	r10, 2
    2304:	06 c0       	rjmp	.+12     	; 0x2312 <vfprintf+0x2fe>
    2306:	b3 94       	inc	r11
    2308:	b3 94       	inc	r11
    230a:	04 c0       	rjmp	.+8      	; 0x2314 <vfprintf+0x300>
    230c:	8a 2d       	mov	r24, r10
    230e:	86 78       	andi	r24, 0x86	; 134
    2310:	09 f0       	breq	.+2      	; 0x2314 <vfprintf+0x300>
    2312:	b3 94       	inc	r11
    2314:	a3 fc       	sbrc	r10, 3
    2316:	11 c0       	rjmp	.+34     	; 0x233a <vfprintf+0x326>
    2318:	a0 fe       	sbrs	r10, 0
    231a:	06 c0       	rjmp	.+12     	; 0x2328 <vfprintf+0x314>
    231c:	b2 14       	cp	r11, r2
    231e:	88 f4       	brcc	.+34     	; 0x2342 <vfprintf+0x32e>
    2320:	28 0c       	add	r2, r8
    2322:	92 2c       	mov	r9, r2
    2324:	9b 18       	sub	r9, r11
    2326:	0e c0       	rjmp	.+28     	; 0x2344 <vfprintf+0x330>
    2328:	b2 14       	cp	r11, r2
    232a:	60 f4       	brcc	.+24     	; 0x2344 <vfprintf+0x330>
    232c:	b6 01       	movw	r22, r12
    232e:	80 e2       	ldi	r24, 0x20	; 32
    2330:	90 e0       	ldi	r25, 0x00	; 0
    2332:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    2336:	b3 94       	inc	r11
    2338:	f7 cf       	rjmp	.-18     	; 0x2328 <vfprintf+0x314>
    233a:	b2 14       	cp	r11, r2
    233c:	18 f4       	brcc	.+6      	; 0x2344 <vfprintf+0x330>
    233e:	2b 18       	sub	r2, r11
    2340:	02 c0       	rjmp	.+4      	; 0x2346 <vfprintf+0x332>
    2342:	98 2c       	mov	r9, r8
    2344:	21 2c       	mov	r2, r1
    2346:	a4 fe       	sbrs	r10, 4
    2348:	10 c0       	rjmp	.+32     	; 0x236a <vfprintf+0x356>
    234a:	b6 01       	movw	r22, r12
    234c:	80 e3       	ldi	r24, 0x30	; 48
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    2354:	a2 fe       	sbrs	r10, 2
    2356:	17 c0       	rjmp	.+46     	; 0x2386 <vfprintf+0x372>
    2358:	a1 fc       	sbrc	r10, 1
    235a:	03 c0       	rjmp	.+6      	; 0x2362 <vfprintf+0x34e>
    235c:	88 e7       	ldi	r24, 0x78	; 120
    235e:	90 e0       	ldi	r25, 0x00	; 0
    2360:	02 c0       	rjmp	.+4      	; 0x2366 <vfprintf+0x352>
    2362:	88 e5       	ldi	r24, 0x58	; 88
    2364:	90 e0       	ldi	r25, 0x00	; 0
    2366:	b6 01       	movw	r22, r12
    2368:	0c c0       	rjmp	.+24     	; 0x2382 <vfprintf+0x36e>
    236a:	8a 2d       	mov	r24, r10
    236c:	86 78       	andi	r24, 0x86	; 134
    236e:	59 f0       	breq	.+22     	; 0x2386 <vfprintf+0x372>
    2370:	a1 fe       	sbrs	r10, 1
    2372:	02 c0       	rjmp	.+4      	; 0x2378 <vfprintf+0x364>
    2374:	8b e2       	ldi	r24, 0x2B	; 43
    2376:	01 c0       	rjmp	.+2      	; 0x237a <vfprintf+0x366>
    2378:	80 e2       	ldi	r24, 0x20	; 32
    237a:	a7 fc       	sbrc	r10, 7
    237c:	8d e2       	ldi	r24, 0x2D	; 45
    237e:	b6 01       	movw	r22, r12
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    2386:	89 14       	cp	r8, r9
    2388:	38 f4       	brcc	.+14     	; 0x2398 <vfprintf+0x384>
    238a:	b6 01       	movw	r22, r12
    238c:	80 e3       	ldi	r24, 0x30	; 48
    238e:	90 e0       	ldi	r25, 0x00	; 0
    2390:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    2394:	9a 94       	dec	r9
    2396:	f7 cf       	rjmp	.-18     	; 0x2386 <vfprintf+0x372>
    2398:	8a 94       	dec	r8
    239a:	f3 01       	movw	r30, r6
    239c:	e8 0d       	add	r30, r8
    239e:	f1 1d       	adc	r31, r1
    23a0:	80 81       	ld	r24, Z
    23a2:	b6 01       	movw	r22, r12
    23a4:	90 e0       	ldi	r25, 0x00	; 0
    23a6:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    23aa:	81 10       	cpse	r8, r1
    23ac:	f5 cf       	rjmp	.-22     	; 0x2398 <vfprintf+0x384>
    23ae:	22 20       	and	r2, r2
    23b0:	09 f4       	brne	.+2      	; 0x23b4 <vfprintf+0x3a0>
    23b2:	42 ce       	rjmp	.-892    	; 0x2038 <vfprintf+0x24>
    23b4:	b6 01       	movw	r22, r12
    23b6:	80 e2       	ldi	r24, 0x20	; 32
    23b8:	90 e0       	ldi	r25, 0x00	; 0
    23ba:	0e 94 11 12 	call	0x2422	; 0x2422 <fputc>
    23be:	2a 94       	dec	r2
    23c0:	f6 cf       	rjmp	.-20     	; 0x23ae <vfprintf+0x39a>
    23c2:	f6 01       	movw	r30, r12
    23c4:	86 81       	ldd	r24, Z+6	; 0x06
    23c6:	97 81       	ldd	r25, Z+7	; 0x07
    23c8:	02 c0       	rjmp	.+4      	; 0x23ce <vfprintf+0x3ba>
    23ca:	8f ef       	ldi	r24, 0xFF	; 255
    23cc:	9f ef       	ldi	r25, 0xFF	; 255
    23ce:	2b 96       	adiw	r28, 0x0b	; 11
    23d0:	e2 e1       	ldi	r30, 0x12	; 18
    23d2:	0c 94 c7 12 	jmp	0x258e	; 0x258e <__epilogue_restores__>

000023d6 <strnlen_P>:
    23d6:	fc 01       	movw	r30, r24
    23d8:	05 90       	lpm	r0, Z+
    23da:	61 50       	subi	r22, 0x01	; 1
    23dc:	70 40       	sbci	r23, 0x00	; 0
    23de:	01 10       	cpse	r0, r1
    23e0:	d8 f7       	brcc	.-10     	; 0x23d8 <strnlen_P+0x2>
    23e2:	80 95       	com	r24
    23e4:	90 95       	com	r25
    23e6:	8e 0f       	add	r24, r30
    23e8:	9f 1f       	adc	r25, r31
    23ea:	08 95       	ret

000023ec <strnlen>:
    23ec:	fc 01       	movw	r30, r24
    23ee:	61 50       	subi	r22, 0x01	; 1
    23f0:	70 40       	sbci	r23, 0x00	; 0
    23f2:	01 90       	ld	r0, Z+
    23f4:	01 10       	cpse	r0, r1
    23f6:	d8 f7       	brcc	.-10     	; 0x23ee <strnlen+0x2>
    23f8:	80 95       	com	r24
    23fa:	90 95       	com	r25
    23fc:	8e 0f       	add	r24, r30
    23fe:	9f 1f       	adc	r25, r31
    2400:	08 95       	ret

00002402 <strrev>:
    2402:	dc 01       	movw	r26, r24
    2404:	fc 01       	movw	r30, r24
    2406:	67 2f       	mov	r22, r23
    2408:	71 91       	ld	r23, Z+
    240a:	77 23       	and	r23, r23
    240c:	e1 f7       	brne	.-8      	; 0x2406 <strrev+0x4>
    240e:	32 97       	sbiw	r30, 0x02	; 2
    2410:	04 c0       	rjmp	.+8      	; 0x241a <strrev+0x18>
    2412:	7c 91       	ld	r23, X
    2414:	6d 93       	st	X+, r22
    2416:	70 83       	st	Z, r23
    2418:	62 91       	ld	r22, -Z
    241a:	ae 17       	cp	r26, r30
    241c:	bf 07       	cpc	r27, r31
    241e:	c8 f3       	brcs	.-14     	; 0x2412 <strrev+0x10>
    2420:	08 95       	ret

00002422 <fputc>:
    2422:	0f 93       	push	r16
    2424:	1f 93       	push	r17
    2426:	cf 93       	push	r28
    2428:	df 93       	push	r29
    242a:	fb 01       	movw	r30, r22
    242c:	23 81       	ldd	r18, Z+3	; 0x03
    242e:	21 fd       	sbrc	r18, 1
    2430:	03 c0       	rjmp	.+6      	; 0x2438 <fputc+0x16>
    2432:	8f ef       	ldi	r24, 0xFF	; 255
    2434:	9f ef       	ldi	r25, 0xFF	; 255
    2436:	2c c0       	rjmp	.+88     	; 0x2490 <fputc+0x6e>
    2438:	22 ff       	sbrs	r18, 2
    243a:	16 c0       	rjmp	.+44     	; 0x2468 <fputc+0x46>
    243c:	46 81       	ldd	r20, Z+6	; 0x06
    243e:	57 81       	ldd	r21, Z+7	; 0x07
    2440:	24 81       	ldd	r18, Z+4	; 0x04
    2442:	35 81       	ldd	r19, Z+5	; 0x05
    2444:	42 17       	cp	r20, r18
    2446:	53 07       	cpc	r21, r19
    2448:	44 f4       	brge	.+16     	; 0x245a <fputc+0x38>
    244a:	a0 81       	ld	r26, Z
    244c:	b1 81       	ldd	r27, Z+1	; 0x01
    244e:	9d 01       	movw	r18, r26
    2450:	2f 5f       	subi	r18, 0xFF	; 255
    2452:	3f 4f       	sbci	r19, 0xFF	; 255
    2454:	31 83       	std	Z+1, r19	; 0x01
    2456:	20 83       	st	Z, r18
    2458:	8c 93       	st	X, r24
    245a:	26 81       	ldd	r18, Z+6	; 0x06
    245c:	37 81       	ldd	r19, Z+7	; 0x07
    245e:	2f 5f       	subi	r18, 0xFF	; 255
    2460:	3f 4f       	sbci	r19, 0xFF	; 255
    2462:	37 83       	std	Z+7, r19	; 0x07
    2464:	26 83       	std	Z+6, r18	; 0x06
    2466:	14 c0       	rjmp	.+40     	; 0x2490 <fputc+0x6e>
    2468:	8b 01       	movw	r16, r22
    246a:	ec 01       	movw	r28, r24
    246c:	fb 01       	movw	r30, r22
    246e:	00 84       	ldd	r0, Z+8	; 0x08
    2470:	f1 85       	ldd	r31, Z+9	; 0x09
    2472:	e0 2d       	mov	r30, r0
    2474:	09 95       	icall
    2476:	89 2b       	or	r24, r25
    2478:	e1 f6       	brne	.-72     	; 0x2432 <fputc+0x10>
    247a:	d8 01       	movw	r26, r16
    247c:	16 96       	adiw	r26, 0x06	; 6
    247e:	8d 91       	ld	r24, X+
    2480:	9c 91       	ld	r25, X
    2482:	17 97       	sbiw	r26, 0x07	; 7
    2484:	01 96       	adiw	r24, 0x01	; 1
    2486:	17 96       	adiw	r26, 0x07	; 7
    2488:	9c 93       	st	X, r25
    248a:	8e 93       	st	-X, r24
    248c:	16 97       	sbiw	r26, 0x06	; 6
    248e:	ce 01       	movw	r24, r28
    2490:	df 91       	pop	r29
    2492:	cf 91       	pop	r28
    2494:	1f 91       	pop	r17
    2496:	0f 91       	pop	r16
    2498:	08 95       	ret

0000249a <__ultoa_invert>:
    249a:	fa 01       	movw	r30, r20
    249c:	aa 27       	eor	r26, r26
    249e:	28 30       	cpi	r18, 0x08	; 8
    24a0:	51 f1       	breq	.+84     	; 0x24f6 <__ultoa_invert+0x5c>
    24a2:	20 31       	cpi	r18, 0x10	; 16
    24a4:	81 f1       	breq	.+96     	; 0x2506 <__ultoa_invert+0x6c>
    24a6:	e8 94       	clt
    24a8:	6f 93       	push	r22
    24aa:	6e 7f       	andi	r22, 0xFE	; 254
    24ac:	6e 5f       	subi	r22, 0xFE	; 254
    24ae:	7f 4f       	sbci	r23, 0xFF	; 255
    24b0:	8f 4f       	sbci	r24, 0xFF	; 255
    24b2:	9f 4f       	sbci	r25, 0xFF	; 255
    24b4:	af 4f       	sbci	r26, 0xFF	; 255
    24b6:	b1 e0       	ldi	r27, 0x01	; 1
    24b8:	3e d0       	rcall	.+124    	; 0x2536 <__ultoa_invert+0x9c>
    24ba:	b4 e0       	ldi	r27, 0x04	; 4
    24bc:	3c d0       	rcall	.+120    	; 0x2536 <__ultoa_invert+0x9c>
    24be:	67 0f       	add	r22, r23
    24c0:	78 1f       	adc	r23, r24
    24c2:	89 1f       	adc	r24, r25
    24c4:	9a 1f       	adc	r25, r26
    24c6:	a1 1d       	adc	r26, r1
    24c8:	68 0f       	add	r22, r24
    24ca:	79 1f       	adc	r23, r25
    24cc:	8a 1f       	adc	r24, r26
    24ce:	91 1d       	adc	r25, r1
    24d0:	a1 1d       	adc	r26, r1
    24d2:	6a 0f       	add	r22, r26
    24d4:	71 1d       	adc	r23, r1
    24d6:	81 1d       	adc	r24, r1
    24d8:	91 1d       	adc	r25, r1
    24da:	a1 1d       	adc	r26, r1
    24dc:	20 d0       	rcall	.+64     	; 0x251e <__ultoa_invert+0x84>
    24de:	09 f4       	brne	.+2      	; 0x24e2 <__ultoa_invert+0x48>
    24e0:	68 94       	set
    24e2:	3f 91       	pop	r19
    24e4:	2a e0       	ldi	r18, 0x0A	; 10
    24e6:	26 9f       	mul	r18, r22
    24e8:	11 24       	eor	r1, r1
    24ea:	30 19       	sub	r19, r0
    24ec:	30 5d       	subi	r19, 0xD0	; 208
    24ee:	31 93       	st	Z+, r19
    24f0:	de f6       	brtc	.-74     	; 0x24a8 <__ultoa_invert+0xe>
    24f2:	cf 01       	movw	r24, r30
    24f4:	08 95       	ret
    24f6:	46 2f       	mov	r20, r22
    24f8:	47 70       	andi	r20, 0x07	; 7
    24fa:	40 5d       	subi	r20, 0xD0	; 208
    24fc:	41 93       	st	Z+, r20
    24fe:	b3 e0       	ldi	r27, 0x03	; 3
    2500:	0f d0       	rcall	.+30     	; 0x2520 <__ultoa_invert+0x86>
    2502:	c9 f7       	brne	.-14     	; 0x24f6 <__ultoa_invert+0x5c>
    2504:	f6 cf       	rjmp	.-20     	; 0x24f2 <__ultoa_invert+0x58>
    2506:	46 2f       	mov	r20, r22
    2508:	4f 70       	andi	r20, 0x0F	; 15
    250a:	40 5d       	subi	r20, 0xD0	; 208
    250c:	4a 33       	cpi	r20, 0x3A	; 58
    250e:	18 f0       	brcs	.+6      	; 0x2516 <__ultoa_invert+0x7c>
    2510:	49 5d       	subi	r20, 0xD9	; 217
    2512:	31 fd       	sbrc	r19, 1
    2514:	40 52       	subi	r20, 0x20	; 32
    2516:	41 93       	st	Z+, r20
    2518:	02 d0       	rcall	.+4      	; 0x251e <__ultoa_invert+0x84>
    251a:	a9 f7       	brne	.-22     	; 0x2506 <__ultoa_invert+0x6c>
    251c:	ea cf       	rjmp	.-44     	; 0x24f2 <__ultoa_invert+0x58>
    251e:	b4 e0       	ldi	r27, 0x04	; 4
    2520:	a6 95       	lsr	r26
    2522:	97 95       	ror	r25
    2524:	87 95       	ror	r24
    2526:	77 95       	ror	r23
    2528:	67 95       	ror	r22
    252a:	ba 95       	dec	r27
    252c:	c9 f7       	brne	.-14     	; 0x2520 <__ultoa_invert+0x86>
    252e:	00 97       	sbiw	r24, 0x00	; 0
    2530:	61 05       	cpc	r22, r1
    2532:	71 05       	cpc	r23, r1
    2534:	08 95       	ret
    2536:	9b 01       	movw	r18, r22
    2538:	ac 01       	movw	r20, r24
    253a:	0a 2e       	mov	r0, r26
    253c:	06 94       	lsr	r0
    253e:	57 95       	ror	r21
    2540:	47 95       	ror	r20
    2542:	37 95       	ror	r19
    2544:	27 95       	ror	r18
    2546:	ba 95       	dec	r27
    2548:	c9 f7       	brne	.-14     	; 0x253c <__ultoa_invert+0xa2>
    254a:	62 0f       	add	r22, r18
    254c:	73 1f       	adc	r23, r19
    254e:	84 1f       	adc	r24, r20
    2550:	95 1f       	adc	r25, r21
    2552:	a0 1d       	adc	r26, r0
    2554:	08 95       	ret

00002556 <__prologue_saves__>:
    2556:	2f 92       	push	r2
    2558:	3f 92       	push	r3
    255a:	4f 92       	push	r4
    255c:	5f 92       	push	r5
    255e:	6f 92       	push	r6
    2560:	7f 92       	push	r7
    2562:	8f 92       	push	r8
    2564:	9f 92       	push	r9
    2566:	af 92       	push	r10
    2568:	bf 92       	push	r11
    256a:	cf 92       	push	r12
    256c:	df 92       	push	r13
    256e:	ef 92       	push	r14
    2570:	ff 92       	push	r15
    2572:	0f 93       	push	r16
    2574:	1f 93       	push	r17
    2576:	cf 93       	push	r28
    2578:	df 93       	push	r29
    257a:	cd b7       	in	r28, 0x3d	; 61
    257c:	de b7       	in	r29, 0x3e	; 62
    257e:	ca 1b       	sub	r28, r26
    2580:	db 0b       	sbc	r29, r27
    2582:	0f b6       	in	r0, 0x3f	; 63
    2584:	f8 94       	cli
    2586:	de bf       	out	0x3e, r29	; 62
    2588:	0f be       	out	0x3f, r0	; 63
    258a:	cd bf       	out	0x3d, r28	; 61
    258c:	09 94       	ijmp

0000258e <__epilogue_restores__>:
    258e:	2a 88       	ldd	r2, Y+18	; 0x12
    2590:	39 88       	ldd	r3, Y+17	; 0x11
    2592:	48 88       	ldd	r4, Y+16	; 0x10
    2594:	5f 84       	ldd	r5, Y+15	; 0x0f
    2596:	6e 84       	ldd	r6, Y+14	; 0x0e
    2598:	7d 84       	ldd	r7, Y+13	; 0x0d
    259a:	8c 84       	ldd	r8, Y+12	; 0x0c
    259c:	9b 84       	ldd	r9, Y+11	; 0x0b
    259e:	aa 84       	ldd	r10, Y+10	; 0x0a
    25a0:	b9 84       	ldd	r11, Y+9	; 0x09
    25a2:	c8 84       	ldd	r12, Y+8	; 0x08
    25a4:	df 80       	ldd	r13, Y+7	; 0x07
    25a6:	ee 80       	ldd	r14, Y+6	; 0x06
    25a8:	fd 80       	ldd	r15, Y+5	; 0x05
    25aa:	0c 81       	ldd	r16, Y+4	; 0x04
    25ac:	1b 81       	ldd	r17, Y+3	; 0x03
    25ae:	aa 81       	ldd	r26, Y+2	; 0x02
    25b0:	b9 81       	ldd	r27, Y+1	; 0x01
    25b2:	ce 0f       	add	r28, r30
    25b4:	d1 1d       	adc	r29, r1
    25b6:	0f b6       	in	r0, 0x3f	; 63
    25b8:	f8 94       	cli
    25ba:	de bf       	out	0x3e, r29	; 62
    25bc:	0f be       	out	0x3f, r0	; 63
    25be:	cd bf       	out	0x3d, r28	; 61
    25c0:	ed 01       	movw	r28, r26
    25c2:	08 95       	ret

000025c4 <_exit>:
    25c4:	f8 94       	cli

000025c6 <__stop_program>:
    25c6:	ff cf       	rjmp	.-2      	; 0x25c6 <__stop_program>
