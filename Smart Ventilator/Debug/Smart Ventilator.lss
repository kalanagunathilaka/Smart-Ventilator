
Smart Ventilator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002680  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000e4  00800060  00002680  00002714  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000359  00800144  00800144  000027f8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002854  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b8  00000000  00000000  00002890  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c48  00000000  00000000  00002a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad2  00000000  00000000  00004690  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010cd  00000000  00000000  00005162  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004fc  00000000  00000000  00006230  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007e3  00000000  00000000  0000672c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000121e  00000000  00000000  00006f0f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000188  00000000  00000000  0000812d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
       4:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__vector_1>
       8:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__vector_2>
       c:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__vector_3>
      10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      1c:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__vector_7>
      20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      54:	0d 07       	cpc	r16, r29
      56:	42 07       	cpc	r20, r18
      58:	77 07       	cpc	r23, r23
      5a:	ac 07       	cpc	r26, r28
      5c:	e1 07       	cpc	r30, r17
      5e:	16 08       	sbc	r1, r6
      60:	4b 08       	sbc	r4, r11
      62:	80 08       	sbc	r8, r0
      64:	b5 08       	sbc	r11, r5
      66:	ea 08       	sbc	r14, r10
      68:	1f 09       	sbc	r17, r15
      6a:	54 09       	sbc	r21, r4
      6c:	89 09       	sbc	r24, r9
      6e:	c7 0a       	sbc	r12, r23
      70:	be 09       	sbc	r27, r14
      72:	f3 09       	sbc	r31, r3
      74:	28 0a       	sbc	r2, r24
      76:	5d 0a       	sbc	r5, r29
      78:	92 0a       	sbc	r9, r18

0000007a <__ctors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf e5       	ldi	r28, 0x5F	; 95
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	11 e0       	ldi	r17, 0x01	; 1
      88:	a0 e6       	ldi	r26, 0x60	; 96
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	e0 e8       	ldi	r30, 0x80	; 128
      8e:	f6 e2       	ldi	r31, 0x26	; 38
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	a4 34       	cpi	r26, 0x44	; 68
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	24 e0       	ldi	r18, 0x04	; 4
      9e:	a4 e4       	ldi	r26, 0x44	; 68
      a0:	b1 e0       	ldi	r27, 0x01	; 1
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	ad 39       	cpi	r26, 0x9D	; 157
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
      ac:	0e 94 0d 0b 	call	0x161a	; 0x161a <main>
      b0:	0c 94 3e 13 	jmp	0x267c	; 0x267c <_exit>

000000b4 <__bad_interrupt>:
      b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <Keypad>:

char Keypad()
{
	
//	PORTB=0b1111110;         // make first row 0
	PORTB = PORTB | (1<<4);
      b8:	88 b3       	in	r24, 0x18	; 24
      ba:	80 61       	ori	r24, 0x10	; 16
      bc:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<5);
      be:	88 b3       	in	r24, 0x18	; 24
      c0:	80 62       	ori	r24, 0x20	; 32
      c2:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<6);
      c4:	88 b3       	in	r24, 0x18	; 24
      c6:	80 64       	ori	r24, 0x40	; 64
      c8:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB & (~(1<<0));
      ca:	88 b3       	in	r24, 0x18	; 24
      cc:	8e 7f       	andi	r24, 0xFE	; 254
      ce:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<1);
      d0:	88 b3       	in	r24, 0x18	; 24
      d2:	82 60       	ori	r24, 0x02	; 2
      d4:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<3);
      d6:	88 b3       	in	r24, 0x18	; 24
      d8:	88 60       	ori	r24, 0x08	; 8
      da:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<7); //<--2
      dc:	88 b3       	in	r24, 0x18	; 24
      de:	80 68       	ori	r24, 0x80	; 128
      e0:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
      e2:	b4 99       	sbic	0x16, 4	; 22
      e4:	09 c0       	rjmp	.+18     	; 0xf8 <Keypad+0x40>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      e6:	8f ed       	ldi	r24, 0xDF	; 223
      e8:	9e e2       	ldi	r25, 0x2E	; 46
      ea:	01 97       	sbiw	r24, 0x01	; 1
      ec:	f1 f7       	brne	.-4      	; 0xea <Keypad+0x32>
      ee:	00 c0       	rjmp	.+0      	; 0xf0 <Keypad+0x38>
      f0:	00 00       	nop
	{
		_delay_ms(3);
		return"1";
      f2:	8e e6       	ldi	r24, 0x6E	; 110
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	08 95       	ret
	}

	else if((PINB&(1<<PINB5))==0)
      f8:	b5 99       	sbic	0x16, 5	; 22
      fa:	09 c0       	rjmp	.+18     	; 0x10e <Keypad+0x56>
      fc:	8f ed       	ldi	r24, 0xDF	; 223
      fe:	9e e2       	ldi	r25, 0x2E	; 46
     100:	01 97       	sbiw	r24, 0x01	; 1
     102:	f1 f7       	brne	.-4      	; 0x100 <Keypad+0x48>
     104:	00 c0       	rjmp	.+0      	; 0x106 <Keypad+0x4e>
     106:	00 00       	nop
	{
		_delay_ms(3);
		return"2";
     108:	80 e7       	ldi	r24, 0x70	; 112
     10a:	90 e0       	ldi	r25, 0x00	; 0
     10c:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
     10e:	b6 99       	sbic	0x16, 6	; 22
     110:	09 c0       	rjmp	.+18     	; 0x124 <Keypad+0x6c>
     112:	8f ed       	ldi	r24, 0xDF	; 223
     114:	9e e2       	ldi	r25, 0x2E	; 46
     116:	01 97       	sbiw	r24, 0x01	; 1
     118:	f1 f7       	brne	.-4      	; 0x116 <Keypad+0x5e>
     11a:	00 c0       	rjmp	.+0      	; 0x11c <Keypad+0x64>
     11c:	00 00       	nop
	{
		_delay_ms(3);
		return"3";
     11e:	82 e7       	ldi	r24, 0x72	; 114
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	08 95       	ret
	}
	

//	PORTB=0b1111101;   // make second row 0
		PORTB = PORTB | (1<<4);
     124:	88 b3       	in	r24, 0x18	; 24
     126:	80 61       	ori	r24, 0x10	; 16
     128:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<5);
     12a:	88 b3       	in	r24, 0x18	; 24
     12c:	80 62       	ori	r24, 0x20	; 32
     12e:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<6);
     130:	88 b3       	in	r24, 0x18	; 24
     132:	80 64       	ori	r24, 0x40	; 64
     134:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB & (~(1<<1));
     136:	88 b3       	in	r24, 0x18	; 24
     138:	8d 7f       	andi	r24, 0xFD	; 253
     13a:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<0);
     13c:	88 b3       	in	r24, 0x18	; 24
     13e:	81 60       	ori	r24, 0x01	; 1
     140:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<3);
     142:	88 b3       	in	r24, 0x18	; 24
     144:	88 60       	ori	r24, 0x08	; 8
     146:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<7);// <--2
     148:	88 b3       	in	r24, 0x18	; 24
     14a:	80 68       	ori	r24, 0x80	; 128
     14c:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
     14e:	b4 99       	sbic	0x16, 4	; 22
     150:	09 c0       	rjmp	.+18     	; 0x164 <Keypad+0xac>
     152:	8f ed       	ldi	r24, 0xDF	; 223
     154:	9e e2       	ldi	r25, 0x2E	; 46
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <Keypad+0x9e>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <Keypad+0xa4>
     15c:	00 00       	nop
	{
		_delay_ms(3);
		return"4";
     15e:	84 e7       	ldi	r24, 0x74	; 116
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	08 95       	ret
	}
	else if((PINB&(1<<PINB5))==0)
     164:	b5 99       	sbic	0x16, 5	; 22
     166:	09 c0       	rjmp	.+18     	; 0x17a <Keypad+0xc2>
     168:	8f ed       	ldi	r24, 0xDF	; 223
     16a:	9e e2       	ldi	r25, 0x2E	; 46
     16c:	01 97       	sbiw	r24, 0x01	; 1
     16e:	f1 f7       	brne	.-4      	; 0x16c <Keypad+0xb4>
     170:	00 c0       	rjmp	.+0      	; 0x172 <Keypad+0xba>
     172:	00 00       	nop
	{
		_delay_ms(3);
		return"5";
     174:	86 e7       	ldi	r24, 0x76	; 118
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
     17a:	b6 99       	sbic	0x16, 6	; 22
     17c:	09 c0       	rjmp	.+18     	; 0x190 <Keypad+0xd8>
     17e:	8f ed       	ldi	r24, 0xDF	; 223
     180:	9e e2       	ldi	r25, 0x2E	; 46
     182:	01 97       	sbiw	r24, 0x01	; 1
     184:	f1 f7       	brne	.-4      	; 0x182 <Keypad+0xca>
     186:	00 c0       	rjmp	.+0      	; 0x188 <Keypad+0xd0>
     188:	00 00       	nop
	{
		_delay_ms(3);
		return"6";
     18a:	88 e7       	ldi	r24, 0x78	; 120
     18c:	90 e0       	ldi	r25, 0x00	; 0
     18e:	08 95       	ret
	}
	

//	PORTB=0b1111011;   // make third row 0
	PORTB = PORTB | (1<<4);
     190:	88 b3       	in	r24, 0x18	; 24
     192:	80 61       	ori	r24, 0x10	; 16
     194:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<5);
     196:	88 b3       	in	r24, 0x18	; 24
     198:	80 62       	ori	r24, 0x20	; 32
     19a:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<6);
     19c:	88 b3       	in	r24, 0x18	; 24
     19e:	80 64       	ori	r24, 0x40	; 64
     1a0:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB & (~(1<<7));
     1a2:	88 b3       	in	r24, 0x18	; 24
     1a4:	8f 77       	andi	r24, 0x7F	; 127
     1a6:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<1);
     1a8:	88 b3       	in	r24, 0x18	; 24
     1aa:	82 60       	ori	r24, 0x02	; 2
     1ac:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<3);
     1ae:	88 b3       	in	r24, 0x18	; 24
     1b0:	88 60       	ori	r24, 0x08	; 8
     1b2:	88 bb       	out	0x18, r24	; 24
	PORTB = PORTB | (1<<0); //<--2
     1b4:	88 b3       	in	r24, 0x18	; 24
     1b6:	81 60       	ori	r24, 0x01	; 1
     1b8:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
     1ba:	b4 99       	sbic	0x16, 4	; 22
     1bc:	09 c0       	rjmp	.+18     	; 0x1d0 <Keypad+0x118>
     1be:	8f ed       	ldi	r24, 0xDF	; 223
     1c0:	9e e2       	ldi	r25, 0x2E	; 46
     1c2:	01 97       	sbiw	r24, 0x01	; 1
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <Keypad+0x10a>
     1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <Keypad+0x110>
     1c8:	00 00       	nop
	{
		_delay_ms(3);
		return"7";
     1ca:	8a e7       	ldi	r24, 0x7A	; 122
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	08 95       	ret
	}
	else if((PINB&(1<<PINB5))==0)
     1d0:	b5 99       	sbic	0x16, 5	; 22
     1d2:	09 c0       	rjmp	.+18     	; 0x1e6 <Keypad+0x12e>
     1d4:	8f ed       	ldi	r24, 0xDF	; 223
     1d6:	9e e2       	ldi	r25, 0x2E	; 46
     1d8:	01 97       	sbiw	r24, 0x01	; 1
     1da:	f1 f7       	brne	.-4      	; 0x1d8 <Keypad+0x120>
     1dc:	00 c0       	rjmp	.+0      	; 0x1de <Keypad+0x126>
     1de:	00 00       	nop
	{
		_delay_ms(3);
		return"8";
     1e0:	8c e7       	ldi	r24, 0x7C	; 124
     1e2:	90 e0       	ldi	r25, 0x00	; 0
     1e4:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
     1e6:	b6 99       	sbic	0x16, 6	; 22
     1e8:	09 c0       	rjmp	.+18     	; 0x1fc <Keypad+0x144>
     1ea:	8f ed       	ldi	r24, 0xDF	; 223
     1ec:	9e e2       	ldi	r25, 0x2E	; 46
     1ee:	01 97       	sbiw	r24, 0x01	; 1
     1f0:	f1 f7       	brne	.-4      	; 0x1ee <Keypad+0x136>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <Keypad+0x13c>
     1f4:	00 00       	nop
	{
		_delay_ms(3);
		return"9";
     1f6:	8e e7       	ldi	r24, 0x7E	; 126
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	08 95       	ret
	}
	

	//PORTB=0b1110111;   // make fourth row 0
		PORTB = PORTB | (1<<4);
     1fc:	88 b3       	in	r24, 0x18	; 24
     1fe:	80 61       	ori	r24, 0x10	; 16
     200:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<5);
     202:	88 b3       	in	r24, 0x18	; 24
     204:	80 62       	ori	r24, 0x20	; 32
     206:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<6);
     208:	88 b3       	in	r24, 0x18	; 24
     20a:	80 64       	ori	r24, 0x40	; 64
     20c:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB & (~(1<<3));
     20e:	88 b3       	in	r24, 0x18	; 24
     210:	87 7f       	andi	r24, 0xF7	; 247
     212:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<0);
     214:	88 b3       	in	r24, 0x18	; 24
     216:	81 60       	ori	r24, 0x01	; 1
     218:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<1);
     21a:	88 b3       	in	r24, 0x18	; 24
     21c:	82 60       	ori	r24, 0x02	; 2
     21e:	88 bb       	out	0x18, r24	; 24
		PORTB = PORTB | (1<<7);// <--2
     220:	88 b3       	in	r24, 0x18	; 24
     222:	80 68       	ori	r24, 0x80	; 128
     224:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
     226:	b4 99       	sbic	0x16, 4	; 22
     228:	09 c0       	rjmp	.+18     	; 0x23c <Keypad+0x184>
     22a:	8f ed       	ldi	r24, 0xDF	; 223
     22c:	9e e2       	ldi	r25, 0x2E	; 46
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <Keypad+0x176>
     232:	00 c0       	rjmp	.+0      	; 0x234 <Keypad+0x17c>
     234:	00 00       	nop
	{
		_delay_ms(3);
		
		return"CLR";
     236:	80 e8       	ldi	r24, 0x80	; 128
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	08 95       	ret
	}
	else if((PINB&(1<<PINB5))==0)
     23c:	b5 99       	sbic	0x16, 5	; 22
     23e:	09 c0       	rjmp	.+18     	; 0x252 <Keypad+0x19a>
     240:	8f ed       	ldi	r24, 0xDF	; 223
     242:	9e e2       	ldi	r25, 0x2E	; 46
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <Keypad+0x18c>
     248:	00 c0       	rjmp	.+0      	; 0x24a <Keypad+0x192>
     24a:	00 00       	nop
	{
		_delay_ms(3);
		return"0";
     24c:	84 e8       	ldi	r24, 0x84	; 132
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
     252:	b6 99       	sbic	0x16, 6	; 22
     254:	09 c0       	rjmp	.+18     	; 0x268 <Keypad+0x1b0>
     256:	8f ed       	ldi	r24, 0xDF	; 223
     258:	9e e2       	ldi	r25, 0x2E	; 46
     25a:	01 97       	sbiw	r24, 0x01	; 1
     25c:	f1 f7       	brne	.-4      	; 0x25a <Keypad+0x1a2>
     25e:	00 c0       	rjmp	.+0      	; 0x260 <Keypad+0x1a8>
     260:	00 00       	nop
	{
		_delay_ms(3);
		return"OK";
     262:	86 e8       	ldi	r24, 0x86	; 134
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	08 95       	ret
	}
	

}
     268:	08 95       	ret

0000026a <delay>:
        return 1;
    }
    //if normal return 1 else notify speaker and gsm
}

void getParametersFromKnobs() {
     26a:	40 e0       	ldi	r20, 0x00	; 0
     26c:	50 e0       	ldi	r21, 0x00	; 0
     26e:	0a c0       	rjmp	.+20     	; 0x284 <delay+0x1a>
     270:	2f 5f       	subi	r18, 0xFF	; 255
     272:	3f 4f       	sbci	r19, 0xFF	; 255
     274:	02 c0       	rjmp	.+4      	; 0x27a <delay+0x10>
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	29 37       	cpi	r18, 0x79	; 121
     27c:	31 05       	cpc	r19, r1
     27e:	c4 f3       	brlt	.-16     	; 0x270 <delay+0x6>
     280:	4f 5f       	subi	r20, 0xFF	; 255
     282:	5f 4f       	sbci	r21, 0xFF	; 255
     284:	84 17       	cp	r24, r20
     286:	95 07       	cpc	r25, r21
     288:	b4 f7       	brge	.-20     	; 0x276 <delay+0xc>
     28a:	08 95       	ret

0000028c <toggle>:
     28c:	83 b1       	in	r24, 0x03	; 3
     28e:	82 60       	ori	r24, 0x02	; 2
     290:	83 b9       	out	0x03, r24	; 3
     292:	84 e8       	ldi	r24, 0x84	; 132
     294:	86 bf       	out	0x36, r24	; 54
     296:	06 b6       	in	r0, 0x36	; 54
     298:	07 fe       	sbrs	r0, 7
     29a:	fd cf       	rjmp	.-6      	; 0x296 <toggle+0xa>
     29c:	81 e0       	ldi	r24, 0x01	; 1
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 35 01 	call	0x26a	; 0x26a <delay>
     2a4:	83 b1       	in	r24, 0x03	; 3
     2a6:	8d 7f       	andi	r24, 0xFD	; 253
     2a8:	83 b9       	out	0x03, r24	; 3
     2aa:	84 e8       	ldi	r24, 0x84	; 132
     2ac:	86 bf       	out	0x36, r24	; 54
     2ae:	06 b6       	in	r0, 0x36	; 54
     2b0:	07 fe       	sbrs	r0, 7
     2b2:	fd cf       	rjmp	.-6      	; 0x2ae <toggle+0x22>
     2b4:	08 95       	ret

000002b6 <lcd_cmd_hf>:
     2b6:	93 b1       	in	r25, 0x03	; 3
     2b8:	9e 7f       	andi	r25, 0xFE	; 254
     2ba:	93 b9       	out	0x03, r25	; 3
     2bc:	94 e8       	ldi	r25, 0x84	; 132
     2be:	96 bf       	out	0x36, r25	; 54
     2c0:	06 b6       	in	r0, 0x36	; 54
     2c2:	07 fe       	sbrs	r0, 7
     2c4:	fd cf       	rjmp	.-6      	; 0x2c0 <lcd_cmd_hf+0xa>
     2c6:	93 b1       	in	r25, 0x03	; 3
     2c8:	9f 70       	andi	r25, 0x0F	; 15
     2ca:	93 b9       	out	0x03, r25	; 3
     2cc:	94 e8       	ldi	r25, 0x84	; 132
     2ce:	96 bf       	out	0x36, r25	; 54
     2d0:	06 b6       	in	r0, 0x36	; 54
     2d2:	07 fe       	sbrs	r0, 7
     2d4:	fd cf       	rjmp	.-6      	; 0x2d0 <lcd_cmd_hf+0x1a>
     2d6:	93 b1       	in	r25, 0x03	; 3
     2d8:	80 7f       	andi	r24, 0xF0	; 240
     2da:	89 2b       	or	r24, r25
     2dc:	83 b9       	out	0x03, r24	; 3
     2de:	84 e8       	ldi	r24, 0x84	; 132
     2e0:	86 bf       	out	0x36, r24	; 54
     2e2:	06 b6       	in	r0, 0x36	; 54
     2e4:	07 fe       	sbrs	r0, 7
     2e6:	fd cf       	rjmp	.-6      	; 0x2e2 <lcd_cmd_hf+0x2c>
     2e8:	0e 94 46 01 	call	0x28c	; 0x28c <toggle>
     2ec:	08 95       	ret

000002ee <lcd_cmd>:
     2ee:	cf 93       	push	r28
     2f0:	c8 2f       	mov	r28, r24
     2f2:	83 b1       	in	r24, 0x03	; 3
     2f4:	8e 7f       	andi	r24, 0xFE	; 254
     2f6:	83 b9       	out	0x03, r24	; 3
     2f8:	84 e8       	ldi	r24, 0x84	; 132
     2fa:	86 bf       	out	0x36, r24	; 54
     2fc:	06 b6       	in	r0, 0x36	; 54
     2fe:	07 fe       	sbrs	r0, 7
     300:	fd cf       	rjmp	.-6      	; 0x2fc <lcd_cmd+0xe>
     302:	83 b1       	in	r24, 0x03	; 3
     304:	8f 70       	andi	r24, 0x0F	; 15
     306:	83 b9       	out	0x03, r24	; 3
     308:	84 e8       	ldi	r24, 0x84	; 132
     30a:	86 bf       	out	0x36, r24	; 54
     30c:	06 b6       	in	r0, 0x36	; 54
     30e:	07 fe       	sbrs	r0, 7
     310:	fd cf       	rjmp	.-6      	; 0x30c <lcd_cmd+0x1e>
     312:	83 b1       	in	r24, 0x03	; 3
     314:	9c 2f       	mov	r25, r28
     316:	90 7f       	andi	r25, 0xF0	; 240
     318:	89 2b       	or	r24, r25
     31a:	83 b9       	out	0x03, r24	; 3
     31c:	84 e8       	ldi	r24, 0x84	; 132
     31e:	86 bf       	out	0x36, r24	; 54
     320:	06 b6       	in	r0, 0x36	; 54
     322:	07 fe       	sbrs	r0, 7
     324:	fd cf       	rjmp	.-6      	; 0x320 <lcd_cmd+0x32>
     326:	0e 94 46 01 	call	0x28c	; 0x28c <toggle>
     32a:	83 b1       	in	r24, 0x03	; 3
     32c:	8f 70       	andi	r24, 0x0F	; 15
     32e:	83 b9       	out	0x03, r24	; 3
     330:	84 e8       	ldi	r24, 0x84	; 132
     332:	86 bf       	out	0x36, r24	; 54
     334:	06 b6       	in	r0, 0x36	; 54
     336:	07 fe       	sbrs	r0, 7
     338:	fd cf       	rjmp	.-6      	; 0x334 <lcd_cmd+0x46>
     33a:	23 b1       	in	r18, 0x03	; 3
     33c:	30 e1       	ldi	r19, 0x10	; 16
     33e:	c3 9f       	mul	r28, r19
     340:	c0 01       	movw	r24, r0
     342:	11 24       	eor	r1, r1
     344:	82 2b       	or	r24, r18
     346:	83 b9       	out	0x03, r24	; 3
     348:	84 e8       	ldi	r24, 0x84	; 132
     34a:	86 bf       	out	0x36, r24	; 54
     34c:	06 b6       	in	r0, 0x36	; 54
     34e:	07 fe       	sbrs	r0, 7
     350:	fd cf       	rjmp	.-6      	; 0x34c <lcd_cmd+0x5e>
     352:	0e 94 46 01 	call	0x28c	; 0x28c <toggle>
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <lcd_init>:
     35a:	80 e3       	ldi	r24, 0x30	; 48
     35c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_cmd_hf>
     360:	80 e3       	ldi	r24, 0x30	; 48
     362:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_cmd_hf>
     366:	80 e2       	ldi	r24, 0x20	; 32
     368:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <lcd_cmd_hf>
     36c:	88 e2       	ldi	r24, 0x28	; 40
     36e:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_cmd>
     372:	8c e0       	ldi	r24, 0x0C	; 12
     374:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_cmd>
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_cmd>
     37e:	86 e0       	ldi	r24, 0x06	; 6
     380:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_cmd>
     384:	80 e8       	ldi	r24, 0x80	; 128
     386:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_cmd>
     38a:	08 95       	ret

0000038c <lcd_dwr>:
     38c:	cf 93       	push	r28
     38e:	c8 2f       	mov	r28, r24
     390:	83 b1       	in	r24, 0x03	; 3
     392:	81 60       	ori	r24, 0x01	; 1
     394:	83 b9       	out	0x03, r24	; 3
     396:	84 e8       	ldi	r24, 0x84	; 132
     398:	86 bf       	out	0x36, r24	; 54
     39a:	06 b6       	in	r0, 0x36	; 54
     39c:	07 fe       	sbrs	r0, 7
     39e:	fd cf       	rjmp	.-6      	; 0x39a <lcd_dwr+0xe>
     3a0:	83 b1       	in	r24, 0x03	; 3
     3a2:	8f 70       	andi	r24, 0x0F	; 15
     3a4:	83 b9       	out	0x03, r24	; 3
     3a6:	84 e8       	ldi	r24, 0x84	; 132
     3a8:	86 bf       	out	0x36, r24	; 54
     3aa:	06 b6       	in	r0, 0x36	; 54
     3ac:	07 fe       	sbrs	r0, 7
     3ae:	fd cf       	rjmp	.-6      	; 0x3aa <lcd_dwr+0x1e>
     3b0:	83 b1       	in	r24, 0x03	; 3
     3b2:	9c 2f       	mov	r25, r28
     3b4:	90 7f       	andi	r25, 0xF0	; 240
     3b6:	89 2b       	or	r24, r25
     3b8:	83 b9       	out	0x03, r24	; 3
     3ba:	84 e8       	ldi	r24, 0x84	; 132
     3bc:	86 bf       	out	0x36, r24	; 54
     3be:	06 b6       	in	r0, 0x36	; 54
     3c0:	07 fe       	sbrs	r0, 7
     3c2:	fd cf       	rjmp	.-6      	; 0x3be <lcd_dwr+0x32>
     3c4:	0e 94 46 01 	call	0x28c	; 0x28c <toggle>
     3c8:	83 b1       	in	r24, 0x03	; 3
     3ca:	8f 70       	andi	r24, 0x0F	; 15
     3cc:	83 b9       	out	0x03, r24	; 3
     3ce:	84 e8       	ldi	r24, 0x84	; 132
     3d0:	86 bf       	out	0x36, r24	; 54
     3d2:	06 b6       	in	r0, 0x36	; 54
     3d4:	07 fe       	sbrs	r0, 7
     3d6:	fd cf       	rjmp	.-6      	; 0x3d2 <lcd_dwr+0x46>
     3d8:	23 b1       	in	r18, 0x03	; 3
     3da:	30 e1       	ldi	r19, 0x10	; 16
     3dc:	c3 9f       	mul	r28, r19
     3de:	c0 01       	movw	r24, r0
     3e0:	11 24       	eor	r1, r1
     3e2:	82 2b       	or	r24, r18
     3e4:	83 b9       	out	0x03, r24	; 3
     3e6:	84 e8       	ldi	r24, 0x84	; 132
     3e8:	86 bf       	out	0x36, r24	; 54
     3ea:	06 b6       	in	r0, 0x36	; 54
     3ec:	07 fe       	sbrs	r0, 7
     3ee:	fd cf       	rjmp	.-6      	; 0x3ea <lcd_dwr+0x5e>
     3f0:	0e 94 46 01 	call	0x28c	; 0x28c <toggle>
     3f4:	cf 91       	pop	r28
     3f6:	08 95       	ret

000003f8 <lcd_msg>:
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	ec 01       	movw	r28, r24
     3fe:	03 c0       	rjmp	.+6      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     400:	21 96       	adiw	r28, 0x01	; 1
     402:	0e 94 c6 01 	call	0x38c	; 0x38c <lcd_dwr>
     406:	88 81       	ld	r24, Y
     408:	81 11       	cpse	r24, r1
     40a:	fa cf       	rjmp	.-12     	; 0x400 <__EEPROM_REGION_LENGTH__>
     40c:	df 91       	pop	r29
     40e:	cf 91       	pop	r28
     410:	08 95       	ret

00000412 <i2c_init>:
     412:	82 e6       	ldi	r24, 0x62	; 98
     414:	80 b9       	out	0x00, r24	; 0
     416:	84 e0       	ldi	r24, 0x04	; 4
     418:	86 bf       	out	0x36, r24	; 54
     41a:	11 b8       	out	0x01, r1	; 1
     41c:	08 95       	ret

0000041e <i2c_start>:
     41e:	84 ea       	ldi	r24, 0xA4	; 164
     420:	86 bf       	out	0x36, r24	; 54
     422:	06 b6       	in	r0, 0x36	; 54
     424:	07 fe       	sbrs	r0, 7
     426:	fd cf       	rjmp	.-6      	; 0x422 <i2c_start+0x4>
     428:	08 95       	ret

0000042a <i2c_write>:
     42a:	83 b9       	out	0x03, r24	; 3
     42c:	84 e8       	ldi	r24, 0x84	; 132
     42e:	86 bf       	out	0x36, r24	; 54
     430:	06 b6       	in	r0, 0x36	; 54
     432:	07 fe       	sbrs	r0, 7
     434:	fd cf       	rjmp	.-6      	; 0x430 <i2c_write+0x6>
     436:	08 95       	ret

00000438 <USART_Init>:
     438:	2a b1       	in	r18, 0x0a	; 10
     43a:	28 69       	ori	r18, 0x98	; 152
     43c:	2a b9       	out	0x0a, r18	; 10
     43e:	20 b5       	in	r18, 0x20	; 32
     440:	26 68       	ori	r18, 0x86	; 134
     442:	20 bd       	out	0x20, r18	; 32
     444:	dc 01       	movw	r26, r24
     446:	cb 01       	movw	r24, r22
     448:	88 0f       	add	r24, r24
     44a:	99 1f       	adc	r25, r25
     44c:	aa 1f       	adc	r26, r26
     44e:	bb 1f       	adc	r27, r27
     450:	88 0f       	add	r24, r24
     452:	99 1f       	adc	r25, r25
     454:	aa 1f       	adc	r26, r26
     456:	bb 1f       	adc	r27, r27
     458:	9c 01       	movw	r18, r24
     45a:	ad 01       	movw	r20, r26
     45c:	22 0f       	add	r18, r18
     45e:	33 1f       	adc	r19, r19
     460:	44 1f       	adc	r20, r20
     462:	55 1f       	adc	r21, r21
     464:	22 0f       	add	r18, r18
     466:	33 1f       	adc	r19, r19
     468:	44 1f       	adc	r20, r20
     46a:	55 1f       	adc	r21, r21
     46c:	60 e0       	ldi	r22, 0x00	; 0
     46e:	72 e1       	ldi	r23, 0x12	; 18
     470:	8a e7       	ldi	r24, 0x7A	; 122
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__udivmodsi4>
     478:	8f ef       	ldi	r24, 0xFF	; 255
     47a:	82 0f       	add	r24, r18
     47c:	89 b9       	out	0x09, r24	; 9
     47e:	da 01       	movw	r26, r20
     480:	c9 01       	movw	r24, r18
     482:	01 97       	sbiw	r24, 0x01	; 1
     484:	a1 09       	sbc	r26, r1
     486:	b1 09       	sbc	r27, r1
     488:	89 2f       	mov	r24, r25
     48a:	9a 2f       	mov	r25, r26
     48c:	ab 2f       	mov	r26, r27
     48e:	bb 27       	eor	r27, r27
     490:	80 bd       	out	0x20, r24	; 32
     492:	08 95       	ret

00000494 <USART_TxChar>:
     494:	8c b9       	out	0x0c, r24	; 12
     496:	5d 9b       	sbis	0x0b, 5	; 11
     498:	fe cf       	rjmp	.-4      	; 0x496 <USART_TxChar+0x2>
     49a:	08 95       	ret

0000049c <USART_SendString>:
     49c:	0f 93       	push	r16
     49e:	1f 93       	push	r17
     4a0:	cf 93       	push	r28
     4a2:	df 93       	push	r29
     4a4:	8c 01       	movw	r16, r24
     4a6:	c0 e0       	ldi	r28, 0x00	; 0
     4a8:	d0 e0       	ldi	r29, 0x00	; 0
     4aa:	03 c0       	rjmp	.+6      	; 0x4b2 <USART_SendString+0x16>
     4ac:	0e 94 4a 02 	call	0x494	; 0x494 <USART_TxChar>
     4b0:	21 96       	adiw	r28, 0x01	; 1
     4b2:	f8 01       	movw	r30, r16
     4b4:	ec 0f       	add	r30, r28
     4b6:	fd 1f       	adc	r31, r29
     4b8:	80 81       	ld	r24, Z
     4ba:	81 11       	cpse	r24, r1
     4bc:	f7 cf       	rjmp	.-18     	; 0x4ac <USART_SendString+0x10>
     4be:	df 91       	pop	r29
     4c0:	cf 91       	pop	r28
     4c2:	1f 91       	pop	r17
     4c4:	0f 91       	pop	r16
     4c6:	08 95       	ret

000004c8 <__vector_1>:
     4c8:	1f 92       	push	r1
     4ca:	0f 92       	push	r0
     4cc:	0f b6       	in	r0, 0x3f	; 63
     4ce:	0f 92       	push	r0
     4d0:	11 24       	eor	r1, r1
     4d2:	0f 90       	pop	r0
     4d4:	0f be       	out	0x3f, r0	; 63
     4d6:	0f 90       	pop	r0
     4d8:	1f 90       	pop	r1
     4da:	18 95       	reti

000004dc <__vector_2>:
     4dc:	1f 92       	push	r1
     4de:	0f 92       	push	r0
     4e0:	0f b6       	in	r0, 0x3f	; 63
     4e2:	0f 92       	push	r0
     4e4:	11 24       	eor	r1, r1
     4e6:	0f 90       	pop	r0
     4e8:	0f be       	out	0x3f, r0	; 63
     4ea:	0f 90       	pop	r0
     4ec:	1f 90       	pop	r1
     4ee:	18 95       	reti

000004f0 <__vector_3>:
     4f0:	1f 92       	push	r1
     4f2:	0f 92       	push	r0
     4f4:	0f b6       	in	r0, 0x3f	; 63
     4f6:	0f 92       	push	r0
     4f8:	11 24       	eor	r1, r1
     4fa:	0f 90       	pop	r0
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	0f 90       	pop	r0
     500:	1f 90       	pop	r1
     502:	18 95       	reti

00000504 <GSMConnect>:
     504:	0f 93       	push	r16
     506:	1f 93       	push	r17
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	cd b7       	in	r28, 0x3d	; 61
     50e:	de b7       	in	r29, 0x3e	; 62
     510:	c4 56       	subi	r28, 0x64	; 100
     512:	d1 09       	sbc	r29, r1
     514:	0f b6       	in	r0, 0x3f	; 63
     516:	f8 94       	cli
     518:	de bf       	out	0x3e, r29	; 62
     51a:	0f be       	out	0x3f, r0	; 63
     51c:	cd bf       	out	0x3d, r28	; 61
     51e:	89 e8       	ldi	r24, 0x89	; 137
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	0e 94 4e 02 	call	0x49c	; 0x49c <USART_SendString>
     526:	8f e1       	ldi	r24, 0x1F	; 31
     528:	9e e4       	ldi	r25, 0x4E	; 78
     52a:	01 97       	sbiw	r24, 0x01	; 1
     52c:	f1 f7       	brne	.-4      	; 0x52a <GSMConnect+0x26>
     52e:	00 c0       	rjmp	.+0      	; 0x530 <GSMConnect+0x2c>
     530:	00 00       	nop
     532:	8f e8       	ldi	r24, 0x8F	; 143
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	9f 93       	push	r25
     538:	8f 93       	push	r24
     53a:	9f 93       	push	r25
     53c:	8f 93       	push	r24
     53e:	87 e9       	ldi	r24, 0x97	; 151
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	9f 93       	push	r25
     544:	8f 93       	push	r24
     546:	8e e9       	ldi	r24, 0x9E	; 158
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	9f 93       	push	r25
     54c:	8f 93       	push	r24
     54e:	8e 01       	movw	r16, r28
     550:	0f 5f       	subi	r16, 0xFF	; 255
     552:	1f 4f       	sbci	r17, 0xFF	; 255
     554:	1f 93       	push	r17
     556:	0f 93       	push	r16
     558:	0e 94 44 10 	call	0x2088	; 0x2088 <sprintf>
     55c:	c8 01       	movw	r24, r16
     55e:	0e 94 4e 02 	call	0x49c	; 0x49c <USART_SendString>
     562:	84 e6       	ldi	r24, 0x64	; 100
     564:	e4 e4       	ldi	r30, 0x44	; 68
     566:	f1 e0       	ldi	r31, 0x01	; 1
     568:	df 01       	movw	r26, r30
     56a:	1d 92       	st	X+, r1
     56c:	8a 95       	dec	r24
     56e:	e9 f7       	brne	.-6      	; 0x56a <GSMConnect+0x66>
     570:	8f e1       	ldi	r24, 0x1F	; 31
     572:	9e e4       	ldi	r25, 0x4E	; 78
     574:	01 97       	sbiw	r24, 0x01	; 1
     576:	f1 f7       	brne	.-4      	; 0x574 <GSMConnect+0x70>
     578:	00 c0       	rjmp	.+0      	; 0x57a <GSMConnect+0x76>
     57a:	00 00       	nop
     57c:	86 eb       	ldi	r24, 0xB6	; 182
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	0e 94 4e 02 	call	0x49c	; 0x49c <USART_SendString>
     584:	0f b6       	in	r0, 0x3f	; 63
     586:	f8 94       	cli
     588:	de bf       	out	0x3e, r29	; 62
     58a:	0f be       	out	0x3f, r0	; 63
     58c:	cd bf       	out	0x3d, r28	; 61
     58e:	cc 59       	subi	r28, 0x9C	; 156
     590:	df 4f       	sbci	r29, 0xFF	; 255
     592:	0f b6       	in	r0, 0x3f	; 63
     594:	f8 94       	cli
     596:	de bf       	out	0x3e, r29	; 62
     598:	0f be       	out	0x3f, r0	; 63
     59a:	cd bf       	out	0x3d, r28	; 61
     59c:	df 91       	pop	r29
     59e:	cf 91       	pop	r28
     5a0:	1f 91       	pop	r17
     5a2:	0f 91       	pop	r16
     5a4:	08 95       	ret

000005a6 <openSolenoidValves>:
     5a6:	8f 92       	push	r8
     5a8:	9f 92       	push	r9
     5aa:	af 92       	push	r10
     5ac:	bf 92       	push	r11
     5ae:	cf 92       	push	r12
     5b0:	df 92       	push	r13
     5b2:	ef 92       	push	r14
     5b4:	ff 92       	push	r15
     5b6:	0f 93       	push	r16
     5b8:	1f 93       	push	r17
     5ba:	4b 01       	movw	r8, r22
     5bc:	5c 01       	movw	r10, r24
     5be:	ca 01       	movw	r24, r20
     5c0:	b9 01       	movw	r22, r18
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	4a e7       	ldi	r20, 0x7A	; 122
     5c8:	54 e4       	ldi	r21, 0x44	; 68
     5ca:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulsf3>
     5ce:	6b 01       	movw	r12, r22
     5d0:	7c 01       	movw	r14, r24
     5d2:	20 e0       	ldi	r18, 0x00	; 0
     5d4:	30 e0       	ldi	r19, 0x00	; 0
     5d6:	4a e7       	ldi	r20, 0x7A	; 122
     5d8:	54 e4       	ldi	r21, 0x44	; 68
     5da:	c5 01       	movw	r24, r10
     5dc:	b4 01       	movw	r22, r8
     5de:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulsf3>
     5e2:	4b 01       	movw	r8, r22
     5e4:	5c 01       	movw	r10, r24
     5e6:	9b 01       	movw	r18, r22
     5e8:	ac 01       	movw	r20, r24
     5ea:	c7 01       	movw	r24, r14
     5ec:	b6 01       	movw	r22, r12
     5ee:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     5f2:	18 16       	cp	r1, r24
     5f4:	0c f0       	brlt	.+2      	; 0x5f8 <openSolenoidValves+0x52>
     5f6:	b7 c1       	rjmp	.+878    	; 0x966 <__stack+0x107>
     5f8:	80 91 e7 03 	lds	r24, 0x03E7	; 0x8003e7 <prev_millis1>
     5fc:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <prev_millis1+0x1>
     600:	89 2b       	or	r24, r25
     602:	09 f0       	breq	.+2      	; 0x606 <openSolenoidValves+0x60>
     604:	40 c0       	rjmp	.+128    	; 0x686 <openSolenoidValves+0xe0>
     606:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <millis>
     60a:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <prev_millis1>
     60e:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <prev_millis1+0x1>
     612:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <prev_millis1+0x2>
     616:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <prev_millis1+0x3>
     61a:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__floatunsisf>
     61e:	a5 01       	movw	r20, r10
     620:	94 01       	movw	r18, r8
     622:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__addsf3>
     626:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fixunssfsi>
     62a:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <need_millis1>
     62e:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <need_millis1+0x1>
     632:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <need_millis1+0x2>
     636:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <need_millis1+0x3>
     63a:	81 e0       	ldi	r24, 0x01	; 1
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	a0 e0       	ldi	r26, 0x00	; 0
     640:	b0 e0       	ldi	r27, 0x00	; 0
     642:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     646:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     64a:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     64e:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     652:	85 b3       	in	r24, 0x15	; 21
     654:	84 60       	ori	r24, 0x04	; 4
     656:	85 bb       	out	0x15, r24	; 21
     658:	85 b3       	in	r24, 0x15	; 21
     65a:	87 7f       	andi	r24, 0xF7	; 247
     65c:	85 bb       	out	0x15, r24	; 21
     65e:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     662:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     666:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     66a:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     66e:	01 96       	adiw	r24, 0x01	; 1
     670:	a1 1d       	adc	r26, r1
     672:	b1 1d       	adc	r27, r1
     674:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     678:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     67c:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     680:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     684:	70 c1       	rjmp	.+736    	; 0x966 <__stack+0x107>
     686:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <millis>
     68a:	00 91 e3 03 	lds	r16, 0x03E3	; 0x8003e3 <need_millis1>
     68e:	10 91 e4 03 	lds	r17, 0x03E4	; 0x8003e4 <need_millis1+0x1>
     692:	20 91 e5 03 	lds	r18, 0x03E5	; 0x8003e5 <need_millis1+0x2>
     696:	30 91 e6 03 	lds	r19, 0x03E6	; 0x8003e6 <need_millis1+0x3>
     69a:	06 17       	cp	r16, r22
     69c:	17 07       	cpc	r17, r23
     69e:	28 07       	cpc	r18, r24
     6a0:	39 07       	cpc	r19, r25
     6a2:	08 f0       	brcs	.+2      	; 0x6a6 <openSolenoidValves+0x100>
     6a4:	85 c0       	rjmp	.+266    	; 0x7b0 <openSolenoidValves+0x20a>
     6a6:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     6aa:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     6ae:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     6b2:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     6b6:	82 30       	cpi	r24, 0x02	; 2
     6b8:	91 05       	cpc	r25, r1
     6ba:	a1 05       	cpc	r26, r1
     6bc:	b1 05       	cpc	r27, r1
     6be:	29 f0       	breq	.+10     	; 0x6ca <openSolenoidValves+0x124>
     6c0:	03 97       	sbiw	r24, 0x03	; 3
     6c2:	a1 05       	cpc	r26, r1
     6c4:	b1 05       	cpc	r27, r1
     6c6:	a1 f1       	breq	.+104    	; 0x730 <openSolenoidValves+0x18a>
     6c8:	62 c0       	rjmp	.+196    	; 0x78e <openSolenoidValves+0x1e8>
     6ca:	85 b3       	in	r24, 0x15	; 21
     6cc:	8b 7f       	andi	r24, 0xFB	; 251
     6ce:	85 bb       	out	0x15, r24	; 21
     6d0:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     6d4:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     6d8:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     6dc:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     6e0:	01 96       	adiw	r24, 0x01	; 1
     6e2:	a1 1d       	adc	r26, r1
     6e4:	b1 1d       	adc	r27, r1
     6e6:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     6ea:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     6ee:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     6f2:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     6f6:	60 91 e3 03 	lds	r22, 0x03E3	; 0x8003e3 <need_millis1>
     6fa:	70 91 e4 03 	lds	r23, 0x03E4	; 0x8003e4 <need_millis1+0x1>
     6fe:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <need_millis1+0x2>
     702:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <need_millis1+0x3>
     706:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__floatunsisf>
     70a:	a7 01       	movw	r20, r14
     70c:	96 01       	movw	r18, r12
     70e:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__addsf3>
     712:	a5 01       	movw	r20, r10
     714:	94 01       	movw	r18, r8
     716:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__subsf3>
     71a:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fixunssfsi>
     71e:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <need_millis1>
     722:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <need_millis1+0x1>
     726:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <need_millis1+0x2>
     72a:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <need_millis1+0x3>
     72e:	1b c1       	rjmp	.+566    	; 0x966 <__stack+0x107>
     730:	85 b3       	in	r24, 0x15	; 21
     732:	88 60       	ori	r24, 0x08	; 8
     734:	85 bb       	out	0x15, r24	; 21
     736:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     73a:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     73e:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     742:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     746:	01 96       	adiw	r24, 0x01	; 1
     748:	a1 1d       	adc	r26, r1
     74a:	b1 1d       	adc	r27, r1
     74c:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     750:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     754:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     758:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     75c:	60 91 e3 03 	lds	r22, 0x03E3	; 0x8003e3 <need_millis1>
     760:	70 91 e4 03 	lds	r23, 0x03E4	; 0x8003e4 <need_millis1+0x1>
     764:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <need_millis1+0x2>
     768:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <need_millis1+0x3>
     76c:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__floatunsisf>
     770:	a7 01       	movw	r20, r14
     772:	96 01       	movw	r18, r12
     774:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__addsf3>
     778:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fixunssfsi>
     77c:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <need_millis1>
     780:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <need_millis1+0x1>
     784:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <need_millis1+0x2>
     788:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <need_millis1+0x3>
     78c:	ec c0       	rjmp	.+472    	; 0x966 <__stack+0x107>
     78e:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <case_num1>
     792:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <case_num1+0x1>
     796:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <case_num1+0x2>
     79a:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <case_num1+0x3>
     79e:	10 92 e7 03 	sts	0x03E7, r1	; 0x8003e7 <prev_millis1>
     7a2:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <prev_millis1+0x1>
     7a6:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <prev_millis1+0x2>
     7aa:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <prev_millis1+0x3>
     7ae:	db c0       	rjmp	.+438    	; 0x966 <__stack+0x107>
     7b0:	80 91 e7 03 	lds	r24, 0x03E7	; 0x8003e7 <prev_millis1>
     7b4:	90 91 e8 03 	lds	r25, 0x03E8	; 0x8003e8 <prev_millis1+0x1>
     7b8:	89 2b       	or	r24, r25
     7ba:	09 f0       	breq	.+2      	; 0x7be <openSolenoidValves+0x218>
     7bc:	40 c0       	rjmp	.+128    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
     7be:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <millis>
     7c2:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <prev_millis1>
     7c6:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <prev_millis1+0x1>
     7ca:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <prev_millis1+0x2>
     7ce:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <prev_millis1+0x3>
     7d2:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__floatunsisf>
     7d6:	a7 01       	movw	r20, r14
     7d8:	96 01       	movw	r18, r12
     7da:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__addsf3>
     7de:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fixunssfsi>
     7e2:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <need_millis1>
     7e6:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <need_millis1+0x1>
     7ea:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <need_millis1+0x2>
     7ee:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <need_millis1+0x3>
     7f2:	81 e0       	ldi	r24, 0x01	; 1
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	a0 e0       	ldi	r26, 0x00	; 0
     7f8:	b0 e0       	ldi	r27, 0x00	; 0
     7fa:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     7fe:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     802:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     806:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     80a:	85 b3       	in	r24, 0x15	; 21
     80c:	84 60       	ori	r24, 0x04	; 4
     80e:	85 bb       	out	0x15, r24	; 21
     810:	85 b3       	in	r24, 0x15	; 21
     812:	87 7f       	andi	r24, 0xF7	; 247
     814:	85 bb       	out	0x15, r24	; 21
     816:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     81a:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     81e:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     822:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     826:	01 96       	adiw	r24, 0x01	; 1
     828:	a1 1d       	adc	r26, r1
     82a:	b1 1d       	adc	r27, r1
     82c:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     830:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     834:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     838:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     83c:	94 c0       	rjmp	.+296    	; 0x966 <__stack+0x107>
     83e:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <millis>
     842:	00 91 e3 03 	lds	r16, 0x03E3	; 0x8003e3 <need_millis1>
     846:	10 91 e4 03 	lds	r17, 0x03E4	; 0x8003e4 <need_millis1+0x1>
     84a:	20 91 e5 03 	lds	r18, 0x03E5	; 0x8003e5 <need_millis1+0x2>
     84e:	30 91 e6 03 	lds	r19, 0x03E6	; 0x8003e6 <need_millis1+0x3>
     852:	06 17       	cp	r16, r22
     854:	17 07       	cpc	r17, r23
     856:	28 07       	cpc	r18, r24
     858:	39 07       	cpc	r19, r25
     85a:	08 f0       	brcs	.+2      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     85c:	84 c0       	rjmp	.+264    	; 0x966 <__stack+0x107>
     85e:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     862:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     866:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     86a:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     86e:	82 30       	cpi	r24, 0x02	; 2
     870:	91 05       	cpc	r25, r1
     872:	a1 05       	cpc	r26, r1
     874:	b1 05       	cpc	r27, r1
     876:	29 f0       	breq	.+10     	; 0x882 <__stack+0x23>
     878:	03 97       	sbiw	r24, 0x03	; 3
     87a:	a1 05       	cpc	r26, r1
     87c:	b1 05       	cpc	r27, r1
     87e:	a1 f1       	breq	.+104    	; 0x8e8 <__stack+0x89>
     880:	62 c0       	rjmp	.+196    	; 0x946 <__stack+0xe7>
     882:	85 b3       	in	r24, 0x15	; 21
     884:	88 60       	ori	r24, 0x08	; 8
     886:	85 bb       	out	0x15, r24	; 21
     888:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     88c:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     890:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     894:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     898:	01 96       	adiw	r24, 0x01	; 1
     89a:	a1 1d       	adc	r26, r1
     89c:	b1 1d       	adc	r27, r1
     89e:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     8a2:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     8a6:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     8aa:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     8ae:	60 91 e3 03 	lds	r22, 0x03E3	; 0x8003e3 <need_millis1>
     8b2:	70 91 e4 03 	lds	r23, 0x03E4	; 0x8003e4 <need_millis1+0x1>
     8b6:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <need_millis1+0x2>
     8ba:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <need_millis1+0x3>
     8be:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__floatunsisf>
     8c2:	a5 01       	movw	r20, r10
     8c4:	94 01       	movw	r18, r8
     8c6:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__addsf3>
     8ca:	a7 01       	movw	r20, r14
     8cc:	96 01       	movw	r18, r12
     8ce:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__subsf3>
     8d2:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fixunssfsi>
     8d6:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <need_millis1>
     8da:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <need_millis1+0x1>
     8de:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <need_millis1+0x2>
     8e2:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <need_millis1+0x3>
     8e6:	3f c0       	rjmp	.+126    	; 0x966 <__stack+0x107>
     8e8:	85 b3       	in	r24, 0x15	; 21
     8ea:	8b 7f       	andi	r24, 0xFB	; 251
     8ec:	85 bb       	out	0x15, r24	; 21
     8ee:	80 91 38 03 	lds	r24, 0x0338	; 0x800338 <case_num1>
     8f2:	90 91 39 03 	lds	r25, 0x0339	; 0x800339 <case_num1+0x1>
     8f6:	a0 91 3a 03 	lds	r26, 0x033A	; 0x80033a <case_num1+0x2>
     8fa:	b0 91 3b 03 	lds	r27, 0x033B	; 0x80033b <case_num1+0x3>
     8fe:	01 96       	adiw	r24, 0x01	; 1
     900:	a1 1d       	adc	r26, r1
     902:	b1 1d       	adc	r27, r1
     904:	80 93 38 03 	sts	0x0338, r24	; 0x800338 <case_num1>
     908:	90 93 39 03 	sts	0x0339, r25	; 0x800339 <case_num1+0x1>
     90c:	a0 93 3a 03 	sts	0x033A, r26	; 0x80033a <case_num1+0x2>
     910:	b0 93 3b 03 	sts	0x033B, r27	; 0x80033b <case_num1+0x3>
     914:	60 91 e3 03 	lds	r22, 0x03E3	; 0x8003e3 <need_millis1>
     918:	70 91 e4 03 	lds	r23, 0x03E4	; 0x8003e4 <need_millis1+0x1>
     91c:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <need_millis1+0x2>
     920:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <need_millis1+0x3>
     924:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__floatunsisf>
     928:	a5 01       	movw	r20, r10
     92a:	94 01       	movw	r18, r8
     92c:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__addsf3>
     930:	0e 94 ee 0c 	call	0x19dc	; 0x19dc <__fixunssfsi>
     934:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <need_millis1>
     938:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <need_millis1+0x1>
     93c:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <need_millis1+0x2>
     940:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <need_millis1+0x3>
     944:	10 c0       	rjmp	.+32     	; 0x966 <__stack+0x107>
     946:	10 92 38 03 	sts	0x0338, r1	; 0x800338 <case_num1>
     94a:	10 92 39 03 	sts	0x0339, r1	; 0x800339 <case_num1+0x1>
     94e:	10 92 3a 03 	sts	0x033A, r1	; 0x80033a <case_num1+0x2>
     952:	10 92 3b 03 	sts	0x033B, r1	; 0x80033b <case_num1+0x3>
     956:	10 92 e7 03 	sts	0x03E7, r1	; 0x8003e7 <prev_millis1>
     95a:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <prev_millis1+0x1>
     95e:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <prev_millis1+0x2>
     962:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <prev_millis1+0x3>
     966:	1f 91       	pop	r17
     968:	0f 91       	pop	r16
     96a:	ff 90       	pop	r15
     96c:	ef 90       	pop	r14
     96e:	df 90       	pop	r13
     970:	cf 90       	pop	r12
     972:	bf 90       	pop	r11
     974:	af 90       	pop	r10
     976:	9f 90       	pop	r9
     978:	8f 90       	pop	r8
     97a:	08 95       	ret

0000097c <getOxygenTankPressure>:
     97c:	60 e0       	ldi	r22, 0x00	; 0
     97e:	70 e8       	ldi	r23, 0x80	; 128
     980:	8b e3       	ldi	r24, 0x3B	; 59
     982:	96 e4       	ldi	r25, 0x46	; 70
     984:	08 95       	ret

00000986 <controlSolenoidValve>:
     986:	4f 92       	push	r4
     988:	5f 92       	push	r5
     98a:	6f 92       	push	r6
     98c:	7f 92       	push	r7
     98e:	8f 92       	push	r8
     990:	9f 92       	push	r9
     992:	af 92       	push	r10
     994:	bf 92       	push	r11
     996:	cf 92       	push	r12
     998:	df 92       	push	r13
     99a:	ef 92       	push	r14
     99c:	ff 92       	push	r15
     99e:	6b 01       	movw	r12, r22
     9a0:	7c 01       	movw	r14, r24
     9a2:	ba 01       	movw	r22, r20
     9a4:	55 0f       	add	r21, r21
     9a6:	88 0b       	sbc	r24, r24
     9a8:	99 0b       	sbc	r25, r25
     9aa:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__floatsisf>
     9ae:	9b 01       	movw	r18, r22
     9b0:	ac 01       	movw	r20, r24
     9b2:	60 e0       	ldi	r22, 0x00	; 0
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	80 ef       	ldi	r24, 0xF0	; 240
     9b8:	91 e4       	ldi	r25, 0x41	; 65
     9ba:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <__divsf3>
     9be:	4b 01       	movw	r8, r22
     9c0:	5c 01       	movw	r10, r24
     9c2:	2a e4       	ldi	r18, 0x4A	; 74
     9c4:	3c e0       	ldi	r19, 0x0C	; 12
     9c6:	42 ea       	ldi	r20, 0xA2	; 162
     9c8:	5f e3       	ldi	r21, 0x3F	; 63
     9ca:	c7 01       	movw	r24, r14
     9cc:	b6 01       	movw	r22, r12
     9ce:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulsf3>
     9d2:	29 e2       	ldi	r18, 0x29	; 41
     9d4:	3c e5       	ldi	r19, 0x5C	; 92
     9d6:	45 ed       	ldi	r20, 0xD5	; 213
     9d8:	51 e4       	ldi	r21, 0x41	; 65
     9da:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__subsf3>
     9de:	21 e7       	ldi	r18, 0x71	; 113
     9e0:	3d e3       	ldi	r19, 0x3D	; 61
     9e2:	4a e4       	ldi	r20, 0x4A	; 74
     9e4:	5f e3       	ldi	r21, 0x3F	; 63
     9e6:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulsf3>
     9ea:	2b 01       	movw	r4, r22
     9ec:	3c 01       	movw	r6, r24
     9ee:	a7 01       	movw	r20, r14
     9f0:	96 01       	movw	r18, r12
     9f2:	60 e0       	ldi	r22, 0x00	; 0
     9f4:	70 e0       	ldi	r23, 0x00	; 0
     9f6:	88 ec       	ldi	r24, 0xC8	; 200
     9f8:	92 e4       	ldi	r25, 0x42	; 66
     9fa:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__subsf3>
     9fe:	9b 01       	movw	r18, r22
     a00:	ac 01       	movw	r20, r24
     a02:	c3 01       	movw	r24, r6
     a04:	b2 01       	movw	r22, r4
     a06:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <__divsf3>
     a0a:	2b 01       	movw	r4, r22
     a0c:	3c 01       	movw	r6, r24
     a0e:	0e 94 be 04 	call	0x97c	; 0x97c <getOxygenTankPressure>
     a12:	9b 01       	movw	r18, r22
     a14:	ac 01       	movw	r20, r24
     a16:	68 ed       	ldi	r22, 0xD8	; 216
     a18:	73 e1       	ldi	r23, 0x13	; 19
     a1a:	86 e0       	ldi	r24, 0x06	; 6
     a1c:	98 e4       	ldi	r25, 0x48	; 72
     a1e:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <__divsf3>
     a22:	6b 01       	movw	r12, r22
     a24:	7c 01       	movw	r14, r24
     a26:	2d ec       	ldi	r18, 0xCD	; 205
     a28:	3c ec       	ldi	r19, 0xCC	; 204
     a2a:	4c e9       	ldi	r20, 0x9C	; 156
     a2c:	5f e3       	ldi	r21, 0x3F	; 63
     a2e:	c7 01       	movw	r24, r14
     a30:	b6 01       	movw	r22, r12
     a32:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <__divsf3>
     a36:	0e 94 47 0e 	call	0x1c8e	; 0x1c8e <sqrt>
     a3a:	9b 01       	movw	r18, r22
     a3c:	ac 01       	movw	r20, r24
     a3e:	c3 01       	movw	r24, r6
     a40:	b2 01       	movw	r22, r4
     a42:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulsf3>
     a46:	6b 01       	movw	r12, r22
     a48:	7c 01       	movw	r14, r24
     a4a:	20 e0       	ldi	r18, 0x00	; 0
     a4c:	30 e0       	ldi	r19, 0x00	; 0
     a4e:	40 e8       	ldi	r20, 0x80	; 128
     a50:	5f e3       	ldi	r21, 0x3F	; 63
     a52:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     a56:	18 16       	cp	r1, r24
     a58:	5c f4       	brge	.+22     	; 0xa70 <controlSolenoidValve+0xea>
     a5a:	a7 01       	movw	r20, r14
     a5c:	96 01       	movw	r18, r12
     a5e:	c5 01       	movw	r24, r10
     a60:	b4 01       	movw	r22, r8
     a62:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <__divsf3>
     a66:	a5 01       	movw	r20, r10
     a68:	94 01       	movw	r18, r8
     a6a:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <openSolenoidValves>
     a6e:	0c c0       	rjmp	.+24     	; 0xa88 <controlSolenoidValve+0x102>
     a70:	a7 01       	movw	r20, r14
     a72:	96 01       	movw	r18, r12
     a74:	c5 01       	movw	r24, r10
     a76:	b4 01       	movw	r22, r8
     a78:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <__mulsf3>
     a7c:	9b 01       	movw	r18, r22
     a7e:	ac 01       	movw	r20, r24
     a80:	c5 01       	movw	r24, r10
     a82:	b4 01       	movw	r22, r8
     a84:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <openSolenoidValves>
     a88:	ff 90       	pop	r15
     a8a:	ef 90       	pop	r14
     a8c:	df 90       	pop	r13
     a8e:	cf 90       	pop	r12
     a90:	bf 90       	pop	r11
     a92:	af 90       	pop	r10
     a94:	9f 90       	pop	r9
     a96:	8f 90       	pop	r8
     a98:	7f 90       	pop	r7
     a9a:	6f 90       	pop	r6
     a9c:	5f 90       	pop	r5
     a9e:	4f 90       	pop	r4
     aa0:	08 95       	ret

00000aa2 <checkBloodOxygenLevel>:
     aa2:	80 e0       	ldi	r24, 0x00	; 0
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	08 95       	ret

00000aa8 <PatientTemp>:
     aa8:	85 e2       	ldi	r24, 0x25	; 37
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	08 95       	ret

00000aae <automationOn>:
    //get values and update  Breath per min,Oxygen Percentage,Breath Length
}

bool automationOn() {
    return 1;//Check Automation On/Off
}
     aae:	81 e0       	ldi	r24, 0x01	; 1
     ab0:	08 95       	ret

00000ab2 <turnOn>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}
     ab2:	81 e0       	ldi	r24, 0x01	; 1
     ab4:	08 95       	ret

00000ab6 <notifyDisplay>:
        } else { return 1; }
    }else{return 0;}
}

void notifyDisplay(const char *string) {
   lcd_msg(string);
     ab6:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_msg>
     aba:	08 95       	ret

00000abc <concatS>:
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
}
const char *concatS(const char *string, char sPercentage[4]) {
     abc:	ef 92       	push	r14
     abe:	ff 92       	push	r15
     ac0:	0f 93       	push	r16
     ac2:	1f 93       	push	r17
     ac4:	cf 93       	push	r28
     ac6:	df 93       	push	r29
     ac8:	8c 01       	movw	r16, r24
     aca:	eb 01       	movw	r28, r22
    char *result = malloc(strlen(string) + strlen(sPercentage) + 1);
     acc:	fc 01       	movw	r30, r24
     ace:	01 90       	ld	r0, Z+
     ad0:	00 20       	and	r0, r0
     ad2:	e9 f7       	brne	.-6      	; 0xace <concatS+0x12>
     ad4:	31 97       	sbiw	r30, 0x01	; 1
     ad6:	cf 01       	movw	r24, r30
     ad8:	80 1b       	sub	r24, r16
     ada:	91 0b       	sbc	r25, r17
     adc:	fb 01       	movw	r30, r22
     ade:	01 90       	ld	r0, Z+
     ae0:	00 20       	and	r0, r0
     ae2:	e9 f7       	brne	.-6      	; 0xade <concatS+0x22>
     ae4:	31 97       	sbiw	r30, 0x01	; 1
     ae6:	e6 1b       	sub	r30, r22
     ae8:	f7 0b       	sbc	r31, r23
     aea:	8e 0f       	add	r24, r30
     aec:	9f 1f       	adc	r25, r31
     aee:	01 96       	adiw	r24, 0x01	; 1
     af0:	0e 94 ec 0e 	call	0x1dd8	; 0x1dd8 <malloc>
     af4:	7c 01       	movw	r14, r24
    strcpy(result, string);
     af6:	b8 01       	movw	r22, r16
     af8:	0e 94 18 10 	call	0x2030	; 0x2030 <strcpy>
    strcat(result, sPercentage);
     afc:	be 01       	movw	r22, r28
     afe:	c7 01       	movw	r24, r14
     b00:	0e 94 0d 10 	call	0x201a	; 0x201a <strcat>
    return result;
}
     b04:	c7 01       	movw	r24, r14
     b06:	df 91       	pop	r29
     b08:	cf 91       	pop	r28
     b0a:	1f 91       	pop	r17
     b0c:	0f 91       	pop	r16
     b0e:	ff 90       	pop	r15
     b10:	ef 90       	pop	r14
     b12:	08 95       	ret

00000b14 <sendSMS>:




void sendSMS(char no[], const char *string) {
     b14:	bf 92       	push	r11
     b16:	cf 92       	push	r12
     b18:	df 92       	push	r13
     b1a:	ef 92       	push	r14
     b1c:	ff 92       	push	r15
     b1e:	0f 93       	push	r16
     b20:	1f 93       	push	r17
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	cd b7       	in	r28, 0x3d	; 61
     b28:	de b7       	in	r29, 0x3e	; 62
     b2a:	c4 56       	subi	r28, 0x64	; 100
     b2c:	d1 09       	sbc	r29, r1
     b2e:	0f b6       	in	r0, 0x3f	; 63
     b30:	f8 94       	cli
     b32:	de bf       	out	0x3e, r29	; 62
     b34:	0f be       	out	0x3f, r0	; 63
     b36:	cd bf       	out	0x3d, r28	; 61
     b38:	18 2f       	mov	r17, r24
     b3a:	09 2f       	mov	r16, r25
     b3c:	c6 2e       	mov	r12, r22
     b3e:	b7 2e       	mov	r11, r23
    USART_SendString("AT\r");
     b40:	8f ec       	ldi	r24, 0xCF	; 207
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	0e 94 4e 02 	call	0x49c	; 0x49c <USART_SendString>
     b48:	8f e1       	ldi	r24, 0x1F	; 31
     b4a:	9e e4       	ldi	r25, 0x4E	; 78
     b4c:	01 97       	sbiw	r24, 0x01	; 1
     b4e:	f1 f7       	brne	.-4      	; 0xb4c <sendSMS+0x38>
     b50:	00 c0       	rjmp	.+0      	; 0xb52 <sendSMS+0x3e>
     b52:	00 00       	nop
    _delay_ms(10);
    USART_SendString("AT+CMGF=1\r");
     b54:	83 ed       	ldi	r24, 0xD3	; 211
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 4e 02 	call	0x49c	; 0x49c <USART_SendString>
     b5c:	ef e1       	ldi	r30, 0x1F	; 31
     b5e:	fe e4       	ldi	r31, 0x4E	; 78
     b60:	31 97       	sbiw	r30, 0x01	; 1
     b62:	f1 f7       	brne	.-4      	; 0xb60 <sendSMS+0x4c>
     b64:	00 c0       	rjmp	.+0      	; 0xb66 <sendSMS+0x52>
     b66:	00 00       	nop
    _delay_ms(10);
    char data_buffer[100];
    sprintf(data_buffer,"AT+CMGS=%s\r",no);
     b68:	0f 93       	push	r16
     b6a:	1f 93       	push	r17
     b6c:	8e ed       	ldi	r24, 0xDE	; 222
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	9f 93       	push	r25
     b72:	8f 93       	push	r24
     b74:	8e 01       	movw	r16, r28
     b76:	0f 5f       	subi	r16, 0xFF	; 255
     b78:	1f 4f       	sbci	r17, 0xFF	; 255
     b7a:	1f 93       	push	r17
     b7c:	0f 93       	push	r16
     b7e:	0e 94 44 10 	call	0x2088	; 0x2088 <sprintf>
    USART_SendString(data_buffer);
     b82:	c8 01       	movw	r24, r16
     b84:	0e 94 4e 02 	call	0x49c	; 0x49c <USART_SendString>
    memset(USART_BUFFER, 0, 100);
     b88:	0f 2e       	mov	r0, r31
     b8a:	f4 e4       	ldi	r31, 0x44	; 68
     b8c:	ef 2e       	mov	r14, r31
     b8e:	f1 e0       	ldi	r31, 0x01	; 1
     b90:	ff 2e       	mov	r15, r31
     b92:	f0 2d       	mov	r31, r0
     b94:	0f 2e       	mov	r0, r31
     b96:	f4 e6       	ldi	r31, 0x64	; 100
     b98:	df 2e       	mov	r13, r31
     b9a:	f0 2d       	mov	r31, r0
     b9c:	f7 01       	movw	r30, r14
     b9e:	8d 2d       	mov	r24, r13
     ba0:	11 92       	st	Z+, r1
     ba2:	8a 95       	dec	r24
     ba4:	e9 f7       	brne	.-6      	; 0xba0 <sendSMS+0x8c>
    sprintf(data_buffer,"%s\r",string);
     ba6:	bf 92       	push	r11
     ba8:	cf 92       	push	r12
     baa:	86 ee       	ldi	r24, 0xE6	; 230
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	9f 93       	push	r25
     bb0:	8f 93       	push	r24
     bb2:	1f 93       	push	r17
     bb4:	0f 93       	push	r16
     bb6:	0e 94 44 10 	call	0x2088	; 0x2088 <sprintf>
    USART_SendString(data_buffer);
     bba:	c8 01       	movw	r24, r16
     bbc:	0e 94 4e 02 	call	0x49c	; 0x49c <USART_SendString>
    memset(USART_BUFFER, 0, 100);//clear data buffer
     bc0:	f7 01       	movw	r30, r14
     bc2:	11 92       	st	Z+, r1
     bc4:	da 94       	dec	r13
     bc6:	e9 f7       	brne	.-6      	; 0xbc2 <sendSMS+0xae>

}
     bc8:	0f b6       	in	r0, 0x3f	; 63
     bca:	f8 94       	cli
     bcc:	de bf       	out	0x3e, r29	; 62
     bce:	0f be       	out	0x3f, r0	; 63
     bd0:	cd bf       	out	0x3d, r28	; 61
     bd2:	cc 59       	subi	r28, 0x9C	; 156
     bd4:	df 4f       	sbci	r29, 0xFF	; 255
     bd6:	0f b6       	in	r0, 0x3f	; 63
     bd8:	f8 94       	cli
     bda:	de bf       	out	0x3e, r29	; 62
     bdc:	0f be       	out	0x3f, r0	; 63
     bde:	cd bf       	out	0x3d, r28	; 61
     be0:	df 91       	pop	r29
     be2:	cf 91       	pop	r28
     be4:	1f 91       	pop	r17
     be6:	0f 91       	pop	r16
     be8:	ff 90       	pop	r15
     bea:	ef 90       	pop	r14
     bec:	df 90       	pop	r13
     bee:	cf 90       	pop	r12
     bf0:	bf 90       	pop	r11
     bf2:	08 95       	ret

00000bf4 <notifyGSM>:

void notifyDisplay(const char *string) {
   lcd_msg(string);
}

void notifyGSM(const char *string, int percentage) {
     bf4:	0f 93       	push	r16
     bf6:	1f 93       	push	r17
     bf8:	cf 93       	push	r28
     bfa:	df 93       	push	r29
     bfc:	00 d0       	rcall	.+0      	; 0xbfe <notifyGSM+0xa>
     bfe:	00 d0       	rcall	.+0      	; 0xc00 <notifyGSM+0xc>
     c00:	cd b7       	in	r28, 0x3d	; 61
     c02:	de b7       	in	r29, 0x3e	; 62
     c04:	8c 01       	movw	r16, r24
     c06:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     c08:	4a e0       	ldi	r20, 0x0A	; 10
     c0a:	be 01       	movw	r22, r28
     c0c:	6f 5f       	subi	r22, 0xFF	; 255
     c0e:	7f 4f       	sbci	r23, 0xFF	; 255
     c10:	0e 94 1f 10 	call	0x203e	; 0x203e <__itoa_ncheck>
    char Spercentage[4];
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
     c14:	be 01       	movw	r22, r28
     c16:	6f 5f       	subi	r22, 0xFF	; 255
     c18:	7f 4f       	sbci	r23, 0xFF	; 255
     c1a:	c8 01       	movw	r24, r16
     c1c:	0e 94 5e 05 	call	0xabc	; 0xabc <concatS>
     c20:	bc 01       	movw	r22, r24
     c22:	85 e8       	ldi	r24, 0x85	; 133
     c24:	94 e0       	ldi	r25, 0x04	; 4
     c26:	0e 94 8a 05 	call	0xb14	; 0xb14 <sendSMS>
}
     c2a:	0f 90       	pop	r0
     c2c:	0f 90       	pop	r0
     c2e:	0f 90       	pop	r0
     c30:	0f 90       	pop	r0
     c32:	df 91       	pop	r29
     c34:	cf 91       	pop	r28
     c36:	1f 91       	pop	r17
     c38:	0f 91       	pop	r16
     c3a:	08 95       	ret

00000c3c <checkPatientTemp>:

void notifySpeaker() {

}

bool checkPatientTemp() {
     c3c:	cf 92       	push	r12
     c3e:	df 92       	push	r13
     c40:	ef 92       	push	r14
     c42:	ff 92       	push	r15
     c44:	0f 93       	push	r16
     c46:	1f 93       	push	r17
     c48:	cf 93       	push	r28
     c4a:	df 93       	push	r29
     c4c:	00 d0       	rcall	.+0      	; 0xc4e <checkPatientTemp+0x12>
     c4e:	00 d0       	rcall	.+0      	; 0xc50 <checkPatientTemp+0x14>
     c50:	cd b7       	in	r28, 0x3d	; 61
     c52:	de b7       	in	r29, 0x3e	; 62
    if(PatientTemp()>37.2||PatientTemp()<36.1){
     c54:	0e 94 54 05 	call	0xaa8	; 0xaa8 <PatientTemp>
     c58:	8c 01       	movw	r16, r24
     c5a:	bc 01       	movw	r22, r24
     c5c:	99 0f       	add	r25, r25
     c5e:	88 0b       	sbc	r24, r24
     c60:	99 0b       	sbc	r25, r25
     c62:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__floatsisf>
     c66:	6b 01       	movw	r12, r22
     c68:	7c 01       	movw	r14, r24
     c6a:	2d ec       	ldi	r18, 0xCD	; 205
     c6c:	3c ec       	ldi	r19, 0xCC	; 204
     c6e:	44 e1       	ldi	r20, 0x14	; 20
     c70:	52 e4       	ldi	r21, 0x42	; 66
     c72:	0e 94 cf 0d 	call	0x1b9e	; 0x1b9e <__gesf2>
     c76:	18 16       	cp	r1, r24
     c78:	54 f0       	brlt	.+20     	; 0xc8e <checkPatientTemp+0x52>
     c7a:	26 e6       	ldi	r18, 0x66	; 102
     c7c:	36 e6       	ldi	r19, 0x66	; 102
     c7e:	40 e1       	ldi	r20, 0x10	; 16
     c80:	52 e4       	ldi	r21, 0x42	; 66
     c82:	c7 01       	movw	r24, r14
     c84:	b6 01       	movw	r22, r12
     c86:	0e 94 77 0c 	call	0x18ee	; 0x18ee <__cmpsf2>
     c8a:	88 23       	and	r24, r24
     c8c:	bc f4       	brge	.+46     	; 0xcbc <checkPatientTemp+0x80>
        notifyGSM("Temperature Not Normal-",PatientTemp());
     c8e:	b8 01       	movw	r22, r16
     c90:	8a ee       	ldi	r24, 0xEA	; 234
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <notifyGSM>
     c98:	4a e0       	ldi	r20, 0x0A	; 10
     c9a:	be 01       	movw	r22, r28
     c9c:	6f 5f       	subi	r22, 0xFF	; 255
     c9e:	7f 4f       	sbci	r23, 0xFF	; 255
     ca0:	c8 01       	movw	r24, r16
     ca2:	0e 94 1f 10 	call	0x203e	; 0x203e <__itoa_ncheck>
		char Spercentage[4];
		itoa(PatientTemp(),Spercentage,10);//convert int to string
		notifyDisplay(concatS("Temperature Not Normal-", Spercentage)); 
     ca6:	be 01       	movw	r22, r28
     ca8:	6f 5f       	subi	r22, 0xFF	; 255
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	8a ee       	ldi	r24, 0xEA	; 234
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	0e 94 5e 05 	call	0xabc	; 0xabc <concatS>
     cb4:	0e 94 5b 05 	call	0xab6	; 0xab6 <notifyDisplay>
        notifySpeaker();
        return 0;
     cb8:	80 e0       	ldi	r24, 0x00	; 0
     cba:	01 c0       	rjmp	.+2      	; 0xcbe <checkPatientTemp+0x82>
    }else{
        return 1;
     cbc:	81 e0       	ldi	r24, 0x01	; 1
    }
    //if normal return 1 else notify speaker and gsm
}
     cbe:	0f 90       	pop	r0
     cc0:	0f 90       	pop	r0
     cc2:	0f 90       	pop	r0
     cc4:	0f 90       	pop	r0
     cc6:	df 91       	pop	r29
     cc8:	cf 91       	pop	r28
     cca:	1f 91       	pop	r17
     ccc:	0f 91       	pop	r16
     cce:	ff 90       	pop	r15
     cd0:	ef 90       	pop	r14
     cd2:	df 90       	pop	r13
     cd4:	cf 90       	pop	r12
     cd6:	08 95       	ret

00000cd8 <oxygenTankPercentage>:

}

int oxygenTankPercentage() {
    return 80;
}
     cd8:	80 e5       	ldi	r24, 0x50	; 80
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	08 95       	ret

00000cde <checkStatus>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}

bool checkStatus() {
     cde:	ef 92       	push	r14
     ce0:	ff 92       	push	r15
     ce2:	1f 93       	push	r17
     ce4:	cf 93       	push	r28
     ce6:	df 93       	push	r29
     ce8:	00 d0       	rcall	.+0      	; 0xcea <checkStatus+0xc>
     cea:	00 d0       	rcall	.+0      	; 0xcec <checkStatus+0xe>
     cec:	cd b7       	in	r28, 0x3d	; 61
     cee:	de b7       	in	r29, 0x3e	; 62
    if (turnOn()) {
     cf0:	0e 94 59 05 	call	0xab2	; 0xab2 <turnOn>
     cf4:	18 2f       	mov	r17, r24
     cf6:	88 23       	and	r24, r24
     cf8:	e9 f0       	breq	.+58     	; 0xd34 <checkStatus+0x56>
        if (oxygenTankPercentage() < 10) {
     cfa:	0e 94 6c 06 	call	0xcd8	; 0xcd8 <oxygenTankPercentage>
     cfe:	7c 01       	movw	r14, r24
     d00:	8a e0       	ldi	r24, 0x0A	; 10
     d02:	e8 16       	cp	r14, r24
     d04:	f1 04       	cpc	r15, r1
     d06:	b4 f4       	brge	.+44     	; 0xd34 <checkStatus+0x56>
            notifyGSM("Oxygen Tank Percentage : ", oxygenTankPercentage());
     d08:	b7 01       	movw	r22, r14
     d0a:	82 e0       	ldi	r24, 0x02	; 2
     d0c:	91 e0       	ldi	r25, 0x01	; 1
     d0e:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <notifyGSM>
     d12:	4a e0       	ldi	r20, 0x0A	; 10
     d14:	be 01       	movw	r22, r28
     d16:	6f 5f       	subi	r22, 0xFF	; 255
     d18:	7f 4f       	sbci	r23, 0xFF	; 255
     d1a:	c7 01       	movw	r24, r14
     d1c:	0e 94 1f 10 	call	0x203e	; 0x203e <__itoa_ncheck>
			char Spercentage[4];
			itoa(oxygenTankPercentage(),Spercentage,10);//convert int to string
            notifyDisplay(concatS("Oxygen Tank Percentage ", Spercentage));
     d20:	be 01       	movw	r22, r28
     d22:	6f 5f       	subi	r22, 0xFF	; 255
     d24:	7f 4f       	sbci	r23, 0xFF	; 255
     d26:	8c e1       	ldi	r24, 0x1C	; 28
     d28:	91 e0       	ldi	r25, 0x01	; 1
     d2a:	0e 94 5e 05 	call	0xabc	; 0xabc <concatS>
     d2e:	0e 94 5b 05 	call	0xab6	; 0xab6 <notifyDisplay>
            return 0;
     d32:	10 e0       	ldi	r17, 0x00	; 0
        } else { return 1; }
    }else{return 0;}
}
     d34:	81 2f       	mov	r24, r17
     d36:	0f 90       	pop	r0
     d38:	0f 90       	pop	r0
     d3a:	0f 90       	pop	r0
     d3c:	0f 90       	pop	r0
     d3e:	df 91       	pop	r29
     d40:	cf 91       	pop	r28
     d42:	1f 91       	pop	r17
     d44:	ff 90       	pop	r15
     d46:	ef 90       	pop	r14
     d48:	08 95       	ret

00000d4a <startStepperMotor>:
}

int oxygenTankPercentage() {
    return 80;
}
void startStepperMotor(int breathPerMin, int BreathLength) {
     d4a:	0f 93       	push	r16
     d4c:	1f 93       	push	r17
     d4e:	cf 93       	push	r28
     d50:	df 93       	push	r29
     d52:	ec 01       	movw	r28, r24
	if(prev_millis0==NULL){
     d54:	80 91 93 04 	lds	r24, 0x0493	; 0x800493 <prev_millis0>
     d58:	90 91 94 04 	lds	r25, 0x0494	; 0x800494 <prev_millis0+0x1>
     d5c:	89 2b       	or	r24, r25
     d5e:	09 f0       	breq	.+2      	; 0xd62 <startStepperMotor+0x18>
     d60:	3f c0       	rjmp	.+126    	; 0xde0 <startStepperMotor+0x96>
		
		prev_millis0=millis();
     d62:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <millis>
     d66:	8b 01       	movw	r16, r22
     d68:	9c 01       	movw	r18, r24
     d6a:	60 93 93 04 	sts	0x0493, r22	; 0x800493 <prev_millis0>
     d6e:	70 93 94 04 	sts	0x0494, r23	; 0x800494 <prev_millis0+0x1>
     d72:	80 93 95 04 	sts	0x0495, r24	; 0x800495 <prev_millis0+0x2>
     d76:	90 93 96 04 	sts	0x0496, r25	; 0x800496 <prev_millis0+0x3>
		need_millis0=30000/(breathPerMin*10)+prev_millis0;
     d7a:	ce 01       	movw	r24, r28
     d7c:	88 0f       	add	r24, r24
     d7e:	99 1f       	adc	r25, r25
     d80:	be 01       	movw	r22, r28
     d82:	66 0f       	add	r22, r22
     d84:	77 1f       	adc	r23, r23
     d86:	66 0f       	add	r22, r22
     d88:	77 1f       	adc	r23, r23
     d8a:	66 0f       	add	r22, r22
     d8c:	77 1f       	adc	r23, r23
     d8e:	68 0f       	add	r22, r24
     d90:	79 1f       	adc	r23, r25
     d92:	80 e3       	ldi	r24, 0x30	; 48
     d94:	95 e7       	ldi	r25, 0x75	; 117
     d96:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
     d9a:	cb 01       	movw	r24, r22
     d9c:	77 0f       	add	r23, r23
     d9e:	aa 0b       	sbc	r26, r26
     da0:	bb 0b       	sbc	r27, r27
     da2:	08 0f       	add	r16, r24
     da4:	19 1f       	adc	r17, r25
     da6:	2a 1f       	adc	r18, r26
     da8:	3b 1f       	adc	r19, r27
     daa:	00 93 3d 03 	sts	0x033D, r16	; 0x80033d <need_millis0>
     dae:	10 93 3e 03 	sts	0x033E, r17	; 0x80033e <need_millis0+0x1>
     db2:	20 93 3f 03 	sts	0x033F, r18	; 0x80033f <need_millis0+0x2>
     db6:	30 93 40 03 	sts	0x0340, r19	; 0x800340 <need_millis0+0x3>
		case_num0=1;
     dba:	81 e0       	ldi	r24, 0x01	; 1
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
     dc2:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
		PORTC = PORTC | (1<<4);case_num0++;
     dc6:	85 b3       	in	r24, 0x15	; 21
     dc8:	80 61       	ori	r24, 0x10	; 16
     dca:	85 bb       	out	0x15, r24	; 21
     dcc:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
     dd0:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
     dd4:	01 96       	adiw	r24, 0x01	; 1
     dd6:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
     dda:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
     dde:	e3 c3       	rjmp	.+1990   	; 0x15a6 <startStepperMotor+0x85c>
		}else if(need_millis0<millis()){
     de0:	0e 94 fa 0b 	call	0x17f4	; 0x17f4 <millis>
     de4:	00 91 3d 03 	lds	r16, 0x033D	; 0x80033d <need_millis0>
     de8:	10 91 3e 03 	lds	r17, 0x033E	; 0x80033e <need_millis0+0x1>
     dec:	20 91 3f 03 	lds	r18, 0x033F	; 0x80033f <need_millis0+0x2>
     df0:	30 91 40 03 	lds	r19, 0x0340	; 0x800340 <need_millis0+0x3>
     df4:	06 17       	cp	r16, r22
     df6:	17 07       	cpc	r17, r23
     df8:	28 07       	cpc	r18, r24
     dfa:	39 07       	cpc	r19, r25
     dfc:	08 f0       	brcs	.+2      	; 0xe00 <startStepperMotor+0xb6>
     dfe:	d3 c3       	rjmp	.+1958   	; 0x15a6 <startStepperMotor+0x85c>
		
		switch(case_num0){
     e00:	e0 91 e1 03 	lds	r30, 0x03E1	; 0x8003e1 <case_num0>
     e04:	f0 91 e2 03 	lds	r31, 0x03E2	; 0x8003e2 <case_num0+0x1>
     e08:	32 97       	sbiw	r30, 0x02	; 2
     e0a:	e3 31       	cpi	r30, 0x13	; 19
     e0c:	f1 05       	cpc	r31, r1
     e0e:	08 f0       	brcs	.+2      	; 0xe12 <startStepperMotor+0xc8>
     e10:	be c3       	rjmp	.+1916   	; 0x158e <startStepperMotor+0x844>
     e12:	e6 5d       	subi	r30, 0xD6	; 214
     e14:	ff 4f       	sbci	r31, 0xFF	; 255
     e16:	0c 94 d2 0e 	jmp	0x1da4	; 0x1da4 <__tablejump2__>
			
			case 2:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     e1a:	85 b3       	in	r24, 0x15	; 21
     e1c:	80 64       	ori	r24, 0x40	; 64
     e1e:	85 bb       	out	0x15, r24	; 21
     e20:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
     e24:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
     e28:	01 96       	adiw	r24, 0x01	; 1
     e2a:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
     e2e:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
     e32:	ce 01       	movw	r24, r28
     e34:	88 0f       	add	r24, r24
     e36:	99 1f       	adc	r25, r25
     e38:	be 01       	movw	r22, r28
     e3a:	66 0f       	add	r22, r22
     e3c:	77 1f       	adc	r23, r23
     e3e:	66 0f       	add	r22, r22
     e40:	77 1f       	adc	r23, r23
     e42:	66 0f       	add	r22, r22
     e44:	77 1f       	adc	r23, r23
     e46:	68 0f       	add	r22, r24
     e48:	79 1f       	adc	r23, r25
     e4a:	80 e3       	ldi	r24, 0x30	; 48
     e4c:	95 e7       	ldi	r25, 0x75	; 117
     e4e:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
     e52:	ab 01       	movw	r20, r22
     e54:	77 0f       	add	r23, r23
     e56:	66 0b       	sbc	r22, r22
     e58:	77 0b       	sbc	r23, r23
     e5a:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
     e5e:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
     e62:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
     e66:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
     e6a:	84 0f       	add	r24, r20
     e6c:	95 1f       	adc	r25, r21
     e6e:	a6 1f       	adc	r26, r22
     e70:	b7 1f       	adc	r27, r23
     e72:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
     e76:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
     e7a:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
     e7e:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
     e82:	91 c3       	rjmp	.+1826   	; 0x15a6 <startStepperMotor+0x85c>
			case 3:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     e84:	85 b3       	in	r24, 0x15	; 21
     e86:	8f 7e       	andi	r24, 0xEF	; 239
     e88:	85 bb       	out	0x15, r24	; 21
     e8a:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
     e8e:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
     e92:	01 96       	adiw	r24, 0x01	; 1
     e94:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
     e98:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
     e9c:	ce 01       	movw	r24, r28
     e9e:	88 0f       	add	r24, r24
     ea0:	99 1f       	adc	r25, r25
     ea2:	be 01       	movw	r22, r28
     ea4:	66 0f       	add	r22, r22
     ea6:	77 1f       	adc	r23, r23
     ea8:	66 0f       	add	r22, r22
     eaa:	77 1f       	adc	r23, r23
     eac:	66 0f       	add	r22, r22
     eae:	77 1f       	adc	r23, r23
     eb0:	68 0f       	add	r22, r24
     eb2:	79 1f       	adc	r23, r25
     eb4:	80 e3       	ldi	r24, 0x30	; 48
     eb6:	95 e7       	ldi	r25, 0x75	; 117
     eb8:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
     ebc:	ab 01       	movw	r20, r22
     ebe:	77 0f       	add	r23, r23
     ec0:	66 0b       	sbc	r22, r22
     ec2:	77 0b       	sbc	r23, r23
     ec4:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
     ec8:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
     ecc:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
     ed0:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
     ed4:	84 0f       	add	r24, r20
     ed6:	95 1f       	adc	r25, r21
     ed8:	a6 1f       	adc	r26, r22
     eda:	b7 1f       	adc	r27, r23
     edc:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
     ee0:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
     ee4:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
     ee8:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
     eec:	5c c3       	rjmp	.+1720   	; 0x15a6 <startStepperMotor+0x85c>
			case 4:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     eee:	85 b3       	in	r24, 0x15	; 21
     ef0:	80 62       	ori	r24, 0x20	; 32
     ef2:	85 bb       	out	0x15, r24	; 21
     ef4:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
     ef8:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
     efc:	01 96       	adiw	r24, 0x01	; 1
     efe:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
     f02:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
     f06:	ce 01       	movw	r24, r28
     f08:	88 0f       	add	r24, r24
     f0a:	99 1f       	adc	r25, r25
     f0c:	be 01       	movw	r22, r28
     f0e:	66 0f       	add	r22, r22
     f10:	77 1f       	adc	r23, r23
     f12:	66 0f       	add	r22, r22
     f14:	77 1f       	adc	r23, r23
     f16:	66 0f       	add	r22, r22
     f18:	77 1f       	adc	r23, r23
     f1a:	68 0f       	add	r22, r24
     f1c:	79 1f       	adc	r23, r25
     f1e:	80 e3       	ldi	r24, 0x30	; 48
     f20:	95 e7       	ldi	r25, 0x75	; 117
     f22:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
     f26:	ab 01       	movw	r20, r22
     f28:	77 0f       	add	r23, r23
     f2a:	66 0b       	sbc	r22, r22
     f2c:	77 0b       	sbc	r23, r23
     f2e:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
     f32:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
     f36:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
     f3a:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
     f3e:	84 0f       	add	r24, r20
     f40:	95 1f       	adc	r25, r21
     f42:	a6 1f       	adc	r26, r22
     f44:	b7 1f       	adc	r27, r23
     f46:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
     f4a:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
     f4e:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
     f52:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
     f56:	27 c3       	rjmp	.+1614   	; 0x15a6 <startStepperMotor+0x85c>
			case 5:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     f58:	85 b3       	in	r24, 0x15	; 21
     f5a:	8f 7b       	andi	r24, 0xBF	; 191
     f5c:	85 bb       	out	0x15, r24	; 21
     f5e:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
     f62:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
     f66:	01 96       	adiw	r24, 0x01	; 1
     f68:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
     f6c:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
     f70:	ce 01       	movw	r24, r28
     f72:	88 0f       	add	r24, r24
     f74:	99 1f       	adc	r25, r25
     f76:	be 01       	movw	r22, r28
     f78:	66 0f       	add	r22, r22
     f7a:	77 1f       	adc	r23, r23
     f7c:	66 0f       	add	r22, r22
     f7e:	77 1f       	adc	r23, r23
     f80:	66 0f       	add	r22, r22
     f82:	77 1f       	adc	r23, r23
     f84:	68 0f       	add	r22, r24
     f86:	79 1f       	adc	r23, r25
     f88:	80 e3       	ldi	r24, 0x30	; 48
     f8a:	95 e7       	ldi	r25, 0x75	; 117
     f8c:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
     f90:	ab 01       	movw	r20, r22
     f92:	77 0f       	add	r23, r23
     f94:	66 0b       	sbc	r22, r22
     f96:	77 0b       	sbc	r23, r23
     f98:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
     f9c:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
     fa0:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
     fa4:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
     fa8:	84 0f       	add	r24, r20
     faa:	95 1f       	adc	r25, r21
     fac:	a6 1f       	adc	r26, r22
     fae:	b7 1f       	adc	r27, r23
     fb0:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
     fb4:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
     fb8:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
     fbc:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
     fc0:	f2 c2       	rjmp	.+1508   	; 0x15a6 <startStepperMotor+0x85c>
			case 6:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     fc2:	85 b3       	in	r24, 0x15	; 21
     fc4:	80 68       	ori	r24, 0x80	; 128
     fc6:	85 bb       	out	0x15, r24	; 21
     fc8:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
     fcc:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
     fd6:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
     fda:	ce 01       	movw	r24, r28
     fdc:	88 0f       	add	r24, r24
     fde:	99 1f       	adc	r25, r25
     fe0:	be 01       	movw	r22, r28
     fe2:	66 0f       	add	r22, r22
     fe4:	77 1f       	adc	r23, r23
     fe6:	66 0f       	add	r22, r22
     fe8:	77 1f       	adc	r23, r23
     fea:	66 0f       	add	r22, r22
     fec:	77 1f       	adc	r23, r23
     fee:	68 0f       	add	r22, r24
     ff0:	79 1f       	adc	r23, r25
     ff2:	80 e3       	ldi	r24, 0x30	; 48
     ff4:	95 e7       	ldi	r25, 0x75	; 117
     ff6:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
     ffa:	ab 01       	movw	r20, r22
     ffc:	77 0f       	add	r23, r23
     ffe:	66 0b       	sbc	r22, r22
    1000:	77 0b       	sbc	r23, r23
    1002:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1006:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    100a:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    100e:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    1012:	84 0f       	add	r24, r20
    1014:	95 1f       	adc	r25, r21
    1016:	a6 1f       	adc	r26, r22
    1018:	b7 1f       	adc	r27, r23
    101a:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    101e:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    1022:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    1026:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    102a:	bd c2       	rjmp	.+1402   	; 0x15a6 <startStepperMotor+0x85c>
			case 7:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    102c:	85 b3       	in	r24, 0x15	; 21
    102e:	8f 7d       	andi	r24, 0xDF	; 223
    1030:	85 bb       	out	0x15, r24	; 21
    1032:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    1036:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    103a:	01 96       	adiw	r24, 0x01	; 1
    103c:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    1040:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    1044:	ce 01       	movw	r24, r28
    1046:	88 0f       	add	r24, r24
    1048:	99 1f       	adc	r25, r25
    104a:	be 01       	movw	r22, r28
    104c:	66 0f       	add	r22, r22
    104e:	77 1f       	adc	r23, r23
    1050:	66 0f       	add	r22, r22
    1052:	77 1f       	adc	r23, r23
    1054:	66 0f       	add	r22, r22
    1056:	77 1f       	adc	r23, r23
    1058:	68 0f       	add	r22, r24
    105a:	79 1f       	adc	r23, r25
    105c:	80 e3       	ldi	r24, 0x30	; 48
    105e:	95 e7       	ldi	r25, 0x75	; 117
    1060:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    1064:	ab 01       	movw	r20, r22
    1066:	77 0f       	add	r23, r23
    1068:	66 0b       	sbc	r22, r22
    106a:	77 0b       	sbc	r23, r23
    106c:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1070:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    1074:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    1078:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    107c:	84 0f       	add	r24, r20
    107e:	95 1f       	adc	r25, r21
    1080:	a6 1f       	adc	r26, r22
    1082:	b7 1f       	adc	r27, r23
    1084:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    1088:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    108c:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    1090:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    1094:	88 c2       	rjmp	.+1296   	; 0x15a6 <startStepperMotor+0x85c>
			case 8:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1096:	85 b3       	in	r24, 0x15	; 21
    1098:	80 61       	ori	r24, 0x10	; 16
    109a:	85 bb       	out	0x15, r24	; 21
    109c:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    10a0:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    10a4:	01 96       	adiw	r24, 0x01	; 1
    10a6:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    10aa:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    10ae:	ce 01       	movw	r24, r28
    10b0:	88 0f       	add	r24, r24
    10b2:	99 1f       	adc	r25, r25
    10b4:	be 01       	movw	r22, r28
    10b6:	66 0f       	add	r22, r22
    10b8:	77 1f       	adc	r23, r23
    10ba:	66 0f       	add	r22, r22
    10bc:	77 1f       	adc	r23, r23
    10be:	66 0f       	add	r22, r22
    10c0:	77 1f       	adc	r23, r23
    10c2:	68 0f       	add	r22, r24
    10c4:	79 1f       	adc	r23, r25
    10c6:	80 e3       	ldi	r24, 0x30	; 48
    10c8:	95 e7       	ldi	r25, 0x75	; 117
    10ca:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    10ce:	ab 01       	movw	r20, r22
    10d0:	77 0f       	add	r23, r23
    10d2:	66 0b       	sbc	r22, r22
    10d4:	77 0b       	sbc	r23, r23
    10d6:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    10da:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    10de:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    10e2:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    10e6:	84 0f       	add	r24, r20
    10e8:	95 1f       	adc	r25, r21
    10ea:	a6 1f       	adc	r26, r22
    10ec:	b7 1f       	adc	r27, r23
    10ee:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    10f2:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    10f6:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    10fa:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    10fe:	53 c2       	rjmp	.+1190   	; 0x15a6 <startStepperMotor+0x85c>
			case 9:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1100:	85 b3       	in	r24, 0x15	; 21
    1102:	8f 77       	andi	r24, 0x7F	; 127
    1104:	85 bb       	out	0x15, r24	; 21
    1106:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    110a:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    110e:	01 96       	adiw	r24, 0x01	; 1
    1110:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    1114:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    1118:	ce 01       	movw	r24, r28
    111a:	88 0f       	add	r24, r24
    111c:	99 1f       	adc	r25, r25
    111e:	be 01       	movw	r22, r28
    1120:	66 0f       	add	r22, r22
    1122:	77 1f       	adc	r23, r23
    1124:	66 0f       	add	r22, r22
    1126:	77 1f       	adc	r23, r23
    1128:	66 0f       	add	r22, r22
    112a:	77 1f       	adc	r23, r23
    112c:	68 0f       	add	r22, r24
    112e:	79 1f       	adc	r23, r25
    1130:	80 e3       	ldi	r24, 0x30	; 48
    1132:	95 e7       	ldi	r25, 0x75	; 117
    1134:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    1138:	ab 01       	movw	r20, r22
    113a:	77 0f       	add	r23, r23
    113c:	66 0b       	sbc	r22, r22
    113e:	77 0b       	sbc	r23, r23
    1140:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1144:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    1148:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    114c:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    1150:	84 0f       	add	r24, r20
    1152:	95 1f       	adc	r25, r21
    1154:	a6 1f       	adc	r26, r22
    1156:	b7 1f       	adc	r27, r23
    1158:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    115c:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    1160:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    1164:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    1168:	1e c2       	rjmp	.+1084   	; 0x15a6 <startStepperMotor+0x85c>
			case 10:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    116a:	85 b3       	in	r24, 0x15	; 21
    116c:	8f 7e       	andi	r24, 0xEF	; 239
    116e:	85 bb       	out	0x15, r24	; 21
    1170:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    1174:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    1178:	01 96       	adiw	r24, 0x01	; 1
    117a:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    117e:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    1182:	ce 01       	movw	r24, r28
    1184:	88 0f       	add	r24, r24
    1186:	99 1f       	adc	r25, r25
    1188:	be 01       	movw	r22, r28
    118a:	66 0f       	add	r22, r22
    118c:	77 1f       	adc	r23, r23
    118e:	66 0f       	add	r22, r22
    1190:	77 1f       	adc	r23, r23
    1192:	66 0f       	add	r22, r22
    1194:	77 1f       	adc	r23, r23
    1196:	68 0f       	add	r22, r24
    1198:	79 1f       	adc	r23, r25
    119a:	80 e3       	ldi	r24, 0x30	; 48
    119c:	95 e7       	ldi	r25, 0x75	; 117
    119e:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    11a2:	ab 01       	movw	r20, r22
    11a4:	77 0f       	add	r23, r23
    11a6:	66 0b       	sbc	r22, r22
    11a8:	77 0b       	sbc	r23, r23
    11aa:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    11ae:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    11b2:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    11b6:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    11ba:	84 0f       	add	r24, r20
    11bc:	95 1f       	adc	r25, r21
    11be:	a6 1f       	adc	r26, r22
    11c0:	b7 1f       	adc	r27, r23
    11c2:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    11c6:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    11ca:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    11ce:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    11d2:	e9 c1       	rjmp	.+978    	; 0x15a6 <startStepperMotor+0x85c>
			case 11:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    11d4:	85 b3       	in	r24, 0x15	; 21
    11d6:	80 61       	ori	r24, 0x10	; 16
    11d8:	85 bb       	out	0x15, r24	; 21
    11da:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    11de:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    11e2:	01 96       	adiw	r24, 0x01	; 1
    11e4:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    11e8:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    11ec:	ce 01       	movw	r24, r28
    11ee:	88 0f       	add	r24, r24
    11f0:	99 1f       	adc	r25, r25
    11f2:	be 01       	movw	r22, r28
    11f4:	66 0f       	add	r22, r22
    11f6:	77 1f       	adc	r23, r23
    11f8:	66 0f       	add	r22, r22
    11fa:	77 1f       	adc	r23, r23
    11fc:	66 0f       	add	r22, r22
    11fe:	77 1f       	adc	r23, r23
    1200:	68 0f       	add	r22, r24
    1202:	79 1f       	adc	r23, r25
    1204:	80 e3       	ldi	r24, 0x30	; 48
    1206:	95 e7       	ldi	r25, 0x75	; 117
    1208:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    120c:	ab 01       	movw	r20, r22
    120e:	77 0f       	add	r23, r23
    1210:	66 0b       	sbc	r22, r22
    1212:	77 0b       	sbc	r23, r23
    1214:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1218:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    121c:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    1220:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    1224:	84 0f       	add	r24, r20
    1226:	95 1f       	adc	r25, r21
    1228:	a6 1f       	adc	r26, r22
    122a:	b7 1f       	adc	r27, r23
    122c:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    1230:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    1234:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    1238:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    123c:	b4 c1       	rjmp	.+872    	; 0x15a6 <startStepperMotor+0x85c>
			case 12:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    123e:	85 b3       	in	r24, 0x15	; 21
    1240:	80 68       	ori	r24, 0x80	; 128
    1242:	85 bb       	out	0x15, r24	; 21
    1244:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    1248:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    124c:	01 96       	adiw	r24, 0x01	; 1
    124e:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    1252:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    1256:	ce 01       	movw	r24, r28
    1258:	88 0f       	add	r24, r24
    125a:	99 1f       	adc	r25, r25
    125c:	be 01       	movw	r22, r28
    125e:	66 0f       	add	r22, r22
    1260:	77 1f       	adc	r23, r23
    1262:	66 0f       	add	r22, r22
    1264:	77 1f       	adc	r23, r23
    1266:	66 0f       	add	r22, r22
    1268:	77 1f       	adc	r23, r23
    126a:	68 0f       	add	r22, r24
    126c:	79 1f       	adc	r23, r25
    126e:	80 e3       	ldi	r24, 0x30	; 48
    1270:	95 e7       	ldi	r25, 0x75	; 117
    1272:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    1276:	ab 01       	movw	r20, r22
    1278:	77 0f       	add	r23, r23
    127a:	66 0b       	sbc	r22, r22
    127c:	77 0b       	sbc	r23, r23
    127e:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1282:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    1286:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    128a:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    128e:	84 0f       	add	r24, r20
    1290:	95 1f       	adc	r25, r21
    1292:	a6 1f       	adc	r26, r22
    1294:	b7 1f       	adc	r27, r23
    1296:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    129a:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    129e:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    12a2:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    12a6:	7f c1       	rjmp	.+766    	; 0x15a6 <startStepperMotor+0x85c>
			case 13:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    12a8:	85 b3       	in	r24, 0x15	; 21
    12aa:	8f 7e       	andi	r24, 0xEF	; 239
    12ac:	85 bb       	out	0x15, r24	; 21
    12ae:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    12b2:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    12b6:	01 96       	adiw	r24, 0x01	; 1
    12b8:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    12bc:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    12c0:	ce 01       	movw	r24, r28
    12c2:	88 0f       	add	r24, r24
    12c4:	99 1f       	adc	r25, r25
    12c6:	be 01       	movw	r22, r28
    12c8:	66 0f       	add	r22, r22
    12ca:	77 1f       	adc	r23, r23
    12cc:	66 0f       	add	r22, r22
    12ce:	77 1f       	adc	r23, r23
    12d0:	66 0f       	add	r22, r22
    12d2:	77 1f       	adc	r23, r23
    12d4:	68 0f       	add	r22, r24
    12d6:	79 1f       	adc	r23, r25
    12d8:	80 e3       	ldi	r24, 0x30	; 48
    12da:	95 e7       	ldi	r25, 0x75	; 117
    12dc:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    12e0:	ab 01       	movw	r20, r22
    12e2:	77 0f       	add	r23, r23
    12e4:	66 0b       	sbc	r22, r22
    12e6:	77 0b       	sbc	r23, r23
    12e8:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    12ec:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    12f0:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    12f4:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    12f8:	84 0f       	add	r24, r20
    12fa:	95 1f       	adc	r25, r21
    12fc:	a6 1f       	adc	r26, r22
    12fe:	b7 1f       	adc	r27, r23
    1300:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    1304:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    1308:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    130c:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    1310:	4a c1       	rjmp	.+660    	; 0x15a6 <startStepperMotor+0x85c>
			case 14:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1312:	85 b3       	in	r24, 0x15	; 21
    1314:	80 62       	ori	r24, 0x20	; 32
    1316:	85 bb       	out	0x15, r24	; 21
    1318:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    131c:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    1320:	01 96       	adiw	r24, 0x01	; 1
    1322:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    1326:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    132a:	ce 01       	movw	r24, r28
    132c:	88 0f       	add	r24, r24
    132e:	99 1f       	adc	r25, r25
    1330:	be 01       	movw	r22, r28
    1332:	66 0f       	add	r22, r22
    1334:	77 1f       	adc	r23, r23
    1336:	66 0f       	add	r22, r22
    1338:	77 1f       	adc	r23, r23
    133a:	66 0f       	add	r22, r22
    133c:	77 1f       	adc	r23, r23
    133e:	68 0f       	add	r22, r24
    1340:	79 1f       	adc	r23, r25
    1342:	80 e3       	ldi	r24, 0x30	; 48
    1344:	95 e7       	ldi	r25, 0x75	; 117
    1346:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    134a:	ab 01       	movw	r20, r22
    134c:	77 0f       	add	r23, r23
    134e:	66 0b       	sbc	r22, r22
    1350:	77 0b       	sbc	r23, r23
    1352:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1356:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    135a:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    135e:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    1362:	84 0f       	add	r24, r20
    1364:	95 1f       	adc	r25, r21
    1366:	a6 1f       	adc	r26, r22
    1368:	b7 1f       	adc	r27, r23
    136a:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    136e:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    1372:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    1376:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    137a:	15 c1       	rjmp	.+554    	; 0x15a6 <startStepperMotor+0x85c>
			case 16:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    137c:	85 b3       	in	r24, 0x15	; 21
    137e:	8f 77       	andi	r24, 0x7F	; 127
    1380:	85 bb       	out	0x15, r24	; 21
    1382:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    1386:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    138a:	01 96       	adiw	r24, 0x01	; 1
    138c:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    1390:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    1394:	ce 01       	movw	r24, r28
    1396:	88 0f       	add	r24, r24
    1398:	99 1f       	adc	r25, r25
    139a:	be 01       	movw	r22, r28
    139c:	66 0f       	add	r22, r22
    139e:	77 1f       	adc	r23, r23
    13a0:	66 0f       	add	r22, r22
    13a2:	77 1f       	adc	r23, r23
    13a4:	66 0f       	add	r22, r22
    13a6:	77 1f       	adc	r23, r23
    13a8:	68 0f       	add	r22, r24
    13aa:	79 1f       	adc	r23, r25
    13ac:	80 e3       	ldi	r24, 0x30	; 48
    13ae:	95 e7       	ldi	r25, 0x75	; 117
    13b0:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    13b4:	ab 01       	movw	r20, r22
    13b6:	77 0f       	add	r23, r23
    13b8:	66 0b       	sbc	r22, r22
    13ba:	77 0b       	sbc	r23, r23
    13bc:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    13c0:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    13c4:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    13c8:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    13cc:	84 0f       	add	r24, r20
    13ce:	95 1f       	adc	r25, r21
    13d0:	a6 1f       	adc	r26, r22
    13d2:	b7 1f       	adc	r27, r23
    13d4:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    13d8:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    13dc:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    13e0:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    13e4:	e0 c0       	rjmp	.+448    	; 0x15a6 <startStepperMotor+0x85c>
			case 17:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    13e6:	85 b3       	in	r24, 0x15	; 21
    13e8:	80 64       	ori	r24, 0x40	; 64
    13ea:	85 bb       	out	0x15, r24	; 21
    13ec:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    13f0:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    13f4:	01 96       	adiw	r24, 0x01	; 1
    13f6:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    13fa:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    13fe:	ce 01       	movw	r24, r28
    1400:	88 0f       	add	r24, r24
    1402:	99 1f       	adc	r25, r25
    1404:	be 01       	movw	r22, r28
    1406:	66 0f       	add	r22, r22
    1408:	77 1f       	adc	r23, r23
    140a:	66 0f       	add	r22, r22
    140c:	77 1f       	adc	r23, r23
    140e:	66 0f       	add	r22, r22
    1410:	77 1f       	adc	r23, r23
    1412:	68 0f       	add	r22, r24
    1414:	79 1f       	adc	r23, r25
    1416:	80 e3       	ldi	r24, 0x30	; 48
    1418:	95 e7       	ldi	r25, 0x75	; 117
    141a:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    141e:	ab 01       	movw	r20, r22
    1420:	77 0f       	add	r23, r23
    1422:	66 0b       	sbc	r22, r22
    1424:	77 0b       	sbc	r23, r23
    1426:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    142a:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    142e:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    1432:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    1436:	84 0f       	add	r24, r20
    1438:	95 1f       	adc	r25, r21
    143a:	a6 1f       	adc	r26, r22
    143c:	b7 1f       	adc	r27, r23
    143e:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    1442:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    1446:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    144a:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    144e:	ab c0       	rjmp	.+342    	; 0x15a6 <startStepperMotor+0x85c>
			case 18:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1450:	85 b3       	in	r24, 0x15	; 21
    1452:	8f 7d       	andi	r24, 0xDF	; 223
    1454:	85 bb       	out	0x15, r24	; 21
    1456:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    145a:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    145e:	01 96       	adiw	r24, 0x01	; 1
    1460:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    1464:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    1468:	ce 01       	movw	r24, r28
    146a:	88 0f       	add	r24, r24
    146c:	99 1f       	adc	r25, r25
    146e:	be 01       	movw	r22, r28
    1470:	66 0f       	add	r22, r22
    1472:	77 1f       	adc	r23, r23
    1474:	66 0f       	add	r22, r22
    1476:	77 1f       	adc	r23, r23
    1478:	66 0f       	add	r22, r22
    147a:	77 1f       	adc	r23, r23
    147c:	68 0f       	add	r22, r24
    147e:	79 1f       	adc	r23, r25
    1480:	80 e3       	ldi	r24, 0x30	; 48
    1482:	95 e7       	ldi	r25, 0x75	; 117
    1484:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    1488:	ab 01       	movw	r20, r22
    148a:	77 0f       	add	r23, r23
    148c:	66 0b       	sbc	r22, r22
    148e:	77 0b       	sbc	r23, r23
    1490:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1494:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    1498:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    149c:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    14a0:	84 0f       	add	r24, r20
    14a2:	95 1f       	adc	r25, r21
    14a4:	a6 1f       	adc	r26, r22
    14a6:	b7 1f       	adc	r27, r23
    14a8:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    14ac:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    14b0:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    14b4:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    14b8:	76 c0       	rjmp	.+236    	; 0x15a6 <startStepperMotor+0x85c>
			case 19:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    14ba:	85 b3       	in	r24, 0x15	; 21
    14bc:	8f 7b       	andi	r24, 0xBF	; 191
    14be:	85 bb       	out	0x15, r24	; 21
    14c0:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    14c4:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    14c8:	01 96       	adiw	r24, 0x01	; 1
    14ca:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    14ce:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    14d2:	ce 01       	movw	r24, r28
    14d4:	88 0f       	add	r24, r24
    14d6:	99 1f       	adc	r25, r25
    14d8:	be 01       	movw	r22, r28
    14da:	66 0f       	add	r22, r22
    14dc:	77 1f       	adc	r23, r23
    14de:	66 0f       	add	r22, r22
    14e0:	77 1f       	adc	r23, r23
    14e2:	66 0f       	add	r22, r22
    14e4:	77 1f       	adc	r23, r23
    14e6:	68 0f       	add	r22, r24
    14e8:	79 1f       	adc	r23, r25
    14ea:	80 e3       	ldi	r24, 0x30	; 48
    14ec:	95 e7       	ldi	r25, 0x75	; 117
    14ee:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    14f2:	ab 01       	movw	r20, r22
    14f4:	77 0f       	add	r23, r23
    14f6:	66 0b       	sbc	r22, r22
    14f8:	77 0b       	sbc	r23, r23
    14fa:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    14fe:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    1502:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    1506:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    150a:	84 0f       	add	r24, r20
    150c:	95 1f       	adc	r25, r21
    150e:	a6 1f       	adc	r26, r22
    1510:	b7 1f       	adc	r27, r23
    1512:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    1516:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    151a:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    151e:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    1522:	41 c0       	rjmp	.+130    	; 0x15a6 <startStepperMotor+0x85c>
			case 20:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1524:	85 b3       	in	r24, 0x15	; 21
    1526:	8f 7e       	andi	r24, 0xEF	; 239
    1528:	85 bb       	out	0x15, r24	; 21
    152a:	80 91 e1 03 	lds	r24, 0x03E1	; 0x8003e1 <case_num0>
    152e:	90 91 e2 03 	lds	r25, 0x03E2	; 0x8003e2 <case_num0+0x1>
    1532:	01 96       	adiw	r24, 0x01	; 1
    1534:	90 93 e2 03 	sts	0x03E2, r25	; 0x8003e2 <case_num0+0x1>
    1538:	80 93 e1 03 	sts	0x03E1, r24	; 0x8003e1 <case_num0>
    153c:	ce 01       	movw	r24, r28
    153e:	88 0f       	add	r24, r24
    1540:	99 1f       	adc	r25, r25
    1542:	be 01       	movw	r22, r28
    1544:	66 0f       	add	r22, r22
    1546:	77 1f       	adc	r23, r23
    1548:	66 0f       	add	r22, r22
    154a:	77 1f       	adc	r23, r23
    154c:	66 0f       	add	r22, r22
    154e:	77 1f       	adc	r23, r23
    1550:	68 0f       	add	r22, r24
    1552:	79 1f       	adc	r23, r25
    1554:	80 e3       	ldi	r24, 0x30	; 48
    1556:	95 e7       	ldi	r25, 0x75	; 117
    1558:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <__divmodhi4>
    155c:	ab 01       	movw	r20, r22
    155e:	77 0f       	add	r23, r23
    1560:	66 0b       	sbc	r22, r22
    1562:	77 0b       	sbc	r23, r23
    1564:	80 91 3d 03 	lds	r24, 0x033D	; 0x80033d <need_millis0>
    1568:	90 91 3e 03 	lds	r25, 0x033E	; 0x80033e <need_millis0+0x1>
    156c:	a0 91 3f 03 	lds	r26, 0x033F	; 0x80033f <need_millis0+0x2>
    1570:	b0 91 40 03 	lds	r27, 0x0340	; 0x800340 <need_millis0+0x3>
    1574:	84 0f       	add	r24, r20
    1576:	95 1f       	adc	r25, r21
    1578:	a6 1f       	adc	r26, r22
    157a:	b7 1f       	adc	r27, r23
    157c:	80 93 3d 03 	sts	0x033D, r24	; 0x80033d <need_millis0>
    1580:	90 93 3e 03 	sts	0x033E, r25	; 0x80033e <need_millis0+0x1>
    1584:	a0 93 3f 03 	sts	0x033F, r26	; 0x80033f <need_millis0+0x2>
    1588:	b0 93 40 03 	sts	0x0340, r27	; 0x800340 <need_millis0+0x3>
    158c:	0c c0       	rjmp	.+24     	; 0x15a6 <startStepperMotor+0x85c>
			default:case_num0=NULL;prev_millis0=NULL;
    158e:	10 92 e2 03 	sts	0x03E2, r1	; 0x8003e2 <case_num0+0x1>
    1592:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <case_num0>
    1596:	10 92 93 04 	sts	0x0493, r1	; 0x800493 <prev_millis0>
    159a:	10 92 94 04 	sts	0x0494, r1	; 0x800494 <prev_millis0+0x1>
    159e:	10 92 95 04 	sts	0x0495, r1	; 0x800495 <prev_millis0+0x2>
    15a2:	10 92 96 04 	sts	0x0496, r1	; 0x800496 <prev_millis0+0x3>
	



	
}
    15a6:	df 91       	pop	r29
    15a8:	cf 91       	pop	r28
    15aa:	1f 91       	pop	r17
    15ac:	0f 91       	pop	r16
    15ae:	08 95       	ret

000015b0 <startOxygenAndAirSupply>:
    memset(USART_BUFFER, 0, 100);
    _delay_ms(10);
    USART_SendString("AT+SAPBR=1,1\r");
}
char *boolstring( _Bool b ) { return b ? "true" : "false"; }
void startOxygenAndAirSupply(int percentage) {
    15b0:	cf 93       	push	r28
    15b2:	df 93       	push	r29
    controlOxygenPercentage(checkBloodOxygenLevel());
	controlSolenoidValve(Oxygen_percentage, Average_Breath_Per_Min);
    15b4:	c0 91 68 00 	lds	r28, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    15b8:	d0 91 69 00 	lds	r29, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    15bc:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <Oxygen_percentage>
    15c0:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    15c4:	07 2e       	mov	r0, r23
    15c6:	00 0c       	add	r0, r0
    15c8:	88 0b       	sbc	r24, r24
    15ca:	99 0b       	sbc	r25, r25
    15cc:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__floatsisf>
    15d0:	ae 01       	movw	r20, r28
    15d2:	0e 94 c3 04 	call	0x986	; 0x986 <controlSolenoidValve>
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    15d6:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    15da:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    15de:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    15e2:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    15e6:	0e 94 a5 06 	call	0xd4a	; 0xd4a <startStepperMotor>
    
}
    15ea:	df 91       	pop	r29
    15ec:	cf 91       	pop	r28
    15ee:	08 95       	ret

000015f0 <startAirSupply>:
}



void startAirSupply() {
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    15f0:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    15f4:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    15f8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    15fc:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    1600:	0e 94 a5 06 	call	0xd4a	; 0xd4a <startStepperMotor>
    controlSolenoidValve(100, Average_Breath_Per_Min);
    1604:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    1608:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    160c:	60 e0       	ldi	r22, 0x00	; 0
    160e:	70 e0       	ldi	r23, 0x00	; 0
    1610:	88 ec       	ldi	r24, 0xC8	; 200
    1612:	92 e4       	ldi	r25, 0x42	; 66
    1614:	0e 94 c3 04 	call	0x986	; 0x986 <controlSolenoidValve>
    1618:	08 95       	ret

0000161a <main>:


int main(void)
{
    /* Replace with your application code */
    DDRC = DDRC | (1<<2); // solenoid valve
    161a:	84 b3       	in	r24, 0x14	; 20
    161c:	84 60       	ori	r24, 0x04	; 4
    161e:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<3); // solenoid valve
    1620:	84 b3       	in	r24, 0x14	; 20
    1622:	88 60       	ori	r24, 0x08	; 8
    1624:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<4); // stepper motor
    1626:	84 b3       	in	r24, 0x14	; 20
    1628:	80 61       	ori	r24, 0x10	; 16
    162a:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<5); // stepper motor
    162c:	84 b3       	in	r24, 0x14	; 20
    162e:	80 62       	ori	r24, 0x20	; 32
    1630:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<6); // stepper motor
    1632:	84 b3       	in	r24, 0x14	; 20
    1634:	80 64       	ori	r24, 0x40	; 64
    1636:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<7); // stepper motor
    1638:	84 b3       	in	r24, 0x14	; 20
    163a:	80 68       	ori	r24, 0x80	; 128
    163c:	84 bb       	out	0x14, r24	; 20
	
	 DDRB=0x8B; // 0,1,3,7--->1 2,4,5,6-->0 for keypad and switch
    163e:	8b e8       	ldi	r24, 0x8B	; 139
    1640:	87 bb       	out	0x17, r24	; 23
	 DDRD=DDRD | (0<<2);
    1642:	81 b3       	in	r24, 0x11	; 17
    1644:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (0<<3);
    1646:	81 b3       	in	r24, 0x11	; 17
    1648:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (0<<6);//PD6 as input for power on
    164a:	81 b3       	in	r24, 0x11	; 17
    164c:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (0<<5);//PD5 as Oxygen Automation
    164e:	81 b3       	in	r24, 0x11	; 17
    1650:	81 bb       	out	0x11, r24	; 17
	 GICR=0xe0;// Enable INT 0,1,2
    1652:	80 ee       	ldi	r24, 0xE0	; 224
    1654:	8b bf       	out	0x3b, r24	; 59
	 MCUCR=0x05;
    1656:	85 e0       	ldi	r24, 0x05	; 5
    1658:	85 bf       	out	0x35, r24	; 53
	 MCUCSR=0x40;
    165a:	80 e4       	ldi	r24, 0x40	; 64
    165c:	84 bf       	out	0x34, r24	; 52
	init_millis(8000000UL);
    165e:	60 e0       	ldi	r22, 0x00	; 0
    1660:	72 e1       	ldi	r23, 0x12	; 18
    1662:	8a e7       	ldi	r24, 0x7A	; 122
    1664:	90 e0       	ldi	r25, 0x00	; 0
    1666:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <init_millis>
	sei();
    166a:	78 94       	sei
     i2c_init();
    166c:	0e 94 09 02 	call	0x412	; 0x412 <i2c_init>
	 i2c_start();
    1670:	0e 94 0f 02 	call	0x41e	; 0x41e <i2c_start>
	 i2c_write(0x70);
    1674:	80 e7       	ldi	r24, 0x70	; 112
    1676:	0e 94 15 02 	call	0x42a	; 0x42a <i2c_write>
	 lcd_init();
    167a:	0e 94 ad 01 	call	0x35a	; 0x35a <lcd_init>
    USART_Init(9600);
    167e:	60 e8       	ldi	r22, 0x80	; 128
    1680:	75 e2       	ldi	r23, 0x25	; 37
    1682:	80 e0       	ldi	r24, 0x00	; 0
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	0e 94 1c 02 	call	0x438	; 0x438 <USART_Init>
    168a:	2f ef       	ldi	r18, 0xFF	; 255
    168c:	89 e6       	ldi	r24, 0x69	; 105
    168e:	98 e1       	ldi	r25, 0x18	; 24
    1690:	21 50       	subi	r18, 0x01	; 1
    1692:	80 40       	sbci	r24, 0x00	; 0
    1694:	90 40       	sbci	r25, 0x00	; 0
    1696:	e1 f7       	brne	.-8      	; 0x1690 <main+0x76>
    1698:	00 c0       	rjmp	.+0      	; 0x169a <main+0x80>
    169a:	00 00       	nop
    _delay_ms(1000);
    GSMConnect();
    169c:	0e 94 82 02 	call	0x504	; 0x504 <GSMConnect>
	 //	if(PINB!=0xF0)
	 //	{
	 //		x=Keypad();
	 //		LCD_Char(x);
	 //	}
	 PORTB = PORTB | (1<<4);
    16a0:	88 b3       	in	r24, 0x18	; 24
    16a2:	80 61       	ori	r24, 0x10	; 16
    16a4:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB | (1<<5);
    16a6:	88 b3       	in	r24, 0x18	; 24
    16a8:	80 62       	ori	r24, 0x20	; 32
    16aa:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB | (1<<6);
    16ac:	88 b3       	in	r24, 0x18	; 24
    16ae:	80 64       	ori	r24, 0x40	; 64
    16b0:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<0));
    16b2:	88 b3       	in	r24, 0x18	; 24
    16b4:	8e 7f       	andi	r24, 0xFE	; 254
    16b6:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<1));
    16b8:	88 b3       	in	r24, 0x18	; 24
    16ba:	8d 7f       	andi	r24, 0xFD	; 253
    16bc:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<3));
    16be:	88 b3       	in	r24, 0x18	; 24
    16c0:	87 7f       	andi	r24, 0xF7	; 247
    16c2:	88 bb       	out	0x18, r24	; 24
	 PORTB = PORTB & (~(1<<7));
    16c4:	88 b3       	in	r24, 0x18	; 24
    16c6:	8f 77       	andi	r24, 0x7F	; 127
    16c8:	88 bb       	out	0x18, r24	; 24
	 
			
			//keypad
		
		   
	 lcd_cmd(0x28);
    16ca:	88 e2       	ldi	r24, 0x28	; 40
    16cc:	0e 94 77 01 	call	0x2ee	; 0x2ee <lcd_cmd>
	 lcd_msg(" Add Phone Num ");
    16d0:	84 e3       	ldi	r24, 0x34	; 52
    16d2:	91 e0       	ldi	r25, 0x01	; 1
    16d4:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_msg>
    16d8:	2f ef       	ldi	r18, 0xFF	; 255
    16da:	8d e3       	ldi	r24, 0x3D	; 61
    16dc:	99 e4       	ldi	r25, 0x49	; 73
    16de:	21 50       	subi	r18, 0x01	; 1
    16e0:	80 40       	sbci	r24, 0x00	; 0
    16e2:	90 40       	sbci	r25, 0x00	; 0
    16e4:	e1 f7       	brne	.-8      	; 0x16de <main+0xc4>
    16e6:	00 c0       	rjmp	.+0      	; 0x16e8 <main+0xce>
    16e8:	00 00       	nop
	 _delay_ms(3000);
	if((PINB&(1<<PINB4))==0|(PINB&(1<<PINB5))==0|(PINB&(1<<PINB6))==0){//this will check if keypad is pressed.
    16ea:	96 b3       	in	r25, 0x16	; 22
    16ec:	86 b3       	in	r24, 0x16	; 22
    16ee:	92 95       	swap	r25
    16f0:	9f 70       	andi	r25, 0x0F	; 15
    16f2:	21 e0       	ldi	r18, 0x01	; 1
    16f4:	92 27       	eor	r25, r18
    16f6:	91 70       	andi	r25, 0x01	; 1
    16f8:	82 95       	swap	r24
    16fa:	86 95       	lsr	r24
    16fc:	87 70       	andi	r24, 0x07	; 7
    16fe:	82 27       	eor	r24, r18
    1700:	81 70       	andi	r24, 0x01	; 1
    1702:	89 2b       	or	r24, r25
    1704:	96 b3       	in	r25, 0x16	; 22
    1706:	92 95       	swap	r25
    1708:	96 95       	lsr	r25
    170a:	96 95       	lsr	r25
    170c:	93 70       	andi	r25, 0x03	; 3
    170e:	29 27       	eor	r18, r25
    1710:	21 70       	andi	r18, 0x01	; 1
    1712:	81 11       	cpse	r24, r1
    1714:	01 c0       	rjmp	.+2      	; 0x1718 <main+0xfe>
    1716:	39 f0       	breq	.+14     	; 0x1726 <main+0x10c>
	 x=Keypad();
    1718:	0e 94 5c 00 	call	0xb8	; 0xb8 <Keypad>
    171c:	80 93 3c 03 	sts	0x033C, r24	; 0x80033c <x>
	 lcd_msg(x);
    1720:	90 e0       	ldi	r25, 0x00	; 0
    1722:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <lcd_msg>
		
	 
    while (1)
    {   
		
     startOxygenAndAirSupply(60);
    1726:	8c e3       	ldi	r24, 0x3C	; 60
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <startOxygenAndAirSupply>



        if(checkStatus()){
    172e:	0e 94 6f 06 	call	0xcde	; 0xcde <checkStatus>
    1732:	88 23       	and	r24, r24
    1734:	21 f1       	breq	.+72     	; 0x177e <main+0x164>
            if(automationOn()){
    1736:	0e 94 57 05 	call	0xaae	; 0xaae <automationOn>
    173a:	88 23       	and	r24, r24
    173c:	b9 f0       	breq	.+46     	; 0x176c <main+0x152>
                if(checkPatientTemp()){
    173e:	0e 94 1e 06 	call	0xc3c	; 0xc3c <checkPatientTemp>
    1742:	88 23       	and	r24, r24
    1744:	81 f3       	breq	.-32     	; 0x1726 <main+0x10c>

                    if(checkBloodOxygenLevel() < Average_Blood_Oxygen_level){
    1746:	0e 94 51 05 	call	0xaa2	; 0xaa2 <checkBloodOxygenLevel>
    174a:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <Average_Blood_Oxygen_level>
    174e:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <Average_Blood_Oxygen_level+0x1>
    1752:	82 17       	cp	r24, r18
    1754:	93 07       	cpc	r25, r19
    1756:	3c f4       	brge	.+14     	; 0x1766 <main+0x14c>
                        startOxygenAndAirSupply(Oxygen_percentage);
    1758:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    175c:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    1760:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <startOxygenAndAirSupply>
    1764:	e0 cf       	rjmp	.-64     	; 0x1726 <main+0x10c>
                    }else{
                        startAirSupply();
    1766:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <startAirSupply>
    176a:	dd cf       	rjmp	.-70     	; 0x1726 <main+0x10c>
                    }
                }
            }else{
                checkPatientTemp();
    176c:	0e 94 1e 06 	call	0xc3c	; 0xc3c <checkPatientTemp>
                getParametersFromKnobs();
                startOxygenAndAirSupply(Oxygen_percentage);
    1770:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    1774:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    1778:	0e 94 d8 0a 	call	0x15b0	; 0x15b0 <startOxygenAndAirSupply>
    177c:	d4 cf       	rjmp	.-88     	; 0x1726 <main+0x10c>
            }
        }else{return 0;}
    }
}
    177e:	80 e0       	ldi	r24, 0x00	; 0
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	08 95       	ret

00001784 <__vector_7>:
#include <avr/interrupt.h>

#include "millis.h"

ISR(TIMER1_COMPA_vect)
{
    1784:	1f 92       	push	r1
    1786:	0f 92       	push	r0
    1788:	0f b6       	in	r0, 0x3f	; 63
    178a:	0f 92       	push	r0
    178c:	11 24       	eor	r1, r1
    178e:	8f 93       	push	r24
    1790:	9f 93       	push	r25
    1792:	af 93       	push	r26
    1794:	bf 93       	push	r27
  timer1_millis++;
    1796:	80 91 eb 03 	lds	r24, 0x03EB	; 0x8003eb <timer1_millis>
    179a:	90 91 ec 03 	lds	r25, 0x03EC	; 0x8003ec <timer1_millis+0x1>
    179e:	a0 91 ed 03 	lds	r26, 0x03ED	; 0x8003ed <timer1_millis+0x2>
    17a2:	b0 91 ee 03 	lds	r27, 0x03EE	; 0x8003ee <timer1_millis+0x3>
    17a6:	01 96       	adiw	r24, 0x01	; 1
    17a8:	a1 1d       	adc	r26, r1
    17aa:	b1 1d       	adc	r27, r1
    17ac:	80 93 eb 03 	sts	0x03EB, r24	; 0x8003eb <timer1_millis>
    17b0:	90 93 ec 03 	sts	0x03EC, r25	; 0x8003ec <timer1_millis+0x1>
    17b4:	a0 93 ed 03 	sts	0x03ED, r26	; 0x8003ed <timer1_millis+0x2>
    17b8:	b0 93 ee 03 	sts	0x03EE, r27	; 0x8003ee <timer1_millis+0x3>
}
    17bc:	bf 91       	pop	r27
    17be:	af 91       	pop	r26
    17c0:	9f 91       	pop	r25
    17c2:	8f 91       	pop	r24
    17c4:	0f 90       	pop	r0
    17c6:	0f be       	out	0x3f, r0	; 63
    17c8:	0f 90       	pop	r0
    17ca:	1f 90       	pop	r1
    17cc:	18 95       	reti

000017ce <init_millis>:

void init_millis(unsigned long f_cpu)
{
  unsigned long ctc_match_overflow;

  ctc_match_overflow = ((f_cpu / 1000) / 8); //when timer1 is this value, 1ms has passed
    17ce:	20 e4       	ldi	r18, 0x40	; 64
    17d0:	3f e1       	ldi	r19, 0x1F	; 31
    17d2:	40 e0       	ldi	r20, 0x00	; 0
    17d4:	50 e0       	ldi	r21, 0x00	; 0
    17d6:	0e 94 b0 0e 	call	0x1d60	; 0x1d60 <__udivmodsi4>

  // (Set timer to clear when matching ctc_match_overflow) | (Set clock divisor to 8)
  TCCR1B |= (1 << WGM12) | (1 << CS11);
    17da:	8e b5       	in	r24, 0x2e	; 46
    17dc:	8a 60       	ori	r24, 0x0A	; 10
    17de:	8e bd       	out	0x2e, r24	; 46

  // high byte first, then low byte
  OCR1AH = (ctc_match_overflow >> 8);
    17e0:	bb 27       	eor	r27, r27
    17e2:	a5 2f       	mov	r26, r21
    17e4:	94 2f       	mov	r25, r20
    17e6:	83 2f       	mov	r24, r19
    17e8:	8b bd       	out	0x2b, r24	; 43
  OCR1AL = ctc_match_overflow;
    17ea:	2a bd       	out	0x2a, r18	; 42

  // Enable the compare match interrupt
  TIMSK |= (1 << OCIE1A);
    17ec:	89 b7       	in	r24, 0x39	; 57
    17ee:	80 61       	ori	r24, 0x10	; 16
    17f0:	89 bf       	out	0x39, r24	; 57
    17f2:	08 95       	ret

000017f4 <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    17f4:	f8 94       	cli
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    17f6:	21 e0       	ldi	r18, 0x01	; 1
    17f8:	09 c0       	rjmp	.+18     	; 0x180c <millis+0x18>
    millis_return = timer1_millis;
    17fa:	60 91 eb 03 	lds	r22, 0x03EB	; 0x8003eb <timer1_millis>
    17fe:	70 91 ec 03 	lds	r23, 0x03EC	; 0x8003ec <timer1_millis+0x1>
    1802:	80 91 ed 03 	lds	r24, 0x03ED	; 0x8003ed <timer1_millis+0x2>
    1806:	90 91 ee 03 	lds	r25, 0x03EE	; 0x8003ee <timer1_millis+0x3>
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	21 11       	cpse	r18, r1
    180e:	f5 cf       	rjmp	.-22     	; 0x17fa <millis+0x6>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
    1810:	78 94       	sei
    millis_return = timer1_millis;
  }
  return millis_return;
}
    1812:	08 95       	ret

00001814 <__subsf3>:
    1814:	50 58       	subi	r21, 0x80	; 128

00001816 <__addsf3>:
    1816:	bb 27       	eor	r27, r27
    1818:	aa 27       	eor	r26, r26
    181a:	0e 94 22 0c 	call	0x1844	; 0x1844 <__addsf3x>
    181e:	0c 94 95 0d 	jmp	0x1b2a	; 0x1b2a <__fp_round>
    1822:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <__fp_pscA>
    1826:	38 f0       	brcs	.+14     	; 0x1836 <__addsf3+0x20>
    1828:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__fp_pscB>
    182c:	20 f0       	brcs	.+8      	; 0x1836 <__addsf3+0x20>
    182e:	39 f4       	brne	.+14     	; 0x183e <__addsf3+0x28>
    1830:	9f 3f       	cpi	r25, 0xFF	; 255
    1832:	19 f4       	brne	.+6      	; 0x183a <__addsf3+0x24>
    1834:	26 f4       	brtc	.+8      	; 0x183e <__addsf3+0x28>
    1836:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <__fp_nan>
    183a:	0e f4       	brtc	.+2      	; 0x183e <__addsf3+0x28>
    183c:	e0 95       	com	r30
    183e:	e7 fb       	bst	r30, 7
    1840:	0c 94 7e 0d 	jmp	0x1afc	; 0x1afc <__fp_inf>

00001844 <__addsf3x>:
    1844:	e9 2f       	mov	r30, r25
    1846:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__fp_split3>
    184a:	58 f3       	brcs	.-42     	; 0x1822 <__addsf3+0xc>
    184c:	ba 17       	cp	r27, r26
    184e:	62 07       	cpc	r22, r18
    1850:	73 07       	cpc	r23, r19
    1852:	84 07       	cpc	r24, r20
    1854:	95 07       	cpc	r25, r21
    1856:	20 f0       	brcs	.+8      	; 0x1860 <__addsf3x+0x1c>
    1858:	79 f4       	brne	.+30     	; 0x1878 <__addsf3x+0x34>
    185a:	a6 f5       	brtc	.+104    	; 0x18c4 <__addsf3x+0x80>
    185c:	0c 94 c8 0d 	jmp	0x1b90	; 0x1b90 <__fp_zero>
    1860:	0e f4       	brtc	.+2      	; 0x1864 <__addsf3x+0x20>
    1862:	e0 95       	com	r30
    1864:	0b 2e       	mov	r0, r27
    1866:	ba 2f       	mov	r27, r26
    1868:	a0 2d       	mov	r26, r0
    186a:	0b 01       	movw	r0, r22
    186c:	b9 01       	movw	r22, r18
    186e:	90 01       	movw	r18, r0
    1870:	0c 01       	movw	r0, r24
    1872:	ca 01       	movw	r24, r20
    1874:	a0 01       	movw	r20, r0
    1876:	11 24       	eor	r1, r1
    1878:	ff 27       	eor	r31, r31
    187a:	59 1b       	sub	r21, r25
    187c:	99 f0       	breq	.+38     	; 0x18a4 <__addsf3x+0x60>
    187e:	59 3f       	cpi	r21, 0xF9	; 249
    1880:	50 f4       	brcc	.+20     	; 0x1896 <__addsf3x+0x52>
    1882:	50 3e       	cpi	r21, 0xE0	; 224
    1884:	68 f1       	brcs	.+90     	; 0x18e0 <__addsf3x+0x9c>
    1886:	1a 16       	cp	r1, r26
    1888:	f0 40       	sbci	r31, 0x00	; 0
    188a:	a2 2f       	mov	r26, r18
    188c:	23 2f       	mov	r18, r19
    188e:	34 2f       	mov	r19, r20
    1890:	44 27       	eor	r20, r20
    1892:	58 5f       	subi	r21, 0xF8	; 248
    1894:	f3 cf       	rjmp	.-26     	; 0x187c <__addsf3x+0x38>
    1896:	46 95       	lsr	r20
    1898:	37 95       	ror	r19
    189a:	27 95       	ror	r18
    189c:	a7 95       	ror	r26
    189e:	f0 40       	sbci	r31, 0x00	; 0
    18a0:	53 95       	inc	r21
    18a2:	c9 f7       	brne	.-14     	; 0x1896 <__addsf3x+0x52>
    18a4:	7e f4       	brtc	.+30     	; 0x18c4 <__addsf3x+0x80>
    18a6:	1f 16       	cp	r1, r31
    18a8:	ba 0b       	sbc	r27, r26
    18aa:	62 0b       	sbc	r22, r18
    18ac:	73 0b       	sbc	r23, r19
    18ae:	84 0b       	sbc	r24, r20
    18b0:	ba f0       	brmi	.+46     	; 0x18e0 <__addsf3x+0x9c>
    18b2:	91 50       	subi	r25, 0x01	; 1
    18b4:	a1 f0       	breq	.+40     	; 0x18de <__addsf3x+0x9a>
    18b6:	ff 0f       	add	r31, r31
    18b8:	bb 1f       	adc	r27, r27
    18ba:	66 1f       	adc	r22, r22
    18bc:	77 1f       	adc	r23, r23
    18be:	88 1f       	adc	r24, r24
    18c0:	c2 f7       	brpl	.-16     	; 0x18b2 <__addsf3x+0x6e>
    18c2:	0e c0       	rjmp	.+28     	; 0x18e0 <__addsf3x+0x9c>
    18c4:	ba 0f       	add	r27, r26
    18c6:	62 1f       	adc	r22, r18
    18c8:	73 1f       	adc	r23, r19
    18ca:	84 1f       	adc	r24, r20
    18cc:	48 f4       	brcc	.+18     	; 0x18e0 <__addsf3x+0x9c>
    18ce:	87 95       	ror	r24
    18d0:	77 95       	ror	r23
    18d2:	67 95       	ror	r22
    18d4:	b7 95       	ror	r27
    18d6:	f7 95       	ror	r31
    18d8:	9e 3f       	cpi	r25, 0xFE	; 254
    18da:	08 f0       	brcs	.+2      	; 0x18de <__addsf3x+0x9a>
    18dc:	b0 cf       	rjmp	.-160    	; 0x183e <__addsf3+0x28>
    18de:	93 95       	inc	r25
    18e0:	88 0f       	add	r24, r24
    18e2:	08 f0       	brcs	.+2      	; 0x18e6 <__addsf3x+0xa2>
    18e4:	99 27       	eor	r25, r25
    18e6:	ee 0f       	add	r30, r30
    18e8:	97 95       	ror	r25
    18ea:	87 95       	ror	r24
    18ec:	08 95       	ret

000018ee <__cmpsf2>:
    18ee:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__fp_cmp>
    18f2:	08 f4       	brcc	.+2      	; 0x18f6 <__cmpsf2+0x8>
    18f4:	81 e0       	ldi	r24, 0x01	; 1
    18f6:	08 95       	ret

000018f8 <__divsf3>:
    18f8:	0e 94 90 0c 	call	0x1920	; 0x1920 <__divsf3x>
    18fc:	0c 94 95 0d 	jmp	0x1b2a	; 0x1b2a <__fp_round>
    1900:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__fp_pscB>
    1904:	58 f0       	brcs	.+22     	; 0x191c <__divsf3+0x24>
    1906:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <__fp_pscA>
    190a:	40 f0       	brcs	.+16     	; 0x191c <__divsf3+0x24>
    190c:	29 f4       	brne	.+10     	; 0x1918 <__divsf3+0x20>
    190e:	5f 3f       	cpi	r21, 0xFF	; 255
    1910:	29 f0       	breq	.+10     	; 0x191c <__divsf3+0x24>
    1912:	0c 94 7e 0d 	jmp	0x1afc	; 0x1afc <__fp_inf>
    1916:	51 11       	cpse	r21, r1
    1918:	0c 94 c9 0d 	jmp	0x1b92	; 0x1b92 <__fp_szero>
    191c:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <__fp_nan>

00001920 <__divsf3x>:
    1920:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__fp_split3>
    1924:	68 f3       	brcs	.-38     	; 0x1900 <__divsf3+0x8>

00001926 <__divsf3_pse>:
    1926:	99 23       	and	r25, r25
    1928:	b1 f3       	breq	.-20     	; 0x1916 <__divsf3+0x1e>
    192a:	55 23       	and	r21, r21
    192c:	91 f3       	breq	.-28     	; 0x1912 <__divsf3+0x1a>
    192e:	95 1b       	sub	r25, r21
    1930:	55 0b       	sbc	r21, r21
    1932:	bb 27       	eor	r27, r27
    1934:	aa 27       	eor	r26, r26
    1936:	62 17       	cp	r22, r18
    1938:	73 07       	cpc	r23, r19
    193a:	84 07       	cpc	r24, r20
    193c:	38 f0       	brcs	.+14     	; 0x194c <__divsf3_pse+0x26>
    193e:	9f 5f       	subi	r25, 0xFF	; 255
    1940:	5f 4f       	sbci	r21, 0xFF	; 255
    1942:	22 0f       	add	r18, r18
    1944:	33 1f       	adc	r19, r19
    1946:	44 1f       	adc	r20, r20
    1948:	aa 1f       	adc	r26, r26
    194a:	a9 f3       	breq	.-22     	; 0x1936 <__divsf3_pse+0x10>
    194c:	35 d0       	rcall	.+106    	; 0x19b8 <__divsf3_pse+0x92>
    194e:	0e 2e       	mov	r0, r30
    1950:	3a f0       	brmi	.+14     	; 0x1960 <__divsf3_pse+0x3a>
    1952:	e0 e8       	ldi	r30, 0x80	; 128
    1954:	32 d0       	rcall	.+100    	; 0x19ba <__divsf3_pse+0x94>
    1956:	91 50       	subi	r25, 0x01	; 1
    1958:	50 40       	sbci	r21, 0x00	; 0
    195a:	e6 95       	lsr	r30
    195c:	00 1c       	adc	r0, r0
    195e:	ca f7       	brpl	.-14     	; 0x1952 <__divsf3_pse+0x2c>
    1960:	2b d0       	rcall	.+86     	; 0x19b8 <__divsf3_pse+0x92>
    1962:	fe 2f       	mov	r31, r30
    1964:	29 d0       	rcall	.+82     	; 0x19b8 <__divsf3_pse+0x92>
    1966:	66 0f       	add	r22, r22
    1968:	77 1f       	adc	r23, r23
    196a:	88 1f       	adc	r24, r24
    196c:	bb 1f       	adc	r27, r27
    196e:	26 17       	cp	r18, r22
    1970:	37 07       	cpc	r19, r23
    1972:	48 07       	cpc	r20, r24
    1974:	ab 07       	cpc	r26, r27
    1976:	b0 e8       	ldi	r27, 0x80	; 128
    1978:	09 f0       	breq	.+2      	; 0x197c <__divsf3_pse+0x56>
    197a:	bb 0b       	sbc	r27, r27
    197c:	80 2d       	mov	r24, r0
    197e:	bf 01       	movw	r22, r30
    1980:	ff 27       	eor	r31, r31
    1982:	93 58       	subi	r25, 0x83	; 131
    1984:	5f 4f       	sbci	r21, 0xFF	; 255
    1986:	3a f0       	brmi	.+14     	; 0x1996 <__divsf3_pse+0x70>
    1988:	9e 3f       	cpi	r25, 0xFE	; 254
    198a:	51 05       	cpc	r21, r1
    198c:	78 f0       	brcs	.+30     	; 0x19ac <__divsf3_pse+0x86>
    198e:	0c 94 7e 0d 	jmp	0x1afc	; 0x1afc <__fp_inf>
    1992:	0c 94 c9 0d 	jmp	0x1b92	; 0x1b92 <__fp_szero>
    1996:	5f 3f       	cpi	r21, 0xFF	; 255
    1998:	e4 f3       	brlt	.-8      	; 0x1992 <__divsf3_pse+0x6c>
    199a:	98 3e       	cpi	r25, 0xE8	; 232
    199c:	d4 f3       	brlt	.-12     	; 0x1992 <__divsf3_pse+0x6c>
    199e:	86 95       	lsr	r24
    19a0:	77 95       	ror	r23
    19a2:	67 95       	ror	r22
    19a4:	b7 95       	ror	r27
    19a6:	f7 95       	ror	r31
    19a8:	9f 5f       	subi	r25, 0xFF	; 255
    19aa:	c9 f7       	brne	.-14     	; 0x199e <__divsf3_pse+0x78>
    19ac:	88 0f       	add	r24, r24
    19ae:	91 1d       	adc	r25, r1
    19b0:	96 95       	lsr	r25
    19b2:	87 95       	ror	r24
    19b4:	97 f9       	bld	r25, 7
    19b6:	08 95       	ret
    19b8:	e1 e0       	ldi	r30, 0x01	; 1
    19ba:	66 0f       	add	r22, r22
    19bc:	77 1f       	adc	r23, r23
    19be:	88 1f       	adc	r24, r24
    19c0:	bb 1f       	adc	r27, r27
    19c2:	62 17       	cp	r22, r18
    19c4:	73 07       	cpc	r23, r19
    19c6:	84 07       	cpc	r24, r20
    19c8:	ba 07       	cpc	r27, r26
    19ca:	20 f0       	brcs	.+8      	; 0x19d4 <__divsf3_pse+0xae>
    19cc:	62 1b       	sub	r22, r18
    19ce:	73 0b       	sbc	r23, r19
    19d0:	84 0b       	sbc	r24, r20
    19d2:	ba 0b       	sbc	r27, r26
    19d4:	ee 1f       	adc	r30, r30
    19d6:	88 f7       	brcc	.-30     	; 0x19ba <__divsf3_pse+0x94>
    19d8:	e0 95       	com	r30
    19da:	08 95       	ret

000019dc <__fixunssfsi>:
    19dc:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__fp_splitA>
    19e0:	88 f0       	brcs	.+34     	; 0x1a04 <__fixunssfsi+0x28>
    19e2:	9f 57       	subi	r25, 0x7F	; 127
    19e4:	98 f0       	brcs	.+38     	; 0x1a0c <__fixunssfsi+0x30>
    19e6:	b9 2f       	mov	r27, r25
    19e8:	99 27       	eor	r25, r25
    19ea:	b7 51       	subi	r27, 0x17	; 23
    19ec:	b0 f0       	brcs	.+44     	; 0x1a1a <__fixunssfsi+0x3e>
    19ee:	e1 f0       	breq	.+56     	; 0x1a28 <__fixunssfsi+0x4c>
    19f0:	66 0f       	add	r22, r22
    19f2:	77 1f       	adc	r23, r23
    19f4:	88 1f       	adc	r24, r24
    19f6:	99 1f       	adc	r25, r25
    19f8:	1a f0       	brmi	.+6      	; 0x1a00 <__fixunssfsi+0x24>
    19fa:	ba 95       	dec	r27
    19fc:	c9 f7       	brne	.-14     	; 0x19f0 <__fixunssfsi+0x14>
    19fe:	14 c0       	rjmp	.+40     	; 0x1a28 <__fixunssfsi+0x4c>
    1a00:	b1 30       	cpi	r27, 0x01	; 1
    1a02:	91 f0       	breq	.+36     	; 0x1a28 <__fixunssfsi+0x4c>
    1a04:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__fp_zero>
    1a08:	b1 e0       	ldi	r27, 0x01	; 1
    1a0a:	08 95       	ret
    1a0c:	0c 94 c8 0d 	jmp	0x1b90	; 0x1b90 <__fp_zero>
    1a10:	67 2f       	mov	r22, r23
    1a12:	78 2f       	mov	r23, r24
    1a14:	88 27       	eor	r24, r24
    1a16:	b8 5f       	subi	r27, 0xF8	; 248
    1a18:	39 f0       	breq	.+14     	; 0x1a28 <__fixunssfsi+0x4c>
    1a1a:	b9 3f       	cpi	r27, 0xF9	; 249
    1a1c:	cc f3       	brlt	.-14     	; 0x1a10 <__fixunssfsi+0x34>
    1a1e:	86 95       	lsr	r24
    1a20:	77 95       	ror	r23
    1a22:	67 95       	ror	r22
    1a24:	b3 95       	inc	r27
    1a26:	d9 f7       	brne	.-10     	; 0x1a1e <__fixunssfsi+0x42>
    1a28:	3e f4       	brtc	.+14     	; 0x1a38 <__fixunssfsi+0x5c>
    1a2a:	90 95       	com	r25
    1a2c:	80 95       	com	r24
    1a2e:	70 95       	com	r23
    1a30:	61 95       	neg	r22
    1a32:	7f 4f       	sbci	r23, 0xFF	; 255
    1a34:	8f 4f       	sbci	r24, 0xFF	; 255
    1a36:	9f 4f       	sbci	r25, 0xFF	; 255
    1a38:	08 95       	ret

00001a3a <__floatunsisf>:
    1a3a:	e8 94       	clt
    1a3c:	09 c0       	rjmp	.+18     	; 0x1a50 <__floatsisf+0x12>

00001a3e <__floatsisf>:
    1a3e:	97 fb       	bst	r25, 7
    1a40:	3e f4       	brtc	.+14     	; 0x1a50 <__floatsisf+0x12>
    1a42:	90 95       	com	r25
    1a44:	80 95       	com	r24
    1a46:	70 95       	com	r23
    1a48:	61 95       	neg	r22
    1a4a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a4c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a4e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a50:	99 23       	and	r25, r25
    1a52:	a9 f0       	breq	.+42     	; 0x1a7e <__floatsisf+0x40>
    1a54:	f9 2f       	mov	r31, r25
    1a56:	96 e9       	ldi	r25, 0x96	; 150
    1a58:	bb 27       	eor	r27, r27
    1a5a:	93 95       	inc	r25
    1a5c:	f6 95       	lsr	r31
    1a5e:	87 95       	ror	r24
    1a60:	77 95       	ror	r23
    1a62:	67 95       	ror	r22
    1a64:	b7 95       	ror	r27
    1a66:	f1 11       	cpse	r31, r1
    1a68:	f8 cf       	rjmp	.-16     	; 0x1a5a <__floatsisf+0x1c>
    1a6a:	fa f4       	brpl	.+62     	; 0x1aaa <__floatsisf+0x6c>
    1a6c:	bb 0f       	add	r27, r27
    1a6e:	11 f4       	brne	.+4      	; 0x1a74 <__floatsisf+0x36>
    1a70:	60 ff       	sbrs	r22, 0
    1a72:	1b c0       	rjmp	.+54     	; 0x1aaa <__floatsisf+0x6c>
    1a74:	6f 5f       	subi	r22, 0xFF	; 255
    1a76:	7f 4f       	sbci	r23, 0xFF	; 255
    1a78:	8f 4f       	sbci	r24, 0xFF	; 255
    1a7a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a7c:	16 c0       	rjmp	.+44     	; 0x1aaa <__floatsisf+0x6c>
    1a7e:	88 23       	and	r24, r24
    1a80:	11 f0       	breq	.+4      	; 0x1a86 <__floatsisf+0x48>
    1a82:	96 e9       	ldi	r25, 0x96	; 150
    1a84:	11 c0       	rjmp	.+34     	; 0x1aa8 <__floatsisf+0x6a>
    1a86:	77 23       	and	r23, r23
    1a88:	21 f0       	breq	.+8      	; 0x1a92 <__floatsisf+0x54>
    1a8a:	9e e8       	ldi	r25, 0x8E	; 142
    1a8c:	87 2f       	mov	r24, r23
    1a8e:	76 2f       	mov	r23, r22
    1a90:	05 c0       	rjmp	.+10     	; 0x1a9c <__floatsisf+0x5e>
    1a92:	66 23       	and	r22, r22
    1a94:	71 f0       	breq	.+28     	; 0x1ab2 <__floatsisf+0x74>
    1a96:	96 e8       	ldi	r25, 0x86	; 134
    1a98:	86 2f       	mov	r24, r22
    1a9a:	70 e0       	ldi	r23, 0x00	; 0
    1a9c:	60 e0       	ldi	r22, 0x00	; 0
    1a9e:	2a f0       	brmi	.+10     	; 0x1aaa <__floatsisf+0x6c>
    1aa0:	9a 95       	dec	r25
    1aa2:	66 0f       	add	r22, r22
    1aa4:	77 1f       	adc	r23, r23
    1aa6:	88 1f       	adc	r24, r24
    1aa8:	da f7       	brpl	.-10     	; 0x1aa0 <__floatsisf+0x62>
    1aaa:	88 0f       	add	r24, r24
    1aac:	96 95       	lsr	r25
    1aae:	87 95       	ror	r24
    1ab0:	97 f9       	bld	r25, 7
    1ab2:	08 95       	ret

00001ab4 <__fp_cmp>:
    1ab4:	99 0f       	add	r25, r25
    1ab6:	00 08       	sbc	r0, r0
    1ab8:	55 0f       	add	r21, r21
    1aba:	aa 0b       	sbc	r26, r26
    1abc:	e0 e8       	ldi	r30, 0x80	; 128
    1abe:	fe ef       	ldi	r31, 0xFE	; 254
    1ac0:	16 16       	cp	r1, r22
    1ac2:	17 06       	cpc	r1, r23
    1ac4:	e8 07       	cpc	r30, r24
    1ac6:	f9 07       	cpc	r31, r25
    1ac8:	c0 f0       	brcs	.+48     	; 0x1afa <__fp_cmp+0x46>
    1aca:	12 16       	cp	r1, r18
    1acc:	13 06       	cpc	r1, r19
    1ace:	e4 07       	cpc	r30, r20
    1ad0:	f5 07       	cpc	r31, r21
    1ad2:	98 f0       	brcs	.+38     	; 0x1afa <__fp_cmp+0x46>
    1ad4:	62 1b       	sub	r22, r18
    1ad6:	73 0b       	sbc	r23, r19
    1ad8:	84 0b       	sbc	r24, r20
    1ada:	95 0b       	sbc	r25, r21
    1adc:	39 f4       	brne	.+14     	; 0x1aec <__fp_cmp+0x38>
    1ade:	0a 26       	eor	r0, r26
    1ae0:	61 f0       	breq	.+24     	; 0x1afa <__fp_cmp+0x46>
    1ae2:	23 2b       	or	r18, r19
    1ae4:	24 2b       	or	r18, r20
    1ae6:	25 2b       	or	r18, r21
    1ae8:	21 f4       	brne	.+8      	; 0x1af2 <__fp_cmp+0x3e>
    1aea:	08 95       	ret
    1aec:	0a 26       	eor	r0, r26
    1aee:	09 f4       	brne	.+2      	; 0x1af2 <__fp_cmp+0x3e>
    1af0:	a1 40       	sbci	r26, 0x01	; 1
    1af2:	a6 95       	lsr	r26
    1af4:	8f ef       	ldi	r24, 0xFF	; 255
    1af6:	81 1d       	adc	r24, r1
    1af8:	81 1d       	adc	r24, r1
    1afa:	08 95       	ret

00001afc <__fp_inf>:
    1afc:	97 f9       	bld	r25, 7
    1afe:	9f 67       	ori	r25, 0x7F	; 127
    1b00:	80 e8       	ldi	r24, 0x80	; 128
    1b02:	70 e0       	ldi	r23, 0x00	; 0
    1b04:	60 e0       	ldi	r22, 0x00	; 0
    1b06:	08 95       	ret

00001b08 <__fp_nan>:
    1b08:	9f ef       	ldi	r25, 0xFF	; 255
    1b0a:	80 ec       	ldi	r24, 0xC0	; 192
    1b0c:	08 95       	ret

00001b0e <__fp_pscA>:
    1b0e:	00 24       	eor	r0, r0
    1b10:	0a 94       	dec	r0
    1b12:	16 16       	cp	r1, r22
    1b14:	17 06       	cpc	r1, r23
    1b16:	18 06       	cpc	r1, r24
    1b18:	09 06       	cpc	r0, r25
    1b1a:	08 95       	ret

00001b1c <__fp_pscB>:
    1b1c:	00 24       	eor	r0, r0
    1b1e:	0a 94       	dec	r0
    1b20:	12 16       	cp	r1, r18
    1b22:	13 06       	cpc	r1, r19
    1b24:	14 06       	cpc	r1, r20
    1b26:	05 06       	cpc	r0, r21
    1b28:	08 95       	ret

00001b2a <__fp_round>:
    1b2a:	09 2e       	mov	r0, r25
    1b2c:	03 94       	inc	r0
    1b2e:	00 0c       	add	r0, r0
    1b30:	11 f4       	brne	.+4      	; 0x1b36 <__fp_round+0xc>
    1b32:	88 23       	and	r24, r24
    1b34:	52 f0       	brmi	.+20     	; 0x1b4a <__fp_round+0x20>
    1b36:	bb 0f       	add	r27, r27
    1b38:	40 f4       	brcc	.+16     	; 0x1b4a <__fp_round+0x20>
    1b3a:	bf 2b       	or	r27, r31
    1b3c:	11 f4       	brne	.+4      	; 0x1b42 <__fp_round+0x18>
    1b3e:	60 ff       	sbrs	r22, 0
    1b40:	04 c0       	rjmp	.+8      	; 0x1b4a <__fp_round+0x20>
    1b42:	6f 5f       	subi	r22, 0xFF	; 255
    1b44:	7f 4f       	sbci	r23, 0xFF	; 255
    1b46:	8f 4f       	sbci	r24, 0xFF	; 255
    1b48:	9f 4f       	sbci	r25, 0xFF	; 255
    1b4a:	08 95       	ret

00001b4c <__fp_split3>:
    1b4c:	57 fd       	sbrc	r21, 7
    1b4e:	90 58       	subi	r25, 0x80	; 128
    1b50:	44 0f       	add	r20, r20
    1b52:	55 1f       	adc	r21, r21
    1b54:	59 f0       	breq	.+22     	; 0x1b6c <__fp_splitA+0x10>
    1b56:	5f 3f       	cpi	r21, 0xFF	; 255
    1b58:	71 f0       	breq	.+28     	; 0x1b76 <__fp_splitA+0x1a>
    1b5a:	47 95       	ror	r20

00001b5c <__fp_splitA>:
    1b5c:	88 0f       	add	r24, r24
    1b5e:	97 fb       	bst	r25, 7
    1b60:	99 1f       	adc	r25, r25
    1b62:	61 f0       	breq	.+24     	; 0x1b7c <__fp_splitA+0x20>
    1b64:	9f 3f       	cpi	r25, 0xFF	; 255
    1b66:	79 f0       	breq	.+30     	; 0x1b86 <__fp_splitA+0x2a>
    1b68:	87 95       	ror	r24
    1b6a:	08 95       	ret
    1b6c:	12 16       	cp	r1, r18
    1b6e:	13 06       	cpc	r1, r19
    1b70:	14 06       	cpc	r1, r20
    1b72:	55 1f       	adc	r21, r21
    1b74:	f2 cf       	rjmp	.-28     	; 0x1b5a <__fp_split3+0xe>
    1b76:	46 95       	lsr	r20
    1b78:	f1 df       	rcall	.-30     	; 0x1b5c <__fp_splitA>
    1b7a:	08 c0       	rjmp	.+16     	; 0x1b8c <__fp_splitA+0x30>
    1b7c:	16 16       	cp	r1, r22
    1b7e:	17 06       	cpc	r1, r23
    1b80:	18 06       	cpc	r1, r24
    1b82:	99 1f       	adc	r25, r25
    1b84:	f1 cf       	rjmp	.-30     	; 0x1b68 <__fp_splitA+0xc>
    1b86:	86 95       	lsr	r24
    1b88:	71 05       	cpc	r23, r1
    1b8a:	61 05       	cpc	r22, r1
    1b8c:	08 94       	sec
    1b8e:	08 95       	ret

00001b90 <__fp_zero>:
    1b90:	e8 94       	clt

00001b92 <__fp_szero>:
    1b92:	bb 27       	eor	r27, r27
    1b94:	66 27       	eor	r22, r22
    1b96:	77 27       	eor	r23, r23
    1b98:	cb 01       	movw	r24, r22
    1b9a:	97 f9       	bld	r25, 7
    1b9c:	08 95       	ret

00001b9e <__gesf2>:
    1b9e:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__fp_cmp>
    1ba2:	08 f4       	brcc	.+2      	; 0x1ba6 <__gesf2+0x8>
    1ba4:	8f ef       	ldi	r24, 0xFF	; 255
    1ba6:	08 95       	ret

00001ba8 <__mulsf3>:
    1ba8:	0e 94 e7 0d 	call	0x1bce	; 0x1bce <__mulsf3x>
    1bac:	0c 94 95 0d 	jmp	0x1b2a	; 0x1b2a <__fp_round>
    1bb0:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <__fp_pscA>
    1bb4:	38 f0       	brcs	.+14     	; 0x1bc4 <__mulsf3+0x1c>
    1bb6:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__fp_pscB>
    1bba:	20 f0       	brcs	.+8      	; 0x1bc4 <__mulsf3+0x1c>
    1bbc:	95 23       	and	r25, r21
    1bbe:	11 f0       	breq	.+4      	; 0x1bc4 <__mulsf3+0x1c>
    1bc0:	0c 94 7e 0d 	jmp	0x1afc	; 0x1afc <__fp_inf>
    1bc4:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <__fp_nan>
    1bc8:	11 24       	eor	r1, r1
    1bca:	0c 94 c9 0d 	jmp	0x1b92	; 0x1b92 <__fp_szero>

00001bce <__mulsf3x>:
    1bce:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__fp_split3>
    1bd2:	70 f3       	brcs	.-36     	; 0x1bb0 <__mulsf3+0x8>

00001bd4 <__mulsf3_pse>:
    1bd4:	95 9f       	mul	r25, r21
    1bd6:	c1 f3       	breq	.-16     	; 0x1bc8 <__mulsf3+0x20>
    1bd8:	95 0f       	add	r25, r21
    1bda:	50 e0       	ldi	r21, 0x00	; 0
    1bdc:	55 1f       	adc	r21, r21
    1bde:	62 9f       	mul	r22, r18
    1be0:	f0 01       	movw	r30, r0
    1be2:	72 9f       	mul	r23, r18
    1be4:	bb 27       	eor	r27, r27
    1be6:	f0 0d       	add	r31, r0
    1be8:	b1 1d       	adc	r27, r1
    1bea:	63 9f       	mul	r22, r19
    1bec:	aa 27       	eor	r26, r26
    1bee:	f0 0d       	add	r31, r0
    1bf0:	b1 1d       	adc	r27, r1
    1bf2:	aa 1f       	adc	r26, r26
    1bf4:	64 9f       	mul	r22, r20
    1bf6:	66 27       	eor	r22, r22
    1bf8:	b0 0d       	add	r27, r0
    1bfa:	a1 1d       	adc	r26, r1
    1bfc:	66 1f       	adc	r22, r22
    1bfe:	82 9f       	mul	r24, r18
    1c00:	22 27       	eor	r18, r18
    1c02:	b0 0d       	add	r27, r0
    1c04:	a1 1d       	adc	r26, r1
    1c06:	62 1f       	adc	r22, r18
    1c08:	73 9f       	mul	r23, r19
    1c0a:	b0 0d       	add	r27, r0
    1c0c:	a1 1d       	adc	r26, r1
    1c0e:	62 1f       	adc	r22, r18
    1c10:	83 9f       	mul	r24, r19
    1c12:	a0 0d       	add	r26, r0
    1c14:	61 1d       	adc	r22, r1
    1c16:	22 1f       	adc	r18, r18
    1c18:	74 9f       	mul	r23, r20
    1c1a:	33 27       	eor	r19, r19
    1c1c:	a0 0d       	add	r26, r0
    1c1e:	61 1d       	adc	r22, r1
    1c20:	23 1f       	adc	r18, r19
    1c22:	84 9f       	mul	r24, r20
    1c24:	60 0d       	add	r22, r0
    1c26:	21 1d       	adc	r18, r1
    1c28:	82 2f       	mov	r24, r18
    1c2a:	76 2f       	mov	r23, r22
    1c2c:	6a 2f       	mov	r22, r26
    1c2e:	11 24       	eor	r1, r1
    1c30:	9f 57       	subi	r25, 0x7F	; 127
    1c32:	50 40       	sbci	r21, 0x00	; 0
    1c34:	9a f0       	brmi	.+38     	; 0x1c5c <__mulsf3_pse+0x88>
    1c36:	f1 f0       	breq	.+60     	; 0x1c74 <__mulsf3_pse+0xa0>
    1c38:	88 23       	and	r24, r24
    1c3a:	4a f0       	brmi	.+18     	; 0x1c4e <__mulsf3_pse+0x7a>
    1c3c:	ee 0f       	add	r30, r30
    1c3e:	ff 1f       	adc	r31, r31
    1c40:	bb 1f       	adc	r27, r27
    1c42:	66 1f       	adc	r22, r22
    1c44:	77 1f       	adc	r23, r23
    1c46:	88 1f       	adc	r24, r24
    1c48:	91 50       	subi	r25, 0x01	; 1
    1c4a:	50 40       	sbci	r21, 0x00	; 0
    1c4c:	a9 f7       	brne	.-22     	; 0x1c38 <__mulsf3_pse+0x64>
    1c4e:	9e 3f       	cpi	r25, 0xFE	; 254
    1c50:	51 05       	cpc	r21, r1
    1c52:	80 f0       	brcs	.+32     	; 0x1c74 <__mulsf3_pse+0xa0>
    1c54:	0c 94 7e 0d 	jmp	0x1afc	; 0x1afc <__fp_inf>
    1c58:	0c 94 c9 0d 	jmp	0x1b92	; 0x1b92 <__fp_szero>
    1c5c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c5e:	e4 f3       	brlt	.-8      	; 0x1c58 <__mulsf3_pse+0x84>
    1c60:	98 3e       	cpi	r25, 0xE8	; 232
    1c62:	d4 f3       	brlt	.-12     	; 0x1c58 <__mulsf3_pse+0x84>
    1c64:	86 95       	lsr	r24
    1c66:	77 95       	ror	r23
    1c68:	67 95       	ror	r22
    1c6a:	b7 95       	ror	r27
    1c6c:	f7 95       	ror	r31
    1c6e:	e7 95       	ror	r30
    1c70:	9f 5f       	subi	r25, 0xFF	; 255
    1c72:	c1 f7       	brne	.-16     	; 0x1c64 <__mulsf3_pse+0x90>
    1c74:	fe 2b       	or	r31, r30
    1c76:	88 0f       	add	r24, r24
    1c78:	91 1d       	adc	r25, r1
    1c7a:	96 95       	lsr	r25
    1c7c:	87 95       	ror	r24
    1c7e:	97 f9       	bld	r25, 7
    1c80:	08 95       	ret
    1c82:	19 f4       	brne	.+6      	; 0x1c8a <__mulsf3_pse+0xb6>
    1c84:	16 f4       	brtc	.+4      	; 0x1c8a <__mulsf3_pse+0xb6>
    1c86:	0c 94 84 0d 	jmp	0x1b08	; 0x1b08 <__fp_nan>
    1c8a:	0c 94 87 0e 	jmp	0x1d0e	; 0x1d0e <__fp_mpack>

00001c8e <sqrt>:
    1c8e:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__fp_splitA>
    1c92:	b8 f3       	brcs	.-18     	; 0x1c82 <__mulsf3_pse+0xae>
    1c94:	99 23       	and	r25, r25
    1c96:	c9 f3       	breq	.-14     	; 0x1c8a <__mulsf3_pse+0xb6>
    1c98:	b6 f3       	brts	.-20     	; 0x1c86 <__mulsf3_pse+0xb2>
    1c9a:	9f 57       	subi	r25, 0x7F	; 127
    1c9c:	55 0b       	sbc	r21, r21
    1c9e:	87 ff       	sbrs	r24, 7
    1ca0:	0e 94 95 0e 	call	0x1d2a	; 0x1d2a <__fp_norm2>
    1ca4:	00 24       	eor	r0, r0
    1ca6:	a0 e6       	ldi	r26, 0x60	; 96
    1ca8:	40 ea       	ldi	r20, 0xA0	; 160
    1caa:	90 01       	movw	r18, r0
    1cac:	80 58       	subi	r24, 0x80	; 128
    1cae:	56 95       	lsr	r21
    1cb0:	97 95       	ror	r25
    1cb2:	28 f4       	brcc	.+10     	; 0x1cbe <sqrt+0x30>
    1cb4:	80 5c       	subi	r24, 0xC0	; 192
    1cb6:	66 0f       	add	r22, r22
    1cb8:	77 1f       	adc	r23, r23
    1cba:	88 1f       	adc	r24, r24
    1cbc:	20 f0       	brcs	.+8      	; 0x1cc6 <sqrt+0x38>
    1cbe:	26 17       	cp	r18, r22
    1cc0:	37 07       	cpc	r19, r23
    1cc2:	48 07       	cpc	r20, r24
    1cc4:	30 f4       	brcc	.+12     	; 0x1cd2 <sqrt+0x44>
    1cc6:	62 1b       	sub	r22, r18
    1cc8:	73 0b       	sbc	r23, r19
    1cca:	84 0b       	sbc	r24, r20
    1ccc:	20 29       	or	r18, r0
    1cce:	31 29       	or	r19, r1
    1cd0:	4a 2b       	or	r20, r26
    1cd2:	a6 95       	lsr	r26
    1cd4:	17 94       	ror	r1
    1cd6:	07 94       	ror	r0
    1cd8:	20 25       	eor	r18, r0
    1cda:	31 25       	eor	r19, r1
    1cdc:	4a 27       	eor	r20, r26
    1cde:	58 f7       	brcc	.-42     	; 0x1cb6 <sqrt+0x28>
    1ce0:	66 0f       	add	r22, r22
    1ce2:	77 1f       	adc	r23, r23
    1ce4:	88 1f       	adc	r24, r24
    1ce6:	20 f0       	brcs	.+8      	; 0x1cf0 <sqrt+0x62>
    1ce8:	26 17       	cp	r18, r22
    1cea:	37 07       	cpc	r19, r23
    1cec:	48 07       	cpc	r20, r24
    1cee:	30 f4       	brcc	.+12     	; 0x1cfc <sqrt+0x6e>
    1cf0:	62 0b       	sbc	r22, r18
    1cf2:	73 0b       	sbc	r23, r19
    1cf4:	84 0b       	sbc	r24, r20
    1cf6:	20 0d       	add	r18, r0
    1cf8:	31 1d       	adc	r19, r1
    1cfa:	41 1d       	adc	r20, r1
    1cfc:	a0 95       	com	r26
    1cfe:	81 f7       	brne	.-32     	; 0x1ce0 <sqrt+0x52>
    1d00:	b9 01       	movw	r22, r18
    1d02:	84 2f       	mov	r24, r20
    1d04:	91 58       	subi	r25, 0x81	; 129
    1d06:	88 0f       	add	r24, r24
    1d08:	96 95       	lsr	r25
    1d0a:	87 95       	ror	r24
    1d0c:	08 95       	ret

00001d0e <__fp_mpack>:
    1d0e:	9f 3f       	cpi	r25, 0xFF	; 255
    1d10:	31 f0       	breq	.+12     	; 0x1d1e <__fp_mpack_finite+0xc>

00001d12 <__fp_mpack_finite>:
    1d12:	91 50       	subi	r25, 0x01	; 1
    1d14:	20 f4       	brcc	.+8      	; 0x1d1e <__fp_mpack_finite+0xc>
    1d16:	87 95       	ror	r24
    1d18:	77 95       	ror	r23
    1d1a:	67 95       	ror	r22
    1d1c:	b7 95       	ror	r27
    1d1e:	88 0f       	add	r24, r24
    1d20:	91 1d       	adc	r25, r1
    1d22:	96 95       	lsr	r25
    1d24:	87 95       	ror	r24
    1d26:	97 f9       	bld	r25, 7
    1d28:	08 95       	ret

00001d2a <__fp_norm2>:
    1d2a:	91 50       	subi	r25, 0x01	; 1
    1d2c:	50 40       	sbci	r21, 0x00	; 0
    1d2e:	66 0f       	add	r22, r22
    1d30:	77 1f       	adc	r23, r23
    1d32:	88 1f       	adc	r24, r24
    1d34:	d2 f7       	brpl	.-12     	; 0x1d2a <__fp_norm2>
    1d36:	08 95       	ret

00001d38 <__divmodhi4>:
    1d38:	97 fb       	bst	r25, 7
    1d3a:	07 2e       	mov	r0, r23
    1d3c:	16 f4       	brtc	.+4      	; 0x1d42 <__divmodhi4+0xa>
    1d3e:	00 94       	com	r0
    1d40:	07 d0       	rcall	.+14     	; 0x1d50 <__divmodhi4_neg1>
    1d42:	77 fd       	sbrc	r23, 7
    1d44:	09 d0       	rcall	.+18     	; 0x1d58 <__divmodhi4_neg2>
    1d46:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <__udivmodhi4>
    1d4a:	07 fc       	sbrc	r0, 7
    1d4c:	05 d0       	rcall	.+10     	; 0x1d58 <__divmodhi4_neg2>
    1d4e:	3e f4       	brtc	.+14     	; 0x1d5e <__divmodhi4_exit>

00001d50 <__divmodhi4_neg1>:
    1d50:	90 95       	com	r25
    1d52:	81 95       	neg	r24
    1d54:	9f 4f       	sbci	r25, 0xFF	; 255
    1d56:	08 95       	ret

00001d58 <__divmodhi4_neg2>:
    1d58:	70 95       	com	r23
    1d5a:	61 95       	neg	r22
    1d5c:	7f 4f       	sbci	r23, 0xFF	; 255

00001d5e <__divmodhi4_exit>:
    1d5e:	08 95       	ret

00001d60 <__udivmodsi4>:
    1d60:	a1 e2       	ldi	r26, 0x21	; 33
    1d62:	1a 2e       	mov	r1, r26
    1d64:	aa 1b       	sub	r26, r26
    1d66:	bb 1b       	sub	r27, r27
    1d68:	fd 01       	movw	r30, r26
    1d6a:	0d c0       	rjmp	.+26     	; 0x1d86 <__udivmodsi4_ep>

00001d6c <__udivmodsi4_loop>:
    1d6c:	aa 1f       	adc	r26, r26
    1d6e:	bb 1f       	adc	r27, r27
    1d70:	ee 1f       	adc	r30, r30
    1d72:	ff 1f       	adc	r31, r31
    1d74:	a2 17       	cp	r26, r18
    1d76:	b3 07       	cpc	r27, r19
    1d78:	e4 07       	cpc	r30, r20
    1d7a:	f5 07       	cpc	r31, r21
    1d7c:	20 f0       	brcs	.+8      	; 0x1d86 <__udivmodsi4_ep>
    1d7e:	a2 1b       	sub	r26, r18
    1d80:	b3 0b       	sbc	r27, r19
    1d82:	e4 0b       	sbc	r30, r20
    1d84:	f5 0b       	sbc	r31, r21

00001d86 <__udivmodsi4_ep>:
    1d86:	66 1f       	adc	r22, r22
    1d88:	77 1f       	adc	r23, r23
    1d8a:	88 1f       	adc	r24, r24
    1d8c:	99 1f       	adc	r25, r25
    1d8e:	1a 94       	dec	r1
    1d90:	69 f7       	brne	.-38     	; 0x1d6c <__udivmodsi4_loop>
    1d92:	60 95       	com	r22
    1d94:	70 95       	com	r23
    1d96:	80 95       	com	r24
    1d98:	90 95       	com	r25
    1d9a:	9b 01       	movw	r18, r22
    1d9c:	ac 01       	movw	r20, r24
    1d9e:	bd 01       	movw	r22, r26
    1da0:	cf 01       	movw	r24, r30
    1da2:	08 95       	ret

00001da4 <__tablejump2__>:
    1da4:	ee 0f       	add	r30, r30
    1da6:	ff 1f       	adc	r31, r31
    1da8:	05 90       	lpm	r0, Z+
    1daa:	f4 91       	lpm	r31, Z
    1dac:	e0 2d       	mov	r30, r0
    1dae:	09 94       	ijmp

00001db0 <__udivmodhi4>:
    1db0:	aa 1b       	sub	r26, r26
    1db2:	bb 1b       	sub	r27, r27
    1db4:	51 e1       	ldi	r21, 0x11	; 17
    1db6:	07 c0       	rjmp	.+14     	; 0x1dc6 <__udivmodhi4_ep>

00001db8 <__udivmodhi4_loop>:
    1db8:	aa 1f       	adc	r26, r26
    1dba:	bb 1f       	adc	r27, r27
    1dbc:	a6 17       	cp	r26, r22
    1dbe:	b7 07       	cpc	r27, r23
    1dc0:	10 f0       	brcs	.+4      	; 0x1dc6 <__udivmodhi4_ep>
    1dc2:	a6 1b       	sub	r26, r22
    1dc4:	b7 0b       	sbc	r27, r23

00001dc6 <__udivmodhi4_ep>:
    1dc6:	88 1f       	adc	r24, r24
    1dc8:	99 1f       	adc	r25, r25
    1dca:	5a 95       	dec	r21
    1dcc:	a9 f7       	brne	.-22     	; 0x1db8 <__udivmodhi4_loop>
    1dce:	80 95       	com	r24
    1dd0:	90 95       	com	r25
    1dd2:	bc 01       	movw	r22, r24
    1dd4:	cd 01       	movw	r24, r26
    1dd6:	08 95       	ret

00001dd8 <malloc>:
    1dd8:	0f 93       	push	r16
    1dda:	1f 93       	push	r17
    1ddc:	cf 93       	push	r28
    1dde:	df 93       	push	r29
    1de0:	82 30       	cpi	r24, 0x02	; 2
    1de2:	91 05       	cpc	r25, r1
    1de4:	10 f4       	brcc	.+4      	; 0x1dea <malloc+0x12>
    1de6:	82 e0       	ldi	r24, 0x02	; 2
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	e0 91 9b 04 	lds	r30, 0x049B	; 0x80049b <__flp>
    1dee:	f0 91 9c 04 	lds	r31, 0x049C	; 0x80049c <__flp+0x1>
    1df2:	20 e0       	ldi	r18, 0x00	; 0
    1df4:	30 e0       	ldi	r19, 0x00	; 0
    1df6:	a0 e0       	ldi	r26, 0x00	; 0
    1df8:	b0 e0       	ldi	r27, 0x00	; 0
    1dfa:	30 97       	sbiw	r30, 0x00	; 0
    1dfc:	19 f1       	breq	.+70     	; 0x1e44 <malloc+0x6c>
    1dfe:	40 81       	ld	r20, Z
    1e00:	51 81       	ldd	r21, Z+1	; 0x01
    1e02:	02 81       	ldd	r16, Z+2	; 0x02
    1e04:	13 81       	ldd	r17, Z+3	; 0x03
    1e06:	48 17       	cp	r20, r24
    1e08:	59 07       	cpc	r21, r25
    1e0a:	c8 f0       	brcs	.+50     	; 0x1e3e <malloc+0x66>
    1e0c:	84 17       	cp	r24, r20
    1e0e:	95 07       	cpc	r25, r21
    1e10:	69 f4       	brne	.+26     	; 0x1e2c <malloc+0x54>
    1e12:	10 97       	sbiw	r26, 0x00	; 0
    1e14:	31 f0       	breq	.+12     	; 0x1e22 <malloc+0x4a>
    1e16:	12 96       	adiw	r26, 0x02	; 2
    1e18:	0c 93       	st	X, r16
    1e1a:	12 97       	sbiw	r26, 0x02	; 2
    1e1c:	13 96       	adiw	r26, 0x03	; 3
    1e1e:	1c 93       	st	X, r17
    1e20:	27 c0       	rjmp	.+78     	; 0x1e70 <malloc+0x98>
    1e22:	00 93 9b 04 	sts	0x049B, r16	; 0x80049b <__flp>
    1e26:	10 93 9c 04 	sts	0x049C, r17	; 0x80049c <__flp+0x1>
    1e2a:	22 c0       	rjmp	.+68     	; 0x1e70 <malloc+0x98>
    1e2c:	21 15       	cp	r18, r1
    1e2e:	31 05       	cpc	r19, r1
    1e30:	19 f0       	breq	.+6      	; 0x1e38 <malloc+0x60>
    1e32:	42 17       	cp	r20, r18
    1e34:	53 07       	cpc	r21, r19
    1e36:	18 f4       	brcc	.+6      	; 0x1e3e <malloc+0x66>
    1e38:	9a 01       	movw	r18, r20
    1e3a:	bd 01       	movw	r22, r26
    1e3c:	ef 01       	movw	r28, r30
    1e3e:	df 01       	movw	r26, r30
    1e40:	f8 01       	movw	r30, r16
    1e42:	db cf       	rjmp	.-74     	; 0x1dfa <malloc+0x22>
    1e44:	21 15       	cp	r18, r1
    1e46:	31 05       	cpc	r19, r1
    1e48:	f9 f0       	breq	.+62     	; 0x1e88 <malloc+0xb0>
    1e4a:	28 1b       	sub	r18, r24
    1e4c:	39 0b       	sbc	r19, r25
    1e4e:	24 30       	cpi	r18, 0x04	; 4
    1e50:	31 05       	cpc	r19, r1
    1e52:	80 f4       	brcc	.+32     	; 0x1e74 <malloc+0x9c>
    1e54:	8a 81       	ldd	r24, Y+2	; 0x02
    1e56:	9b 81       	ldd	r25, Y+3	; 0x03
    1e58:	61 15       	cp	r22, r1
    1e5a:	71 05       	cpc	r23, r1
    1e5c:	21 f0       	breq	.+8      	; 0x1e66 <malloc+0x8e>
    1e5e:	fb 01       	movw	r30, r22
    1e60:	93 83       	std	Z+3, r25	; 0x03
    1e62:	82 83       	std	Z+2, r24	; 0x02
    1e64:	04 c0       	rjmp	.+8      	; 0x1e6e <malloc+0x96>
    1e66:	90 93 9c 04 	sts	0x049C, r25	; 0x80049c <__flp+0x1>
    1e6a:	80 93 9b 04 	sts	0x049B, r24	; 0x80049b <__flp>
    1e6e:	fe 01       	movw	r30, r28
    1e70:	32 96       	adiw	r30, 0x02	; 2
    1e72:	44 c0       	rjmp	.+136    	; 0x1efc <malloc+0x124>
    1e74:	fe 01       	movw	r30, r28
    1e76:	e2 0f       	add	r30, r18
    1e78:	f3 1f       	adc	r31, r19
    1e7a:	81 93       	st	Z+, r24
    1e7c:	91 93       	st	Z+, r25
    1e7e:	22 50       	subi	r18, 0x02	; 2
    1e80:	31 09       	sbc	r19, r1
    1e82:	39 83       	std	Y+1, r19	; 0x01
    1e84:	28 83       	st	Y, r18
    1e86:	3a c0       	rjmp	.+116    	; 0x1efc <malloc+0x124>
    1e88:	20 91 99 04 	lds	r18, 0x0499	; 0x800499 <__brkval>
    1e8c:	30 91 9a 04 	lds	r19, 0x049A	; 0x80049a <__brkval+0x1>
    1e90:	23 2b       	or	r18, r19
    1e92:	41 f4       	brne	.+16     	; 0x1ea4 <malloc+0xcc>
    1e94:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    1e98:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    1e9c:	30 93 9a 04 	sts	0x049A, r19	; 0x80049a <__brkval+0x1>
    1ea0:	20 93 99 04 	sts	0x0499, r18	; 0x800499 <__brkval>
    1ea4:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1ea8:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1eac:	21 15       	cp	r18, r1
    1eae:	31 05       	cpc	r19, r1
    1eb0:	41 f4       	brne	.+16     	; 0x1ec2 <malloc+0xea>
    1eb2:	2d b7       	in	r18, 0x3d	; 61
    1eb4:	3e b7       	in	r19, 0x3e	; 62
    1eb6:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    1eba:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    1ebe:	24 1b       	sub	r18, r20
    1ec0:	35 0b       	sbc	r19, r21
    1ec2:	e0 91 99 04 	lds	r30, 0x0499	; 0x800499 <__brkval>
    1ec6:	f0 91 9a 04 	lds	r31, 0x049A	; 0x80049a <__brkval+0x1>
    1eca:	e2 17       	cp	r30, r18
    1ecc:	f3 07       	cpc	r31, r19
    1ece:	a0 f4       	brcc	.+40     	; 0x1ef8 <malloc+0x120>
    1ed0:	2e 1b       	sub	r18, r30
    1ed2:	3f 0b       	sbc	r19, r31
    1ed4:	28 17       	cp	r18, r24
    1ed6:	39 07       	cpc	r19, r25
    1ed8:	78 f0       	brcs	.+30     	; 0x1ef8 <malloc+0x120>
    1eda:	ac 01       	movw	r20, r24
    1edc:	4e 5f       	subi	r20, 0xFE	; 254
    1ede:	5f 4f       	sbci	r21, 0xFF	; 255
    1ee0:	24 17       	cp	r18, r20
    1ee2:	35 07       	cpc	r19, r21
    1ee4:	48 f0       	brcs	.+18     	; 0x1ef8 <malloc+0x120>
    1ee6:	4e 0f       	add	r20, r30
    1ee8:	5f 1f       	adc	r21, r31
    1eea:	50 93 9a 04 	sts	0x049A, r21	; 0x80049a <__brkval+0x1>
    1eee:	40 93 99 04 	sts	0x0499, r20	; 0x800499 <__brkval>
    1ef2:	81 93       	st	Z+, r24
    1ef4:	91 93       	st	Z+, r25
    1ef6:	02 c0       	rjmp	.+4      	; 0x1efc <malloc+0x124>
    1ef8:	e0 e0       	ldi	r30, 0x00	; 0
    1efa:	f0 e0       	ldi	r31, 0x00	; 0
    1efc:	cf 01       	movw	r24, r30
    1efe:	df 91       	pop	r29
    1f00:	cf 91       	pop	r28
    1f02:	1f 91       	pop	r17
    1f04:	0f 91       	pop	r16
    1f06:	08 95       	ret

00001f08 <free>:
    1f08:	cf 93       	push	r28
    1f0a:	df 93       	push	r29
    1f0c:	00 97       	sbiw	r24, 0x00	; 0
    1f0e:	09 f4       	brne	.+2      	; 0x1f12 <free+0xa>
    1f10:	81 c0       	rjmp	.+258    	; 0x2014 <free+0x10c>
    1f12:	fc 01       	movw	r30, r24
    1f14:	32 97       	sbiw	r30, 0x02	; 2
    1f16:	13 82       	std	Z+3, r1	; 0x03
    1f18:	12 82       	std	Z+2, r1	; 0x02
    1f1a:	a0 91 9b 04 	lds	r26, 0x049B	; 0x80049b <__flp>
    1f1e:	b0 91 9c 04 	lds	r27, 0x049C	; 0x80049c <__flp+0x1>
    1f22:	10 97       	sbiw	r26, 0x00	; 0
    1f24:	81 f4       	brne	.+32     	; 0x1f46 <free+0x3e>
    1f26:	20 81       	ld	r18, Z
    1f28:	31 81       	ldd	r19, Z+1	; 0x01
    1f2a:	82 0f       	add	r24, r18
    1f2c:	93 1f       	adc	r25, r19
    1f2e:	20 91 99 04 	lds	r18, 0x0499	; 0x800499 <__brkval>
    1f32:	30 91 9a 04 	lds	r19, 0x049A	; 0x80049a <__brkval+0x1>
    1f36:	28 17       	cp	r18, r24
    1f38:	39 07       	cpc	r19, r25
    1f3a:	51 f5       	brne	.+84     	; 0x1f90 <free+0x88>
    1f3c:	f0 93 9a 04 	sts	0x049A, r31	; 0x80049a <__brkval+0x1>
    1f40:	e0 93 99 04 	sts	0x0499, r30	; 0x800499 <__brkval>
    1f44:	67 c0       	rjmp	.+206    	; 0x2014 <free+0x10c>
    1f46:	ed 01       	movw	r28, r26
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	30 e0       	ldi	r19, 0x00	; 0
    1f4c:	ce 17       	cp	r28, r30
    1f4e:	df 07       	cpc	r29, r31
    1f50:	40 f4       	brcc	.+16     	; 0x1f62 <free+0x5a>
    1f52:	4a 81       	ldd	r20, Y+2	; 0x02
    1f54:	5b 81       	ldd	r21, Y+3	; 0x03
    1f56:	9e 01       	movw	r18, r28
    1f58:	41 15       	cp	r20, r1
    1f5a:	51 05       	cpc	r21, r1
    1f5c:	f1 f0       	breq	.+60     	; 0x1f9a <free+0x92>
    1f5e:	ea 01       	movw	r28, r20
    1f60:	f5 cf       	rjmp	.-22     	; 0x1f4c <free+0x44>
    1f62:	d3 83       	std	Z+3, r29	; 0x03
    1f64:	c2 83       	std	Z+2, r28	; 0x02
    1f66:	40 81       	ld	r20, Z
    1f68:	51 81       	ldd	r21, Z+1	; 0x01
    1f6a:	84 0f       	add	r24, r20
    1f6c:	95 1f       	adc	r25, r21
    1f6e:	c8 17       	cp	r28, r24
    1f70:	d9 07       	cpc	r29, r25
    1f72:	59 f4       	brne	.+22     	; 0x1f8a <free+0x82>
    1f74:	88 81       	ld	r24, Y
    1f76:	99 81       	ldd	r25, Y+1	; 0x01
    1f78:	84 0f       	add	r24, r20
    1f7a:	95 1f       	adc	r25, r21
    1f7c:	02 96       	adiw	r24, 0x02	; 2
    1f7e:	91 83       	std	Z+1, r25	; 0x01
    1f80:	80 83       	st	Z, r24
    1f82:	8a 81       	ldd	r24, Y+2	; 0x02
    1f84:	9b 81       	ldd	r25, Y+3	; 0x03
    1f86:	93 83       	std	Z+3, r25	; 0x03
    1f88:	82 83       	std	Z+2, r24	; 0x02
    1f8a:	21 15       	cp	r18, r1
    1f8c:	31 05       	cpc	r19, r1
    1f8e:	29 f4       	brne	.+10     	; 0x1f9a <free+0x92>
    1f90:	f0 93 9c 04 	sts	0x049C, r31	; 0x80049c <__flp+0x1>
    1f94:	e0 93 9b 04 	sts	0x049B, r30	; 0x80049b <__flp>
    1f98:	3d c0       	rjmp	.+122    	; 0x2014 <free+0x10c>
    1f9a:	e9 01       	movw	r28, r18
    1f9c:	fb 83       	std	Y+3, r31	; 0x03
    1f9e:	ea 83       	std	Y+2, r30	; 0x02
    1fa0:	49 91       	ld	r20, Y+
    1fa2:	59 91       	ld	r21, Y+
    1fa4:	c4 0f       	add	r28, r20
    1fa6:	d5 1f       	adc	r29, r21
    1fa8:	ec 17       	cp	r30, r28
    1faa:	fd 07       	cpc	r31, r29
    1fac:	61 f4       	brne	.+24     	; 0x1fc6 <free+0xbe>
    1fae:	80 81       	ld	r24, Z
    1fb0:	91 81       	ldd	r25, Z+1	; 0x01
    1fb2:	84 0f       	add	r24, r20
    1fb4:	95 1f       	adc	r25, r21
    1fb6:	02 96       	adiw	r24, 0x02	; 2
    1fb8:	e9 01       	movw	r28, r18
    1fba:	99 83       	std	Y+1, r25	; 0x01
    1fbc:	88 83       	st	Y, r24
    1fbe:	82 81       	ldd	r24, Z+2	; 0x02
    1fc0:	93 81       	ldd	r25, Z+3	; 0x03
    1fc2:	9b 83       	std	Y+3, r25	; 0x03
    1fc4:	8a 83       	std	Y+2, r24	; 0x02
    1fc6:	e0 e0       	ldi	r30, 0x00	; 0
    1fc8:	f0 e0       	ldi	r31, 0x00	; 0
    1fca:	12 96       	adiw	r26, 0x02	; 2
    1fcc:	8d 91       	ld	r24, X+
    1fce:	9c 91       	ld	r25, X
    1fd0:	13 97       	sbiw	r26, 0x03	; 3
    1fd2:	00 97       	sbiw	r24, 0x00	; 0
    1fd4:	19 f0       	breq	.+6      	; 0x1fdc <free+0xd4>
    1fd6:	fd 01       	movw	r30, r26
    1fd8:	dc 01       	movw	r26, r24
    1fda:	f7 cf       	rjmp	.-18     	; 0x1fca <free+0xc2>
    1fdc:	8d 91       	ld	r24, X+
    1fde:	9c 91       	ld	r25, X
    1fe0:	11 97       	sbiw	r26, 0x01	; 1
    1fe2:	9d 01       	movw	r18, r26
    1fe4:	2e 5f       	subi	r18, 0xFE	; 254
    1fe6:	3f 4f       	sbci	r19, 0xFF	; 255
    1fe8:	82 0f       	add	r24, r18
    1fea:	93 1f       	adc	r25, r19
    1fec:	20 91 99 04 	lds	r18, 0x0499	; 0x800499 <__brkval>
    1ff0:	30 91 9a 04 	lds	r19, 0x049A	; 0x80049a <__brkval+0x1>
    1ff4:	28 17       	cp	r18, r24
    1ff6:	39 07       	cpc	r19, r25
    1ff8:	69 f4       	brne	.+26     	; 0x2014 <free+0x10c>
    1ffa:	30 97       	sbiw	r30, 0x00	; 0
    1ffc:	29 f4       	brne	.+10     	; 0x2008 <free+0x100>
    1ffe:	10 92 9c 04 	sts	0x049C, r1	; 0x80049c <__flp+0x1>
    2002:	10 92 9b 04 	sts	0x049B, r1	; 0x80049b <__flp>
    2006:	02 c0       	rjmp	.+4      	; 0x200c <free+0x104>
    2008:	13 82       	std	Z+3, r1	; 0x03
    200a:	12 82       	std	Z+2, r1	; 0x02
    200c:	b0 93 9a 04 	sts	0x049A, r27	; 0x80049a <__brkval+0x1>
    2010:	a0 93 99 04 	sts	0x0499, r26	; 0x800499 <__brkval>
    2014:	df 91       	pop	r29
    2016:	cf 91       	pop	r28
    2018:	08 95       	ret

0000201a <strcat>:
    201a:	fb 01       	movw	r30, r22
    201c:	dc 01       	movw	r26, r24
    201e:	0d 90       	ld	r0, X+
    2020:	00 20       	and	r0, r0
    2022:	e9 f7       	brne	.-6      	; 0x201e <strcat+0x4>
    2024:	11 97       	sbiw	r26, 0x01	; 1
    2026:	01 90       	ld	r0, Z+
    2028:	0d 92       	st	X+, r0
    202a:	00 20       	and	r0, r0
    202c:	e1 f7       	brne	.-8      	; 0x2026 <strcat+0xc>
    202e:	08 95       	ret

00002030 <strcpy>:
    2030:	fb 01       	movw	r30, r22
    2032:	dc 01       	movw	r26, r24
    2034:	01 90       	ld	r0, Z+
    2036:	0d 92       	st	X+, r0
    2038:	00 20       	and	r0, r0
    203a:	e1 f7       	brne	.-8      	; 0x2034 <strcpy+0x4>
    203c:	08 95       	ret

0000203e <__itoa_ncheck>:
    203e:	bb 27       	eor	r27, r27
    2040:	4a 30       	cpi	r20, 0x0A	; 10
    2042:	31 f4       	brne	.+12     	; 0x2050 <__itoa_ncheck+0x12>
    2044:	99 23       	and	r25, r25
    2046:	22 f4       	brpl	.+8      	; 0x2050 <__itoa_ncheck+0x12>
    2048:	bd e2       	ldi	r27, 0x2D	; 45
    204a:	90 95       	com	r25
    204c:	81 95       	neg	r24
    204e:	9f 4f       	sbci	r25, 0xFF	; 255
    2050:	0c 94 2b 10 	jmp	0x2056	; 0x2056 <__utoa_common>

00002054 <__utoa_ncheck>:
    2054:	bb 27       	eor	r27, r27

00002056 <__utoa_common>:
    2056:	fb 01       	movw	r30, r22
    2058:	55 27       	eor	r21, r21
    205a:	aa 27       	eor	r26, r26
    205c:	88 0f       	add	r24, r24
    205e:	99 1f       	adc	r25, r25
    2060:	aa 1f       	adc	r26, r26
    2062:	a4 17       	cp	r26, r20
    2064:	10 f0       	brcs	.+4      	; 0x206a <__utoa_common+0x14>
    2066:	a4 1b       	sub	r26, r20
    2068:	83 95       	inc	r24
    206a:	50 51       	subi	r21, 0x10	; 16
    206c:	b9 f7       	brne	.-18     	; 0x205c <__utoa_common+0x6>
    206e:	a0 5d       	subi	r26, 0xD0	; 208
    2070:	aa 33       	cpi	r26, 0x3A	; 58
    2072:	08 f0       	brcs	.+2      	; 0x2076 <__utoa_common+0x20>
    2074:	a9 5d       	subi	r26, 0xD9	; 217
    2076:	a1 93       	st	Z+, r26
    2078:	00 97       	sbiw	r24, 0x00	; 0
    207a:	79 f7       	brne	.-34     	; 0x205a <__utoa_common+0x4>
    207c:	b1 11       	cpse	r27, r1
    207e:	b1 93       	st	Z+, r27
    2080:	11 92       	st	Z+, r1
    2082:	cb 01       	movw	r24, r22
    2084:	0c 94 5d 12 	jmp	0x24ba	; 0x24ba <strrev>

00002088 <sprintf>:
    2088:	ae e0       	ldi	r26, 0x0E	; 14
    208a:	b0 e0       	ldi	r27, 0x00	; 0
    208c:	ea e4       	ldi	r30, 0x4A	; 74
    208e:	f0 e1       	ldi	r31, 0x10	; 16
    2090:	0c 94 15 13 	jmp	0x262a	; 0x262a <__prologue_saves__+0x1c>
    2094:	0d 89       	ldd	r16, Y+21	; 0x15
    2096:	1e 89       	ldd	r17, Y+22	; 0x16
    2098:	86 e0       	ldi	r24, 0x06	; 6
    209a:	8c 83       	std	Y+4, r24	; 0x04
    209c:	1a 83       	std	Y+2, r17	; 0x02
    209e:	09 83       	std	Y+1, r16	; 0x01
    20a0:	8f ef       	ldi	r24, 0xFF	; 255
    20a2:	9f e7       	ldi	r25, 0x7F	; 127
    20a4:	9e 83       	std	Y+6, r25	; 0x06
    20a6:	8d 83       	std	Y+5, r24	; 0x05
    20a8:	ae 01       	movw	r20, r28
    20aa:	47 5e       	subi	r20, 0xE7	; 231
    20ac:	5f 4f       	sbci	r21, 0xFF	; 255
    20ae:	6f 89       	ldd	r22, Y+23	; 0x17
    20b0:	78 8d       	ldd	r23, Y+24	; 0x18
    20b2:	ce 01       	movw	r24, r28
    20b4:	01 96       	adiw	r24, 0x01	; 1
    20b6:	0e 94 66 10 	call	0x20cc	; 0x20cc <vfprintf>
    20ba:	ef 81       	ldd	r30, Y+7	; 0x07
    20bc:	f8 85       	ldd	r31, Y+8	; 0x08
    20be:	e0 0f       	add	r30, r16
    20c0:	f1 1f       	adc	r31, r17
    20c2:	10 82       	st	Z, r1
    20c4:	2e 96       	adiw	r28, 0x0e	; 14
    20c6:	e4 e0       	ldi	r30, 0x04	; 4
    20c8:	0c 94 31 13 	jmp	0x2662	; 0x2662 <__epilogue_restores__+0x1c>

000020cc <vfprintf>:
    20cc:	ab e0       	ldi	r26, 0x0B	; 11
    20ce:	b0 e0       	ldi	r27, 0x00	; 0
    20d0:	ec e6       	ldi	r30, 0x6C	; 108
    20d2:	f0 e1       	ldi	r31, 0x10	; 16
    20d4:	0c 94 07 13 	jmp	0x260e	; 0x260e <__prologue_saves__>
    20d8:	6c 01       	movw	r12, r24
    20da:	7b 01       	movw	r14, r22
    20dc:	8a 01       	movw	r16, r20
    20de:	fc 01       	movw	r30, r24
    20e0:	17 82       	std	Z+7, r1	; 0x07
    20e2:	16 82       	std	Z+6, r1	; 0x06
    20e4:	83 81       	ldd	r24, Z+3	; 0x03
    20e6:	81 ff       	sbrs	r24, 1
    20e8:	cc c1       	rjmp	.+920    	; 0x2482 <vfprintf+0x3b6>
    20ea:	ce 01       	movw	r24, r28
    20ec:	01 96       	adiw	r24, 0x01	; 1
    20ee:	3c 01       	movw	r6, r24
    20f0:	f6 01       	movw	r30, r12
    20f2:	93 81       	ldd	r25, Z+3	; 0x03
    20f4:	f7 01       	movw	r30, r14
    20f6:	93 fd       	sbrc	r25, 3
    20f8:	85 91       	lpm	r24, Z+
    20fa:	93 ff       	sbrs	r25, 3
    20fc:	81 91       	ld	r24, Z+
    20fe:	7f 01       	movw	r14, r30
    2100:	88 23       	and	r24, r24
    2102:	09 f4       	brne	.+2      	; 0x2106 <vfprintf+0x3a>
    2104:	ba c1       	rjmp	.+884    	; 0x247a <vfprintf+0x3ae>
    2106:	85 32       	cpi	r24, 0x25	; 37
    2108:	39 f4       	brne	.+14     	; 0x2118 <vfprintf+0x4c>
    210a:	93 fd       	sbrc	r25, 3
    210c:	85 91       	lpm	r24, Z+
    210e:	93 ff       	sbrs	r25, 3
    2110:	81 91       	ld	r24, Z+
    2112:	7f 01       	movw	r14, r30
    2114:	85 32       	cpi	r24, 0x25	; 37
    2116:	29 f4       	brne	.+10     	; 0x2122 <vfprintf+0x56>
    2118:	b6 01       	movw	r22, r12
    211a:	90 e0       	ldi	r25, 0x00	; 0
    211c:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    2120:	e7 cf       	rjmp	.-50     	; 0x20f0 <vfprintf+0x24>
    2122:	91 2c       	mov	r9, r1
    2124:	21 2c       	mov	r2, r1
    2126:	31 2c       	mov	r3, r1
    2128:	ff e1       	ldi	r31, 0x1F	; 31
    212a:	f3 15       	cp	r31, r3
    212c:	d8 f0       	brcs	.+54     	; 0x2164 <vfprintf+0x98>
    212e:	8b 32       	cpi	r24, 0x2B	; 43
    2130:	79 f0       	breq	.+30     	; 0x2150 <vfprintf+0x84>
    2132:	38 f4       	brcc	.+14     	; 0x2142 <vfprintf+0x76>
    2134:	80 32       	cpi	r24, 0x20	; 32
    2136:	79 f0       	breq	.+30     	; 0x2156 <vfprintf+0x8a>
    2138:	83 32       	cpi	r24, 0x23	; 35
    213a:	a1 f4       	brne	.+40     	; 0x2164 <vfprintf+0x98>
    213c:	23 2d       	mov	r18, r3
    213e:	20 61       	ori	r18, 0x10	; 16
    2140:	1d c0       	rjmp	.+58     	; 0x217c <vfprintf+0xb0>
    2142:	8d 32       	cpi	r24, 0x2D	; 45
    2144:	61 f0       	breq	.+24     	; 0x215e <vfprintf+0x92>
    2146:	80 33       	cpi	r24, 0x30	; 48
    2148:	69 f4       	brne	.+26     	; 0x2164 <vfprintf+0x98>
    214a:	23 2d       	mov	r18, r3
    214c:	21 60       	ori	r18, 0x01	; 1
    214e:	16 c0       	rjmp	.+44     	; 0x217c <vfprintf+0xb0>
    2150:	83 2d       	mov	r24, r3
    2152:	82 60       	ori	r24, 0x02	; 2
    2154:	38 2e       	mov	r3, r24
    2156:	e3 2d       	mov	r30, r3
    2158:	e4 60       	ori	r30, 0x04	; 4
    215a:	3e 2e       	mov	r3, r30
    215c:	2a c0       	rjmp	.+84     	; 0x21b2 <vfprintf+0xe6>
    215e:	f3 2d       	mov	r31, r3
    2160:	f8 60       	ori	r31, 0x08	; 8
    2162:	1d c0       	rjmp	.+58     	; 0x219e <vfprintf+0xd2>
    2164:	37 fc       	sbrc	r3, 7
    2166:	2d c0       	rjmp	.+90     	; 0x21c2 <vfprintf+0xf6>
    2168:	20 ed       	ldi	r18, 0xD0	; 208
    216a:	28 0f       	add	r18, r24
    216c:	2a 30       	cpi	r18, 0x0A	; 10
    216e:	40 f0       	brcs	.+16     	; 0x2180 <vfprintf+0xb4>
    2170:	8e 32       	cpi	r24, 0x2E	; 46
    2172:	b9 f4       	brne	.+46     	; 0x21a2 <vfprintf+0xd6>
    2174:	36 fc       	sbrc	r3, 6
    2176:	81 c1       	rjmp	.+770    	; 0x247a <vfprintf+0x3ae>
    2178:	23 2d       	mov	r18, r3
    217a:	20 64       	ori	r18, 0x40	; 64
    217c:	32 2e       	mov	r3, r18
    217e:	19 c0       	rjmp	.+50     	; 0x21b2 <vfprintf+0xe6>
    2180:	36 fe       	sbrs	r3, 6
    2182:	06 c0       	rjmp	.+12     	; 0x2190 <vfprintf+0xc4>
    2184:	8a e0       	ldi	r24, 0x0A	; 10
    2186:	98 9e       	mul	r9, r24
    2188:	20 0d       	add	r18, r0
    218a:	11 24       	eor	r1, r1
    218c:	92 2e       	mov	r9, r18
    218e:	11 c0       	rjmp	.+34     	; 0x21b2 <vfprintf+0xe6>
    2190:	ea e0       	ldi	r30, 0x0A	; 10
    2192:	2e 9e       	mul	r2, r30
    2194:	20 0d       	add	r18, r0
    2196:	11 24       	eor	r1, r1
    2198:	22 2e       	mov	r2, r18
    219a:	f3 2d       	mov	r31, r3
    219c:	f0 62       	ori	r31, 0x20	; 32
    219e:	3f 2e       	mov	r3, r31
    21a0:	08 c0       	rjmp	.+16     	; 0x21b2 <vfprintf+0xe6>
    21a2:	8c 36       	cpi	r24, 0x6C	; 108
    21a4:	21 f4       	brne	.+8      	; 0x21ae <vfprintf+0xe2>
    21a6:	83 2d       	mov	r24, r3
    21a8:	80 68       	ori	r24, 0x80	; 128
    21aa:	38 2e       	mov	r3, r24
    21ac:	02 c0       	rjmp	.+4      	; 0x21b2 <vfprintf+0xe6>
    21ae:	88 36       	cpi	r24, 0x68	; 104
    21b0:	41 f4       	brne	.+16     	; 0x21c2 <vfprintf+0xf6>
    21b2:	f7 01       	movw	r30, r14
    21b4:	93 fd       	sbrc	r25, 3
    21b6:	85 91       	lpm	r24, Z+
    21b8:	93 ff       	sbrs	r25, 3
    21ba:	81 91       	ld	r24, Z+
    21bc:	7f 01       	movw	r14, r30
    21be:	81 11       	cpse	r24, r1
    21c0:	b3 cf       	rjmp	.-154    	; 0x2128 <vfprintf+0x5c>
    21c2:	98 2f       	mov	r25, r24
    21c4:	9f 7d       	andi	r25, 0xDF	; 223
    21c6:	95 54       	subi	r25, 0x45	; 69
    21c8:	93 30       	cpi	r25, 0x03	; 3
    21ca:	28 f4       	brcc	.+10     	; 0x21d6 <vfprintf+0x10a>
    21cc:	0c 5f       	subi	r16, 0xFC	; 252
    21ce:	1f 4f       	sbci	r17, 0xFF	; 255
    21d0:	9f e3       	ldi	r25, 0x3F	; 63
    21d2:	99 83       	std	Y+1, r25	; 0x01
    21d4:	0d c0       	rjmp	.+26     	; 0x21f0 <vfprintf+0x124>
    21d6:	83 36       	cpi	r24, 0x63	; 99
    21d8:	31 f0       	breq	.+12     	; 0x21e6 <vfprintf+0x11a>
    21da:	83 37       	cpi	r24, 0x73	; 115
    21dc:	71 f0       	breq	.+28     	; 0x21fa <vfprintf+0x12e>
    21de:	83 35       	cpi	r24, 0x53	; 83
    21e0:	09 f0       	breq	.+2      	; 0x21e4 <vfprintf+0x118>
    21e2:	59 c0       	rjmp	.+178    	; 0x2296 <vfprintf+0x1ca>
    21e4:	21 c0       	rjmp	.+66     	; 0x2228 <vfprintf+0x15c>
    21e6:	f8 01       	movw	r30, r16
    21e8:	80 81       	ld	r24, Z
    21ea:	89 83       	std	Y+1, r24	; 0x01
    21ec:	0e 5f       	subi	r16, 0xFE	; 254
    21ee:	1f 4f       	sbci	r17, 0xFF	; 255
    21f0:	88 24       	eor	r8, r8
    21f2:	83 94       	inc	r8
    21f4:	91 2c       	mov	r9, r1
    21f6:	53 01       	movw	r10, r6
    21f8:	13 c0       	rjmp	.+38     	; 0x2220 <vfprintf+0x154>
    21fa:	28 01       	movw	r4, r16
    21fc:	f2 e0       	ldi	r31, 0x02	; 2
    21fe:	4f 0e       	add	r4, r31
    2200:	51 1c       	adc	r5, r1
    2202:	f8 01       	movw	r30, r16
    2204:	a0 80       	ld	r10, Z
    2206:	b1 80       	ldd	r11, Z+1	; 0x01
    2208:	36 fe       	sbrs	r3, 6
    220a:	03 c0       	rjmp	.+6      	; 0x2212 <vfprintf+0x146>
    220c:	69 2d       	mov	r22, r9
    220e:	70 e0       	ldi	r23, 0x00	; 0
    2210:	02 c0       	rjmp	.+4      	; 0x2216 <vfprintf+0x14a>
    2212:	6f ef       	ldi	r22, 0xFF	; 255
    2214:	7f ef       	ldi	r23, 0xFF	; 255
    2216:	c5 01       	movw	r24, r10
    2218:	0e 94 52 12 	call	0x24a4	; 0x24a4 <strnlen>
    221c:	4c 01       	movw	r8, r24
    221e:	82 01       	movw	r16, r4
    2220:	f3 2d       	mov	r31, r3
    2222:	ff 77       	andi	r31, 0x7F	; 127
    2224:	3f 2e       	mov	r3, r31
    2226:	16 c0       	rjmp	.+44     	; 0x2254 <vfprintf+0x188>
    2228:	28 01       	movw	r4, r16
    222a:	22 e0       	ldi	r18, 0x02	; 2
    222c:	42 0e       	add	r4, r18
    222e:	51 1c       	adc	r5, r1
    2230:	f8 01       	movw	r30, r16
    2232:	a0 80       	ld	r10, Z
    2234:	b1 80       	ldd	r11, Z+1	; 0x01
    2236:	36 fe       	sbrs	r3, 6
    2238:	03 c0       	rjmp	.+6      	; 0x2240 <vfprintf+0x174>
    223a:	69 2d       	mov	r22, r9
    223c:	70 e0       	ldi	r23, 0x00	; 0
    223e:	02 c0       	rjmp	.+4      	; 0x2244 <vfprintf+0x178>
    2240:	6f ef       	ldi	r22, 0xFF	; 255
    2242:	7f ef       	ldi	r23, 0xFF	; 255
    2244:	c5 01       	movw	r24, r10
    2246:	0e 94 47 12 	call	0x248e	; 0x248e <strnlen_P>
    224a:	4c 01       	movw	r8, r24
    224c:	f3 2d       	mov	r31, r3
    224e:	f0 68       	ori	r31, 0x80	; 128
    2250:	3f 2e       	mov	r3, r31
    2252:	82 01       	movw	r16, r4
    2254:	33 fc       	sbrc	r3, 3
    2256:	1b c0       	rjmp	.+54     	; 0x228e <vfprintf+0x1c2>
    2258:	82 2d       	mov	r24, r2
    225a:	90 e0       	ldi	r25, 0x00	; 0
    225c:	88 16       	cp	r8, r24
    225e:	99 06       	cpc	r9, r25
    2260:	b0 f4       	brcc	.+44     	; 0x228e <vfprintf+0x1c2>
    2262:	b6 01       	movw	r22, r12
    2264:	80 e2       	ldi	r24, 0x20	; 32
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    226c:	2a 94       	dec	r2
    226e:	f4 cf       	rjmp	.-24     	; 0x2258 <vfprintf+0x18c>
    2270:	f5 01       	movw	r30, r10
    2272:	37 fc       	sbrc	r3, 7
    2274:	85 91       	lpm	r24, Z+
    2276:	37 fe       	sbrs	r3, 7
    2278:	81 91       	ld	r24, Z+
    227a:	5f 01       	movw	r10, r30
    227c:	b6 01       	movw	r22, r12
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    2284:	21 10       	cpse	r2, r1
    2286:	2a 94       	dec	r2
    2288:	21 e0       	ldi	r18, 0x01	; 1
    228a:	82 1a       	sub	r8, r18
    228c:	91 08       	sbc	r9, r1
    228e:	81 14       	cp	r8, r1
    2290:	91 04       	cpc	r9, r1
    2292:	71 f7       	brne	.-36     	; 0x2270 <vfprintf+0x1a4>
    2294:	e8 c0       	rjmp	.+464    	; 0x2466 <vfprintf+0x39a>
    2296:	84 36       	cpi	r24, 0x64	; 100
    2298:	11 f0       	breq	.+4      	; 0x229e <vfprintf+0x1d2>
    229a:	89 36       	cpi	r24, 0x69	; 105
    229c:	41 f5       	brne	.+80     	; 0x22ee <vfprintf+0x222>
    229e:	f8 01       	movw	r30, r16
    22a0:	37 fe       	sbrs	r3, 7
    22a2:	07 c0       	rjmp	.+14     	; 0x22b2 <vfprintf+0x1e6>
    22a4:	60 81       	ld	r22, Z
    22a6:	71 81       	ldd	r23, Z+1	; 0x01
    22a8:	82 81       	ldd	r24, Z+2	; 0x02
    22aa:	93 81       	ldd	r25, Z+3	; 0x03
    22ac:	0c 5f       	subi	r16, 0xFC	; 252
    22ae:	1f 4f       	sbci	r17, 0xFF	; 255
    22b0:	08 c0       	rjmp	.+16     	; 0x22c2 <vfprintf+0x1f6>
    22b2:	60 81       	ld	r22, Z
    22b4:	71 81       	ldd	r23, Z+1	; 0x01
    22b6:	07 2e       	mov	r0, r23
    22b8:	00 0c       	add	r0, r0
    22ba:	88 0b       	sbc	r24, r24
    22bc:	99 0b       	sbc	r25, r25
    22be:	0e 5f       	subi	r16, 0xFE	; 254
    22c0:	1f 4f       	sbci	r17, 0xFF	; 255
    22c2:	f3 2d       	mov	r31, r3
    22c4:	ff 76       	andi	r31, 0x6F	; 111
    22c6:	3f 2e       	mov	r3, r31
    22c8:	97 ff       	sbrs	r25, 7
    22ca:	09 c0       	rjmp	.+18     	; 0x22de <vfprintf+0x212>
    22cc:	90 95       	com	r25
    22ce:	80 95       	com	r24
    22d0:	70 95       	com	r23
    22d2:	61 95       	neg	r22
    22d4:	7f 4f       	sbci	r23, 0xFF	; 255
    22d6:	8f 4f       	sbci	r24, 0xFF	; 255
    22d8:	9f 4f       	sbci	r25, 0xFF	; 255
    22da:	f0 68       	ori	r31, 0x80	; 128
    22dc:	3f 2e       	mov	r3, r31
    22de:	2a e0       	ldi	r18, 0x0A	; 10
    22e0:	30 e0       	ldi	r19, 0x00	; 0
    22e2:	a3 01       	movw	r20, r6
    22e4:	0e 94 a9 12 	call	0x2552	; 0x2552 <__ultoa_invert>
    22e8:	88 2e       	mov	r8, r24
    22ea:	86 18       	sub	r8, r6
    22ec:	45 c0       	rjmp	.+138    	; 0x2378 <vfprintf+0x2ac>
    22ee:	85 37       	cpi	r24, 0x75	; 117
    22f0:	31 f4       	brne	.+12     	; 0x22fe <vfprintf+0x232>
    22f2:	23 2d       	mov	r18, r3
    22f4:	2f 7e       	andi	r18, 0xEF	; 239
    22f6:	b2 2e       	mov	r11, r18
    22f8:	2a e0       	ldi	r18, 0x0A	; 10
    22fa:	30 e0       	ldi	r19, 0x00	; 0
    22fc:	25 c0       	rjmp	.+74     	; 0x2348 <vfprintf+0x27c>
    22fe:	93 2d       	mov	r25, r3
    2300:	99 7f       	andi	r25, 0xF9	; 249
    2302:	b9 2e       	mov	r11, r25
    2304:	8f 36       	cpi	r24, 0x6F	; 111
    2306:	c1 f0       	breq	.+48     	; 0x2338 <vfprintf+0x26c>
    2308:	18 f4       	brcc	.+6      	; 0x2310 <vfprintf+0x244>
    230a:	88 35       	cpi	r24, 0x58	; 88
    230c:	79 f0       	breq	.+30     	; 0x232c <vfprintf+0x260>
    230e:	b5 c0       	rjmp	.+362    	; 0x247a <vfprintf+0x3ae>
    2310:	80 37       	cpi	r24, 0x70	; 112
    2312:	19 f0       	breq	.+6      	; 0x231a <vfprintf+0x24e>
    2314:	88 37       	cpi	r24, 0x78	; 120
    2316:	21 f0       	breq	.+8      	; 0x2320 <vfprintf+0x254>
    2318:	b0 c0       	rjmp	.+352    	; 0x247a <vfprintf+0x3ae>
    231a:	e9 2f       	mov	r30, r25
    231c:	e0 61       	ori	r30, 0x10	; 16
    231e:	be 2e       	mov	r11, r30
    2320:	b4 fe       	sbrs	r11, 4
    2322:	0d c0       	rjmp	.+26     	; 0x233e <vfprintf+0x272>
    2324:	fb 2d       	mov	r31, r11
    2326:	f4 60       	ori	r31, 0x04	; 4
    2328:	bf 2e       	mov	r11, r31
    232a:	09 c0       	rjmp	.+18     	; 0x233e <vfprintf+0x272>
    232c:	34 fe       	sbrs	r3, 4
    232e:	0a c0       	rjmp	.+20     	; 0x2344 <vfprintf+0x278>
    2330:	29 2f       	mov	r18, r25
    2332:	26 60       	ori	r18, 0x06	; 6
    2334:	b2 2e       	mov	r11, r18
    2336:	06 c0       	rjmp	.+12     	; 0x2344 <vfprintf+0x278>
    2338:	28 e0       	ldi	r18, 0x08	; 8
    233a:	30 e0       	ldi	r19, 0x00	; 0
    233c:	05 c0       	rjmp	.+10     	; 0x2348 <vfprintf+0x27c>
    233e:	20 e1       	ldi	r18, 0x10	; 16
    2340:	30 e0       	ldi	r19, 0x00	; 0
    2342:	02 c0       	rjmp	.+4      	; 0x2348 <vfprintf+0x27c>
    2344:	20 e1       	ldi	r18, 0x10	; 16
    2346:	32 e0       	ldi	r19, 0x02	; 2
    2348:	f8 01       	movw	r30, r16
    234a:	b7 fe       	sbrs	r11, 7
    234c:	07 c0       	rjmp	.+14     	; 0x235c <vfprintf+0x290>
    234e:	60 81       	ld	r22, Z
    2350:	71 81       	ldd	r23, Z+1	; 0x01
    2352:	82 81       	ldd	r24, Z+2	; 0x02
    2354:	93 81       	ldd	r25, Z+3	; 0x03
    2356:	0c 5f       	subi	r16, 0xFC	; 252
    2358:	1f 4f       	sbci	r17, 0xFF	; 255
    235a:	06 c0       	rjmp	.+12     	; 0x2368 <vfprintf+0x29c>
    235c:	60 81       	ld	r22, Z
    235e:	71 81       	ldd	r23, Z+1	; 0x01
    2360:	80 e0       	ldi	r24, 0x00	; 0
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	0e 5f       	subi	r16, 0xFE	; 254
    2366:	1f 4f       	sbci	r17, 0xFF	; 255
    2368:	a3 01       	movw	r20, r6
    236a:	0e 94 a9 12 	call	0x2552	; 0x2552 <__ultoa_invert>
    236e:	88 2e       	mov	r8, r24
    2370:	86 18       	sub	r8, r6
    2372:	fb 2d       	mov	r31, r11
    2374:	ff 77       	andi	r31, 0x7F	; 127
    2376:	3f 2e       	mov	r3, r31
    2378:	36 fe       	sbrs	r3, 6
    237a:	0d c0       	rjmp	.+26     	; 0x2396 <vfprintf+0x2ca>
    237c:	23 2d       	mov	r18, r3
    237e:	2e 7f       	andi	r18, 0xFE	; 254
    2380:	a2 2e       	mov	r10, r18
    2382:	89 14       	cp	r8, r9
    2384:	58 f4       	brcc	.+22     	; 0x239c <vfprintf+0x2d0>
    2386:	34 fe       	sbrs	r3, 4
    2388:	0b c0       	rjmp	.+22     	; 0x23a0 <vfprintf+0x2d4>
    238a:	32 fc       	sbrc	r3, 2
    238c:	09 c0       	rjmp	.+18     	; 0x23a0 <vfprintf+0x2d4>
    238e:	83 2d       	mov	r24, r3
    2390:	8e 7e       	andi	r24, 0xEE	; 238
    2392:	a8 2e       	mov	r10, r24
    2394:	05 c0       	rjmp	.+10     	; 0x23a0 <vfprintf+0x2d4>
    2396:	b8 2c       	mov	r11, r8
    2398:	a3 2c       	mov	r10, r3
    239a:	03 c0       	rjmp	.+6      	; 0x23a2 <vfprintf+0x2d6>
    239c:	b8 2c       	mov	r11, r8
    239e:	01 c0       	rjmp	.+2      	; 0x23a2 <vfprintf+0x2d6>
    23a0:	b9 2c       	mov	r11, r9
    23a2:	a4 fe       	sbrs	r10, 4
    23a4:	0f c0       	rjmp	.+30     	; 0x23c4 <vfprintf+0x2f8>
    23a6:	fe 01       	movw	r30, r28
    23a8:	e8 0d       	add	r30, r8
    23aa:	f1 1d       	adc	r31, r1
    23ac:	80 81       	ld	r24, Z
    23ae:	80 33       	cpi	r24, 0x30	; 48
    23b0:	21 f4       	brne	.+8      	; 0x23ba <vfprintf+0x2ee>
    23b2:	9a 2d       	mov	r25, r10
    23b4:	99 7e       	andi	r25, 0xE9	; 233
    23b6:	a9 2e       	mov	r10, r25
    23b8:	09 c0       	rjmp	.+18     	; 0x23cc <vfprintf+0x300>
    23ba:	a2 fe       	sbrs	r10, 2
    23bc:	06 c0       	rjmp	.+12     	; 0x23ca <vfprintf+0x2fe>
    23be:	b3 94       	inc	r11
    23c0:	b3 94       	inc	r11
    23c2:	04 c0       	rjmp	.+8      	; 0x23cc <vfprintf+0x300>
    23c4:	8a 2d       	mov	r24, r10
    23c6:	86 78       	andi	r24, 0x86	; 134
    23c8:	09 f0       	breq	.+2      	; 0x23cc <vfprintf+0x300>
    23ca:	b3 94       	inc	r11
    23cc:	a3 fc       	sbrc	r10, 3
    23ce:	11 c0       	rjmp	.+34     	; 0x23f2 <vfprintf+0x326>
    23d0:	a0 fe       	sbrs	r10, 0
    23d2:	06 c0       	rjmp	.+12     	; 0x23e0 <vfprintf+0x314>
    23d4:	b2 14       	cp	r11, r2
    23d6:	88 f4       	brcc	.+34     	; 0x23fa <vfprintf+0x32e>
    23d8:	28 0c       	add	r2, r8
    23da:	92 2c       	mov	r9, r2
    23dc:	9b 18       	sub	r9, r11
    23de:	0e c0       	rjmp	.+28     	; 0x23fc <vfprintf+0x330>
    23e0:	b2 14       	cp	r11, r2
    23e2:	60 f4       	brcc	.+24     	; 0x23fc <vfprintf+0x330>
    23e4:	b6 01       	movw	r22, r12
    23e6:	80 e2       	ldi	r24, 0x20	; 32
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    23ee:	b3 94       	inc	r11
    23f0:	f7 cf       	rjmp	.-18     	; 0x23e0 <vfprintf+0x314>
    23f2:	b2 14       	cp	r11, r2
    23f4:	18 f4       	brcc	.+6      	; 0x23fc <vfprintf+0x330>
    23f6:	2b 18       	sub	r2, r11
    23f8:	02 c0       	rjmp	.+4      	; 0x23fe <vfprintf+0x332>
    23fa:	98 2c       	mov	r9, r8
    23fc:	21 2c       	mov	r2, r1
    23fe:	a4 fe       	sbrs	r10, 4
    2400:	10 c0       	rjmp	.+32     	; 0x2422 <vfprintf+0x356>
    2402:	b6 01       	movw	r22, r12
    2404:	80 e3       	ldi	r24, 0x30	; 48
    2406:	90 e0       	ldi	r25, 0x00	; 0
    2408:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    240c:	a2 fe       	sbrs	r10, 2
    240e:	17 c0       	rjmp	.+46     	; 0x243e <vfprintf+0x372>
    2410:	a1 fc       	sbrc	r10, 1
    2412:	03 c0       	rjmp	.+6      	; 0x241a <vfprintf+0x34e>
    2414:	88 e7       	ldi	r24, 0x78	; 120
    2416:	90 e0       	ldi	r25, 0x00	; 0
    2418:	02 c0       	rjmp	.+4      	; 0x241e <vfprintf+0x352>
    241a:	88 e5       	ldi	r24, 0x58	; 88
    241c:	90 e0       	ldi	r25, 0x00	; 0
    241e:	b6 01       	movw	r22, r12
    2420:	0c c0       	rjmp	.+24     	; 0x243a <vfprintf+0x36e>
    2422:	8a 2d       	mov	r24, r10
    2424:	86 78       	andi	r24, 0x86	; 134
    2426:	59 f0       	breq	.+22     	; 0x243e <vfprintf+0x372>
    2428:	a1 fe       	sbrs	r10, 1
    242a:	02 c0       	rjmp	.+4      	; 0x2430 <vfprintf+0x364>
    242c:	8b e2       	ldi	r24, 0x2B	; 43
    242e:	01 c0       	rjmp	.+2      	; 0x2432 <vfprintf+0x366>
    2430:	80 e2       	ldi	r24, 0x20	; 32
    2432:	a7 fc       	sbrc	r10, 7
    2434:	8d e2       	ldi	r24, 0x2D	; 45
    2436:	b6 01       	movw	r22, r12
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    243e:	89 14       	cp	r8, r9
    2440:	38 f4       	brcc	.+14     	; 0x2450 <vfprintf+0x384>
    2442:	b6 01       	movw	r22, r12
    2444:	80 e3       	ldi	r24, 0x30	; 48
    2446:	90 e0       	ldi	r25, 0x00	; 0
    2448:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    244c:	9a 94       	dec	r9
    244e:	f7 cf       	rjmp	.-18     	; 0x243e <vfprintf+0x372>
    2450:	8a 94       	dec	r8
    2452:	f3 01       	movw	r30, r6
    2454:	e8 0d       	add	r30, r8
    2456:	f1 1d       	adc	r31, r1
    2458:	80 81       	ld	r24, Z
    245a:	b6 01       	movw	r22, r12
    245c:	90 e0       	ldi	r25, 0x00	; 0
    245e:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    2462:	81 10       	cpse	r8, r1
    2464:	f5 cf       	rjmp	.-22     	; 0x2450 <vfprintf+0x384>
    2466:	22 20       	and	r2, r2
    2468:	09 f4       	brne	.+2      	; 0x246c <vfprintf+0x3a0>
    246a:	42 ce       	rjmp	.-892    	; 0x20f0 <vfprintf+0x24>
    246c:	b6 01       	movw	r22, r12
    246e:	80 e2       	ldi	r24, 0x20	; 32
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	0e 94 6d 12 	call	0x24da	; 0x24da <fputc>
    2476:	2a 94       	dec	r2
    2478:	f6 cf       	rjmp	.-20     	; 0x2466 <vfprintf+0x39a>
    247a:	f6 01       	movw	r30, r12
    247c:	86 81       	ldd	r24, Z+6	; 0x06
    247e:	97 81       	ldd	r25, Z+7	; 0x07
    2480:	02 c0       	rjmp	.+4      	; 0x2486 <vfprintf+0x3ba>
    2482:	8f ef       	ldi	r24, 0xFF	; 255
    2484:	9f ef       	ldi	r25, 0xFF	; 255
    2486:	2b 96       	adiw	r28, 0x0b	; 11
    2488:	e2 e1       	ldi	r30, 0x12	; 18
    248a:	0c 94 23 13 	jmp	0x2646	; 0x2646 <__epilogue_restores__>

0000248e <strnlen_P>:
    248e:	fc 01       	movw	r30, r24
    2490:	05 90       	lpm	r0, Z+
    2492:	61 50       	subi	r22, 0x01	; 1
    2494:	70 40       	sbci	r23, 0x00	; 0
    2496:	01 10       	cpse	r0, r1
    2498:	d8 f7       	brcc	.-10     	; 0x2490 <strnlen_P+0x2>
    249a:	80 95       	com	r24
    249c:	90 95       	com	r25
    249e:	8e 0f       	add	r24, r30
    24a0:	9f 1f       	adc	r25, r31
    24a2:	08 95       	ret

000024a4 <strnlen>:
    24a4:	fc 01       	movw	r30, r24
    24a6:	61 50       	subi	r22, 0x01	; 1
    24a8:	70 40       	sbci	r23, 0x00	; 0
    24aa:	01 90       	ld	r0, Z+
    24ac:	01 10       	cpse	r0, r1
    24ae:	d8 f7       	brcc	.-10     	; 0x24a6 <strnlen+0x2>
    24b0:	80 95       	com	r24
    24b2:	90 95       	com	r25
    24b4:	8e 0f       	add	r24, r30
    24b6:	9f 1f       	adc	r25, r31
    24b8:	08 95       	ret

000024ba <strrev>:
    24ba:	dc 01       	movw	r26, r24
    24bc:	fc 01       	movw	r30, r24
    24be:	67 2f       	mov	r22, r23
    24c0:	71 91       	ld	r23, Z+
    24c2:	77 23       	and	r23, r23
    24c4:	e1 f7       	brne	.-8      	; 0x24be <strrev+0x4>
    24c6:	32 97       	sbiw	r30, 0x02	; 2
    24c8:	04 c0       	rjmp	.+8      	; 0x24d2 <strrev+0x18>
    24ca:	7c 91       	ld	r23, X
    24cc:	6d 93       	st	X+, r22
    24ce:	70 83       	st	Z, r23
    24d0:	62 91       	ld	r22, -Z
    24d2:	ae 17       	cp	r26, r30
    24d4:	bf 07       	cpc	r27, r31
    24d6:	c8 f3       	brcs	.-14     	; 0x24ca <strrev+0x10>
    24d8:	08 95       	ret

000024da <fputc>:
    24da:	0f 93       	push	r16
    24dc:	1f 93       	push	r17
    24de:	cf 93       	push	r28
    24e0:	df 93       	push	r29
    24e2:	fb 01       	movw	r30, r22
    24e4:	23 81       	ldd	r18, Z+3	; 0x03
    24e6:	21 fd       	sbrc	r18, 1
    24e8:	03 c0       	rjmp	.+6      	; 0x24f0 <fputc+0x16>
    24ea:	8f ef       	ldi	r24, 0xFF	; 255
    24ec:	9f ef       	ldi	r25, 0xFF	; 255
    24ee:	2c c0       	rjmp	.+88     	; 0x2548 <fputc+0x6e>
    24f0:	22 ff       	sbrs	r18, 2
    24f2:	16 c0       	rjmp	.+44     	; 0x2520 <fputc+0x46>
    24f4:	46 81       	ldd	r20, Z+6	; 0x06
    24f6:	57 81       	ldd	r21, Z+7	; 0x07
    24f8:	24 81       	ldd	r18, Z+4	; 0x04
    24fa:	35 81       	ldd	r19, Z+5	; 0x05
    24fc:	42 17       	cp	r20, r18
    24fe:	53 07       	cpc	r21, r19
    2500:	44 f4       	brge	.+16     	; 0x2512 <fputc+0x38>
    2502:	a0 81       	ld	r26, Z
    2504:	b1 81       	ldd	r27, Z+1	; 0x01
    2506:	9d 01       	movw	r18, r26
    2508:	2f 5f       	subi	r18, 0xFF	; 255
    250a:	3f 4f       	sbci	r19, 0xFF	; 255
    250c:	31 83       	std	Z+1, r19	; 0x01
    250e:	20 83       	st	Z, r18
    2510:	8c 93       	st	X, r24
    2512:	26 81       	ldd	r18, Z+6	; 0x06
    2514:	37 81       	ldd	r19, Z+7	; 0x07
    2516:	2f 5f       	subi	r18, 0xFF	; 255
    2518:	3f 4f       	sbci	r19, 0xFF	; 255
    251a:	37 83       	std	Z+7, r19	; 0x07
    251c:	26 83       	std	Z+6, r18	; 0x06
    251e:	14 c0       	rjmp	.+40     	; 0x2548 <fputc+0x6e>
    2520:	8b 01       	movw	r16, r22
    2522:	ec 01       	movw	r28, r24
    2524:	fb 01       	movw	r30, r22
    2526:	00 84       	ldd	r0, Z+8	; 0x08
    2528:	f1 85       	ldd	r31, Z+9	; 0x09
    252a:	e0 2d       	mov	r30, r0
    252c:	09 95       	icall
    252e:	89 2b       	or	r24, r25
    2530:	e1 f6       	brne	.-72     	; 0x24ea <fputc+0x10>
    2532:	d8 01       	movw	r26, r16
    2534:	16 96       	adiw	r26, 0x06	; 6
    2536:	8d 91       	ld	r24, X+
    2538:	9c 91       	ld	r25, X
    253a:	17 97       	sbiw	r26, 0x07	; 7
    253c:	01 96       	adiw	r24, 0x01	; 1
    253e:	17 96       	adiw	r26, 0x07	; 7
    2540:	9c 93       	st	X, r25
    2542:	8e 93       	st	-X, r24
    2544:	16 97       	sbiw	r26, 0x06	; 6
    2546:	ce 01       	movw	r24, r28
    2548:	df 91       	pop	r29
    254a:	cf 91       	pop	r28
    254c:	1f 91       	pop	r17
    254e:	0f 91       	pop	r16
    2550:	08 95       	ret

00002552 <__ultoa_invert>:
    2552:	fa 01       	movw	r30, r20
    2554:	aa 27       	eor	r26, r26
    2556:	28 30       	cpi	r18, 0x08	; 8
    2558:	51 f1       	breq	.+84     	; 0x25ae <__ultoa_invert+0x5c>
    255a:	20 31       	cpi	r18, 0x10	; 16
    255c:	81 f1       	breq	.+96     	; 0x25be <__ultoa_invert+0x6c>
    255e:	e8 94       	clt
    2560:	6f 93       	push	r22
    2562:	6e 7f       	andi	r22, 0xFE	; 254
    2564:	6e 5f       	subi	r22, 0xFE	; 254
    2566:	7f 4f       	sbci	r23, 0xFF	; 255
    2568:	8f 4f       	sbci	r24, 0xFF	; 255
    256a:	9f 4f       	sbci	r25, 0xFF	; 255
    256c:	af 4f       	sbci	r26, 0xFF	; 255
    256e:	b1 e0       	ldi	r27, 0x01	; 1
    2570:	3e d0       	rcall	.+124    	; 0x25ee <__ultoa_invert+0x9c>
    2572:	b4 e0       	ldi	r27, 0x04	; 4
    2574:	3c d0       	rcall	.+120    	; 0x25ee <__ultoa_invert+0x9c>
    2576:	67 0f       	add	r22, r23
    2578:	78 1f       	adc	r23, r24
    257a:	89 1f       	adc	r24, r25
    257c:	9a 1f       	adc	r25, r26
    257e:	a1 1d       	adc	r26, r1
    2580:	68 0f       	add	r22, r24
    2582:	79 1f       	adc	r23, r25
    2584:	8a 1f       	adc	r24, r26
    2586:	91 1d       	adc	r25, r1
    2588:	a1 1d       	adc	r26, r1
    258a:	6a 0f       	add	r22, r26
    258c:	71 1d       	adc	r23, r1
    258e:	81 1d       	adc	r24, r1
    2590:	91 1d       	adc	r25, r1
    2592:	a1 1d       	adc	r26, r1
    2594:	20 d0       	rcall	.+64     	; 0x25d6 <__ultoa_invert+0x84>
    2596:	09 f4       	brne	.+2      	; 0x259a <__ultoa_invert+0x48>
    2598:	68 94       	set
    259a:	3f 91       	pop	r19
    259c:	2a e0       	ldi	r18, 0x0A	; 10
    259e:	26 9f       	mul	r18, r22
    25a0:	11 24       	eor	r1, r1
    25a2:	30 19       	sub	r19, r0
    25a4:	30 5d       	subi	r19, 0xD0	; 208
    25a6:	31 93       	st	Z+, r19
    25a8:	de f6       	brtc	.-74     	; 0x2560 <__ultoa_invert+0xe>
    25aa:	cf 01       	movw	r24, r30
    25ac:	08 95       	ret
    25ae:	46 2f       	mov	r20, r22
    25b0:	47 70       	andi	r20, 0x07	; 7
    25b2:	40 5d       	subi	r20, 0xD0	; 208
    25b4:	41 93       	st	Z+, r20
    25b6:	b3 e0       	ldi	r27, 0x03	; 3
    25b8:	0f d0       	rcall	.+30     	; 0x25d8 <__ultoa_invert+0x86>
    25ba:	c9 f7       	brne	.-14     	; 0x25ae <__ultoa_invert+0x5c>
    25bc:	f6 cf       	rjmp	.-20     	; 0x25aa <__ultoa_invert+0x58>
    25be:	46 2f       	mov	r20, r22
    25c0:	4f 70       	andi	r20, 0x0F	; 15
    25c2:	40 5d       	subi	r20, 0xD0	; 208
    25c4:	4a 33       	cpi	r20, 0x3A	; 58
    25c6:	18 f0       	brcs	.+6      	; 0x25ce <__ultoa_invert+0x7c>
    25c8:	49 5d       	subi	r20, 0xD9	; 217
    25ca:	31 fd       	sbrc	r19, 1
    25cc:	40 52       	subi	r20, 0x20	; 32
    25ce:	41 93       	st	Z+, r20
    25d0:	02 d0       	rcall	.+4      	; 0x25d6 <__ultoa_invert+0x84>
    25d2:	a9 f7       	brne	.-22     	; 0x25be <__ultoa_invert+0x6c>
    25d4:	ea cf       	rjmp	.-44     	; 0x25aa <__ultoa_invert+0x58>
    25d6:	b4 e0       	ldi	r27, 0x04	; 4
    25d8:	a6 95       	lsr	r26
    25da:	97 95       	ror	r25
    25dc:	87 95       	ror	r24
    25de:	77 95       	ror	r23
    25e0:	67 95       	ror	r22
    25e2:	ba 95       	dec	r27
    25e4:	c9 f7       	brne	.-14     	; 0x25d8 <__ultoa_invert+0x86>
    25e6:	00 97       	sbiw	r24, 0x00	; 0
    25e8:	61 05       	cpc	r22, r1
    25ea:	71 05       	cpc	r23, r1
    25ec:	08 95       	ret
    25ee:	9b 01       	movw	r18, r22
    25f0:	ac 01       	movw	r20, r24
    25f2:	0a 2e       	mov	r0, r26
    25f4:	06 94       	lsr	r0
    25f6:	57 95       	ror	r21
    25f8:	47 95       	ror	r20
    25fa:	37 95       	ror	r19
    25fc:	27 95       	ror	r18
    25fe:	ba 95       	dec	r27
    2600:	c9 f7       	brne	.-14     	; 0x25f4 <__ultoa_invert+0xa2>
    2602:	62 0f       	add	r22, r18
    2604:	73 1f       	adc	r23, r19
    2606:	84 1f       	adc	r24, r20
    2608:	95 1f       	adc	r25, r21
    260a:	a0 1d       	adc	r26, r0
    260c:	08 95       	ret

0000260e <__prologue_saves__>:
    260e:	2f 92       	push	r2
    2610:	3f 92       	push	r3
    2612:	4f 92       	push	r4
    2614:	5f 92       	push	r5
    2616:	6f 92       	push	r6
    2618:	7f 92       	push	r7
    261a:	8f 92       	push	r8
    261c:	9f 92       	push	r9
    261e:	af 92       	push	r10
    2620:	bf 92       	push	r11
    2622:	cf 92       	push	r12
    2624:	df 92       	push	r13
    2626:	ef 92       	push	r14
    2628:	ff 92       	push	r15
    262a:	0f 93       	push	r16
    262c:	1f 93       	push	r17
    262e:	cf 93       	push	r28
    2630:	df 93       	push	r29
    2632:	cd b7       	in	r28, 0x3d	; 61
    2634:	de b7       	in	r29, 0x3e	; 62
    2636:	ca 1b       	sub	r28, r26
    2638:	db 0b       	sbc	r29, r27
    263a:	0f b6       	in	r0, 0x3f	; 63
    263c:	f8 94       	cli
    263e:	de bf       	out	0x3e, r29	; 62
    2640:	0f be       	out	0x3f, r0	; 63
    2642:	cd bf       	out	0x3d, r28	; 61
    2644:	09 94       	ijmp

00002646 <__epilogue_restores__>:
    2646:	2a 88       	ldd	r2, Y+18	; 0x12
    2648:	39 88       	ldd	r3, Y+17	; 0x11
    264a:	48 88       	ldd	r4, Y+16	; 0x10
    264c:	5f 84       	ldd	r5, Y+15	; 0x0f
    264e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2650:	7d 84       	ldd	r7, Y+13	; 0x0d
    2652:	8c 84       	ldd	r8, Y+12	; 0x0c
    2654:	9b 84       	ldd	r9, Y+11	; 0x0b
    2656:	aa 84       	ldd	r10, Y+10	; 0x0a
    2658:	b9 84       	ldd	r11, Y+9	; 0x09
    265a:	c8 84       	ldd	r12, Y+8	; 0x08
    265c:	df 80       	ldd	r13, Y+7	; 0x07
    265e:	ee 80       	ldd	r14, Y+6	; 0x06
    2660:	fd 80       	ldd	r15, Y+5	; 0x05
    2662:	0c 81       	ldd	r16, Y+4	; 0x04
    2664:	1b 81       	ldd	r17, Y+3	; 0x03
    2666:	aa 81       	ldd	r26, Y+2	; 0x02
    2668:	b9 81       	ldd	r27, Y+1	; 0x01
    266a:	ce 0f       	add	r28, r30
    266c:	d1 1d       	adc	r29, r1
    266e:	0f b6       	in	r0, 0x3f	; 63
    2670:	f8 94       	cli
    2672:	de bf       	out	0x3e, r29	; 62
    2674:	0f be       	out	0x3f, r0	; 63
    2676:	cd bf       	out	0x3d, r28	; 61
    2678:	ed 01       	movw	r28, r26
    267a:	08 95       	ret

0000267c <_exit>:
    267c:	f8 94       	cli

0000267e <__stop_program>:
    267e:	ff cf       	rjmp	.-2      	; 0x267e <__stop_program>
