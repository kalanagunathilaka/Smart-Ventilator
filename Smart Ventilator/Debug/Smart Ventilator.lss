
Smart Ventilator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a2  00800060  000013fc  00001490  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001f8  00800102  00800102  00001532  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001532  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001590  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  000015cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001472  00000000  00000000  000016c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f6  00000000  00000000  00002b36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000080e  00000000  00000000  0000342c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00003c3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000068b  00000000  00000000  00003f64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b07  00000000  00000000  000045ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  000050f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ef       	ldi	r30, 0xFC	; 252
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 30       	cpi	r26, 0x02	; 2
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	22 e0       	ldi	r18, 0x02	; 2
      78:	a2 e0       	ldi	r26, 0x02	; 2
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	aa 3f       	cpi	r26, 0xFA	; 250
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 03 	call	0x692	; 0x692 <main>
      8a:	0c 94 fc 09 	jmp	0x13f8	; 0x13f8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <USART_Init>:
            return 0;
        } else { return 1; }
    }else{return 0;}
}

void notifyDisplay() {
      92:	2a b1       	in	r18, 0x0a	; 10
      94:	28 69       	ori	r18, 0x98	; 152
      96:	2a b9       	out	0x0a, r18	; 10
      98:	20 b5       	in	r18, 0x20	; 32
      9a:	26 68       	ori	r18, 0x86	; 134
      9c:	20 bd       	out	0x20, r18	; 32
      9e:	dc 01       	movw	r26, r24
      a0:	cb 01       	movw	r24, r22
      a2:	88 0f       	add	r24, r24
      a4:	99 1f       	adc	r25, r25
      a6:	aa 1f       	adc	r26, r26
      a8:	bb 1f       	adc	r27, r27
      aa:	88 0f       	add	r24, r24
      ac:	99 1f       	adc	r25, r25
      ae:	aa 1f       	adc	r26, r26
      b0:	bb 1f       	adc	r27, r27
      b2:	9c 01       	movw	r18, r24
      b4:	ad 01       	movw	r20, r26
      b6:	22 0f       	add	r18, r18
      b8:	33 1f       	adc	r19, r19
      ba:	44 1f       	adc	r20, r20
      bc:	55 1f       	adc	r21, r21
      be:	22 0f       	add	r18, r18
      c0:	33 1f       	adc	r19, r19
      c2:	44 1f       	adc	r20, r20
      c4:	55 1f       	adc	r21, r21
      c6:	60 e0       	ldi	r22, 0x00	; 0
      c8:	72 e1       	ldi	r23, 0x12	; 18
      ca:	8a e7       	ldi	r24, 0x7A	; 122
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	0e 94 74 05 	call	0xae8	; 0xae8 <__udivmodsi4>
      d2:	8f ef       	ldi	r24, 0xFF	; 255
      d4:	82 0f       	add	r24, r18
      d6:	89 b9       	out	0x09, r24	; 9
      d8:	da 01       	movw	r26, r20
      da:	c9 01       	movw	r24, r18
      dc:	01 97       	sbiw	r24, 0x01	; 1
      de:	a1 09       	sbc	r26, r1
      e0:	b1 09       	sbc	r27, r1
      e2:	89 2f       	mov	r24, r25
      e4:	9a 2f       	mov	r25, r26
      e6:	ab 2f       	mov	r26, r27
      e8:	bb 27       	eor	r27, r27
      ea:	80 bd       	out	0x20, r24	; 32
      ec:	08 95       	ret

000000ee <USART_TxChar>:
      ee:	8c b9       	out	0x0c, r24	; 12
      f0:	5d 9b       	sbis	0x0b, 5	; 11
      f2:	fe cf       	rjmp	.-4      	; 0xf0 <USART_TxChar+0x2>
      f4:	08 95       	ret

000000f6 <USART_SendString>:
      f6:	0f 93       	push	r16
      f8:	1f 93       	push	r17
      fa:	cf 93       	push	r28
      fc:	df 93       	push	r29
      fe:	8c 01       	movw	r16, r24
     100:	c0 e0       	ldi	r28, 0x00	; 0
     102:	d0 e0       	ldi	r29, 0x00	; 0
     104:	03 c0       	rjmp	.+6      	; 0x10c <USART_SendString+0x16>
     106:	0e 94 77 00 	call	0xee	; 0xee <USART_TxChar>
     10a:	21 96       	adiw	r28, 0x01	; 1
     10c:	f8 01       	movw	r30, r16
     10e:	ec 0f       	add	r30, r28
     110:	fd 1f       	adc	r31, r29
     112:	80 81       	ld	r24, Z
     114:	81 11       	cpse	r24, r1
     116:	f7 cf       	rjmp	.-18     	; 0x106 <USART_SendString+0x10>
     118:	df 91       	pop	r29
     11a:	cf 91       	pop	r28
     11c:	1f 91       	pop	r17
     11e:	0f 91       	pop	r16
     120:	08 95       	ret

00000122 <GSMConnect>:
     122:	0f 93       	push	r16
     124:	1f 93       	push	r17
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	c4 56       	subi	r28, 0x64	; 100
     130:	d1 09       	sbc	r29, r1
     132:	0f b6       	in	r0, 0x3f	; 63
     134:	f8 94       	cli
     136:	de bf       	out	0x3e, r29	; 62
     138:	0f be       	out	0x3f, r0	; 63
     13a:	cd bf       	out	0x3d, r28	; 61
     13c:	8a e7       	ldi	r24, 0x7A	; 122
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
     144:	8f e1       	ldi	r24, 0x1F	; 31
     146:	9e e4       	ldi	r25, 0x4E	; 78
     148:	01 97       	sbiw	r24, 0x01	; 1
     14a:	f1 f7       	brne	.-4      	; 0x148 <GSMConnect+0x26>
     14c:	00 c0       	rjmp	.+0      	; 0x14e <GSMConnect+0x2c>
     14e:	00 00       	nop
     150:	80 e8       	ldi	r24, 0x80	; 128
     152:	90 e0       	ldi	r25, 0x00	; 0
     154:	9f 93       	push	r25
     156:	8f 93       	push	r24
     158:	9f 93       	push	r25
     15a:	8f 93       	push	r24
     15c:	88 e8       	ldi	r24, 0x88	; 136
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	9f 93       	push	r25
     162:	8f 93       	push	r24
     164:	8f e8       	ldi	r24, 0x8F	; 143
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	9f 93       	push	r25
     16a:	8f 93       	push	r24
     16c:	8e 01       	movw	r16, r28
     16e:	0f 5f       	subi	r16, 0xFF	; 255
     170:	1f 4f       	sbci	r17, 0xFF	; 255
     172:	1f 93       	push	r17
     174:	0f 93       	push	r16
     176:	0e 94 02 07 	call	0xe04	; 0xe04 <sprintf>
     17a:	c8 01       	movw	r24, r16
     17c:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
     180:	84 e6       	ldi	r24, 0x64	; 100
     182:	e2 e0       	ldi	r30, 0x02	; 2
     184:	f1 e0       	ldi	r31, 0x01	; 1
     186:	df 01       	movw	r26, r30
     188:	1d 92       	st	X+, r1
     18a:	8a 95       	dec	r24
     18c:	e9 f7       	brne	.-6      	; 0x188 <GSMConnect+0x66>
     18e:	8f e1       	ldi	r24, 0x1F	; 31
     190:	9e e4       	ldi	r25, 0x4E	; 78
     192:	01 97       	sbiw	r24, 0x01	; 1
     194:	f1 f7       	brne	.-4      	; 0x192 <GSMConnect+0x70>
     196:	00 c0       	rjmp	.+0      	; 0x198 <GSMConnect+0x76>
     198:	00 00       	nop
     19a:	87 ea       	ldi	r24, 0xA7	; 167
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
     1a2:	0f b6       	in	r0, 0x3f	; 63
     1a4:	f8 94       	cli
     1a6:	de bf       	out	0x3e, r29	; 62
     1a8:	0f be       	out	0x3f, r0	; 63
     1aa:	cd bf       	out	0x3d, r28	; 61
     1ac:	cc 59       	subi	r28, 0x9C	; 156
     1ae:	df 4f       	sbci	r29, 0xFF	; 255
     1b0:	0f b6       	in	r0, 0x3f	; 63
     1b2:	f8 94       	cli
     1b4:	de bf       	out	0x3e, r29	; 62
     1b6:	0f be       	out	0x3f, r0	; 63
     1b8:	cd bf       	out	0x3d, r28	; 61
     1ba:	df 91       	pop	r29
     1bc:	cf 91       	pop	r28
     1be:	1f 91       	pop	r17
     1c0:	0f 91       	pop	r16
     1c2:	08 95       	ret

000001c4 <delay_ms>:
     1c4:	20 e0       	ldi	r18, 0x00	; 0
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	4a e7       	ldi	r20, 0x7A	; 122
     1ca:	54 e4       	ldi	r21, 0x44	; 68
     1cc:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__mulsf3>
     1d0:	0e 94 06 04 	call	0x80c	; 0x80c <__fixsfsi>
     1d4:	05 c0       	rjmp	.+10     	; 0x1e0 <delay_ms+0x1c>
     1d6:	22 e0       	ldi	r18, 0x02	; 2
     1d8:	2a 95       	dec	r18
     1da:	f1 f7       	brne	.-4      	; 0x1d8 <delay_ms+0x14>
     1dc:	00 c0       	rjmp	.+0      	; 0x1de <delay_ms+0x1a>
     1de:	bc 01       	movw	r22, r24
     1e0:	cb 01       	movw	r24, r22
     1e2:	01 97       	sbiw	r24, 0x01	; 1
     1e4:	67 2b       	or	r22, r23
     1e6:	b9 f7       	brne	.-18     	; 0x1d6 <delay_ms+0x12>
     1e8:	08 95       	ret

000001ea <openSolenoidValves>:
     1ea:	8f 92       	push	r8
     1ec:	9f 92       	push	r9
     1ee:	af 92       	push	r10
     1f0:	bf 92       	push	r11
     1f2:	cf 92       	push	r12
     1f4:	df 92       	push	r13
     1f6:	ef 92       	push	r14
     1f8:	ff 92       	push	r15
     1fa:	4b 01       	movw	r8, r22
     1fc:	5c 01       	movw	r10, r24
     1fe:	69 01       	movw	r12, r18
     200:	7a 01       	movw	r14, r20
     202:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__gesf2>
     206:	18 16       	cp	r1, r24
     208:	ec f4       	brge	.+58     	; 0x244 <openSolenoidValves+0x5a>
     20a:	85 b3       	in	r24, 0x15	; 21
     20c:	84 60       	ori	r24, 0x04	; 4
     20e:	85 bb       	out	0x15, r24	; 21
     210:	85 b3       	in	r24, 0x15	; 21
     212:	87 7f       	andi	r24, 0xF7	; 247
     214:	85 bb       	out	0x15, r24	; 21
     216:	c7 01       	movw	r24, r14
     218:	b6 01       	movw	r22, r12
     21a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
     21e:	85 b3       	in	r24, 0x15	; 21
     220:	8b 7f       	andi	r24, 0xFB	; 251
     222:	85 bb       	out	0x15, r24	; 21
     224:	a7 01       	movw	r20, r14
     226:	96 01       	movw	r18, r12
     228:	c5 01       	movw	r24, r10
     22a:	b4 01       	movw	r22, r8
     22c:	0e 94 94 03 	call	0x728	; 0x728 <__subsf3>
     230:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
     234:	85 b3       	in	r24, 0x15	; 21
     236:	88 60       	ori	r24, 0x08	; 8
     238:	85 bb       	out	0x15, r24	; 21
     23a:	c5 01       	movw	r24, r10
     23c:	b4 01       	movw	r22, r8
     23e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
     242:	1c c0       	rjmp	.+56     	; 0x27c <openSolenoidValves+0x92>
     244:	85 b3       	in	r24, 0x15	; 21
     246:	84 60       	ori	r24, 0x04	; 4
     248:	85 bb       	out	0x15, r24	; 21
     24a:	85 b3       	in	r24, 0x15	; 21
     24c:	87 7f       	andi	r24, 0xF7	; 247
     24e:	85 bb       	out	0x15, r24	; 21
     250:	c5 01       	movw	r24, r10
     252:	b4 01       	movw	r22, r8
     254:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
     258:	85 b3       	in	r24, 0x15	; 21
     25a:	8b 7f       	andi	r24, 0xFB	; 251
     25c:	85 bb       	out	0x15, r24	; 21
     25e:	a5 01       	movw	r20, r10
     260:	94 01       	movw	r18, r8
     262:	c7 01       	movw	r24, r14
     264:	b6 01       	movw	r22, r12
     266:	0e 94 94 03 	call	0x728	; 0x728 <__subsf3>
     26a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
     26e:	85 b3       	in	r24, 0x15	; 21
     270:	88 60       	ori	r24, 0x08	; 8
     272:	85 bb       	out	0x15, r24	; 21
     274:	c7 01       	movw	r24, r14
     276:	b6 01       	movw	r22, r12
     278:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
     27c:	ff 90       	pop	r15
     27e:	ef 90       	pop	r14
     280:	df 90       	pop	r13
     282:	cf 90       	pop	r12
     284:	bf 90       	pop	r11
     286:	af 90       	pop	r10
     288:	9f 90       	pop	r9
     28a:	8f 90       	pop	r8
     28c:	08 95       	ret

0000028e <checkBloodOxygenLevel>:
     28e:	80 e0       	ldi	r24, 0x00	; 0
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	08 95       	ret

00000294 <PatientTemp>:
     294:	85 e2       	ldi	r24, 0x25	; 37
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	08 95       	ret

0000029a <automationOn>:
     29a:	81 e0       	ldi	r24, 0x01	; 1
     29c:	08 95       	ret

0000029e <turnOn>:
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	08 95       	ret

000002a2 <concatS>:
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
}
const char *concatS(const char *string, char sPercentage[4]) {
     2a2:	ef 92       	push	r14
     2a4:	ff 92       	push	r15
     2a6:	0f 93       	push	r16
     2a8:	1f 93       	push	r17
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	8c 01       	movw	r16, r24
     2b0:	eb 01       	movw	r28, r22
    char *result = malloc(strlen(string) + strlen(sPercentage) + 1);
     2b2:	fc 01       	movw	r30, r24
     2b4:	01 90       	ld	r0, Z+
     2b6:	00 20       	and	r0, r0
     2b8:	e9 f7       	brne	.-6      	; 0x2b4 <concatS+0x12>
     2ba:	31 97       	sbiw	r30, 0x01	; 1
     2bc:	cf 01       	movw	r24, r30
     2be:	80 1b       	sub	r24, r16
     2c0:	91 0b       	sbc	r25, r17
     2c2:	fb 01       	movw	r30, r22
     2c4:	01 90       	ld	r0, Z+
     2c6:	00 20       	and	r0, r0
     2c8:	e9 f7       	brne	.-6      	; 0x2c4 <concatS+0x22>
     2ca:	31 97       	sbiw	r30, 0x01	; 1
     2cc:	e6 1b       	sub	r30, r22
     2ce:	f7 0b       	sbc	r31, r23
     2d0:	8e 0f       	add	r24, r30
     2d2:	9f 1f       	adc	r25, r31
     2d4:	01 96       	adiw	r24, 0x01	; 1
     2d6:	0e 94 aa 05 	call	0xb54	; 0xb54 <malloc>
     2da:	7c 01       	movw	r14, r24
    strcpy(result, string);
     2dc:	b8 01       	movw	r22, r16
     2de:	0e 94 d6 06 	call	0xdac	; 0xdac <strcpy>
    strcat(result, sPercentage);
     2e2:	be 01       	movw	r22, r28
     2e4:	c7 01       	movw	r24, r14
     2e6:	0e 94 cb 06 	call	0xd96	; 0xd96 <strcat>
    return result;
}
     2ea:	c7 01       	movw	r24, r14
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	0f 91       	pop	r16
     2f4:	ff 90       	pop	r15
     2f6:	ef 90       	pop	r14
     2f8:	08 95       	ret

000002fa <sendSMS>:




void sendSMS(char no[], const char *string) {
     2fa:	bf 92       	push	r11
     2fc:	cf 92       	push	r12
     2fe:	df 92       	push	r13
     300:	ef 92       	push	r14
     302:	ff 92       	push	r15
     304:	0f 93       	push	r16
     306:	1f 93       	push	r17
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
     30c:	cd b7       	in	r28, 0x3d	; 61
     30e:	de b7       	in	r29, 0x3e	; 62
     310:	c4 56       	subi	r28, 0x64	; 100
     312:	d1 09       	sbc	r29, r1
     314:	0f b6       	in	r0, 0x3f	; 63
     316:	f8 94       	cli
     318:	de bf       	out	0x3e, r29	; 62
     31a:	0f be       	out	0x3f, r0	; 63
     31c:	cd bf       	out	0x3d, r28	; 61
     31e:	18 2f       	mov	r17, r24
     320:	09 2f       	mov	r16, r25
     322:	c6 2e       	mov	r12, r22
     324:	b7 2e       	mov	r11, r23
    USART_SendString("AT\r");
     326:	85 eb       	ldi	r24, 0xB5	; 181
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     32e:	8f e1       	ldi	r24, 0x1F	; 31
     330:	9e e4       	ldi	r25, 0x4E	; 78
     332:	01 97       	sbiw	r24, 0x01	; 1
     334:	f1 f7       	brne	.-4      	; 0x332 <sendSMS+0x38>
     336:	00 c0       	rjmp	.+0      	; 0x338 <sendSMS+0x3e>
     338:	00 00       	nop
    _delay_ms(10);
    USART_SendString("AT+CMGF=1\r");
     33a:	89 eb       	ldi	r24, 0xB9	; 185
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
     342:	ef e1       	ldi	r30, 0x1F	; 31
     344:	fe e4       	ldi	r31, 0x4E	; 78
     346:	31 97       	sbiw	r30, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <sendSMS+0x4c>
     34a:	00 c0       	rjmp	.+0      	; 0x34c <sendSMS+0x52>
     34c:	00 00       	nop
    _delay_ms(10);
    char data_buffer[100];
    sprintf(data_buffer,"AT+CMGS=%s\r",no);
     34e:	0f 93       	push	r16
     350:	1f 93       	push	r17
     352:	84 ec       	ldi	r24, 0xC4	; 196
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	9f 93       	push	r25
     358:	8f 93       	push	r24
     35a:	8e 01       	movw	r16, r28
     35c:	0f 5f       	subi	r16, 0xFF	; 255
     35e:	1f 4f       	sbci	r17, 0xFF	; 255
     360:	1f 93       	push	r17
     362:	0f 93       	push	r16
     364:	0e 94 02 07 	call	0xe04	; 0xe04 <sprintf>
    USART_SendString(data_buffer);
     368:	c8 01       	movw	r24, r16
     36a:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
    memset(USART_BUFFER, 0, 100);
     36e:	0f 2e       	mov	r0, r31
     370:	f2 e0       	ldi	r31, 0x02	; 2
     372:	ef 2e       	mov	r14, r31
     374:	f1 e0       	ldi	r31, 0x01	; 1
     376:	ff 2e       	mov	r15, r31
     378:	f0 2d       	mov	r31, r0
     37a:	0f 2e       	mov	r0, r31
     37c:	f4 e6       	ldi	r31, 0x64	; 100
     37e:	df 2e       	mov	r13, r31
     380:	f0 2d       	mov	r31, r0
     382:	f7 01       	movw	r30, r14
     384:	8d 2d       	mov	r24, r13
     386:	11 92       	st	Z+, r1
     388:	8a 95       	dec	r24
     38a:	e9 f7       	brne	.-6      	; 0x386 <sendSMS+0x8c>
    sprintf(data_buffer,"%s\r",string);
     38c:	bf 92       	push	r11
     38e:	cf 92       	push	r12
     390:	8c ec       	ldi	r24, 0xCC	; 204
     392:	90 e0       	ldi	r25, 0x00	; 0
     394:	9f 93       	push	r25
     396:	8f 93       	push	r24
     398:	1f 93       	push	r17
     39a:	0f 93       	push	r16
     39c:	0e 94 02 07 	call	0xe04	; 0xe04 <sprintf>
    USART_SendString(data_buffer);
     3a0:	c8 01       	movw	r24, r16
     3a2:	0e 94 7b 00 	call	0xf6	; 0xf6 <USART_SendString>
    memset(USART_BUFFER, 0, 100);//clear data buffer
     3a6:	f7 01       	movw	r30, r14
     3a8:	11 92       	st	Z+, r1
     3aa:	da 94       	dec	r13
     3ac:	e9 f7       	brne	.-6      	; 0x3a8 <sendSMS+0xae>

}
     3ae:	0f b6       	in	r0, 0x3f	; 63
     3b0:	f8 94       	cli
     3b2:	de bf       	out	0x3e, r29	; 62
     3b4:	0f be       	out	0x3f, r0	; 63
     3b6:	cd bf       	out	0x3d, r28	; 61
     3b8:	cc 59       	subi	r28, 0x9C	; 156
     3ba:	df 4f       	sbci	r29, 0xFF	; 255
     3bc:	0f b6       	in	r0, 0x3f	; 63
     3be:	f8 94       	cli
     3c0:	de bf       	out	0x3e, r29	; 62
     3c2:	0f be       	out	0x3f, r0	; 63
     3c4:	cd bf       	out	0x3d, r28	; 61
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	1f 91       	pop	r17
     3cc:	0f 91       	pop	r16
     3ce:	ff 90       	pop	r15
     3d0:	ef 90       	pop	r14
     3d2:	df 90       	pop	r13
     3d4:	cf 90       	pop	r12
     3d6:	bf 90       	pop	r11
     3d8:	08 95       	ret

000003da <notifyGSM>:

void notifyDisplay() {

}

void notifyGSM(const char *string, int percentage) {
     3da:	0f 93       	push	r16
     3dc:	1f 93       	push	r17
     3de:	cf 93       	push	r28
     3e0:	df 93       	push	r29
     3e2:	00 d0       	rcall	.+0      	; 0x3e4 <notifyGSM+0xa>
     3e4:	00 d0       	rcall	.+0      	; 0x3e6 <notifyGSM+0xc>
     3e6:	cd b7       	in	r28, 0x3d	; 61
     3e8:	de b7       	in	r29, 0x3e	; 62
     3ea:	8c 01       	movw	r16, r24
     3ec:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     3ee:	4a e0       	ldi	r20, 0x0A	; 10
     3f0:	be 01       	movw	r22, r28
     3f2:	6f 5f       	subi	r22, 0xFF	; 255
     3f4:	7f 4f       	sbci	r23, 0xFF	; 255
     3f6:	0e 94 dd 06 	call	0xdba	; 0xdba <__itoa_ncheck>
    char Spercentage[4];
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
     3fa:	be 01       	movw	r22, r28
     3fc:	6f 5f       	subi	r22, 0xFF	; 255
     3fe:	7f 4f       	sbci	r23, 0xFF	; 255
     400:	c8 01       	movw	r24, r16
     402:	0e 94 51 01 	call	0x2a2	; 0x2a2 <concatS>
     406:	bc 01       	movw	r22, r24
     408:	86 e6       	ldi	r24, 0x66	; 102
     40a:	90 e0       	ldi	r25, 0x00	; 0
     40c:	0e 94 7d 01 	call	0x2fa	; 0x2fa <sendSMS>
}
     410:	0f 90       	pop	r0
     412:	0f 90       	pop	r0
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
     418:	df 91       	pop	r29
     41a:	cf 91       	pop	r28
     41c:	1f 91       	pop	r17
     41e:	0f 91       	pop	r16
     420:	08 95       	ret

00000422 <checkPatientTemp>:

void notifySpeaker() {

}

bool checkPatientTemp() {
     422:	cf 92       	push	r12
     424:	df 92       	push	r13
     426:	ef 92       	push	r14
     428:	ff 92       	push	r15
     42a:	cf 93       	push	r28
     42c:	df 93       	push	r29
    if(PatientTemp()>37.2||PatientTemp()<36.1){
     42e:	0e 94 4a 01 	call	0x294	; 0x294 <PatientTemp>
     432:	ec 01       	movw	r28, r24
     434:	bc 01       	movw	r22, r24
     436:	99 0f       	add	r25, r25
     438:	88 0b       	sbc	r24, r24
     43a:	99 0b       	sbc	r25, r25
     43c:	0e 94 3e 04 	call	0x87c	; 0x87c <__floatsisf>
     440:	6b 01       	movw	r12, r22
     442:	7c 01       	movw	r14, r24
     444:	2d ec       	ldi	r18, 0xCD	; 205
     446:	3c ec       	ldi	r19, 0xCC	; 204
     448:	44 e1       	ldi	r20, 0x14	; 20
     44a:	52 e4       	ldi	r21, 0x42	; 66
     44c:	0e 94 ee 04 	call	0x9dc	; 0x9dc <__gesf2>
     450:	18 16       	cp	r1, r24
     452:	54 f0       	brlt	.+20     	; 0x468 <checkPatientTemp+0x46>
     454:	26 e6       	ldi	r18, 0x66	; 102
     456:	36 e6       	ldi	r19, 0x66	; 102
     458:	40 e1       	ldi	r20, 0x10	; 16
     45a:	52 e4       	ldi	r21, 0x42	; 66
     45c:	c7 01       	movw	r24, r14
     45e:	b6 01       	movw	r22, r12
     460:	0e 94 01 04 	call	0x802	; 0x802 <__cmpsf2>
     464:	88 23       	and	r24, r24
     466:	3c f4       	brge	.+14     	; 0x476 <checkPatientTemp+0x54>
        notifyGSM("Temperature Not Normal-",PatientTemp());
     468:	be 01       	movw	r22, r28
     46a:	80 ed       	ldi	r24, 0xD0	; 208
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	0e 94 ed 01 	call	0x3da	; 0x3da <notifyGSM>
        notifyDisplay();
        notifySpeaker();
        return 0;
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	01 c0       	rjmp	.+2      	; 0x478 <checkPatientTemp+0x56>
    }else{
        return 1;
     476:	81 e0       	ldi	r24, 0x01	; 1
    }
    //if normal return 1 else notify speaker and gsm
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	ff 90       	pop	r15
     47e:	ef 90       	pop	r14
     480:	df 90       	pop	r13
     482:	cf 90       	pop	r12
     484:	08 95       	ret

00000486 <oxygenTankPercentage>:

}

int oxygenTankPercentage() {
    return 80;
}
     486:	80 e5       	ldi	r24, 0x50	; 80
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	08 95       	ret

0000048c <checkStatus>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}

bool checkStatus() {
     48c:	cf 93       	push	r28
    if (turnOn()) {
     48e:	0e 94 4f 01 	call	0x29e	; 0x29e <turnOn>
     492:	c8 2f       	mov	r28, r24
     494:	88 23       	and	r24, r24
     496:	59 f0       	breq	.+22     	; 0x4ae <checkStatus+0x22>
        if (oxygenTankPercentage() < 10) {
     498:	0e 94 43 02 	call	0x486	; 0x486 <oxygenTankPercentage>
     49c:	8a 30       	cpi	r24, 0x0A	; 10
     49e:	91 05       	cpc	r25, r1
     4a0:	34 f4       	brge	.+12     	; 0x4ae <checkStatus+0x22>
            notifyGSM("Oxygen Tank Percentage : ", oxygenTankPercentage());
     4a2:	bc 01       	movw	r22, r24
     4a4:	88 ee       	ldi	r24, 0xE8	; 232
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	0e 94 ed 01 	call	0x3da	; 0x3da <notifyGSM>
            notifyDisplay();
            return 0;
     4ac:	c0 e0       	ldi	r28, 0x00	; 0
        } else { return 1; }
    }else{return 0;}
}
     4ae:	8c 2f       	mov	r24, r28
     4b0:	cf 91       	pop	r28
     4b2:	08 95       	ret

000004b4 <rotateFullForward>:
		openSolenoidValves(60,30);
		rotateFullBackward(60);
	}
}

void rotateFullForward(int breathPerMin){
     4b4:	cf 92       	push	r12
     4b6:	df 92       	push	r13
     4b8:	ef 92       	push	r14
     4ba:	ff 92       	push	r15
	PORTC = PORTC | (1<<4);
     4bc:	25 b3       	in	r18, 0x15	; 21
     4be:	20 61       	ori	r18, 0x10	; 16
     4c0:	25 bb       	out	0x15, r18	; 21
	delay_ms(30/(breathPerMin*10));
     4c2:	bc 01       	movw	r22, r24
     4c4:	66 0f       	add	r22, r22
     4c6:	77 1f       	adc	r23, r23
     4c8:	88 0f       	add	r24, r24
     4ca:	99 1f       	adc	r25, r25
     4cc:	88 0f       	add	r24, r24
     4ce:	99 1f       	adc	r25, r25
     4d0:	88 0f       	add	r24, r24
     4d2:	99 1f       	adc	r25, r25
     4d4:	68 0f       	add	r22, r24
     4d6:	79 1f       	adc	r23, r25
     4d8:	8e e1       	ldi	r24, 0x1E	; 30
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	0e 94 60 05 	call	0xac0	; 0xac0 <__divmodhi4>
     4e0:	07 2e       	mov	r0, r23
     4e2:	00 0c       	add	r0, r0
     4e4:	88 0b       	sbc	r24, r24
     4e6:	99 0b       	sbc	r25, r25
     4e8:	0e 94 3e 04 	call	0x87c	; 0x87c <__floatsisf>
     4ec:	6b 01       	movw	r12, r22
     4ee:	7c 01       	movw	r14, r24
     4f0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>

	PORTC = PORTC | (1<<7);
     4f4:	85 b3       	in	r24, 0x15	; 21
     4f6:	80 68       	ori	r24, 0x80	; 128
     4f8:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     4fa:	c7 01       	movw	r24, r14
     4fc:	b6 01       	movw	r22, r12
     4fe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<4));
     502:	85 b3       	in	r24, 0x15	; 21
     504:	8f 7e       	andi	r24, 0xEF	; 239
     506:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     508:	c7 01       	movw	r24, r14
     50a:	b6 01       	movw	r22, r12
     50c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC | (1<<5);
     510:	85 b3       	in	r24, 0x15	; 21
     512:	80 62       	ori	r24, 0x20	; 32
     514:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     516:	c7 01       	movw	r24, r14
     518:	b6 01       	movw	r22, r12
     51a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<7));
     51e:	85 b3       	in	r24, 0x15	; 21
     520:	8f 77       	andi	r24, 0x7F	; 127
     522:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));;
     524:	c7 01       	movw	r24, r14
     526:	b6 01       	movw	r22, r12
     528:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC | (1<<6);
     52c:	85 b3       	in	r24, 0x15	; 21
     52e:	80 64       	ori	r24, 0x40	; 64
     530:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     532:	c7 01       	movw	r24, r14
     534:	b6 01       	movw	r22, r12
     536:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<5));
     53a:	85 b3       	in	r24, 0x15	; 21
     53c:	8f 7d       	andi	r24, 0xDF	; 223
     53e:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     540:	c7 01       	movw	r24, r14
     542:	b6 01       	movw	r22, r12
     544:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC | (1<<4);
     548:	85 b3       	in	r24, 0x15	; 21
     54a:	80 61       	ori	r24, 0x10	; 16
     54c:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     54e:	c7 01       	movw	r24, r14
     550:	b6 01       	movw	r22, r12
     552:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<6));
     556:	85 b3       	in	r24, 0x15	; 21
     558:	8f 7b       	andi	r24, 0xBF	; 191
     55a:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     55c:	c7 01       	movw	r24, r14
     55e:	b6 01       	movw	r22, r12
     560:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<4));
     564:	85 b3       	in	r24, 0x15	; 21
     566:	8f 7e       	andi	r24, 0xEF	; 239
     568:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     56a:	c7 01       	movw	r24, r14
     56c:	b6 01       	movw	r22, r12
     56e:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
}
     572:	ff 90       	pop	r15
     574:	ef 90       	pop	r14
     576:	df 90       	pop	r13
     578:	cf 90       	pop	r12
     57a:	08 95       	ret

0000057c <rotateFullBackward>:

void rotateFullBackward(int breathPerMin){
     57c:	cf 92       	push	r12
     57e:	df 92       	push	r13
     580:	ef 92       	push	r14
     582:	ff 92       	push	r15
	PORTC = PORTC | (1<<4);
     584:	25 b3       	in	r18, 0x15	; 21
     586:	20 61       	ori	r18, 0x10	; 16
     588:	25 bb       	out	0x15, r18	; 21
	delay_ms(30/(breathPerMin*10));
     58a:	bc 01       	movw	r22, r24
     58c:	66 0f       	add	r22, r22
     58e:	77 1f       	adc	r23, r23
     590:	88 0f       	add	r24, r24
     592:	99 1f       	adc	r25, r25
     594:	88 0f       	add	r24, r24
     596:	99 1f       	adc	r25, r25
     598:	88 0f       	add	r24, r24
     59a:	99 1f       	adc	r25, r25
     59c:	68 0f       	add	r22, r24
     59e:	79 1f       	adc	r23, r25
     5a0:	8e e1       	ldi	r24, 0x1E	; 30
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	0e 94 60 05 	call	0xac0	; 0xac0 <__divmodhi4>
     5a8:	07 2e       	mov	r0, r23
     5aa:	00 0c       	add	r0, r0
     5ac:	88 0b       	sbc	r24, r24
     5ae:	99 0b       	sbc	r25, r25
     5b0:	0e 94 3e 04 	call	0x87c	; 0x87c <__floatsisf>
     5b4:	6b 01       	movw	r12, r22
     5b6:	7c 01       	movw	r14, r24
     5b8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC | (1<<6);
     5bc:	85 b3       	in	r24, 0x15	; 21
     5be:	80 64       	ori	r24, 0x40	; 64
     5c0:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     5c2:	c7 01       	movw	r24, r14
     5c4:	b6 01       	movw	r22, r12
     5c6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<4));
     5ca:	85 b3       	in	r24, 0x15	; 21
     5cc:	8f 7e       	andi	r24, 0xEF	; 239
     5ce:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     5d0:	c7 01       	movw	r24, r14
     5d2:	b6 01       	movw	r22, r12
     5d4:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC | (1<<5);
     5d8:	85 b3       	in	r24, 0x15	; 21
     5da:	80 62       	ori	r24, 0x20	; 32
     5dc:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     5de:	c7 01       	movw	r24, r14
     5e0:	b6 01       	movw	r22, r12
     5e2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<6));
     5e6:	85 b3       	in	r24, 0x15	; 21
     5e8:	8f 7b       	andi	r24, 0xBF	; 191
     5ea:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     5ec:	c7 01       	movw	r24, r14
     5ee:	b6 01       	movw	r22, r12
     5f0:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC | (1<<7);
     5f4:	85 b3       	in	r24, 0x15	; 21
     5f6:	80 68       	ori	r24, 0x80	; 128
     5f8:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     5fa:	c7 01       	movw	r24, r14
     5fc:	b6 01       	movw	r22, r12
     5fe:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<5));
     602:	85 b3       	in	r24, 0x15	; 21
     604:	8f 7d       	andi	r24, 0xDF	; 223
     606:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     608:	c7 01       	movw	r24, r14
     60a:	b6 01       	movw	r22, r12
     60c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC | (1<<4);
     610:	85 b3       	in	r24, 0x15	; 21
     612:	80 61       	ori	r24, 0x10	; 16
     614:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     616:	c7 01       	movw	r24, r14
     618:	b6 01       	movw	r22, r12
     61a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<7));
     61e:	85 b3       	in	r24, 0x15	; 21
     620:	8f 77       	andi	r24, 0x7F	; 127
     622:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     624:	c7 01       	movw	r24, r14
     626:	b6 01       	movw	r22, r12
     628:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
	
	PORTC = PORTC & (~(1<<4));
     62c:	85 b3       	in	r24, 0x15	; 21
     62e:	8f 7e       	andi	r24, 0xEF	; 239
     630:	85 bb       	out	0x15, r24	; 21
	delay_ms(30/(breathPerMin*10));
     632:	c7 01       	movw	r24, r14
     634:	b6 01       	movw	r22, r12
     636:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <delay_ms>
}
     63a:	ff 90       	pop	r15
     63c:	ef 90       	pop	r14
     63e:	df 90       	pop	r13
     640:	cf 90       	pop	r12
     642:	08 95       	ret

00000644 <startStepperMotor>:
}

int oxygenTankPercentage() {
    return 80;
}
void startStepperMotor(int breathPerMin, int BreathLength) {
     644:	ec 01       	movw	r28, r24
	while (1)
	{
		rotateFullForward(breathPerMin);
     646:	ce 01       	movw	r24, r28
     648:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <rotateFullForward>
		openSolenoidValves(60,30);
     64c:	20 e0       	ldi	r18, 0x00	; 0
     64e:	30 e0       	ldi	r19, 0x00	; 0
     650:	40 ef       	ldi	r20, 0xF0	; 240
     652:	51 e4       	ldi	r21, 0x41	; 65
     654:	60 e0       	ldi	r22, 0x00	; 0
     656:	70 e0       	ldi	r23, 0x00	; 0
     658:	80 e7       	ldi	r24, 0x70	; 112
     65a:	92 e4       	ldi	r25, 0x42	; 66
     65c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <openSolenoidValves>
		rotateFullBackward(60);
     660:	8c e3       	ldi	r24, 0x3C	; 60
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	0e 94 be 02 	call	0x57c	; 0x57c <rotateFullBackward>
     668:	ee cf       	rjmp	.-36     	; 0x646 <startStepperMotor+0x2>

0000066a <startOxygenAndAirSupply>:
    USART_SendString("AT+SAPBR=1,1\r");
}

void startOxygenAndAirSupply(int percentage) {
    controlOxygenPercentage(checkBloodOxygenLevel());
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
     66a:	60 91 76 00 	lds	r22, 0x0076	; 0x800076 <Average_Breath_length>
     66e:	70 91 77 00 	lds	r23, 0x0077	; 0x800077 <Average_Breath_length+0x1>
     672:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Average_Breath_Per_Min>
     676:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <Average_Breath_Per_Min+0x1>
     67a:	0e 94 22 03 	call	0x644	; 0x644 <startStepperMotor>

0000067e <startAirSupply>:
}



void startAirSupply() {
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
     67e:	60 91 76 00 	lds	r22, 0x0076	; 0x800076 <Average_Breath_length>
     682:	70 91 77 00 	lds	r23, 0x0077	; 0x800077 <Average_Breath_length+0x1>
     686:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <Average_Breath_Per_Min>
     68a:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <Average_Breath_Per_Min+0x1>
     68e:	0e 94 22 03 	call	0x644	; 0x644 <startStepperMotor>

00000692 <main>:


int main(void)
{
    /* Replace with your application code */
    DDRC = DDRC | (1<<2);
     692:	84 b3       	in	r24, 0x14	; 20
     694:	84 60       	ori	r24, 0x04	; 4
     696:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<3);
     698:	84 b3       	in	r24, 0x14	; 20
     69a:	88 60       	ori	r24, 0x08	; 8
     69c:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<4);
     69e:	84 b3       	in	r24, 0x14	; 20
     6a0:	80 61       	ori	r24, 0x10	; 16
     6a2:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<5);
     6a4:	84 b3       	in	r24, 0x14	; 20
     6a6:	80 62       	ori	r24, 0x20	; 32
     6a8:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<6);
     6aa:	84 b3       	in	r24, 0x14	; 20
     6ac:	80 64       	ori	r24, 0x40	; 64
     6ae:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<7);
     6b0:	84 b3       	in	r24, 0x14	; 20
     6b2:	80 68       	ori	r24, 0x80	; 128
     6b4:	84 bb       	out	0x14, r24	; 20
	

    USART_Init(9600);
     6b6:	60 e8       	ldi	r22, 0x80	; 128
     6b8:	75 e2       	ldi	r23, 0x25	; 37
     6ba:	80 e0       	ldi	r24, 0x00	; 0
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	0e 94 49 00 	call	0x92	; 0x92 <USART_Init>
     6c2:	2f ef       	ldi	r18, 0xFF	; 255
     6c4:	89 e6       	ldi	r24, 0x69	; 105
     6c6:	98 e1       	ldi	r25, 0x18	; 24
     6c8:	21 50       	subi	r18, 0x01	; 1
     6ca:	80 40       	sbci	r24, 0x00	; 0
     6cc:	90 40       	sbci	r25, 0x00	; 0
     6ce:	e1 f7       	brne	.-8      	; 0x6c8 <main+0x36>
     6d0:	00 c0       	rjmp	.+0      	; 0x6d2 <main+0x40>
     6d2:	00 00       	nop
    _delay_ms(1000);
    GSMConnect();
     6d4:	0e 94 91 00 	call	0x122	; 0x122 <GSMConnect>
		
        



        if(checkStatus()){
     6d8:	0e 94 46 02 	call	0x48c	; 0x48c <checkStatus>
     6dc:	88 23       	and	r24, r24
     6de:	09 f1       	breq	.+66     	; 0x722 <main+0x90>
            if(automationOn()){
     6e0:	0e 94 4d 01 	call	0x29a	; 0x29a <automationOn>
     6e4:	88 23       	and	r24, r24
     6e6:	a9 f0       	breq	.+42     	; 0x712 <main+0x80>
                if(checkPatientTemp()){
     6e8:	0e 94 11 02 	call	0x422	; 0x422 <checkPatientTemp>
     6ec:	88 23       	and	r24, r24
     6ee:	a1 f3       	breq	.-24     	; 0x6d8 <main+0x46>

                    if(checkBloodOxygenLevel() < Average_Blood_Oxygen_level){
     6f0:	0e 94 47 01 	call	0x28e	; 0x28e <checkBloodOxygenLevel>
     6f4:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <Average_Blood_Oxygen_level>
     6f8:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <Average_Blood_Oxygen_level+0x1>
     6fc:	82 17       	cp	r24, r18
     6fe:	93 07       	cpc	r25, r19
     700:	34 f4       	brge	.+12     	; 0x70e <main+0x7c>
                        startOxygenAndAirSupply(Oxygen_percentage);
     702:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <Oxygen_percentage>
     706:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <Oxygen_percentage+0x1>
     70a:	0e 94 35 03 	call	0x66a	; 0x66a <startOxygenAndAirSupply>
                    }else{
                        startAirSupply();
     70e:	0e 94 3f 03 	call	0x67e	; 0x67e <startAirSupply>
                    }
                }
            }else{
                checkPatientTemp();
     712:	0e 94 11 02 	call	0x422	; 0x422 <checkPatientTemp>
                getParametersFromKnobs();
                startOxygenAndAirSupply(Oxygen_percentage);
     716:	80 91 72 00 	lds	r24, 0x0072	; 0x800072 <Oxygen_percentage>
     71a:	90 91 73 00 	lds	r25, 0x0073	; 0x800073 <Oxygen_percentage+0x1>
     71e:	0e 94 35 03 	call	0x66a	; 0x66a <startOxygenAndAirSupply>
            }
        }else{return 0;}
    }
}
     722:	80 e0       	ldi	r24, 0x00	; 0
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	08 95       	ret

00000728 <__subsf3>:
     728:	50 58       	subi	r21, 0x80	; 128

0000072a <__addsf3>:
     72a:	bb 27       	eor	r27, r27
     72c:	aa 27       	eor	r26, r26
     72e:	0e 94 ac 03 	call	0x758	; 0x758 <__addsf3x>
     732:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_round>
     736:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_pscA>
     73a:	38 f0       	brcs	.+14     	; 0x74a <__addsf3+0x20>
     73c:	0e 94 ad 04 	call	0x95a	; 0x95a <__fp_pscB>
     740:	20 f0       	brcs	.+8      	; 0x74a <__addsf3+0x20>
     742:	39 f4       	brne	.+14     	; 0x752 <__addsf3+0x28>
     744:	9f 3f       	cpi	r25, 0xFF	; 255
     746:	19 f4       	brne	.+6      	; 0x74e <__addsf3+0x24>
     748:	26 f4       	brtc	.+8      	; 0x752 <__addsf3+0x28>
     74a:	0c 94 a3 04 	jmp	0x946	; 0x946 <__fp_nan>
     74e:	0e f4       	brtc	.+2      	; 0x752 <__addsf3+0x28>
     750:	e0 95       	com	r30
     752:	e7 fb       	bst	r30, 7
     754:	0c 94 9d 04 	jmp	0x93a	; 0x93a <__fp_inf>

00000758 <__addsf3x>:
     758:	e9 2f       	mov	r30, r25
     75a:	0e 94 c5 04 	call	0x98a	; 0x98a <__fp_split3>
     75e:	58 f3       	brcs	.-42     	; 0x736 <__addsf3+0xc>
     760:	ba 17       	cp	r27, r26
     762:	62 07       	cpc	r22, r18
     764:	73 07       	cpc	r23, r19
     766:	84 07       	cpc	r24, r20
     768:	95 07       	cpc	r25, r21
     76a:	20 f0       	brcs	.+8      	; 0x774 <__addsf3x+0x1c>
     76c:	79 f4       	brne	.+30     	; 0x78c <__addsf3x+0x34>
     76e:	a6 f5       	brtc	.+104    	; 0x7d8 <__addsf3x+0x80>
     770:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_zero>
     774:	0e f4       	brtc	.+2      	; 0x778 <__addsf3x+0x20>
     776:	e0 95       	com	r30
     778:	0b 2e       	mov	r0, r27
     77a:	ba 2f       	mov	r27, r26
     77c:	a0 2d       	mov	r26, r0
     77e:	0b 01       	movw	r0, r22
     780:	b9 01       	movw	r22, r18
     782:	90 01       	movw	r18, r0
     784:	0c 01       	movw	r0, r24
     786:	ca 01       	movw	r24, r20
     788:	a0 01       	movw	r20, r0
     78a:	11 24       	eor	r1, r1
     78c:	ff 27       	eor	r31, r31
     78e:	59 1b       	sub	r21, r25
     790:	99 f0       	breq	.+38     	; 0x7b8 <__addsf3x+0x60>
     792:	59 3f       	cpi	r21, 0xF9	; 249
     794:	50 f4       	brcc	.+20     	; 0x7aa <__addsf3x+0x52>
     796:	50 3e       	cpi	r21, 0xE0	; 224
     798:	68 f1       	brcs	.+90     	; 0x7f4 <__addsf3x+0x9c>
     79a:	1a 16       	cp	r1, r26
     79c:	f0 40       	sbci	r31, 0x00	; 0
     79e:	a2 2f       	mov	r26, r18
     7a0:	23 2f       	mov	r18, r19
     7a2:	34 2f       	mov	r19, r20
     7a4:	44 27       	eor	r20, r20
     7a6:	58 5f       	subi	r21, 0xF8	; 248
     7a8:	f3 cf       	rjmp	.-26     	; 0x790 <__addsf3x+0x38>
     7aa:	46 95       	lsr	r20
     7ac:	37 95       	ror	r19
     7ae:	27 95       	ror	r18
     7b0:	a7 95       	ror	r26
     7b2:	f0 40       	sbci	r31, 0x00	; 0
     7b4:	53 95       	inc	r21
     7b6:	c9 f7       	brne	.-14     	; 0x7aa <__addsf3x+0x52>
     7b8:	7e f4       	brtc	.+30     	; 0x7d8 <__addsf3x+0x80>
     7ba:	1f 16       	cp	r1, r31
     7bc:	ba 0b       	sbc	r27, r26
     7be:	62 0b       	sbc	r22, r18
     7c0:	73 0b       	sbc	r23, r19
     7c2:	84 0b       	sbc	r24, r20
     7c4:	ba f0       	brmi	.+46     	; 0x7f4 <__addsf3x+0x9c>
     7c6:	91 50       	subi	r25, 0x01	; 1
     7c8:	a1 f0       	breq	.+40     	; 0x7f2 <__addsf3x+0x9a>
     7ca:	ff 0f       	add	r31, r31
     7cc:	bb 1f       	adc	r27, r27
     7ce:	66 1f       	adc	r22, r22
     7d0:	77 1f       	adc	r23, r23
     7d2:	88 1f       	adc	r24, r24
     7d4:	c2 f7       	brpl	.-16     	; 0x7c6 <__addsf3x+0x6e>
     7d6:	0e c0       	rjmp	.+28     	; 0x7f4 <__addsf3x+0x9c>
     7d8:	ba 0f       	add	r27, r26
     7da:	62 1f       	adc	r22, r18
     7dc:	73 1f       	adc	r23, r19
     7de:	84 1f       	adc	r24, r20
     7e0:	48 f4       	brcc	.+18     	; 0x7f4 <__addsf3x+0x9c>
     7e2:	87 95       	ror	r24
     7e4:	77 95       	ror	r23
     7e6:	67 95       	ror	r22
     7e8:	b7 95       	ror	r27
     7ea:	f7 95       	ror	r31
     7ec:	9e 3f       	cpi	r25, 0xFE	; 254
     7ee:	08 f0       	brcs	.+2      	; 0x7f2 <__addsf3x+0x9a>
     7f0:	b0 cf       	rjmp	.-160    	; 0x752 <__addsf3+0x28>
     7f2:	93 95       	inc	r25
     7f4:	88 0f       	add	r24, r24
     7f6:	08 f0       	brcs	.+2      	; 0x7fa <__addsf3x+0xa2>
     7f8:	99 27       	eor	r25, r25
     7fa:	ee 0f       	add	r30, r30
     7fc:	97 95       	ror	r25
     7fe:	87 95       	ror	r24
     800:	08 95       	ret

00000802 <__cmpsf2>:
     802:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__fp_cmp>
     806:	08 f4       	brcc	.+2      	; 0x80a <__cmpsf2+0x8>
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	08 95       	ret

0000080c <__fixsfsi>:
     80c:	0e 94 0d 04 	call	0x81a	; 0x81a <__fixunssfsi>
     810:	68 94       	set
     812:	b1 11       	cpse	r27, r1
     814:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__fp_szero>
     818:	08 95       	ret

0000081a <__fixunssfsi>:
     81a:	0e 94 cd 04 	call	0x99a	; 0x99a <__fp_splitA>
     81e:	88 f0       	brcs	.+34     	; 0x842 <__fixunssfsi+0x28>
     820:	9f 57       	subi	r25, 0x7F	; 127
     822:	98 f0       	brcs	.+38     	; 0x84a <__fixunssfsi+0x30>
     824:	b9 2f       	mov	r27, r25
     826:	99 27       	eor	r25, r25
     828:	b7 51       	subi	r27, 0x17	; 23
     82a:	b0 f0       	brcs	.+44     	; 0x858 <__fixunssfsi+0x3e>
     82c:	e1 f0       	breq	.+56     	; 0x866 <__stack+0x7>
     82e:	66 0f       	add	r22, r22
     830:	77 1f       	adc	r23, r23
     832:	88 1f       	adc	r24, r24
     834:	99 1f       	adc	r25, r25
     836:	1a f0       	brmi	.+6      	; 0x83e <__fixunssfsi+0x24>
     838:	ba 95       	dec	r27
     83a:	c9 f7       	brne	.-14     	; 0x82e <__fixunssfsi+0x14>
     83c:	14 c0       	rjmp	.+40     	; 0x866 <__stack+0x7>
     83e:	b1 30       	cpi	r27, 0x01	; 1
     840:	91 f0       	breq	.+36     	; 0x866 <__stack+0x7>
     842:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__fp_zero>
     846:	b1 e0       	ldi	r27, 0x01	; 1
     848:	08 95       	ret
     84a:	0c 94 e7 04 	jmp	0x9ce	; 0x9ce <__fp_zero>
     84e:	67 2f       	mov	r22, r23
     850:	78 2f       	mov	r23, r24
     852:	88 27       	eor	r24, r24
     854:	b8 5f       	subi	r27, 0xF8	; 248
     856:	39 f0       	breq	.+14     	; 0x866 <__stack+0x7>
     858:	b9 3f       	cpi	r27, 0xF9	; 249
     85a:	cc f3       	brlt	.-14     	; 0x84e <__fixunssfsi+0x34>
     85c:	86 95       	lsr	r24
     85e:	77 95       	ror	r23
     860:	67 95       	ror	r22
     862:	b3 95       	inc	r27
     864:	d9 f7       	brne	.-10     	; 0x85c <__fixunssfsi+0x42>
     866:	3e f4       	brtc	.+14     	; 0x876 <__stack+0x17>
     868:	90 95       	com	r25
     86a:	80 95       	com	r24
     86c:	70 95       	com	r23
     86e:	61 95       	neg	r22
     870:	7f 4f       	sbci	r23, 0xFF	; 255
     872:	8f 4f       	sbci	r24, 0xFF	; 255
     874:	9f 4f       	sbci	r25, 0xFF	; 255
     876:	08 95       	ret

00000878 <__floatunsisf>:
     878:	e8 94       	clt
     87a:	09 c0       	rjmp	.+18     	; 0x88e <__floatsisf+0x12>

0000087c <__floatsisf>:
     87c:	97 fb       	bst	r25, 7
     87e:	3e f4       	brtc	.+14     	; 0x88e <__floatsisf+0x12>
     880:	90 95       	com	r25
     882:	80 95       	com	r24
     884:	70 95       	com	r23
     886:	61 95       	neg	r22
     888:	7f 4f       	sbci	r23, 0xFF	; 255
     88a:	8f 4f       	sbci	r24, 0xFF	; 255
     88c:	9f 4f       	sbci	r25, 0xFF	; 255
     88e:	99 23       	and	r25, r25
     890:	a9 f0       	breq	.+42     	; 0x8bc <__floatsisf+0x40>
     892:	f9 2f       	mov	r31, r25
     894:	96 e9       	ldi	r25, 0x96	; 150
     896:	bb 27       	eor	r27, r27
     898:	93 95       	inc	r25
     89a:	f6 95       	lsr	r31
     89c:	87 95       	ror	r24
     89e:	77 95       	ror	r23
     8a0:	67 95       	ror	r22
     8a2:	b7 95       	ror	r27
     8a4:	f1 11       	cpse	r31, r1
     8a6:	f8 cf       	rjmp	.-16     	; 0x898 <__floatsisf+0x1c>
     8a8:	fa f4       	brpl	.+62     	; 0x8e8 <__floatsisf+0x6c>
     8aa:	bb 0f       	add	r27, r27
     8ac:	11 f4       	brne	.+4      	; 0x8b2 <__floatsisf+0x36>
     8ae:	60 ff       	sbrs	r22, 0
     8b0:	1b c0       	rjmp	.+54     	; 0x8e8 <__floatsisf+0x6c>
     8b2:	6f 5f       	subi	r22, 0xFF	; 255
     8b4:	7f 4f       	sbci	r23, 0xFF	; 255
     8b6:	8f 4f       	sbci	r24, 0xFF	; 255
     8b8:	9f 4f       	sbci	r25, 0xFF	; 255
     8ba:	16 c0       	rjmp	.+44     	; 0x8e8 <__floatsisf+0x6c>
     8bc:	88 23       	and	r24, r24
     8be:	11 f0       	breq	.+4      	; 0x8c4 <__floatsisf+0x48>
     8c0:	96 e9       	ldi	r25, 0x96	; 150
     8c2:	11 c0       	rjmp	.+34     	; 0x8e6 <__floatsisf+0x6a>
     8c4:	77 23       	and	r23, r23
     8c6:	21 f0       	breq	.+8      	; 0x8d0 <__floatsisf+0x54>
     8c8:	9e e8       	ldi	r25, 0x8E	; 142
     8ca:	87 2f       	mov	r24, r23
     8cc:	76 2f       	mov	r23, r22
     8ce:	05 c0       	rjmp	.+10     	; 0x8da <__floatsisf+0x5e>
     8d0:	66 23       	and	r22, r22
     8d2:	71 f0       	breq	.+28     	; 0x8f0 <__floatsisf+0x74>
     8d4:	96 e8       	ldi	r25, 0x86	; 134
     8d6:	86 2f       	mov	r24, r22
     8d8:	70 e0       	ldi	r23, 0x00	; 0
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	2a f0       	brmi	.+10     	; 0x8e8 <__floatsisf+0x6c>
     8de:	9a 95       	dec	r25
     8e0:	66 0f       	add	r22, r22
     8e2:	77 1f       	adc	r23, r23
     8e4:	88 1f       	adc	r24, r24
     8e6:	da f7       	brpl	.-10     	; 0x8de <__floatsisf+0x62>
     8e8:	88 0f       	add	r24, r24
     8ea:	96 95       	lsr	r25
     8ec:	87 95       	ror	r24
     8ee:	97 f9       	bld	r25, 7
     8f0:	08 95       	ret

000008f2 <__fp_cmp>:
     8f2:	99 0f       	add	r25, r25
     8f4:	00 08       	sbc	r0, r0
     8f6:	55 0f       	add	r21, r21
     8f8:	aa 0b       	sbc	r26, r26
     8fa:	e0 e8       	ldi	r30, 0x80	; 128
     8fc:	fe ef       	ldi	r31, 0xFE	; 254
     8fe:	16 16       	cp	r1, r22
     900:	17 06       	cpc	r1, r23
     902:	e8 07       	cpc	r30, r24
     904:	f9 07       	cpc	r31, r25
     906:	c0 f0       	brcs	.+48     	; 0x938 <__fp_cmp+0x46>
     908:	12 16       	cp	r1, r18
     90a:	13 06       	cpc	r1, r19
     90c:	e4 07       	cpc	r30, r20
     90e:	f5 07       	cpc	r31, r21
     910:	98 f0       	brcs	.+38     	; 0x938 <__fp_cmp+0x46>
     912:	62 1b       	sub	r22, r18
     914:	73 0b       	sbc	r23, r19
     916:	84 0b       	sbc	r24, r20
     918:	95 0b       	sbc	r25, r21
     91a:	39 f4       	brne	.+14     	; 0x92a <__fp_cmp+0x38>
     91c:	0a 26       	eor	r0, r26
     91e:	61 f0       	breq	.+24     	; 0x938 <__fp_cmp+0x46>
     920:	23 2b       	or	r18, r19
     922:	24 2b       	or	r18, r20
     924:	25 2b       	or	r18, r21
     926:	21 f4       	brne	.+8      	; 0x930 <__fp_cmp+0x3e>
     928:	08 95       	ret
     92a:	0a 26       	eor	r0, r26
     92c:	09 f4       	brne	.+2      	; 0x930 <__fp_cmp+0x3e>
     92e:	a1 40       	sbci	r26, 0x01	; 1
     930:	a6 95       	lsr	r26
     932:	8f ef       	ldi	r24, 0xFF	; 255
     934:	81 1d       	adc	r24, r1
     936:	81 1d       	adc	r24, r1
     938:	08 95       	ret

0000093a <__fp_inf>:
     93a:	97 f9       	bld	r25, 7
     93c:	9f 67       	ori	r25, 0x7F	; 127
     93e:	80 e8       	ldi	r24, 0x80	; 128
     940:	70 e0       	ldi	r23, 0x00	; 0
     942:	60 e0       	ldi	r22, 0x00	; 0
     944:	08 95       	ret

00000946 <__fp_nan>:
     946:	9f ef       	ldi	r25, 0xFF	; 255
     948:	80 ec       	ldi	r24, 0xC0	; 192
     94a:	08 95       	ret

0000094c <__fp_pscA>:
     94c:	00 24       	eor	r0, r0
     94e:	0a 94       	dec	r0
     950:	16 16       	cp	r1, r22
     952:	17 06       	cpc	r1, r23
     954:	18 06       	cpc	r1, r24
     956:	09 06       	cpc	r0, r25
     958:	08 95       	ret

0000095a <__fp_pscB>:
     95a:	00 24       	eor	r0, r0
     95c:	0a 94       	dec	r0
     95e:	12 16       	cp	r1, r18
     960:	13 06       	cpc	r1, r19
     962:	14 06       	cpc	r1, r20
     964:	05 06       	cpc	r0, r21
     966:	08 95       	ret

00000968 <__fp_round>:
     968:	09 2e       	mov	r0, r25
     96a:	03 94       	inc	r0
     96c:	00 0c       	add	r0, r0
     96e:	11 f4       	brne	.+4      	; 0x974 <__fp_round+0xc>
     970:	88 23       	and	r24, r24
     972:	52 f0       	brmi	.+20     	; 0x988 <__fp_round+0x20>
     974:	bb 0f       	add	r27, r27
     976:	40 f4       	brcc	.+16     	; 0x988 <__fp_round+0x20>
     978:	bf 2b       	or	r27, r31
     97a:	11 f4       	brne	.+4      	; 0x980 <__fp_round+0x18>
     97c:	60 ff       	sbrs	r22, 0
     97e:	04 c0       	rjmp	.+8      	; 0x988 <__fp_round+0x20>
     980:	6f 5f       	subi	r22, 0xFF	; 255
     982:	7f 4f       	sbci	r23, 0xFF	; 255
     984:	8f 4f       	sbci	r24, 0xFF	; 255
     986:	9f 4f       	sbci	r25, 0xFF	; 255
     988:	08 95       	ret

0000098a <__fp_split3>:
     98a:	57 fd       	sbrc	r21, 7
     98c:	90 58       	subi	r25, 0x80	; 128
     98e:	44 0f       	add	r20, r20
     990:	55 1f       	adc	r21, r21
     992:	59 f0       	breq	.+22     	; 0x9aa <__fp_splitA+0x10>
     994:	5f 3f       	cpi	r21, 0xFF	; 255
     996:	71 f0       	breq	.+28     	; 0x9b4 <__fp_splitA+0x1a>
     998:	47 95       	ror	r20

0000099a <__fp_splitA>:
     99a:	88 0f       	add	r24, r24
     99c:	97 fb       	bst	r25, 7
     99e:	99 1f       	adc	r25, r25
     9a0:	61 f0       	breq	.+24     	; 0x9ba <__fp_splitA+0x20>
     9a2:	9f 3f       	cpi	r25, 0xFF	; 255
     9a4:	79 f0       	breq	.+30     	; 0x9c4 <__fp_splitA+0x2a>
     9a6:	87 95       	ror	r24
     9a8:	08 95       	ret
     9aa:	12 16       	cp	r1, r18
     9ac:	13 06       	cpc	r1, r19
     9ae:	14 06       	cpc	r1, r20
     9b0:	55 1f       	adc	r21, r21
     9b2:	f2 cf       	rjmp	.-28     	; 0x998 <__fp_split3+0xe>
     9b4:	46 95       	lsr	r20
     9b6:	f1 df       	rcall	.-30     	; 0x99a <__fp_splitA>
     9b8:	08 c0       	rjmp	.+16     	; 0x9ca <__fp_splitA+0x30>
     9ba:	16 16       	cp	r1, r22
     9bc:	17 06       	cpc	r1, r23
     9be:	18 06       	cpc	r1, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	f1 cf       	rjmp	.-30     	; 0x9a6 <__fp_splitA+0xc>
     9c4:	86 95       	lsr	r24
     9c6:	71 05       	cpc	r23, r1
     9c8:	61 05       	cpc	r22, r1
     9ca:	08 94       	sec
     9cc:	08 95       	ret

000009ce <__fp_zero>:
     9ce:	e8 94       	clt

000009d0 <__fp_szero>:
     9d0:	bb 27       	eor	r27, r27
     9d2:	66 27       	eor	r22, r22
     9d4:	77 27       	eor	r23, r23
     9d6:	cb 01       	movw	r24, r22
     9d8:	97 f9       	bld	r25, 7
     9da:	08 95       	ret

000009dc <__gesf2>:
     9dc:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__fp_cmp>
     9e0:	08 f4       	brcc	.+2      	; 0x9e4 <__gesf2+0x8>
     9e2:	8f ef       	ldi	r24, 0xFF	; 255
     9e4:	08 95       	ret

000009e6 <__mulsf3>:
     9e6:	0e 94 06 05 	call	0xa0c	; 0xa0c <__mulsf3x>
     9ea:	0c 94 b4 04 	jmp	0x968	; 0x968 <__fp_round>
     9ee:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_pscA>
     9f2:	38 f0       	brcs	.+14     	; 0xa02 <__mulsf3+0x1c>
     9f4:	0e 94 ad 04 	call	0x95a	; 0x95a <__fp_pscB>
     9f8:	20 f0       	brcs	.+8      	; 0xa02 <__mulsf3+0x1c>
     9fa:	95 23       	and	r25, r21
     9fc:	11 f0       	breq	.+4      	; 0xa02 <__mulsf3+0x1c>
     9fe:	0c 94 9d 04 	jmp	0x93a	; 0x93a <__fp_inf>
     a02:	0c 94 a3 04 	jmp	0x946	; 0x946 <__fp_nan>
     a06:	11 24       	eor	r1, r1
     a08:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__fp_szero>

00000a0c <__mulsf3x>:
     a0c:	0e 94 c5 04 	call	0x98a	; 0x98a <__fp_split3>
     a10:	70 f3       	brcs	.-36     	; 0x9ee <__mulsf3+0x8>

00000a12 <__mulsf3_pse>:
     a12:	95 9f       	mul	r25, r21
     a14:	c1 f3       	breq	.-16     	; 0xa06 <__mulsf3+0x20>
     a16:	95 0f       	add	r25, r21
     a18:	50 e0       	ldi	r21, 0x00	; 0
     a1a:	55 1f       	adc	r21, r21
     a1c:	62 9f       	mul	r22, r18
     a1e:	f0 01       	movw	r30, r0
     a20:	72 9f       	mul	r23, r18
     a22:	bb 27       	eor	r27, r27
     a24:	f0 0d       	add	r31, r0
     a26:	b1 1d       	adc	r27, r1
     a28:	63 9f       	mul	r22, r19
     a2a:	aa 27       	eor	r26, r26
     a2c:	f0 0d       	add	r31, r0
     a2e:	b1 1d       	adc	r27, r1
     a30:	aa 1f       	adc	r26, r26
     a32:	64 9f       	mul	r22, r20
     a34:	66 27       	eor	r22, r22
     a36:	b0 0d       	add	r27, r0
     a38:	a1 1d       	adc	r26, r1
     a3a:	66 1f       	adc	r22, r22
     a3c:	82 9f       	mul	r24, r18
     a3e:	22 27       	eor	r18, r18
     a40:	b0 0d       	add	r27, r0
     a42:	a1 1d       	adc	r26, r1
     a44:	62 1f       	adc	r22, r18
     a46:	73 9f       	mul	r23, r19
     a48:	b0 0d       	add	r27, r0
     a4a:	a1 1d       	adc	r26, r1
     a4c:	62 1f       	adc	r22, r18
     a4e:	83 9f       	mul	r24, r19
     a50:	a0 0d       	add	r26, r0
     a52:	61 1d       	adc	r22, r1
     a54:	22 1f       	adc	r18, r18
     a56:	74 9f       	mul	r23, r20
     a58:	33 27       	eor	r19, r19
     a5a:	a0 0d       	add	r26, r0
     a5c:	61 1d       	adc	r22, r1
     a5e:	23 1f       	adc	r18, r19
     a60:	84 9f       	mul	r24, r20
     a62:	60 0d       	add	r22, r0
     a64:	21 1d       	adc	r18, r1
     a66:	82 2f       	mov	r24, r18
     a68:	76 2f       	mov	r23, r22
     a6a:	6a 2f       	mov	r22, r26
     a6c:	11 24       	eor	r1, r1
     a6e:	9f 57       	subi	r25, 0x7F	; 127
     a70:	50 40       	sbci	r21, 0x00	; 0
     a72:	9a f0       	brmi	.+38     	; 0xa9a <__mulsf3_pse+0x88>
     a74:	f1 f0       	breq	.+60     	; 0xab2 <__mulsf3_pse+0xa0>
     a76:	88 23       	and	r24, r24
     a78:	4a f0       	brmi	.+18     	; 0xa8c <__mulsf3_pse+0x7a>
     a7a:	ee 0f       	add	r30, r30
     a7c:	ff 1f       	adc	r31, r31
     a7e:	bb 1f       	adc	r27, r27
     a80:	66 1f       	adc	r22, r22
     a82:	77 1f       	adc	r23, r23
     a84:	88 1f       	adc	r24, r24
     a86:	91 50       	subi	r25, 0x01	; 1
     a88:	50 40       	sbci	r21, 0x00	; 0
     a8a:	a9 f7       	brne	.-22     	; 0xa76 <__mulsf3_pse+0x64>
     a8c:	9e 3f       	cpi	r25, 0xFE	; 254
     a8e:	51 05       	cpc	r21, r1
     a90:	80 f0       	brcs	.+32     	; 0xab2 <__mulsf3_pse+0xa0>
     a92:	0c 94 9d 04 	jmp	0x93a	; 0x93a <__fp_inf>
     a96:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__fp_szero>
     a9a:	5f 3f       	cpi	r21, 0xFF	; 255
     a9c:	e4 f3       	brlt	.-8      	; 0xa96 <__mulsf3_pse+0x84>
     a9e:	98 3e       	cpi	r25, 0xE8	; 232
     aa0:	d4 f3       	brlt	.-12     	; 0xa96 <__mulsf3_pse+0x84>
     aa2:	86 95       	lsr	r24
     aa4:	77 95       	ror	r23
     aa6:	67 95       	ror	r22
     aa8:	b7 95       	ror	r27
     aaa:	f7 95       	ror	r31
     aac:	e7 95       	ror	r30
     aae:	9f 5f       	subi	r25, 0xFF	; 255
     ab0:	c1 f7       	brne	.-16     	; 0xaa2 <__mulsf3_pse+0x90>
     ab2:	fe 2b       	or	r31, r30
     ab4:	88 0f       	add	r24, r24
     ab6:	91 1d       	adc	r25, r1
     ab8:	96 95       	lsr	r25
     aba:	87 95       	ror	r24
     abc:	97 f9       	bld	r25, 7
     abe:	08 95       	ret

00000ac0 <__divmodhi4>:
     ac0:	97 fb       	bst	r25, 7
     ac2:	07 2e       	mov	r0, r23
     ac4:	16 f4       	brtc	.+4      	; 0xaca <__divmodhi4+0xa>
     ac6:	00 94       	com	r0
     ac8:	07 d0       	rcall	.+14     	; 0xad8 <__divmodhi4_neg1>
     aca:	77 fd       	sbrc	r23, 7
     acc:	09 d0       	rcall	.+18     	; 0xae0 <__divmodhi4_neg2>
     ace:	0e 94 96 05 	call	0xb2c	; 0xb2c <__udivmodhi4>
     ad2:	07 fc       	sbrc	r0, 7
     ad4:	05 d0       	rcall	.+10     	; 0xae0 <__divmodhi4_neg2>
     ad6:	3e f4       	brtc	.+14     	; 0xae6 <__divmodhi4_exit>

00000ad8 <__divmodhi4_neg1>:
     ad8:	90 95       	com	r25
     ada:	81 95       	neg	r24
     adc:	9f 4f       	sbci	r25, 0xFF	; 255
     ade:	08 95       	ret

00000ae0 <__divmodhi4_neg2>:
     ae0:	70 95       	com	r23
     ae2:	61 95       	neg	r22
     ae4:	7f 4f       	sbci	r23, 0xFF	; 255

00000ae6 <__divmodhi4_exit>:
     ae6:	08 95       	ret

00000ae8 <__udivmodsi4>:
     ae8:	a1 e2       	ldi	r26, 0x21	; 33
     aea:	1a 2e       	mov	r1, r26
     aec:	aa 1b       	sub	r26, r26
     aee:	bb 1b       	sub	r27, r27
     af0:	fd 01       	movw	r30, r26
     af2:	0d c0       	rjmp	.+26     	; 0xb0e <__udivmodsi4_ep>

00000af4 <__udivmodsi4_loop>:
     af4:	aa 1f       	adc	r26, r26
     af6:	bb 1f       	adc	r27, r27
     af8:	ee 1f       	adc	r30, r30
     afa:	ff 1f       	adc	r31, r31
     afc:	a2 17       	cp	r26, r18
     afe:	b3 07       	cpc	r27, r19
     b00:	e4 07       	cpc	r30, r20
     b02:	f5 07       	cpc	r31, r21
     b04:	20 f0       	brcs	.+8      	; 0xb0e <__udivmodsi4_ep>
     b06:	a2 1b       	sub	r26, r18
     b08:	b3 0b       	sbc	r27, r19
     b0a:	e4 0b       	sbc	r30, r20
     b0c:	f5 0b       	sbc	r31, r21

00000b0e <__udivmodsi4_ep>:
     b0e:	66 1f       	adc	r22, r22
     b10:	77 1f       	adc	r23, r23
     b12:	88 1f       	adc	r24, r24
     b14:	99 1f       	adc	r25, r25
     b16:	1a 94       	dec	r1
     b18:	69 f7       	brne	.-38     	; 0xaf4 <__udivmodsi4_loop>
     b1a:	60 95       	com	r22
     b1c:	70 95       	com	r23
     b1e:	80 95       	com	r24
     b20:	90 95       	com	r25
     b22:	9b 01       	movw	r18, r22
     b24:	ac 01       	movw	r20, r24
     b26:	bd 01       	movw	r22, r26
     b28:	cf 01       	movw	r24, r30
     b2a:	08 95       	ret

00000b2c <__udivmodhi4>:
     b2c:	aa 1b       	sub	r26, r26
     b2e:	bb 1b       	sub	r27, r27
     b30:	51 e1       	ldi	r21, 0x11	; 17
     b32:	07 c0       	rjmp	.+14     	; 0xb42 <__udivmodhi4_ep>

00000b34 <__udivmodhi4_loop>:
     b34:	aa 1f       	adc	r26, r26
     b36:	bb 1f       	adc	r27, r27
     b38:	a6 17       	cp	r26, r22
     b3a:	b7 07       	cpc	r27, r23
     b3c:	10 f0       	brcs	.+4      	; 0xb42 <__udivmodhi4_ep>
     b3e:	a6 1b       	sub	r26, r22
     b40:	b7 0b       	sbc	r27, r23

00000b42 <__udivmodhi4_ep>:
     b42:	88 1f       	adc	r24, r24
     b44:	99 1f       	adc	r25, r25
     b46:	5a 95       	dec	r21
     b48:	a9 f7       	brne	.-22     	; 0xb34 <__udivmodhi4_loop>
     b4a:	80 95       	com	r24
     b4c:	90 95       	com	r25
     b4e:	bc 01       	movw	r22, r24
     b50:	cd 01       	movw	r24, r26
     b52:	08 95       	ret

00000b54 <malloc>:
     b54:	0f 93       	push	r16
     b56:	1f 93       	push	r17
     b58:	cf 93       	push	r28
     b5a:	df 93       	push	r29
     b5c:	82 30       	cpi	r24, 0x02	; 2
     b5e:	91 05       	cpc	r25, r1
     b60:	10 f4       	brcc	.+4      	; 0xb66 <malloc+0x12>
     b62:	82 e0       	ldi	r24, 0x02	; 2
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	e0 91 f8 02 	lds	r30, 0x02F8	; 0x8002f8 <__flp>
     b6a:	f0 91 f9 02 	lds	r31, 0x02F9	; 0x8002f9 <__flp+0x1>
     b6e:	20 e0       	ldi	r18, 0x00	; 0
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	a0 e0       	ldi	r26, 0x00	; 0
     b74:	b0 e0       	ldi	r27, 0x00	; 0
     b76:	30 97       	sbiw	r30, 0x00	; 0
     b78:	19 f1       	breq	.+70     	; 0xbc0 <malloc+0x6c>
     b7a:	40 81       	ld	r20, Z
     b7c:	51 81       	ldd	r21, Z+1	; 0x01
     b7e:	02 81       	ldd	r16, Z+2	; 0x02
     b80:	13 81       	ldd	r17, Z+3	; 0x03
     b82:	48 17       	cp	r20, r24
     b84:	59 07       	cpc	r21, r25
     b86:	c8 f0       	brcs	.+50     	; 0xbba <malloc+0x66>
     b88:	84 17       	cp	r24, r20
     b8a:	95 07       	cpc	r25, r21
     b8c:	69 f4       	brne	.+26     	; 0xba8 <malloc+0x54>
     b8e:	10 97       	sbiw	r26, 0x00	; 0
     b90:	31 f0       	breq	.+12     	; 0xb9e <malloc+0x4a>
     b92:	12 96       	adiw	r26, 0x02	; 2
     b94:	0c 93       	st	X, r16
     b96:	12 97       	sbiw	r26, 0x02	; 2
     b98:	13 96       	adiw	r26, 0x03	; 3
     b9a:	1c 93       	st	X, r17
     b9c:	27 c0       	rjmp	.+78     	; 0xbec <malloc+0x98>
     b9e:	00 93 f8 02 	sts	0x02F8, r16	; 0x8002f8 <__flp>
     ba2:	10 93 f9 02 	sts	0x02F9, r17	; 0x8002f9 <__flp+0x1>
     ba6:	22 c0       	rjmp	.+68     	; 0xbec <malloc+0x98>
     ba8:	21 15       	cp	r18, r1
     baa:	31 05       	cpc	r19, r1
     bac:	19 f0       	breq	.+6      	; 0xbb4 <malloc+0x60>
     bae:	42 17       	cp	r20, r18
     bb0:	53 07       	cpc	r21, r19
     bb2:	18 f4       	brcc	.+6      	; 0xbba <malloc+0x66>
     bb4:	9a 01       	movw	r18, r20
     bb6:	bd 01       	movw	r22, r26
     bb8:	ef 01       	movw	r28, r30
     bba:	df 01       	movw	r26, r30
     bbc:	f8 01       	movw	r30, r16
     bbe:	db cf       	rjmp	.-74     	; 0xb76 <malloc+0x22>
     bc0:	21 15       	cp	r18, r1
     bc2:	31 05       	cpc	r19, r1
     bc4:	f9 f0       	breq	.+62     	; 0xc04 <malloc+0xb0>
     bc6:	28 1b       	sub	r18, r24
     bc8:	39 0b       	sbc	r19, r25
     bca:	24 30       	cpi	r18, 0x04	; 4
     bcc:	31 05       	cpc	r19, r1
     bce:	80 f4       	brcc	.+32     	; 0xbf0 <malloc+0x9c>
     bd0:	8a 81       	ldd	r24, Y+2	; 0x02
     bd2:	9b 81       	ldd	r25, Y+3	; 0x03
     bd4:	61 15       	cp	r22, r1
     bd6:	71 05       	cpc	r23, r1
     bd8:	21 f0       	breq	.+8      	; 0xbe2 <malloc+0x8e>
     bda:	fb 01       	movw	r30, r22
     bdc:	93 83       	std	Z+3, r25	; 0x03
     bde:	82 83       	std	Z+2, r24	; 0x02
     be0:	04 c0       	rjmp	.+8      	; 0xbea <malloc+0x96>
     be2:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <__flp+0x1>
     be6:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <__flp>
     bea:	fe 01       	movw	r30, r28
     bec:	32 96       	adiw	r30, 0x02	; 2
     bee:	44 c0       	rjmp	.+136    	; 0xc78 <malloc+0x124>
     bf0:	fe 01       	movw	r30, r28
     bf2:	e2 0f       	add	r30, r18
     bf4:	f3 1f       	adc	r31, r19
     bf6:	81 93       	st	Z+, r24
     bf8:	91 93       	st	Z+, r25
     bfa:	22 50       	subi	r18, 0x02	; 2
     bfc:	31 09       	sbc	r19, r1
     bfe:	39 83       	std	Y+1, r19	; 0x01
     c00:	28 83       	st	Y, r18
     c02:	3a c0       	rjmp	.+116    	; 0xc78 <malloc+0x124>
     c04:	20 91 f6 02 	lds	r18, 0x02F6	; 0x8002f6 <__brkval>
     c08:	30 91 f7 02 	lds	r19, 0x02F7	; 0x8002f7 <__brkval+0x1>
     c0c:	23 2b       	or	r18, r19
     c0e:	41 f4       	brne	.+16     	; 0xc20 <malloc+0xcc>
     c10:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
     c14:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
     c18:	30 93 f7 02 	sts	0x02F7, r19	; 0x8002f7 <__brkval+0x1>
     c1c:	20 93 f6 02 	sts	0x02F6, r18	; 0x8002f6 <__brkval>
     c20:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     c24:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
     c28:	21 15       	cp	r18, r1
     c2a:	31 05       	cpc	r19, r1
     c2c:	41 f4       	brne	.+16     	; 0xc3e <malloc+0xea>
     c2e:	2d b7       	in	r18, 0x3d	; 61
     c30:	3e b7       	in	r19, 0x3e	; 62
     c32:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
     c36:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
     c3a:	24 1b       	sub	r18, r20
     c3c:	35 0b       	sbc	r19, r21
     c3e:	e0 91 f6 02 	lds	r30, 0x02F6	; 0x8002f6 <__brkval>
     c42:	f0 91 f7 02 	lds	r31, 0x02F7	; 0x8002f7 <__brkval+0x1>
     c46:	e2 17       	cp	r30, r18
     c48:	f3 07       	cpc	r31, r19
     c4a:	a0 f4       	brcc	.+40     	; 0xc74 <malloc+0x120>
     c4c:	2e 1b       	sub	r18, r30
     c4e:	3f 0b       	sbc	r19, r31
     c50:	28 17       	cp	r18, r24
     c52:	39 07       	cpc	r19, r25
     c54:	78 f0       	brcs	.+30     	; 0xc74 <malloc+0x120>
     c56:	ac 01       	movw	r20, r24
     c58:	4e 5f       	subi	r20, 0xFE	; 254
     c5a:	5f 4f       	sbci	r21, 0xFF	; 255
     c5c:	24 17       	cp	r18, r20
     c5e:	35 07       	cpc	r19, r21
     c60:	48 f0       	brcs	.+18     	; 0xc74 <malloc+0x120>
     c62:	4e 0f       	add	r20, r30
     c64:	5f 1f       	adc	r21, r31
     c66:	50 93 f7 02 	sts	0x02F7, r21	; 0x8002f7 <__brkval+0x1>
     c6a:	40 93 f6 02 	sts	0x02F6, r20	; 0x8002f6 <__brkval>
     c6e:	81 93       	st	Z+, r24
     c70:	91 93       	st	Z+, r25
     c72:	02 c0       	rjmp	.+4      	; 0xc78 <malloc+0x124>
     c74:	e0 e0       	ldi	r30, 0x00	; 0
     c76:	f0 e0       	ldi	r31, 0x00	; 0
     c78:	cf 01       	movw	r24, r30
     c7a:	df 91       	pop	r29
     c7c:	cf 91       	pop	r28
     c7e:	1f 91       	pop	r17
     c80:	0f 91       	pop	r16
     c82:	08 95       	ret

00000c84 <free>:
     c84:	cf 93       	push	r28
     c86:	df 93       	push	r29
     c88:	00 97       	sbiw	r24, 0x00	; 0
     c8a:	09 f4       	brne	.+2      	; 0xc8e <free+0xa>
     c8c:	81 c0       	rjmp	.+258    	; 0xd90 <free+0x10c>
     c8e:	fc 01       	movw	r30, r24
     c90:	32 97       	sbiw	r30, 0x02	; 2
     c92:	13 82       	std	Z+3, r1	; 0x03
     c94:	12 82       	std	Z+2, r1	; 0x02
     c96:	a0 91 f8 02 	lds	r26, 0x02F8	; 0x8002f8 <__flp>
     c9a:	b0 91 f9 02 	lds	r27, 0x02F9	; 0x8002f9 <__flp+0x1>
     c9e:	10 97       	sbiw	r26, 0x00	; 0
     ca0:	81 f4       	brne	.+32     	; 0xcc2 <free+0x3e>
     ca2:	20 81       	ld	r18, Z
     ca4:	31 81       	ldd	r19, Z+1	; 0x01
     ca6:	82 0f       	add	r24, r18
     ca8:	93 1f       	adc	r25, r19
     caa:	20 91 f6 02 	lds	r18, 0x02F6	; 0x8002f6 <__brkval>
     cae:	30 91 f7 02 	lds	r19, 0x02F7	; 0x8002f7 <__brkval+0x1>
     cb2:	28 17       	cp	r18, r24
     cb4:	39 07       	cpc	r19, r25
     cb6:	51 f5       	brne	.+84     	; 0xd0c <free+0x88>
     cb8:	f0 93 f7 02 	sts	0x02F7, r31	; 0x8002f7 <__brkval+0x1>
     cbc:	e0 93 f6 02 	sts	0x02F6, r30	; 0x8002f6 <__brkval>
     cc0:	67 c0       	rjmp	.+206    	; 0xd90 <free+0x10c>
     cc2:	ed 01       	movw	r28, r26
     cc4:	20 e0       	ldi	r18, 0x00	; 0
     cc6:	30 e0       	ldi	r19, 0x00	; 0
     cc8:	ce 17       	cp	r28, r30
     cca:	df 07       	cpc	r29, r31
     ccc:	40 f4       	brcc	.+16     	; 0xcde <free+0x5a>
     cce:	4a 81       	ldd	r20, Y+2	; 0x02
     cd0:	5b 81       	ldd	r21, Y+3	; 0x03
     cd2:	9e 01       	movw	r18, r28
     cd4:	41 15       	cp	r20, r1
     cd6:	51 05       	cpc	r21, r1
     cd8:	f1 f0       	breq	.+60     	; 0xd16 <free+0x92>
     cda:	ea 01       	movw	r28, r20
     cdc:	f5 cf       	rjmp	.-22     	; 0xcc8 <free+0x44>
     cde:	d3 83       	std	Z+3, r29	; 0x03
     ce0:	c2 83       	std	Z+2, r28	; 0x02
     ce2:	40 81       	ld	r20, Z
     ce4:	51 81       	ldd	r21, Z+1	; 0x01
     ce6:	84 0f       	add	r24, r20
     ce8:	95 1f       	adc	r25, r21
     cea:	c8 17       	cp	r28, r24
     cec:	d9 07       	cpc	r29, r25
     cee:	59 f4       	brne	.+22     	; 0xd06 <free+0x82>
     cf0:	88 81       	ld	r24, Y
     cf2:	99 81       	ldd	r25, Y+1	; 0x01
     cf4:	84 0f       	add	r24, r20
     cf6:	95 1f       	adc	r25, r21
     cf8:	02 96       	adiw	r24, 0x02	; 2
     cfa:	91 83       	std	Z+1, r25	; 0x01
     cfc:	80 83       	st	Z, r24
     cfe:	8a 81       	ldd	r24, Y+2	; 0x02
     d00:	9b 81       	ldd	r25, Y+3	; 0x03
     d02:	93 83       	std	Z+3, r25	; 0x03
     d04:	82 83       	std	Z+2, r24	; 0x02
     d06:	21 15       	cp	r18, r1
     d08:	31 05       	cpc	r19, r1
     d0a:	29 f4       	brne	.+10     	; 0xd16 <free+0x92>
     d0c:	f0 93 f9 02 	sts	0x02F9, r31	; 0x8002f9 <__flp+0x1>
     d10:	e0 93 f8 02 	sts	0x02F8, r30	; 0x8002f8 <__flp>
     d14:	3d c0       	rjmp	.+122    	; 0xd90 <free+0x10c>
     d16:	e9 01       	movw	r28, r18
     d18:	fb 83       	std	Y+3, r31	; 0x03
     d1a:	ea 83       	std	Y+2, r30	; 0x02
     d1c:	49 91       	ld	r20, Y+
     d1e:	59 91       	ld	r21, Y+
     d20:	c4 0f       	add	r28, r20
     d22:	d5 1f       	adc	r29, r21
     d24:	ec 17       	cp	r30, r28
     d26:	fd 07       	cpc	r31, r29
     d28:	61 f4       	brne	.+24     	; 0xd42 <free+0xbe>
     d2a:	80 81       	ld	r24, Z
     d2c:	91 81       	ldd	r25, Z+1	; 0x01
     d2e:	84 0f       	add	r24, r20
     d30:	95 1f       	adc	r25, r21
     d32:	02 96       	adiw	r24, 0x02	; 2
     d34:	e9 01       	movw	r28, r18
     d36:	99 83       	std	Y+1, r25	; 0x01
     d38:	88 83       	st	Y, r24
     d3a:	82 81       	ldd	r24, Z+2	; 0x02
     d3c:	93 81       	ldd	r25, Z+3	; 0x03
     d3e:	9b 83       	std	Y+3, r25	; 0x03
     d40:	8a 83       	std	Y+2, r24	; 0x02
     d42:	e0 e0       	ldi	r30, 0x00	; 0
     d44:	f0 e0       	ldi	r31, 0x00	; 0
     d46:	12 96       	adiw	r26, 0x02	; 2
     d48:	8d 91       	ld	r24, X+
     d4a:	9c 91       	ld	r25, X
     d4c:	13 97       	sbiw	r26, 0x03	; 3
     d4e:	00 97       	sbiw	r24, 0x00	; 0
     d50:	19 f0       	breq	.+6      	; 0xd58 <free+0xd4>
     d52:	fd 01       	movw	r30, r26
     d54:	dc 01       	movw	r26, r24
     d56:	f7 cf       	rjmp	.-18     	; 0xd46 <free+0xc2>
     d58:	8d 91       	ld	r24, X+
     d5a:	9c 91       	ld	r25, X
     d5c:	11 97       	sbiw	r26, 0x01	; 1
     d5e:	9d 01       	movw	r18, r26
     d60:	2e 5f       	subi	r18, 0xFE	; 254
     d62:	3f 4f       	sbci	r19, 0xFF	; 255
     d64:	82 0f       	add	r24, r18
     d66:	93 1f       	adc	r25, r19
     d68:	20 91 f6 02 	lds	r18, 0x02F6	; 0x8002f6 <__brkval>
     d6c:	30 91 f7 02 	lds	r19, 0x02F7	; 0x8002f7 <__brkval+0x1>
     d70:	28 17       	cp	r18, r24
     d72:	39 07       	cpc	r19, r25
     d74:	69 f4       	brne	.+26     	; 0xd90 <free+0x10c>
     d76:	30 97       	sbiw	r30, 0x00	; 0
     d78:	29 f4       	brne	.+10     	; 0xd84 <free+0x100>
     d7a:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <__flp+0x1>
     d7e:	10 92 f8 02 	sts	0x02F8, r1	; 0x8002f8 <__flp>
     d82:	02 c0       	rjmp	.+4      	; 0xd88 <free+0x104>
     d84:	13 82       	std	Z+3, r1	; 0x03
     d86:	12 82       	std	Z+2, r1	; 0x02
     d88:	b0 93 f7 02 	sts	0x02F7, r27	; 0x8002f7 <__brkval+0x1>
     d8c:	a0 93 f6 02 	sts	0x02F6, r26	; 0x8002f6 <__brkval>
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	08 95       	ret

00000d96 <strcat>:
     d96:	fb 01       	movw	r30, r22
     d98:	dc 01       	movw	r26, r24
     d9a:	0d 90       	ld	r0, X+
     d9c:	00 20       	and	r0, r0
     d9e:	e9 f7       	brne	.-6      	; 0xd9a <strcat+0x4>
     da0:	11 97       	sbiw	r26, 0x01	; 1
     da2:	01 90       	ld	r0, Z+
     da4:	0d 92       	st	X+, r0
     da6:	00 20       	and	r0, r0
     da8:	e1 f7       	brne	.-8      	; 0xda2 <strcat+0xc>
     daa:	08 95       	ret

00000dac <strcpy>:
     dac:	fb 01       	movw	r30, r22
     dae:	dc 01       	movw	r26, r24
     db0:	01 90       	ld	r0, Z+
     db2:	0d 92       	st	X+, r0
     db4:	00 20       	and	r0, r0
     db6:	e1 f7       	brne	.-8      	; 0xdb0 <strcpy+0x4>
     db8:	08 95       	ret

00000dba <__itoa_ncheck>:
     dba:	bb 27       	eor	r27, r27
     dbc:	4a 30       	cpi	r20, 0x0A	; 10
     dbe:	31 f4       	brne	.+12     	; 0xdcc <__itoa_ncheck+0x12>
     dc0:	99 23       	and	r25, r25
     dc2:	22 f4       	brpl	.+8      	; 0xdcc <__itoa_ncheck+0x12>
     dc4:	bd e2       	ldi	r27, 0x2D	; 45
     dc6:	90 95       	com	r25
     dc8:	81 95       	neg	r24
     dca:	9f 4f       	sbci	r25, 0xFF	; 255
     dcc:	0c 94 e9 06 	jmp	0xdd2	; 0xdd2 <__utoa_common>

00000dd0 <__utoa_ncheck>:
     dd0:	bb 27       	eor	r27, r27

00000dd2 <__utoa_common>:
     dd2:	fb 01       	movw	r30, r22
     dd4:	55 27       	eor	r21, r21
     dd6:	aa 27       	eor	r26, r26
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	aa 1f       	adc	r26, r26
     dde:	a4 17       	cp	r26, r20
     de0:	10 f0       	brcs	.+4      	; 0xde6 <__utoa_common+0x14>
     de2:	a4 1b       	sub	r26, r20
     de4:	83 95       	inc	r24
     de6:	50 51       	subi	r21, 0x10	; 16
     de8:	b9 f7       	brne	.-18     	; 0xdd8 <__utoa_common+0x6>
     dea:	a0 5d       	subi	r26, 0xD0	; 208
     dec:	aa 33       	cpi	r26, 0x3A	; 58
     dee:	08 f0       	brcs	.+2      	; 0xdf2 <__utoa_common+0x20>
     df0:	a9 5d       	subi	r26, 0xD9	; 217
     df2:	a1 93       	st	Z+, r26
     df4:	00 97       	sbiw	r24, 0x00	; 0
     df6:	79 f7       	brne	.-34     	; 0xdd6 <__utoa_common+0x4>
     df8:	b1 11       	cpse	r27, r1
     dfa:	b1 93       	st	Z+, r27
     dfc:	11 92       	st	Z+, r1
     dfe:	cb 01       	movw	r24, r22
     e00:	0c 94 1b 09 	jmp	0x1236	; 0x1236 <strrev>

00000e04 <sprintf>:
     e04:	ae e0       	ldi	r26, 0x0E	; 14
     e06:	b0 e0       	ldi	r27, 0x00	; 0
     e08:	e8 e0       	ldi	r30, 0x08	; 8
     e0a:	f7 e0       	ldi	r31, 0x07	; 7
     e0c:	0c 94 d3 09 	jmp	0x13a6	; 0x13a6 <__prologue_saves__+0x1c>
     e10:	0d 89       	ldd	r16, Y+21	; 0x15
     e12:	1e 89       	ldd	r17, Y+22	; 0x16
     e14:	86 e0       	ldi	r24, 0x06	; 6
     e16:	8c 83       	std	Y+4, r24	; 0x04
     e18:	1a 83       	std	Y+2, r17	; 0x02
     e1a:	09 83       	std	Y+1, r16	; 0x01
     e1c:	8f ef       	ldi	r24, 0xFF	; 255
     e1e:	9f e7       	ldi	r25, 0x7F	; 127
     e20:	9e 83       	std	Y+6, r25	; 0x06
     e22:	8d 83       	std	Y+5, r24	; 0x05
     e24:	ae 01       	movw	r20, r28
     e26:	47 5e       	subi	r20, 0xE7	; 231
     e28:	5f 4f       	sbci	r21, 0xFF	; 255
     e2a:	6f 89       	ldd	r22, Y+23	; 0x17
     e2c:	78 8d       	ldd	r23, Y+24	; 0x18
     e2e:	ce 01       	movw	r24, r28
     e30:	01 96       	adiw	r24, 0x01	; 1
     e32:	0e 94 24 07 	call	0xe48	; 0xe48 <vfprintf>
     e36:	ef 81       	ldd	r30, Y+7	; 0x07
     e38:	f8 85       	ldd	r31, Y+8	; 0x08
     e3a:	e0 0f       	add	r30, r16
     e3c:	f1 1f       	adc	r31, r17
     e3e:	10 82       	st	Z, r1
     e40:	2e 96       	adiw	r28, 0x0e	; 14
     e42:	e4 e0       	ldi	r30, 0x04	; 4
     e44:	0c 94 ef 09 	jmp	0x13de	; 0x13de <__epilogue_restores__+0x1c>

00000e48 <vfprintf>:
     e48:	ab e0       	ldi	r26, 0x0B	; 11
     e4a:	b0 e0       	ldi	r27, 0x00	; 0
     e4c:	ea e2       	ldi	r30, 0x2A	; 42
     e4e:	f7 e0       	ldi	r31, 0x07	; 7
     e50:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__prologue_saves__>
     e54:	6c 01       	movw	r12, r24
     e56:	7b 01       	movw	r14, r22
     e58:	8a 01       	movw	r16, r20
     e5a:	fc 01       	movw	r30, r24
     e5c:	17 82       	std	Z+7, r1	; 0x07
     e5e:	16 82       	std	Z+6, r1	; 0x06
     e60:	83 81       	ldd	r24, Z+3	; 0x03
     e62:	81 ff       	sbrs	r24, 1
     e64:	cc c1       	rjmp	.+920    	; 0x11fe <vfprintf+0x3b6>
     e66:	ce 01       	movw	r24, r28
     e68:	01 96       	adiw	r24, 0x01	; 1
     e6a:	3c 01       	movw	r6, r24
     e6c:	f6 01       	movw	r30, r12
     e6e:	93 81       	ldd	r25, Z+3	; 0x03
     e70:	f7 01       	movw	r30, r14
     e72:	93 fd       	sbrc	r25, 3
     e74:	85 91       	lpm	r24, Z+
     e76:	93 ff       	sbrs	r25, 3
     e78:	81 91       	ld	r24, Z+
     e7a:	7f 01       	movw	r14, r30
     e7c:	88 23       	and	r24, r24
     e7e:	09 f4       	brne	.+2      	; 0xe82 <vfprintf+0x3a>
     e80:	ba c1       	rjmp	.+884    	; 0x11f6 <vfprintf+0x3ae>
     e82:	85 32       	cpi	r24, 0x25	; 37
     e84:	39 f4       	brne	.+14     	; 0xe94 <vfprintf+0x4c>
     e86:	93 fd       	sbrc	r25, 3
     e88:	85 91       	lpm	r24, Z+
     e8a:	93 ff       	sbrs	r25, 3
     e8c:	81 91       	ld	r24, Z+
     e8e:	7f 01       	movw	r14, r30
     e90:	85 32       	cpi	r24, 0x25	; 37
     e92:	29 f4       	brne	.+10     	; 0xe9e <vfprintf+0x56>
     e94:	b6 01       	movw	r22, r12
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
     e9c:	e7 cf       	rjmp	.-50     	; 0xe6c <vfprintf+0x24>
     e9e:	91 2c       	mov	r9, r1
     ea0:	21 2c       	mov	r2, r1
     ea2:	31 2c       	mov	r3, r1
     ea4:	ff e1       	ldi	r31, 0x1F	; 31
     ea6:	f3 15       	cp	r31, r3
     ea8:	d8 f0       	brcs	.+54     	; 0xee0 <vfprintf+0x98>
     eaa:	8b 32       	cpi	r24, 0x2B	; 43
     eac:	79 f0       	breq	.+30     	; 0xecc <vfprintf+0x84>
     eae:	38 f4       	brcc	.+14     	; 0xebe <vfprintf+0x76>
     eb0:	80 32       	cpi	r24, 0x20	; 32
     eb2:	79 f0       	breq	.+30     	; 0xed2 <vfprintf+0x8a>
     eb4:	83 32       	cpi	r24, 0x23	; 35
     eb6:	a1 f4       	brne	.+40     	; 0xee0 <vfprintf+0x98>
     eb8:	23 2d       	mov	r18, r3
     eba:	20 61       	ori	r18, 0x10	; 16
     ebc:	1d c0       	rjmp	.+58     	; 0xef8 <vfprintf+0xb0>
     ebe:	8d 32       	cpi	r24, 0x2D	; 45
     ec0:	61 f0       	breq	.+24     	; 0xeda <vfprintf+0x92>
     ec2:	80 33       	cpi	r24, 0x30	; 48
     ec4:	69 f4       	brne	.+26     	; 0xee0 <vfprintf+0x98>
     ec6:	23 2d       	mov	r18, r3
     ec8:	21 60       	ori	r18, 0x01	; 1
     eca:	16 c0       	rjmp	.+44     	; 0xef8 <vfprintf+0xb0>
     ecc:	83 2d       	mov	r24, r3
     ece:	82 60       	ori	r24, 0x02	; 2
     ed0:	38 2e       	mov	r3, r24
     ed2:	e3 2d       	mov	r30, r3
     ed4:	e4 60       	ori	r30, 0x04	; 4
     ed6:	3e 2e       	mov	r3, r30
     ed8:	2a c0       	rjmp	.+84     	; 0xf2e <vfprintf+0xe6>
     eda:	f3 2d       	mov	r31, r3
     edc:	f8 60       	ori	r31, 0x08	; 8
     ede:	1d c0       	rjmp	.+58     	; 0xf1a <vfprintf+0xd2>
     ee0:	37 fc       	sbrc	r3, 7
     ee2:	2d c0       	rjmp	.+90     	; 0xf3e <vfprintf+0xf6>
     ee4:	20 ed       	ldi	r18, 0xD0	; 208
     ee6:	28 0f       	add	r18, r24
     ee8:	2a 30       	cpi	r18, 0x0A	; 10
     eea:	40 f0       	brcs	.+16     	; 0xefc <vfprintf+0xb4>
     eec:	8e 32       	cpi	r24, 0x2E	; 46
     eee:	b9 f4       	brne	.+46     	; 0xf1e <vfprintf+0xd6>
     ef0:	36 fc       	sbrc	r3, 6
     ef2:	81 c1       	rjmp	.+770    	; 0x11f6 <vfprintf+0x3ae>
     ef4:	23 2d       	mov	r18, r3
     ef6:	20 64       	ori	r18, 0x40	; 64
     ef8:	32 2e       	mov	r3, r18
     efa:	19 c0       	rjmp	.+50     	; 0xf2e <vfprintf+0xe6>
     efc:	36 fe       	sbrs	r3, 6
     efe:	06 c0       	rjmp	.+12     	; 0xf0c <vfprintf+0xc4>
     f00:	8a e0       	ldi	r24, 0x0A	; 10
     f02:	98 9e       	mul	r9, r24
     f04:	20 0d       	add	r18, r0
     f06:	11 24       	eor	r1, r1
     f08:	92 2e       	mov	r9, r18
     f0a:	11 c0       	rjmp	.+34     	; 0xf2e <vfprintf+0xe6>
     f0c:	ea e0       	ldi	r30, 0x0A	; 10
     f0e:	2e 9e       	mul	r2, r30
     f10:	20 0d       	add	r18, r0
     f12:	11 24       	eor	r1, r1
     f14:	22 2e       	mov	r2, r18
     f16:	f3 2d       	mov	r31, r3
     f18:	f0 62       	ori	r31, 0x20	; 32
     f1a:	3f 2e       	mov	r3, r31
     f1c:	08 c0       	rjmp	.+16     	; 0xf2e <vfprintf+0xe6>
     f1e:	8c 36       	cpi	r24, 0x6C	; 108
     f20:	21 f4       	brne	.+8      	; 0xf2a <vfprintf+0xe2>
     f22:	83 2d       	mov	r24, r3
     f24:	80 68       	ori	r24, 0x80	; 128
     f26:	38 2e       	mov	r3, r24
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <vfprintf+0xe6>
     f2a:	88 36       	cpi	r24, 0x68	; 104
     f2c:	41 f4       	brne	.+16     	; 0xf3e <vfprintf+0xf6>
     f2e:	f7 01       	movw	r30, r14
     f30:	93 fd       	sbrc	r25, 3
     f32:	85 91       	lpm	r24, Z+
     f34:	93 ff       	sbrs	r25, 3
     f36:	81 91       	ld	r24, Z+
     f38:	7f 01       	movw	r14, r30
     f3a:	81 11       	cpse	r24, r1
     f3c:	b3 cf       	rjmp	.-154    	; 0xea4 <vfprintf+0x5c>
     f3e:	98 2f       	mov	r25, r24
     f40:	9f 7d       	andi	r25, 0xDF	; 223
     f42:	95 54       	subi	r25, 0x45	; 69
     f44:	93 30       	cpi	r25, 0x03	; 3
     f46:	28 f4       	brcc	.+10     	; 0xf52 <vfprintf+0x10a>
     f48:	0c 5f       	subi	r16, 0xFC	; 252
     f4a:	1f 4f       	sbci	r17, 0xFF	; 255
     f4c:	9f e3       	ldi	r25, 0x3F	; 63
     f4e:	99 83       	std	Y+1, r25	; 0x01
     f50:	0d c0       	rjmp	.+26     	; 0xf6c <vfprintf+0x124>
     f52:	83 36       	cpi	r24, 0x63	; 99
     f54:	31 f0       	breq	.+12     	; 0xf62 <vfprintf+0x11a>
     f56:	83 37       	cpi	r24, 0x73	; 115
     f58:	71 f0       	breq	.+28     	; 0xf76 <vfprintf+0x12e>
     f5a:	83 35       	cpi	r24, 0x53	; 83
     f5c:	09 f0       	breq	.+2      	; 0xf60 <vfprintf+0x118>
     f5e:	59 c0       	rjmp	.+178    	; 0x1012 <vfprintf+0x1ca>
     f60:	21 c0       	rjmp	.+66     	; 0xfa4 <vfprintf+0x15c>
     f62:	f8 01       	movw	r30, r16
     f64:	80 81       	ld	r24, Z
     f66:	89 83       	std	Y+1, r24	; 0x01
     f68:	0e 5f       	subi	r16, 0xFE	; 254
     f6a:	1f 4f       	sbci	r17, 0xFF	; 255
     f6c:	88 24       	eor	r8, r8
     f6e:	83 94       	inc	r8
     f70:	91 2c       	mov	r9, r1
     f72:	53 01       	movw	r10, r6
     f74:	13 c0       	rjmp	.+38     	; 0xf9c <vfprintf+0x154>
     f76:	28 01       	movw	r4, r16
     f78:	f2 e0       	ldi	r31, 0x02	; 2
     f7a:	4f 0e       	add	r4, r31
     f7c:	51 1c       	adc	r5, r1
     f7e:	f8 01       	movw	r30, r16
     f80:	a0 80       	ld	r10, Z
     f82:	b1 80       	ldd	r11, Z+1	; 0x01
     f84:	36 fe       	sbrs	r3, 6
     f86:	03 c0       	rjmp	.+6      	; 0xf8e <vfprintf+0x146>
     f88:	69 2d       	mov	r22, r9
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <vfprintf+0x14a>
     f8e:	6f ef       	ldi	r22, 0xFF	; 255
     f90:	7f ef       	ldi	r23, 0xFF	; 255
     f92:	c5 01       	movw	r24, r10
     f94:	0e 94 10 09 	call	0x1220	; 0x1220 <strnlen>
     f98:	4c 01       	movw	r8, r24
     f9a:	82 01       	movw	r16, r4
     f9c:	f3 2d       	mov	r31, r3
     f9e:	ff 77       	andi	r31, 0x7F	; 127
     fa0:	3f 2e       	mov	r3, r31
     fa2:	16 c0       	rjmp	.+44     	; 0xfd0 <vfprintf+0x188>
     fa4:	28 01       	movw	r4, r16
     fa6:	22 e0       	ldi	r18, 0x02	; 2
     fa8:	42 0e       	add	r4, r18
     faa:	51 1c       	adc	r5, r1
     fac:	f8 01       	movw	r30, r16
     fae:	a0 80       	ld	r10, Z
     fb0:	b1 80       	ldd	r11, Z+1	; 0x01
     fb2:	36 fe       	sbrs	r3, 6
     fb4:	03 c0       	rjmp	.+6      	; 0xfbc <vfprintf+0x174>
     fb6:	69 2d       	mov	r22, r9
     fb8:	70 e0       	ldi	r23, 0x00	; 0
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <vfprintf+0x178>
     fbc:	6f ef       	ldi	r22, 0xFF	; 255
     fbe:	7f ef       	ldi	r23, 0xFF	; 255
     fc0:	c5 01       	movw	r24, r10
     fc2:	0e 94 05 09 	call	0x120a	; 0x120a <strnlen_P>
     fc6:	4c 01       	movw	r8, r24
     fc8:	f3 2d       	mov	r31, r3
     fca:	f0 68       	ori	r31, 0x80	; 128
     fcc:	3f 2e       	mov	r3, r31
     fce:	82 01       	movw	r16, r4
     fd0:	33 fc       	sbrc	r3, 3
     fd2:	1b c0       	rjmp	.+54     	; 0x100a <vfprintf+0x1c2>
     fd4:	82 2d       	mov	r24, r2
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	88 16       	cp	r8, r24
     fda:	99 06       	cpc	r9, r25
     fdc:	b0 f4       	brcc	.+44     	; 0x100a <vfprintf+0x1c2>
     fde:	b6 01       	movw	r22, r12
     fe0:	80 e2       	ldi	r24, 0x20	; 32
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
     fe8:	2a 94       	dec	r2
     fea:	f4 cf       	rjmp	.-24     	; 0xfd4 <vfprintf+0x18c>
     fec:	f5 01       	movw	r30, r10
     fee:	37 fc       	sbrc	r3, 7
     ff0:	85 91       	lpm	r24, Z+
     ff2:	37 fe       	sbrs	r3, 7
     ff4:	81 91       	ld	r24, Z+
     ff6:	5f 01       	movw	r10, r30
     ff8:	b6 01       	movw	r22, r12
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
    1000:	21 10       	cpse	r2, r1
    1002:	2a 94       	dec	r2
    1004:	21 e0       	ldi	r18, 0x01	; 1
    1006:	82 1a       	sub	r8, r18
    1008:	91 08       	sbc	r9, r1
    100a:	81 14       	cp	r8, r1
    100c:	91 04       	cpc	r9, r1
    100e:	71 f7       	brne	.-36     	; 0xfec <vfprintf+0x1a4>
    1010:	e8 c0       	rjmp	.+464    	; 0x11e2 <vfprintf+0x39a>
    1012:	84 36       	cpi	r24, 0x64	; 100
    1014:	11 f0       	breq	.+4      	; 0x101a <vfprintf+0x1d2>
    1016:	89 36       	cpi	r24, 0x69	; 105
    1018:	41 f5       	brne	.+80     	; 0x106a <vfprintf+0x222>
    101a:	f8 01       	movw	r30, r16
    101c:	37 fe       	sbrs	r3, 7
    101e:	07 c0       	rjmp	.+14     	; 0x102e <vfprintf+0x1e6>
    1020:	60 81       	ld	r22, Z
    1022:	71 81       	ldd	r23, Z+1	; 0x01
    1024:	82 81       	ldd	r24, Z+2	; 0x02
    1026:	93 81       	ldd	r25, Z+3	; 0x03
    1028:	0c 5f       	subi	r16, 0xFC	; 252
    102a:	1f 4f       	sbci	r17, 0xFF	; 255
    102c:	08 c0       	rjmp	.+16     	; 0x103e <vfprintf+0x1f6>
    102e:	60 81       	ld	r22, Z
    1030:	71 81       	ldd	r23, Z+1	; 0x01
    1032:	07 2e       	mov	r0, r23
    1034:	00 0c       	add	r0, r0
    1036:	88 0b       	sbc	r24, r24
    1038:	99 0b       	sbc	r25, r25
    103a:	0e 5f       	subi	r16, 0xFE	; 254
    103c:	1f 4f       	sbci	r17, 0xFF	; 255
    103e:	f3 2d       	mov	r31, r3
    1040:	ff 76       	andi	r31, 0x6F	; 111
    1042:	3f 2e       	mov	r3, r31
    1044:	97 ff       	sbrs	r25, 7
    1046:	09 c0       	rjmp	.+18     	; 0x105a <vfprintf+0x212>
    1048:	90 95       	com	r25
    104a:	80 95       	com	r24
    104c:	70 95       	com	r23
    104e:	61 95       	neg	r22
    1050:	7f 4f       	sbci	r23, 0xFF	; 255
    1052:	8f 4f       	sbci	r24, 0xFF	; 255
    1054:	9f 4f       	sbci	r25, 0xFF	; 255
    1056:	f0 68       	ori	r31, 0x80	; 128
    1058:	3f 2e       	mov	r3, r31
    105a:	2a e0       	ldi	r18, 0x0A	; 10
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	a3 01       	movw	r20, r6
    1060:	0e 94 67 09 	call	0x12ce	; 0x12ce <__ultoa_invert>
    1064:	88 2e       	mov	r8, r24
    1066:	86 18       	sub	r8, r6
    1068:	45 c0       	rjmp	.+138    	; 0x10f4 <vfprintf+0x2ac>
    106a:	85 37       	cpi	r24, 0x75	; 117
    106c:	31 f4       	brne	.+12     	; 0x107a <vfprintf+0x232>
    106e:	23 2d       	mov	r18, r3
    1070:	2f 7e       	andi	r18, 0xEF	; 239
    1072:	b2 2e       	mov	r11, r18
    1074:	2a e0       	ldi	r18, 0x0A	; 10
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	25 c0       	rjmp	.+74     	; 0x10c4 <vfprintf+0x27c>
    107a:	93 2d       	mov	r25, r3
    107c:	99 7f       	andi	r25, 0xF9	; 249
    107e:	b9 2e       	mov	r11, r25
    1080:	8f 36       	cpi	r24, 0x6F	; 111
    1082:	c1 f0       	breq	.+48     	; 0x10b4 <vfprintf+0x26c>
    1084:	18 f4       	brcc	.+6      	; 0x108c <vfprintf+0x244>
    1086:	88 35       	cpi	r24, 0x58	; 88
    1088:	79 f0       	breq	.+30     	; 0x10a8 <vfprintf+0x260>
    108a:	b5 c0       	rjmp	.+362    	; 0x11f6 <vfprintf+0x3ae>
    108c:	80 37       	cpi	r24, 0x70	; 112
    108e:	19 f0       	breq	.+6      	; 0x1096 <vfprintf+0x24e>
    1090:	88 37       	cpi	r24, 0x78	; 120
    1092:	21 f0       	breq	.+8      	; 0x109c <vfprintf+0x254>
    1094:	b0 c0       	rjmp	.+352    	; 0x11f6 <vfprintf+0x3ae>
    1096:	e9 2f       	mov	r30, r25
    1098:	e0 61       	ori	r30, 0x10	; 16
    109a:	be 2e       	mov	r11, r30
    109c:	b4 fe       	sbrs	r11, 4
    109e:	0d c0       	rjmp	.+26     	; 0x10ba <vfprintf+0x272>
    10a0:	fb 2d       	mov	r31, r11
    10a2:	f4 60       	ori	r31, 0x04	; 4
    10a4:	bf 2e       	mov	r11, r31
    10a6:	09 c0       	rjmp	.+18     	; 0x10ba <vfprintf+0x272>
    10a8:	34 fe       	sbrs	r3, 4
    10aa:	0a c0       	rjmp	.+20     	; 0x10c0 <vfprintf+0x278>
    10ac:	29 2f       	mov	r18, r25
    10ae:	26 60       	ori	r18, 0x06	; 6
    10b0:	b2 2e       	mov	r11, r18
    10b2:	06 c0       	rjmp	.+12     	; 0x10c0 <vfprintf+0x278>
    10b4:	28 e0       	ldi	r18, 0x08	; 8
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <vfprintf+0x27c>
    10ba:	20 e1       	ldi	r18, 0x10	; 16
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <vfprintf+0x27c>
    10c0:	20 e1       	ldi	r18, 0x10	; 16
    10c2:	32 e0       	ldi	r19, 0x02	; 2
    10c4:	f8 01       	movw	r30, r16
    10c6:	b7 fe       	sbrs	r11, 7
    10c8:	07 c0       	rjmp	.+14     	; 0x10d8 <vfprintf+0x290>
    10ca:	60 81       	ld	r22, Z
    10cc:	71 81       	ldd	r23, Z+1	; 0x01
    10ce:	82 81       	ldd	r24, Z+2	; 0x02
    10d0:	93 81       	ldd	r25, Z+3	; 0x03
    10d2:	0c 5f       	subi	r16, 0xFC	; 252
    10d4:	1f 4f       	sbci	r17, 0xFF	; 255
    10d6:	06 c0       	rjmp	.+12     	; 0x10e4 <vfprintf+0x29c>
    10d8:	60 81       	ld	r22, Z
    10da:	71 81       	ldd	r23, Z+1	; 0x01
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	0e 5f       	subi	r16, 0xFE	; 254
    10e2:	1f 4f       	sbci	r17, 0xFF	; 255
    10e4:	a3 01       	movw	r20, r6
    10e6:	0e 94 67 09 	call	0x12ce	; 0x12ce <__ultoa_invert>
    10ea:	88 2e       	mov	r8, r24
    10ec:	86 18       	sub	r8, r6
    10ee:	fb 2d       	mov	r31, r11
    10f0:	ff 77       	andi	r31, 0x7F	; 127
    10f2:	3f 2e       	mov	r3, r31
    10f4:	36 fe       	sbrs	r3, 6
    10f6:	0d c0       	rjmp	.+26     	; 0x1112 <vfprintf+0x2ca>
    10f8:	23 2d       	mov	r18, r3
    10fa:	2e 7f       	andi	r18, 0xFE	; 254
    10fc:	a2 2e       	mov	r10, r18
    10fe:	89 14       	cp	r8, r9
    1100:	58 f4       	brcc	.+22     	; 0x1118 <vfprintf+0x2d0>
    1102:	34 fe       	sbrs	r3, 4
    1104:	0b c0       	rjmp	.+22     	; 0x111c <vfprintf+0x2d4>
    1106:	32 fc       	sbrc	r3, 2
    1108:	09 c0       	rjmp	.+18     	; 0x111c <vfprintf+0x2d4>
    110a:	83 2d       	mov	r24, r3
    110c:	8e 7e       	andi	r24, 0xEE	; 238
    110e:	a8 2e       	mov	r10, r24
    1110:	05 c0       	rjmp	.+10     	; 0x111c <vfprintf+0x2d4>
    1112:	b8 2c       	mov	r11, r8
    1114:	a3 2c       	mov	r10, r3
    1116:	03 c0       	rjmp	.+6      	; 0x111e <vfprintf+0x2d6>
    1118:	b8 2c       	mov	r11, r8
    111a:	01 c0       	rjmp	.+2      	; 0x111e <vfprintf+0x2d6>
    111c:	b9 2c       	mov	r11, r9
    111e:	a4 fe       	sbrs	r10, 4
    1120:	0f c0       	rjmp	.+30     	; 0x1140 <vfprintf+0x2f8>
    1122:	fe 01       	movw	r30, r28
    1124:	e8 0d       	add	r30, r8
    1126:	f1 1d       	adc	r31, r1
    1128:	80 81       	ld	r24, Z
    112a:	80 33       	cpi	r24, 0x30	; 48
    112c:	21 f4       	brne	.+8      	; 0x1136 <vfprintf+0x2ee>
    112e:	9a 2d       	mov	r25, r10
    1130:	99 7e       	andi	r25, 0xE9	; 233
    1132:	a9 2e       	mov	r10, r25
    1134:	09 c0       	rjmp	.+18     	; 0x1148 <vfprintf+0x300>
    1136:	a2 fe       	sbrs	r10, 2
    1138:	06 c0       	rjmp	.+12     	; 0x1146 <vfprintf+0x2fe>
    113a:	b3 94       	inc	r11
    113c:	b3 94       	inc	r11
    113e:	04 c0       	rjmp	.+8      	; 0x1148 <vfprintf+0x300>
    1140:	8a 2d       	mov	r24, r10
    1142:	86 78       	andi	r24, 0x86	; 134
    1144:	09 f0       	breq	.+2      	; 0x1148 <vfprintf+0x300>
    1146:	b3 94       	inc	r11
    1148:	a3 fc       	sbrc	r10, 3
    114a:	11 c0       	rjmp	.+34     	; 0x116e <vfprintf+0x326>
    114c:	a0 fe       	sbrs	r10, 0
    114e:	06 c0       	rjmp	.+12     	; 0x115c <vfprintf+0x314>
    1150:	b2 14       	cp	r11, r2
    1152:	88 f4       	brcc	.+34     	; 0x1176 <vfprintf+0x32e>
    1154:	28 0c       	add	r2, r8
    1156:	92 2c       	mov	r9, r2
    1158:	9b 18       	sub	r9, r11
    115a:	0e c0       	rjmp	.+28     	; 0x1178 <vfprintf+0x330>
    115c:	b2 14       	cp	r11, r2
    115e:	60 f4       	brcc	.+24     	; 0x1178 <vfprintf+0x330>
    1160:	b6 01       	movw	r22, r12
    1162:	80 e2       	ldi	r24, 0x20	; 32
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
    116a:	b3 94       	inc	r11
    116c:	f7 cf       	rjmp	.-18     	; 0x115c <vfprintf+0x314>
    116e:	b2 14       	cp	r11, r2
    1170:	18 f4       	brcc	.+6      	; 0x1178 <vfprintf+0x330>
    1172:	2b 18       	sub	r2, r11
    1174:	02 c0       	rjmp	.+4      	; 0x117a <vfprintf+0x332>
    1176:	98 2c       	mov	r9, r8
    1178:	21 2c       	mov	r2, r1
    117a:	a4 fe       	sbrs	r10, 4
    117c:	10 c0       	rjmp	.+32     	; 0x119e <vfprintf+0x356>
    117e:	b6 01       	movw	r22, r12
    1180:	80 e3       	ldi	r24, 0x30	; 48
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
    1188:	a2 fe       	sbrs	r10, 2
    118a:	17 c0       	rjmp	.+46     	; 0x11ba <vfprintf+0x372>
    118c:	a1 fc       	sbrc	r10, 1
    118e:	03 c0       	rjmp	.+6      	; 0x1196 <vfprintf+0x34e>
    1190:	88 e7       	ldi	r24, 0x78	; 120
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	02 c0       	rjmp	.+4      	; 0x119a <vfprintf+0x352>
    1196:	88 e5       	ldi	r24, 0x58	; 88
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	b6 01       	movw	r22, r12
    119c:	0c c0       	rjmp	.+24     	; 0x11b6 <vfprintf+0x36e>
    119e:	8a 2d       	mov	r24, r10
    11a0:	86 78       	andi	r24, 0x86	; 134
    11a2:	59 f0       	breq	.+22     	; 0x11ba <vfprintf+0x372>
    11a4:	a1 fe       	sbrs	r10, 1
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <vfprintf+0x364>
    11a8:	8b e2       	ldi	r24, 0x2B	; 43
    11aa:	01 c0       	rjmp	.+2      	; 0x11ae <vfprintf+0x366>
    11ac:	80 e2       	ldi	r24, 0x20	; 32
    11ae:	a7 fc       	sbrc	r10, 7
    11b0:	8d e2       	ldi	r24, 0x2D	; 45
    11b2:	b6 01       	movw	r22, r12
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
    11ba:	89 14       	cp	r8, r9
    11bc:	38 f4       	brcc	.+14     	; 0x11cc <vfprintf+0x384>
    11be:	b6 01       	movw	r22, r12
    11c0:	80 e3       	ldi	r24, 0x30	; 48
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
    11c8:	9a 94       	dec	r9
    11ca:	f7 cf       	rjmp	.-18     	; 0x11ba <vfprintf+0x372>
    11cc:	8a 94       	dec	r8
    11ce:	f3 01       	movw	r30, r6
    11d0:	e8 0d       	add	r30, r8
    11d2:	f1 1d       	adc	r31, r1
    11d4:	80 81       	ld	r24, Z
    11d6:	b6 01       	movw	r22, r12
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
    11de:	81 10       	cpse	r8, r1
    11e0:	f5 cf       	rjmp	.-22     	; 0x11cc <vfprintf+0x384>
    11e2:	22 20       	and	r2, r2
    11e4:	09 f4       	brne	.+2      	; 0x11e8 <vfprintf+0x3a0>
    11e6:	42 ce       	rjmp	.-892    	; 0xe6c <vfprintf+0x24>
    11e8:	b6 01       	movw	r22, r12
    11ea:	80 e2       	ldi	r24, 0x20	; 32
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	0e 94 2b 09 	call	0x1256	; 0x1256 <fputc>
    11f2:	2a 94       	dec	r2
    11f4:	f6 cf       	rjmp	.-20     	; 0x11e2 <vfprintf+0x39a>
    11f6:	f6 01       	movw	r30, r12
    11f8:	86 81       	ldd	r24, Z+6	; 0x06
    11fa:	97 81       	ldd	r25, Z+7	; 0x07
    11fc:	02 c0       	rjmp	.+4      	; 0x1202 <vfprintf+0x3ba>
    11fe:	8f ef       	ldi	r24, 0xFF	; 255
    1200:	9f ef       	ldi	r25, 0xFF	; 255
    1202:	2b 96       	adiw	r28, 0x0b	; 11
    1204:	e2 e1       	ldi	r30, 0x12	; 18
    1206:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__epilogue_restores__>

0000120a <strnlen_P>:
    120a:	fc 01       	movw	r30, r24
    120c:	05 90       	lpm	r0, Z+
    120e:	61 50       	subi	r22, 0x01	; 1
    1210:	70 40       	sbci	r23, 0x00	; 0
    1212:	01 10       	cpse	r0, r1
    1214:	d8 f7       	brcc	.-10     	; 0x120c <strnlen_P+0x2>
    1216:	80 95       	com	r24
    1218:	90 95       	com	r25
    121a:	8e 0f       	add	r24, r30
    121c:	9f 1f       	adc	r25, r31
    121e:	08 95       	ret

00001220 <strnlen>:
    1220:	fc 01       	movw	r30, r24
    1222:	61 50       	subi	r22, 0x01	; 1
    1224:	70 40       	sbci	r23, 0x00	; 0
    1226:	01 90       	ld	r0, Z+
    1228:	01 10       	cpse	r0, r1
    122a:	d8 f7       	brcc	.-10     	; 0x1222 <strnlen+0x2>
    122c:	80 95       	com	r24
    122e:	90 95       	com	r25
    1230:	8e 0f       	add	r24, r30
    1232:	9f 1f       	adc	r25, r31
    1234:	08 95       	ret

00001236 <strrev>:
    1236:	dc 01       	movw	r26, r24
    1238:	fc 01       	movw	r30, r24
    123a:	67 2f       	mov	r22, r23
    123c:	71 91       	ld	r23, Z+
    123e:	77 23       	and	r23, r23
    1240:	e1 f7       	brne	.-8      	; 0x123a <strrev+0x4>
    1242:	32 97       	sbiw	r30, 0x02	; 2
    1244:	04 c0       	rjmp	.+8      	; 0x124e <strrev+0x18>
    1246:	7c 91       	ld	r23, X
    1248:	6d 93       	st	X+, r22
    124a:	70 83       	st	Z, r23
    124c:	62 91       	ld	r22, -Z
    124e:	ae 17       	cp	r26, r30
    1250:	bf 07       	cpc	r27, r31
    1252:	c8 f3       	brcs	.-14     	; 0x1246 <strrev+0x10>
    1254:	08 95       	ret

00001256 <fputc>:
    1256:	0f 93       	push	r16
    1258:	1f 93       	push	r17
    125a:	cf 93       	push	r28
    125c:	df 93       	push	r29
    125e:	fb 01       	movw	r30, r22
    1260:	23 81       	ldd	r18, Z+3	; 0x03
    1262:	21 fd       	sbrc	r18, 1
    1264:	03 c0       	rjmp	.+6      	; 0x126c <fputc+0x16>
    1266:	8f ef       	ldi	r24, 0xFF	; 255
    1268:	9f ef       	ldi	r25, 0xFF	; 255
    126a:	2c c0       	rjmp	.+88     	; 0x12c4 <fputc+0x6e>
    126c:	22 ff       	sbrs	r18, 2
    126e:	16 c0       	rjmp	.+44     	; 0x129c <fputc+0x46>
    1270:	46 81       	ldd	r20, Z+6	; 0x06
    1272:	57 81       	ldd	r21, Z+7	; 0x07
    1274:	24 81       	ldd	r18, Z+4	; 0x04
    1276:	35 81       	ldd	r19, Z+5	; 0x05
    1278:	42 17       	cp	r20, r18
    127a:	53 07       	cpc	r21, r19
    127c:	44 f4       	brge	.+16     	; 0x128e <fputc+0x38>
    127e:	a0 81       	ld	r26, Z
    1280:	b1 81       	ldd	r27, Z+1	; 0x01
    1282:	9d 01       	movw	r18, r26
    1284:	2f 5f       	subi	r18, 0xFF	; 255
    1286:	3f 4f       	sbci	r19, 0xFF	; 255
    1288:	31 83       	std	Z+1, r19	; 0x01
    128a:	20 83       	st	Z, r18
    128c:	8c 93       	st	X, r24
    128e:	26 81       	ldd	r18, Z+6	; 0x06
    1290:	37 81       	ldd	r19, Z+7	; 0x07
    1292:	2f 5f       	subi	r18, 0xFF	; 255
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	37 83       	std	Z+7, r19	; 0x07
    1298:	26 83       	std	Z+6, r18	; 0x06
    129a:	14 c0       	rjmp	.+40     	; 0x12c4 <fputc+0x6e>
    129c:	8b 01       	movw	r16, r22
    129e:	ec 01       	movw	r28, r24
    12a0:	fb 01       	movw	r30, r22
    12a2:	00 84       	ldd	r0, Z+8	; 0x08
    12a4:	f1 85       	ldd	r31, Z+9	; 0x09
    12a6:	e0 2d       	mov	r30, r0
    12a8:	09 95       	icall
    12aa:	89 2b       	or	r24, r25
    12ac:	e1 f6       	brne	.-72     	; 0x1266 <fputc+0x10>
    12ae:	d8 01       	movw	r26, r16
    12b0:	16 96       	adiw	r26, 0x06	; 6
    12b2:	8d 91       	ld	r24, X+
    12b4:	9c 91       	ld	r25, X
    12b6:	17 97       	sbiw	r26, 0x07	; 7
    12b8:	01 96       	adiw	r24, 0x01	; 1
    12ba:	17 96       	adiw	r26, 0x07	; 7
    12bc:	9c 93       	st	X, r25
    12be:	8e 93       	st	-X, r24
    12c0:	16 97       	sbiw	r26, 0x06	; 6
    12c2:	ce 01       	movw	r24, r28
    12c4:	df 91       	pop	r29
    12c6:	cf 91       	pop	r28
    12c8:	1f 91       	pop	r17
    12ca:	0f 91       	pop	r16
    12cc:	08 95       	ret

000012ce <__ultoa_invert>:
    12ce:	fa 01       	movw	r30, r20
    12d0:	aa 27       	eor	r26, r26
    12d2:	28 30       	cpi	r18, 0x08	; 8
    12d4:	51 f1       	breq	.+84     	; 0x132a <__ultoa_invert+0x5c>
    12d6:	20 31       	cpi	r18, 0x10	; 16
    12d8:	81 f1       	breq	.+96     	; 0x133a <__ultoa_invert+0x6c>
    12da:	e8 94       	clt
    12dc:	6f 93       	push	r22
    12de:	6e 7f       	andi	r22, 0xFE	; 254
    12e0:	6e 5f       	subi	r22, 0xFE	; 254
    12e2:	7f 4f       	sbci	r23, 0xFF	; 255
    12e4:	8f 4f       	sbci	r24, 0xFF	; 255
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	af 4f       	sbci	r26, 0xFF	; 255
    12ea:	b1 e0       	ldi	r27, 0x01	; 1
    12ec:	3e d0       	rcall	.+124    	; 0x136a <__ultoa_invert+0x9c>
    12ee:	b4 e0       	ldi	r27, 0x04	; 4
    12f0:	3c d0       	rcall	.+120    	; 0x136a <__ultoa_invert+0x9c>
    12f2:	67 0f       	add	r22, r23
    12f4:	78 1f       	adc	r23, r24
    12f6:	89 1f       	adc	r24, r25
    12f8:	9a 1f       	adc	r25, r26
    12fa:	a1 1d       	adc	r26, r1
    12fc:	68 0f       	add	r22, r24
    12fe:	79 1f       	adc	r23, r25
    1300:	8a 1f       	adc	r24, r26
    1302:	91 1d       	adc	r25, r1
    1304:	a1 1d       	adc	r26, r1
    1306:	6a 0f       	add	r22, r26
    1308:	71 1d       	adc	r23, r1
    130a:	81 1d       	adc	r24, r1
    130c:	91 1d       	adc	r25, r1
    130e:	a1 1d       	adc	r26, r1
    1310:	20 d0       	rcall	.+64     	; 0x1352 <__ultoa_invert+0x84>
    1312:	09 f4       	brne	.+2      	; 0x1316 <__ultoa_invert+0x48>
    1314:	68 94       	set
    1316:	3f 91       	pop	r19
    1318:	2a e0       	ldi	r18, 0x0A	; 10
    131a:	26 9f       	mul	r18, r22
    131c:	11 24       	eor	r1, r1
    131e:	30 19       	sub	r19, r0
    1320:	30 5d       	subi	r19, 0xD0	; 208
    1322:	31 93       	st	Z+, r19
    1324:	de f6       	brtc	.-74     	; 0x12dc <__ultoa_invert+0xe>
    1326:	cf 01       	movw	r24, r30
    1328:	08 95       	ret
    132a:	46 2f       	mov	r20, r22
    132c:	47 70       	andi	r20, 0x07	; 7
    132e:	40 5d       	subi	r20, 0xD0	; 208
    1330:	41 93       	st	Z+, r20
    1332:	b3 e0       	ldi	r27, 0x03	; 3
    1334:	0f d0       	rcall	.+30     	; 0x1354 <__ultoa_invert+0x86>
    1336:	c9 f7       	brne	.-14     	; 0x132a <__ultoa_invert+0x5c>
    1338:	f6 cf       	rjmp	.-20     	; 0x1326 <__ultoa_invert+0x58>
    133a:	46 2f       	mov	r20, r22
    133c:	4f 70       	andi	r20, 0x0F	; 15
    133e:	40 5d       	subi	r20, 0xD0	; 208
    1340:	4a 33       	cpi	r20, 0x3A	; 58
    1342:	18 f0       	brcs	.+6      	; 0x134a <__ultoa_invert+0x7c>
    1344:	49 5d       	subi	r20, 0xD9	; 217
    1346:	31 fd       	sbrc	r19, 1
    1348:	40 52       	subi	r20, 0x20	; 32
    134a:	41 93       	st	Z+, r20
    134c:	02 d0       	rcall	.+4      	; 0x1352 <__ultoa_invert+0x84>
    134e:	a9 f7       	brne	.-22     	; 0x133a <__ultoa_invert+0x6c>
    1350:	ea cf       	rjmp	.-44     	; 0x1326 <__ultoa_invert+0x58>
    1352:	b4 e0       	ldi	r27, 0x04	; 4
    1354:	a6 95       	lsr	r26
    1356:	97 95       	ror	r25
    1358:	87 95       	ror	r24
    135a:	77 95       	ror	r23
    135c:	67 95       	ror	r22
    135e:	ba 95       	dec	r27
    1360:	c9 f7       	brne	.-14     	; 0x1354 <__ultoa_invert+0x86>
    1362:	00 97       	sbiw	r24, 0x00	; 0
    1364:	61 05       	cpc	r22, r1
    1366:	71 05       	cpc	r23, r1
    1368:	08 95       	ret
    136a:	9b 01       	movw	r18, r22
    136c:	ac 01       	movw	r20, r24
    136e:	0a 2e       	mov	r0, r26
    1370:	06 94       	lsr	r0
    1372:	57 95       	ror	r21
    1374:	47 95       	ror	r20
    1376:	37 95       	ror	r19
    1378:	27 95       	ror	r18
    137a:	ba 95       	dec	r27
    137c:	c9 f7       	brne	.-14     	; 0x1370 <__ultoa_invert+0xa2>
    137e:	62 0f       	add	r22, r18
    1380:	73 1f       	adc	r23, r19
    1382:	84 1f       	adc	r24, r20
    1384:	95 1f       	adc	r25, r21
    1386:	a0 1d       	adc	r26, r0
    1388:	08 95       	ret

0000138a <__prologue_saves__>:
    138a:	2f 92       	push	r2
    138c:	3f 92       	push	r3
    138e:	4f 92       	push	r4
    1390:	5f 92       	push	r5
    1392:	6f 92       	push	r6
    1394:	7f 92       	push	r7
    1396:	8f 92       	push	r8
    1398:	9f 92       	push	r9
    139a:	af 92       	push	r10
    139c:	bf 92       	push	r11
    139e:	cf 92       	push	r12
    13a0:	df 92       	push	r13
    13a2:	ef 92       	push	r14
    13a4:	ff 92       	push	r15
    13a6:	0f 93       	push	r16
    13a8:	1f 93       	push	r17
    13aa:	cf 93       	push	r28
    13ac:	df 93       	push	r29
    13ae:	cd b7       	in	r28, 0x3d	; 61
    13b0:	de b7       	in	r29, 0x3e	; 62
    13b2:	ca 1b       	sub	r28, r26
    13b4:	db 0b       	sbc	r29, r27
    13b6:	0f b6       	in	r0, 0x3f	; 63
    13b8:	f8 94       	cli
    13ba:	de bf       	out	0x3e, r29	; 62
    13bc:	0f be       	out	0x3f, r0	; 63
    13be:	cd bf       	out	0x3d, r28	; 61
    13c0:	09 94       	ijmp

000013c2 <__epilogue_restores__>:
    13c2:	2a 88       	ldd	r2, Y+18	; 0x12
    13c4:	39 88       	ldd	r3, Y+17	; 0x11
    13c6:	48 88       	ldd	r4, Y+16	; 0x10
    13c8:	5f 84       	ldd	r5, Y+15	; 0x0f
    13ca:	6e 84       	ldd	r6, Y+14	; 0x0e
    13cc:	7d 84       	ldd	r7, Y+13	; 0x0d
    13ce:	8c 84       	ldd	r8, Y+12	; 0x0c
    13d0:	9b 84       	ldd	r9, Y+11	; 0x0b
    13d2:	aa 84       	ldd	r10, Y+10	; 0x0a
    13d4:	b9 84       	ldd	r11, Y+9	; 0x09
    13d6:	c8 84       	ldd	r12, Y+8	; 0x08
    13d8:	df 80       	ldd	r13, Y+7	; 0x07
    13da:	ee 80       	ldd	r14, Y+6	; 0x06
    13dc:	fd 80       	ldd	r15, Y+5	; 0x05
    13de:	0c 81       	ldd	r16, Y+4	; 0x04
    13e0:	1b 81       	ldd	r17, Y+3	; 0x03
    13e2:	aa 81       	ldd	r26, Y+2	; 0x02
    13e4:	b9 81       	ldd	r27, Y+1	; 0x01
    13e6:	ce 0f       	add	r28, r30
    13e8:	d1 1d       	adc	r29, r1
    13ea:	0f b6       	in	r0, 0x3f	; 63
    13ec:	f8 94       	cli
    13ee:	de bf       	out	0x3e, r29	; 62
    13f0:	0f be       	out	0x3f, r0	; 63
    13f2:	cd bf       	out	0x3d, r28	; 61
    13f4:	ed 01       	movw	r28, r26
    13f6:	08 95       	ret

000013f8 <_exit>:
    13f8:	f8 94       	cli

000013fa <__stop_program>:
    13fa:	ff cf       	rjmp	.-2      	; 0x13fa <__stop_program>
