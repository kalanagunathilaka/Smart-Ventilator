
Smart Ventilator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000212a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000bc  00800060  0000212a  000021be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000355  0080011c  0080011c  0000227a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000227a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000022d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  00002314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001992  00000000  00000000  000024a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a37  00000000  00000000  00003e36  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e17  00000000  00000000  0000486d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004cc  00000000  00000000  00005684  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007d6  00000000  00000000  00005b50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001173  00000000  00000000  00006326  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00007499  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
       4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      1c:	0c 94 10 09 	jmp	0x1220	; 0x1220 <__vector_7>
      20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      54:	a3 04       	cpc	r10, r3
      56:	d8 04       	cpc	r13, r8
      58:	0d 05       	cpc	r16, r13
      5a:	42 05       	cpc	r20, r2
      5c:	77 05       	cpc	r23, r7
      5e:	ac 05       	cpc	r26, r12
      60:	e1 05       	cpc	r30, r1
      62:	16 06       	cpc	r1, r22
      64:	4b 06       	cpc	r4, r27
      66:	80 06       	cpc	r8, r16
      68:	b5 06       	cpc	r11, r21
      6a:	ea 06       	cpc	r14, r26
      6c:	1f 07       	cpc	r17, r31
      6e:	5d 08       	sbc	r5, r13
      70:	54 07       	cpc	r21, r20
      72:	89 07       	cpc	r24, r25
      74:	be 07       	cpc	r27, r30
      76:	f3 07       	cpc	r31, r19
      78:	28 08       	sbc	r2, r8

0000007a <__ctors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf e5       	ldi	r28, 0x5F	; 95
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	11 e0       	ldi	r17, 0x01	; 1
      88:	a0 e6       	ldi	r26, 0x60	; 96
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	ea e2       	ldi	r30, 0x2A	; 42
      8e:	f1 e2       	ldi	r31, 0x21	; 33
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	ac 31       	cpi	r26, 0x1C	; 28
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	24 e0       	ldi	r18, 0x04	; 4
      9e:	ac e1       	ldi	r26, 0x1C	; 28
      a0:	b1 e0       	ldi	r27, 0x01	; 1
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	a1 37       	cpi	r26, 0x71	; 113
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
      ac:	0e 94 a3 08 	call	0x1146	; 0x1146 <main>
      b0:	0c 94 93 10 	jmp	0x2126	; 0x2126 <_exit>

000000b4 <__bad_interrupt>:
      b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <delay>:
        return 1;
    }
    //if normal return 1 else notify speaker and gsm
}

void getParametersFromKnobs() {
      b8:	40 e0       	ldi	r20, 0x00	; 0
      ba:	50 e0       	ldi	r21, 0x00	; 0
      bc:	0a c0       	rjmp	.+20     	; 0xd2 <delay+0x1a>
      be:	2f 5f       	subi	r18, 0xFF	; 255
      c0:	3f 4f       	sbci	r19, 0xFF	; 255
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <delay+0x10>
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	29 37       	cpi	r18, 0x79	; 121
      ca:	31 05       	cpc	r19, r1
      cc:	c4 f3       	brlt	.-16     	; 0xbe <delay+0x6>
      ce:	4f 5f       	subi	r20, 0xFF	; 255
      d0:	5f 4f       	sbci	r21, 0xFF	; 255
      d2:	84 17       	cp	r24, r20
      d4:	95 07       	cpc	r25, r21
      d6:	b4 f7       	brge	.-20     	; 0xc4 <delay+0xc>
      d8:	08 95       	ret

000000da <toggle>:
      da:	83 b1       	in	r24, 0x03	; 3
      dc:	82 60       	ori	r24, 0x02	; 2
      de:	83 b9       	out	0x03, r24	; 3
      e0:	84 e8       	ldi	r24, 0x84	; 132
      e2:	86 bf       	out	0x36, r24	; 54
      e4:	06 b6       	in	r0, 0x36	; 54
      e6:	07 fe       	sbrs	r0, 7
      e8:	fd cf       	rjmp	.-6      	; 0xe4 <toggle+0xa>
      ea:	81 e0       	ldi	r24, 0x01	; 1
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay>
      f2:	83 b1       	in	r24, 0x03	; 3
      f4:	8d 7f       	andi	r24, 0xFD	; 253
      f6:	83 b9       	out	0x03, r24	; 3
      f8:	84 e8       	ldi	r24, 0x84	; 132
      fa:	86 bf       	out	0x36, r24	; 54
      fc:	06 b6       	in	r0, 0x36	; 54
      fe:	07 fe       	sbrs	r0, 7
     100:	fd cf       	rjmp	.-6      	; 0xfc <toggle+0x22>
     102:	08 95       	ret

00000104 <lcd_cmd_hf>:
     104:	93 b1       	in	r25, 0x03	; 3
     106:	9e 7f       	andi	r25, 0xFE	; 254
     108:	93 b9       	out	0x03, r25	; 3
     10a:	94 e8       	ldi	r25, 0x84	; 132
     10c:	96 bf       	out	0x36, r25	; 54
     10e:	06 b6       	in	r0, 0x36	; 54
     110:	07 fe       	sbrs	r0, 7
     112:	fd cf       	rjmp	.-6      	; 0x10e <lcd_cmd_hf+0xa>
     114:	93 b1       	in	r25, 0x03	; 3
     116:	9f 70       	andi	r25, 0x0F	; 15
     118:	93 b9       	out	0x03, r25	; 3
     11a:	94 e8       	ldi	r25, 0x84	; 132
     11c:	96 bf       	out	0x36, r25	; 54
     11e:	06 b6       	in	r0, 0x36	; 54
     120:	07 fe       	sbrs	r0, 7
     122:	fd cf       	rjmp	.-6      	; 0x11e <lcd_cmd_hf+0x1a>
     124:	93 b1       	in	r25, 0x03	; 3
     126:	80 7f       	andi	r24, 0xF0	; 240
     128:	89 2b       	or	r24, r25
     12a:	83 b9       	out	0x03, r24	; 3
     12c:	84 e8       	ldi	r24, 0x84	; 132
     12e:	86 bf       	out	0x36, r24	; 54
     130:	06 b6       	in	r0, 0x36	; 54
     132:	07 fe       	sbrs	r0, 7
     134:	fd cf       	rjmp	.-6      	; 0x130 <lcd_cmd_hf+0x2c>
     136:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     13a:	08 95       	ret

0000013c <lcd_cmd>:
     13c:	cf 93       	push	r28
     13e:	c8 2f       	mov	r28, r24
     140:	83 b1       	in	r24, 0x03	; 3
     142:	8e 7f       	andi	r24, 0xFE	; 254
     144:	83 b9       	out	0x03, r24	; 3
     146:	84 e8       	ldi	r24, 0x84	; 132
     148:	86 bf       	out	0x36, r24	; 54
     14a:	06 b6       	in	r0, 0x36	; 54
     14c:	07 fe       	sbrs	r0, 7
     14e:	fd cf       	rjmp	.-6      	; 0x14a <lcd_cmd+0xe>
     150:	83 b1       	in	r24, 0x03	; 3
     152:	8f 70       	andi	r24, 0x0F	; 15
     154:	83 b9       	out	0x03, r24	; 3
     156:	84 e8       	ldi	r24, 0x84	; 132
     158:	86 bf       	out	0x36, r24	; 54
     15a:	06 b6       	in	r0, 0x36	; 54
     15c:	07 fe       	sbrs	r0, 7
     15e:	fd cf       	rjmp	.-6      	; 0x15a <lcd_cmd+0x1e>
     160:	83 b1       	in	r24, 0x03	; 3
     162:	9c 2f       	mov	r25, r28
     164:	90 7f       	andi	r25, 0xF0	; 240
     166:	89 2b       	or	r24, r25
     168:	83 b9       	out	0x03, r24	; 3
     16a:	84 e8       	ldi	r24, 0x84	; 132
     16c:	86 bf       	out	0x36, r24	; 54
     16e:	06 b6       	in	r0, 0x36	; 54
     170:	07 fe       	sbrs	r0, 7
     172:	fd cf       	rjmp	.-6      	; 0x16e <lcd_cmd+0x32>
     174:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     178:	83 b1       	in	r24, 0x03	; 3
     17a:	8f 70       	andi	r24, 0x0F	; 15
     17c:	83 b9       	out	0x03, r24	; 3
     17e:	84 e8       	ldi	r24, 0x84	; 132
     180:	86 bf       	out	0x36, r24	; 54
     182:	06 b6       	in	r0, 0x36	; 54
     184:	07 fe       	sbrs	r0, 7
     186:	fd cf       	rjmp	.-6      	; 0x182 <lcd_cmd+0x46>
     188:	23 b1       	in	r18, 0x03	; 3
     18a:	30 e1       	ldi	r19, 0x10	; 16
     18c:	c3 9f       	mul	r28, r19
     18e:	c0 01       	movw	r24, r0
     190:	11 24       	eor	r1, r1
     192:	82 2b       	or	r24, r18
     194:	83 b9       	out	0x03, r24	; 3
     196:	84 e8       	ldi	r24, 0x84	; 132
     198:	86 bf       	out	0x36, r24	; 54
     19a:	06 b6       	in	r0, 0x36	; 54
     19c:	07 fe       	sbrs	r0, 7
     19e:	fd cf       	rjmp	.-6      	; 0x19a <lcd_cmd+0x5e>
     1a0:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     1a4:	cf 91       	pop	r28
     1a6:	08 95       	ret

000001a8 <lcd_init>:
     1a8:	80 e3       	ldi	r24, 0x30	; 48
     1aa:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1ae:	80 e3       	ldi	r24, 0x30	; 48
     1b0:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1b4:	80 e2       	ldi	r24, 0x20	; 32
     1b6:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1ba:	88 e2       	ldi	r24, 0x28	; 40
     1bc:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1c0:	8c e0       	ldi	r24, 0x0C	; 12
     1c2:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1cc:	86 e0       	ldi	r24, 0x06	; 6
     1ce:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1d2:	80 e8       	ldi	r24, 0x80	; 128
     1d4:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1d8:	08 95       	ret

000001da <lcd_dwr>:
     1da:	cf 93       	push	r28
     1dc:	c8 2f       	mov	r28, r24
     1de:	83 b1       	in	r24, 0x03	; 3
     1e0:	81 60       	ori	r24, 0x01	; 1
     1e2:	83 b9       	out	0x03, r24	; 3
     1e4:	84 e8       	ldi	r24, 0x84	; 132
     1e6:	86 bf       	out	0x36, r24	; 54
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <lcd_dwr+0xe>
     1ee:	83 b1       	in	r24, 0x03	; 3
     1f0:	8f 70       	andi	r24, 0x0F	; 15
     1f2:	83 b9       	out	0x03, r24	; 3
     1f4:	84 e8       	ldi	r24, 0x84	; 132
     1f6:	86 bf       	out	0x36, r24	; 54
     1f8:	06 b6       	in	r0, 0x36	; 54
     1fa:	07 fe       	sbrs	r0, 7
     1fc:	fd cf       	rjmp	.-6      	; 0x1f8 <lcd_dwr+0x1e>
     1fe:	83 b1       	in	r24, 0x03	; 3
     200:	9c 2f       	mov	r25, r28
     202:	90 7f       	andi	r25, 0xF0	; 240
     204:	89 2b       	or	r24, r25
     206:	83 b9       	out	0x03, r24	; 3
     208:	84 e8       	ldi	r24, 0x84	; 132
     20a:	86 bf       	out	0x36, r24	; 54
     20c:	06 b6       	in	r0, 0x36	; 54
     20e:	07 fe       	sbrs	r0, 7
     210:	fd cf       	rjmp	.-6      	; 0x20c <lcd_dwr+0x32>
     212:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     216:	83 b1       	in	r24, 0x03	; 3
     218:	8f 70       	andi	r24, 0x0F	; 15
     21a:	83 b9       	out	0x03, r24	; 3
     21c:	84 e8       	ldi	r24, 0x84	; 132
     21e:	86 bf       	out	0x36, r24	; 54
     220:	06 b6       	in	r0, 0x36	; 54
     222:	07 fe       	sbrs	r0, 7
     224:	fd cf       	rjmp	.-6      	; 0x220 <lcd_dwr+0x46>
     226:	23 b1       	in	r18, 0x03	; 3
     228:	30 e1       	ldi	r19, 0x10	; 16
     22a:	c3 9f       	mul	r28, r19
     22c:	c0 01       	movw	r24, r0
     22e:	11 24       	eor	r1, r1
     230:	82 2b       	or	r24, r18
     232:	83 b9       	out	0x03, r24	; 3
     234:	84 e8       	ldi	r24, 0x84	; 132
     236:	86 bf       	out	0x36, r24	; 54
     238:	06 b6       	in	r0, 0x36	; 54
     23a:	07 fe       	sbrs	r0, 7
     23c:	fd cf       	rjmp	.-6      	; 0x238 <lcd_dwr+0x5e>
     23e:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     242:	cf 91       	pop	r28
     244:	08 95       	ret

00000246 <lcd_msg>:
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	ec 01       	movw	r28, r24
     24c:	03 c0       	rjmp	.+6      	; 0x254 <lcd_msg+0xe>
     24e:	21 96       	adiw	r28, 0x01	; 1
     250:	0e 94 ed 00 	call	0x1da	; 0x1da <lcd_dwr>
     254:	88 81       	ld	r24, Y
     256:	81 11       	cpse	r24, r1
     258:	fa cf       	rjmp	.-12     	; 0x24e <lcd_msg+0x8>
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <i2c_init>:
     260:	82 e6       	ldi	r24, 0x62	; 98
     262:	80 b9       	out	0x00, r24	; 0
     264:	84 e0       	ldi	r24, 0x04	; 4
     266:	86 bf       	out	0x36, r24	; 54
     268:	11 b8       	out	0x01, r1	; 1
     26a:	08 95       	ret

0000026c <i2c_start>:
     26c:	84 ea       	ldi	r24, 0xA4	; 164
     26e:	86 bf       	out	0x36, r24	; 54
     270:	06 b6       	in	r0, 0x36	; 54
     272:	07 fe       	sbrs	r0, 7
     274:	fd cf       	rjmp	.-6      	; 0x270 <i2c_start+0x4>
     276:	08 95       	ret

00000278 <i2c_write>:
     278:	83 b9       	out	0x03, r24	; 3
     27a:	84 e8       	ldi	r24, 0x84	; 132
     27c:	86 bf       	out	0x36, r24	; 54
     27e:	06 b6       	in	r0, 0x36	; 54
     280:	07 fe       	sbrs	r0, 7
     282:	fd cf       	rjmp	.-6      	; 0x27e <i2c_write+0x6>
     284:	08 95       	ret

00000286 <USART_Init>:
     286:	2a b1       	in	r18, 0x0a	; 10
     288:	28 69       	ori	r18, 0x98	; 152
     28a:	2a b9       	out	0x0a, r18	; 10
     28c:	20 b5       	in	r18, 0x20	; 32
     28e:	26 68       	ori	r18, 0x86	; 134
     290:	20 bd       	out	0x20, r18	; 32
     292:	dc 01       	movw	r26, r24
     294:	cb 01       	movw	r24, r22
     296:	88 0f       	add	r24, r24
     298:	99 1f       	adc	r25, r25
     29a:	aa 1f       	adc	r26, r26
     29c:	bb 1f       	adc	r27, r27
     29e:	88 0f       	add	r24, r24
     2a0:	99 1f       	adc	r25, r25
     2a2:	aa 1f       	adc	r26, r26
     2a4:	bb 1f       	adc	r27, r27
     2a6:	9c 01       	movw	r18, r24
     2a8:	ad 01       	movw	r20, r26
     2aa:	22 0f       	add	r18, r18
     2ac:	33 1f       	adc	r19, r19
     2ae:	44 1f       	adc	r20, r20
     2b0:	55 1f       	adc	r21, r21
     2b2:	22 0f       	add	r18, r18
     2b4:	33 1f       	adc	r19, r19
     2b6:	44 1f       	adc	r20, r20
     2b8:	55 1f       	adc	r21, r21
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	72 e1       	ldi	r23, 0x12	; 18
     2be:	8a e7       	ldi	r24, 0x7A	; 122
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	0e 94 05 0c 	call	0x180a	; 0x180a <__udivmodsi4>
     2c6:	8f ef       	ldi	r24, 0xFF	; 255
     2c8:	82 0f       	add	r24, r18
     2ca:	89 b9       	out	0x09, r24	; 9
     2cc:	da 01       	movw	r26, r20
     2ce:	c9 01       	movw	r24, r18
     2d0:	01 97       	sbiw	r24, 0x01	; 1
     2d2:	a1 09       	sbc	r26, r1
     2d4:	b1 09       	sbc	r27, r1
     2d6:	89 2f       	mov	r24, r25
     2d8:	9a 2f       	mov	r25, r26
     2da:	ab 2f       	mov	r26, r27
     2dc:	bb 27       	eor	r27, r27
     2de:	80 bd       	out	0x20, r24	; 32
     2e0:	08 95       	ret

000002e2 <USART_TxChar>:
     2e2:	8c b9       	out	0x0c, r24	; 12
     2e4:	5d 9b       	sbis	0x0b, 5	; 11
     2e6:	fe cf       	rjmp	.-4      	; 0x2e4 <USART_TxChar+0x2>
     2e8:	08 95       	ret

000002ea <USART_SendString>:
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	8c 01       	movw	r16, r24
     2f4:	c0 e0       	ldi	r28, 0x00	; 0
     2f6:	d0 e0       	ldi	r29, 0x00	; 0
     2f8:	03 c0       	rjmp	.+6      	; 0x300 <USART_SendString+0x16>
     2fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <USART_TxChar>
     2fe:	21 96       	adiw	r28, 0x01	; 1
     300:	f8 01       	movw	r30, r16
     302:	ec 0f       	add	r30, r28
     304:	fd 1f       	adc	r31, r29
     306:	80 81       	ld	r24, Z
     308:	81 11       	cpse	r24, r1
     30a:	f7 cf       	rjmp	.-18     	; 0x2fa <USART_SendString+0x10>
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	0f 91       	pop	r16
     314:	08 95       	ret

00000316 <GSMConnect>:
     316:	0f 93       	push	r16
     318:	1f 93       	push	r17
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	c4 56       	subi	r28, 0x64	; 100
     324:	d1 09       	sbc	r29, r1
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	8e e6       	ldi	r24, 0x6E	; 110
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     338:	8f e1       	ldi	r24, 0x1F	; 31
     33a:	9e e4       	ldi	r25, 0x4E	; 78
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	f1 f7       	brne	.-4      	; 0x33c <GSMConnect+0x26>
     340:	00 c0       	rjmp	.+0      	; 0x342 <GSMConnect+0x2c>
     342:	00 00       	nop
     344:	84 e7       	ldi	r24, 0x74	; 116
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	9f 93       	push	r25
     34a:	8f 93       	push	r24
     34c:	9f 93       	push	r25
     34e:	8f 93       	push	r24
     350:	8c e7       	ldi	r24, 0x7C	; 124
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	9f 93       	push	r25
     356:	8f 93       	push	r24
     358:	83 e8       	ldi	r24, 0x83	; 131
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	9f 93       	push	r25
     35e:	8f 93       	push	r24
     360:	8e 01       	movw	r16, r28
     362:	0f 5f       	subi	r16, 0xFF	; 255
     364:	1f 4f       	sbci	r17, 0xFF	; 255
     366:	1f 93       	push	r17
     368:	0f 93       	push	r16
     36a:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <sprintf>
     36e:	c8 01       	movw	r24, r16
     370:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     374:	84 e6       	ldi	r24, 0x64	; 100
     376:	ec e1       	ldi	r30, 0x1C	; 28
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	df 01       	movw	r26, r30
     37c:	1d 92       	st	X+, r1
     37e:	8a 95       	dec	r24
     380:	e9 f7       	brne	.-6      	; 0x37c <GSMConnect+0x66>
     382:	8f e1       	ldi	r24, 0x1F	; 31
     384:	9e e4       	ldi	r25, 0x4E	; 78
     386:	01 97       	sbiw	r24, 0x01	; 1
     388:	f1 f7       	brne	.-4      	; 0x386 <GSMConnect+0x70>
     38a:	00 c0       	rjmp	.+0      	; 0x38c <GSMConnect+0x76>
     38c:	00 00       	nop
     38e:	8b e9       	ldi	r24, 0x9B	; 155
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	de bf       	out	0x3e, r29	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	cd bf       	out	0x3d, r28	; 61
     3a0:	cc 59       	subi	r28, 0x9C	; 156
     3a2:	df 4f       	sbci	r29, 0xFF	; 255
     3a4:	0f b6       	in	r0, 0x3f	; 63
     3a6:	f8 94       	cli
     3a8:	de bf       	out	0x3e, r29	; 62
     3aa:	0f be       	out	0x3f, r0	; 63
     3ac:	cd bf       	out	0x3d, r28	; 61
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	1f 91       	pop	r17
     3b4:	0f 91       	pop	r16
     3b6:	08 95       	ret

000003b8 <delay_ms>:
     3b8:	20 e0       	ldi	r18, 0x00	; 0
     3ba:	30 e0       	ldi	r19, 0x00	; 0
     3bc:	4a e7       	ldi	r20, 0x7A	; 122
     3be:	54 e4       	ldi	r21, 0x44	; 68
     3c0:	0e 94 29 0b 	call	0x1652	; 0x1652 <__mulsf3>
     3c4:	0e 94 3c 0a 	call	0x1478	; 0x1478 <__fixsfsi>
     3c8:	06 c0       	rjmp	.+12     	; 0x3d6 <delay_ms+0x1e>
     3ca:	82 e0       	ldi	r24, 0x02	; 2
     3cc:	8a 95       	dec	r24
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <delay_ms+0x14>
     3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <delay_ms+0x1a>
     3d2:	61 50       	subi	r22, 0x01	; 1
     3d4:	71 09       	sbc	r23, r1
     3d6:	16 16       	cp	r1, r22
     3d8:	17 06       	cpc	r1, r23
     3da:	bc f3       	brlt	.-18     	; 0x3ca <delay_ms+0x12>
     3dc:	08 95       	ret

000003de <openSolenoidValves>:
     3de:	8f 92       	push	r8
     3e0:	9f 92       	push	r9
     3e2:	af 92       	push	r10
     3e4:	bf 92       	push	r11
     3e6:	cf 92       	push	r12
     3e8:	df 92       	push	r13
     3ea:	ef 92       	push	r14
     3ec:	ff 92       	push	r15
     3ee:	69 01       	movw	r12, r18
     3f0:	7a 01       	movw	r14, r20
     3f2:	20 e0       	ldi	r18, 0x00	; 0
     3f4:	30 e0       	ldi	r19, 0x00	; 0
     3f6:	4a e7       	ldi	r20, 0x7A	; 122
     3f8:	54 e4       	ldi	r21, 0x44	; 68
     3fa:	0e 94 29 0b 	call	0x1652	; 0x1652 <__mulsf3>
     3fe:	4b 01       	movw	r8, r22
     400:	5c 01       	movw	r10, r24
     402:	20 e0       	ldi	r18, 0x00	; 0
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	4a e7       	ldi	r20, 0x7A	; 122
     408:	54 e4       	ldi	r21, 0x44	; 68
     40a:	c7 01       	movw	r24, r14
     40c:	b6 01       	movw	r22, r12
     40e:	0e 94 29 0b 	call	0x1652	; 0x1652 <__mulsf3>
     412:	6b 01       	movw	r12, r22
     414:	7c 01       	movw	r14, r24
     416:	9b 01       	movw	r18, r22
     418:	ac 01       	movw	r20, r24
     41a:	c5 01       	movw	r24, r10
     41c:	b4 01       	movw	r22, r8
     41e:	0e 94 24 0b 	call	0x1648	; 0x1648 <__gesf2>
     422:	18 16       	cp	r1, r24
     424:	ec f4       	brge	.+58     	; 0x460 <__EEPROM_REGION_LENGTH__+0x60>
     426:	85 b3       	in	r24, 0x15	; 21
     428:	84 60       	ori	r24, 0x04	; 4
     42a:	85 bb       	out	0x15, r24	; 21
     42c:	85 b3       	in	r24, 0x15	; 21
     42e:	87 7f       	andi	r24, 0xF7	; 247
     430:	85 bb       	out	0x15, r24	; 21
     432:	c7 01       	movw	r24, r14
     434:	b6 01       	movw	r22, r12
     436:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <delay_ms>
     43a:	85 b3       	in	r24, 0x15	; 21
     43c:	8b 7f       	andi	r24, 0xFB	; 251
     43e:	85 bb       	out	0x15, r24	; 21
     440:	a7 01       	movw	r20, r14
     442:	96 01       	movw	r18, r12
     444:	c5 01       	movw	r24, r10
     446:	b4 01       	movw	r22, r8
     448:	0e 94 58 09 	call	0x12b0	; 0x12b0 <__subsf3>
     44c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <delay_ms>
     450:	85 b3       	in	r24, 0x15	; 21
     452:	88 60       	ori	r24, 0x08	; 8
     454:	85 bb       	out	0x15, r24	; 21
     456:	c5 01       	movw	r24, r10
     458:	b4 01       	movw	r22, r8
     45a:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <delay_ms>
     45e:	1c c0       	rjmp	.+56     	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
     460:	85 b3       	in	r24, 0x15	; 21
     462:	84 60       	ori	r24, 0x04	; 4
     464:	85 bb       	out	0x15, r24	; 21
     466:	85 b3       	in	r24, 0x15	; 21
     468:	87 7f       	andi	r24, 0xF7	; 247
     46a:	85 bb       	out	0x15, r24	; 21
     46c:	c5 01       	movw	r24, r10
     46e:	b4 01       	movw	r22, r8
     470:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <delay_ms>
     474:	85 b3       	in	r24, 0x15	; 21
     476:	8b 7f       	andi	r24, 0xFB	; 251
     478:	85 bb       	out	0x15, r24	; 21
     47a:	a5 01       	movw	r20, r10
     47c:	94 01       	movw	r18, r8
     47e:	c7 01       	movw	r24, r14
     480:	b6 01       	movw	r22, r12
     482:	0e 94 58 09 	call	0x12b0	; 0x12b0 <__subsf3>
     486:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <delay_ms>
     48a:	85 b3       	in	r24, 0x15	; 21
     48c:	88 60       	ori	r24, 0x08	; 8
     48e:	85 bb       	out	0x15, r24	; 21
     490:	c7 01       	movw	r24, r14
     492:	b6 01       	movw	r22, r12
     494:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <delay_ms>
     498:	ff 90       	pop	r15
     49a:	ef 90       	pop	r14
     49c:	df 90       	pop	r13
     49e:	cf 90       	pop	r12
     4a0:	bf 90       	pop	r11
     4a2:	af 90       	pop	r10
     4a4:	9f 90       	pop	r9
     4a6:	8f 90       	pop	r8
     4a8:	08 95       	ret

000004aa <getOxygenTankPressure>:
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	70 e0       	ldi	r23, 0x00	; 0
     4ae:	cb 01       	movw	r24, r22
     4b0:	08 95       	ret

000004b2 <controlSolenoidValve>:
     4b2:	4f 92       	push	r4
     4b4:	5f 92       	push	r5
     4b6:	6f 92       	push	r6
     4b8:	7f 92       	push	r7
     4ba:	8f 92       	push	r8
     4bc:	9f 92       	push	r9
     4be:	af 92       	push	r10
     4c0:	bf 92       	push	r11
     4c2:	cf 92       	push	r12
     4c4:	df 92       	push	r13
     4c6:	ef 92       	push	r14
     4c8:	ff 92       	push	r15
     4ca:	6b 01       	movw	r12, r22
     4cc:	7c 01       	movw	r14, r24
     4ce:	ba 01       	movw	r22, r20
     4d0:	55 0f       	add	r21, r21
     4d2:	88 0b       	sbc	r24, r24
     4d4:	99 0b       	sbc	r25, r25
     4d6:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__floatsisf>
     4da:	9b 01       	movw	r18, r22
     4dc:	ac 01       	movw	r20, r24
     4de:	60 e0       	ldi	r22, 0x00	; 0
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	80 ef       	ldi	r24, 0xF0	; 240
     4e4:	91 e4       	ldi	r25, 0x41	; 65
     4e6:	0e 94 ca 09 	call	0x1394	; 0x1394 <__divsf3>
     4ea:	4b 01       	movw	r8, r22
     4ec:	5c 01       	movw	r10, r24
     4ee:	2a e4       	ldi	r18, 0x4A	; 74
     4f0:	3c e0       	ldi	r19, 0x0C	; 12
     4f2:	42 ea       	ldi	r20, 0xA2	; 162
     4f4:	5f e3       	ldi	r21, 0x3F	; 63
     4f6:	c7 01       	movw	r24, r14
     4f8:	b6 01       	movw	r22, r12
     4fa:	0e 94 29 0b 	call	0x1652	; 0x1652 <__mulsf3>
     4fe:	29 e2       	ldi	r18, 0x29	; 41
     500:	3c e5       	ldi	r19, 0x5C	; 92
     502:	45 ed       	ldi	r20, 0xD5	; 213
     504:	51 e4       	ldi	r21, 0x41	; 65
     506:	0e 94 58 09 	call	0x12b0	; 0x12b0 <__subsf3>
     50a:	21 e7       	ldi	r18, 0x71	; 113
     50c:	3d e3       	ldi	r19, 0x3D	; 61
     50e:	4a e4       	ldi	r20, 0x4A	; 74
     510:	5f e3       	ldi	r21, 0x3F	; 63
     512:	0e 94 29 0b 	call	0x1652	; 0x1652 <__mulsf3>
     516:	2b 01       	movw	r4, r22
     518:	3c 01       	movw	r6, r24
     51a:	a7 01       	movw	r20, r14
     51c:	96 01       	movw	r18, r12
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	70 e0       	ldi	r23, 0x00	; 0
     522:	88 ec       	ldi	r24, 0xC8	; 200
     524:	92 e4       	ldi	r25, 0x42	; 66
     526:	0e 94 58 09 	call	0x12b0	; 0x12b0 <__subsf3>
     52a:	9b 01       	movw	r18, r22
     52c:	ac 01       	movw	r20, r24
     52e:	c3 01       	movw	r24, r6
     530:	b2 01       	movw	r22, r4
     532:	0e 94 ca 09 	call	0x1394	; 0x1394 <__divsf3>
     536:	2b 01       	movw	r4, r22
     538:	3c 01       	movw	r6, r24
     53a:	0e 94 55 02 	call	0x4aa	; 0x4aa <getOxygenTankPressure>
     53e:	9b 01       	movw	r18, r22
     540:	ac 01       	movw	r20, r24
     542:	68 ed       	ldi	r22, 0xD8	; 216
     544:	73 e1       	ldi	r23, 0x13	; 19
     546:	86 e0       	ldi	r24, 0x06	; 6
     548:	98 e4       	ldi	r25, 0x48	; 72
     54a:	0e 94 ca 09 	call	0x1394	; 0x1394 <__divsf3>
     54e:	6b 01       	movw	r12, r22
     550:	7c 01       	movw	r14, r24
     552:	2d ec       	ldi	r18, 0xCD	; 205
     554:	3c ec       	ldi	r19, 0xCC	; 204
     556:	4c e9       	ldi	r20, 0x9C	; 156
     558:	5f e3       	ldi	r21, 0x3F	; 63
     55a:	c7 01       	movw	r24, r14
     55c:	b6 01       	movw	r22, r12
     55e:	0e 94 ca 09 	call	0x1394	; 0x1394 <__divsf3>
     562:	0e 94 9c 0b 	call	0x1738	; 0x1738 <sqrt>
     566:	9b 01       	movw	r18, r22
     568:	ac 01       	movw	r20, r24
     56a:	c3 01       	movw	r24, r6
     56c:	b2 01       	movw	r22, r4
     56e:	0e 94 29 0b 	call	0x1652	; 0x1652 <__mulsf3>
     572:	6b 01       	movw	r12, r22
     574:	7c 01       	movw	r14, r24
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	40 e8       	ldi	r20, 0x80	; 128
     57c:	5f e3       	ldi	r21, 0x3F	; 63
     57e:	0e 94 24 0b 	call	0x1648	; 0x1648 <__gesf2>
     582:	18 16       	cp	r1, r24
     584:	5c f4       	brge	.+22     	; 0x59c <controlSolenoidValve+0xea>
     586:	a7 01       	movw	r20, r14
     588:	96 01       	movw	r18, r12
     58a:	c5 01       	movw	r24, r10
     58c:	b4 01       	movw	r22, r8
     58e:	0e 94 ca 09 	call	0x1394	; 0x1394 <__divsf3>
     592:	a5 01       	movw	r20, r10
     594:	94 01       	movw	r18, r8
     596:	0e 94 ef 01 	call	0x3de	; 0x3de <openSolenoidValves>
     59a:	0c c0       	rjmp	.+24     	; 0x5b4 <controlSolenoidValve+0x102>
     59c:	a7 01       	movw	r20, r14
     59e:	96 01       	movw	r18, r12
     5a0:	c5 01       	movw	r24, r10
     5a2:	b4 01       	movw	r22, r8
     5a4:	0e 94 29 0b 	call	0x1652	; 0x1652 <__mulsf3>
     5a8:	9b 01       	movw	r18, r22
     5aa:	ac 01       	movw	r20, r24
     5ac:	c5 01       	movw	r24, r10
     5ae:	b4 01       	movw	r22, r8
     5b0:	0e 94 ef 01 	call	0x3de	; 0x3de <openSolenoidValves>
     5b4:	ff 90       	pop	r15
     5b6:	ef 90       	pop	r14
     5b8:	df 90       	pop	r13
     5ba:	cf 90       	pop	r12
     5bc:	bf 90       	pop	r11
     5be:	af 90       	pop	r10
     5c0:	9f 90       	pop	r9
     5c2:	8f 90       	pop	r8
     5c4:	7f 90       	pop	r7
     5c6:	6f 90       	pop	r6
     5c8:	5f 90       	pop	r5
     5ca:	4f 90       	pop	r4
     5cc:	08 95       	ret

000005ce <checkBloodOxygenLevel>:
     5ce:	80 e0       	ldi	r24, 0x00	; 0
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	08 95       	ret

000005d4 <PatientTemp>:
     5d4:	85 e2       	ldi	r24, 0x25	; 37
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	08 95       	ret

000005da <automationOn>:
    //get values and update  Breath per min,Oxygen Percentage,Breath Length
}

bool automationOn() {
    return 1;//Check Automation On/Off
}
     5da:	81 e0       	ldi	r24, 0x01	; 1
     5dc:	08 95       	ret

000005de <turnOn>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	08 95       	ret

000005e2 <notifyDisplay>:
        } else { return 1; }
    }else{return 0;}
}

void notifyDisplay(const char *string) {
   lcd_msg(string);
     5e2:	0e 94 23 01 	call	0x246	; 0x246 <lcd_msg>
     5e6:	08 95       	ret

000005e8 <concatS>:
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
}
const char *concatS(const char *string, char sPercentage[4]) {
     5e8:	ef 92       	push	r14
     5ea:	ff 92       	push	r15
     5ec:	0f 93       	push	r16
     5ee:	1f 93       	push	r17
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
     5f4:	8c 01       	movw	r16, r24
     5f6:	eb 01       	movw	r28, r22
    char *result = malloc(strlen(string) + strlen(sPercentage) + 1);
     5f8:	fc 01       	movw	r30, r24
     5fa:	01 90       	ld	r0, Z+
     5fc:	00 20       	and	r0, r0
     5fe:	e9 f7       	brne	.-6      	; 0x5fa <concatS+0x12>
     600:	31 97       	sbiw	r30, 0x01	; 1
     602:	cf 01       	movw	r24, r30
     604:	80 1b       	sub	r24, r16
     606:	91 0b       	sbc	r25, r17
     608:	fb 01       	movw	r30, r22
     60a:	01 90       	ld	r0, Z+
     60c:	00 20       	and	r0, r0
     60e:	e9 f7       	brne	.-6      	; 0x60a <concatS+0x22>
     610:	31 97       	sbiw	r30, 0x01	; 1
     612:	e6 1b       	sub	r30, r22
     614:	f7 0b       	sbc	r31, r23
     616:	8e 0f       	add	r24, r30
     618:	9f 1f       	adc	r25, r31
     61a:	01 96       	adiw	r24, 0x01	; 1
     61c:	0e 94 41 0c 	call	0x1882	; 0x1882 <malloc>
     620:	7c 01       	movw	r14, r24
    strcpy(result, string);
     622:	b8 01       	movw	r22, r16
     624:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <strcpy>
    strcat(result, sPercentage);
     628:	be 01       	movw	r22, r28
     62a:	c7 01       	movw	r24, r14
     62c:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <strcat>
    return result;
}
     630:	c7 01       	movw	r24, r14
     632:	df 91       	pop	r29
     634:	cf 91       	pop	r28
     636:	1f 91       	pop	r17
     638:	0f 91       	pop	r16
     63a:	ff 90       	pop	r15
     63c:	ef 90       	pop	r14
     63e:	08 95       	ret

00000640 <sendSMS>:




void sendSMS(char no[], const char *string) {
     640:	bf 92       	push	r11
     642:	cf 92       	push	r12
     644:	df 92       	push	r13
     646:	ef 92       	push	r14
     648:	ff 92       	push	r15
     64a:	0f 93       	push	r16
     64c:	1f 93       	push	r17
     64e:	cf 93       	push	r28
     650:	df 93       	push	r29
     652:	cd b7       	in	r28, 0x3d	; 61
     654:	de b7       	in	r29, 0x3e	; 62
     656:	c4 56       	subi	r28, 0x64	; 100
     658:	d1 09       	sbc	r29, r1
     65a:	0f b6       	in	r0, 0x3f	; 63
     65c:	f8 94       	cli
     65e:	de bf       	out	0x3e, r29	; 62
     660:	0f be       	out	0x3f, r0	; 63
     662:	cd bf       	out	0x3d, r28	; 61
     664:	18 2f       	mov	r17, r24
     666:	09 2f       	mov	r16, r25
     668:	c6 2e       	mov	r12, r22
     66a:	b7 2e       	mov	r11, r23
    USART_SendString("AT\r");
     66c:	89 ea       	ldi	r24, 0xA9	; 169
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     674:	8f e1       	ldi	r24, 0x1F	; 31
     676:	9e e4       	ldi	r25, 0x4E	; 78
     678:	01 97       	sbiw	r24, 0x01	; 1
     67a:	f1 f7       	brne	.-4      	; 0x678 <sendSMS+0x38>
     67c:	00 c0       	rjmp	.+0      	; 0x67e <sendSMS+0x3e>
     67e:	00 00       	nop
    _delay_ms(10);
    USART_SendString("AT+CMGF=1\r");
     680:	8d ea       	ldi	r24, 0xAD	; 173
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     688:	ef e1       	ldi	r30, 0x1F	; 31
     68a:	fe e4       	ldi	r31, 0x4E	; 78
     68c:	31 97       	sbiw	r30, 0x01	; 1
     68e:	f1 f7       	brne	.-4      	; 0x68c <sendSMS+0x4c>
     690:	00 c0       	rjmp	.+0      	; 0x692 <sendSMS+0x52>
     692:	00 00       	nop
    _delay_ms(10);
    char data_buffer[100];
    sprintf(data_buffer,"AT+CMGS=%s\r",no);
     694:	0f 93       	push	r16
     696:	1f 93       	push	r17
     698:	88 eb       	ldi	r24, 0xB8	; 184
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	9f 93       	push	r25
     69e:	8f 93       	push	r24
     6a0:	8e 01       	movw	r16, r28
     6a2:	0f 5f       	subi	r16, 0xFF	; 255
     6a4:	1f 4f       	sbci	r17, 0xFF	; 255
     6a6:	1f 93       	push	r17
     6a8:	0f 93       	push	r16
     6aa:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <sprintf>
    USART_SendString(data_buffer);
     6ae:	c8 01       	movw	r24, r16
     6b0:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
    memset(USART_BUFFER, 0, 100);
     6b4:	0f 2e       	mov	r0, r31
     6b6:	fc e1       	ldi	r31, 0x1C	; 28
     6b8:	ef 2e       	mov	r14, r31
     6ba:	f1 e0       	ldi	r31, 0x01	; 1
     6bc:	ff 2e       	mov	r15, r31
     6be:	f0 2d       	mov	r31, r0
     6c0:	0f 2e       	mov	r0, r31
     6c2:	f4 e6       	ldi	r31, 0x64	; 100
     6c4:	df 2e       	mov	r13, r31
     6c6:	f0 2d       	mov	r31, r0
     6c8:	f7 01       	movw	r30, r14
     6ca:	8d 2d       	mov	r24, r13
     6cc:	11 92       	st	Z+, r1
     6ce:	8a 95       	dec	r24
     6d0:	e9 f7       	brne	.-6      	; 0x6cc <sendSMS+0x8c>
    sprintf(data_buffer,"%s\r",string);
     6d2:	bf 92       	push	r11
     6d4:	cf 92       	push	r12
     6d6:	80 ec       	ldi	r24, 0xC0	; 192
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	9f 93       	push	r25
     6dc:	8f 93       	push	r24
     6de:	1f 93       	push	r17
     6e0:	0f 93       	push	r16
     6e2:	0e 94 99 0d 	call	0x1b32	; 0x1b32 <sprintf>
    USART_SendString(data_buffer);
     6e6:	c8 01       	movw	r24, r16
     6e8:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
    memset(USART_BUFFER, 0, 100);//clear data buffer
     6ec:	f7 01       	movw	r30, r14
     6ee:	11 92       	st	Z+, r1
     6f0:	da 94       	dec	r13
     6f2:	e9 f7       	brne	.-6      	; 0x6ee <sendSMS+0xae>

}
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	f8 94       	cli
     6f8:	de bf       	out	0x3e, r29	; 62
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	cd bf       	out	0x3d, r28	; 61
     6fe:	cc 59       	subi	r28, 0x9C	; 156
     700:	df 4f       	sbci	r29, 0xFF	; 255
     702:	0f b6       	in	r0, 0x3f	; 63
     704:	f8 94       	cli
     706:	de bf       	out	0x3e, r29	; 62
     708:	0f be       	out	0x3f, r0	; 63
     70a:	cd bf       	out	0x3d, r28	; 61
     70c:	df 91       	pop	r29
     70e:	cf 91       	pop	r28
     710:	1f 91       	pop	r17
     712:	0f 91       	pop	r16
     714:	ff 90       	pop	r15
     716:	ef 90       	pop	r14
     718:	df 90       	pop	r13
     71a:	cf 90       	pop	r12
     71c:	bf 90       	pop	r11
     71e:	08 95       	ret

00000720 <notifyGSM>:

void notifyDisplay(const char *string) {
   lcd_msg(string);
}

void notifyGSM(const char *string, int percentage) {
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	00 d0       	rcall	.+0      	; 0x72a <notifyGSM+0xa>
     72a:	00 d0       	rcall	.+0      	; 0x72c <notifyGSM+0xc>
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	8c 01       	movw	r16, r24
     732:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     734:	4a e0       	ldi	r20, 0x0A	; 10
     736:	be 01       	movw	r22, r28
     738:	6f 5f       	subi	r22, 0xFF	; 255
     73a:	7f 4f       	sbci	r23, 0xFF	; 255
     73c:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__itoa_ncheck>
    char Spercentage[4];
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
     740:	be 01       	movw	r22, r28
     742:	6f 5f       	subi	r22, 0xFF	; 255
     744:	7f 4f       	sbci	r23, 0xFF	; 255
     746:	c8 01       	movw	r24, r16
     748:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <concatS>
     74c:	bc 01       	movw	r22, r24
     74e:	8a e5       	ldi	r24, 0x5A	; 90
     750:	94 e0       	ldi	r25, 0x04	; 4
     752:	0e 94 20 03 	call	0x640	; 0x640 <sendSMS>
}
     756:	0f 90       	pop	r0
     758:	0f 90       	pop	r0
     75a:	0f 90       	pop	r0
     75c:	0f 90       	pop	r0
     75e:	df 91       	pop	r29
     760:	cf 91       	pop	r28
     762:	1f 91       	pop	r17
     764:	0f 91       	pop	r16
     766:	08 95       	ret

00000768 <checkPatientTemp>:

void notifySpeaker() {

}

bool checkPatientTemp() {
     768:	cf 92       	push	r12
     76a:	df 92       	push	r13
     76c:	ef 92       	push	r14
     76e:	ff 92       	push	r15
     770:	0f 93       	push	r16
     772:	1f 93       	push	r17
     774:	cf 93       	push	r28
     776:	df 93       	push	r29
     778:	00 d0       	rcall	.+0      	; 0x77a <checkPatientTemp+0x12>
     77a:	00 d0       	rcall	.+0      	; 0x77c <checkPatientTemp+0x14>
     77c:	cd b7       	in	r28, 0x3d	; 61
     77e:	de b7       	in	r29, 0x3e	; 62
    if(PatientTemp()>37.2||PatientTemp()<36.1){
     780:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <PatientTemp>
     784:	8c 01       	movw	r16, r24
     786:	bc 01       	movw	r22, r24
     788:	99 0f       	add	r25, r25
     78a:	88 0b       	sbc	r24, r24
     78c:	99 0b       	sbc	r25, r25
     78e:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__floatsisf>
     792:	6b 01       	movw	r12, r22
     794:	7c 01       	movw	r14, r24
     796:	2d ec       	ldi	r18, 0xCD	; 205
     798:	3c ec       	ldi	r19, 0xCC	; 204
     79a:	44 e1       	ldi	r20, 0x14	; 20
     79c:	52 e4       	ldi	r21, 0x42	; 66
     79e:	0e 94 24 0b 	call	0x1648	; 0x1648 <__gesf2>
     7a2:	18 16       	cp	r1, r24
     7a4:	54 f0       	brlt	.+20     	; 0x7ba <checkPatientTemp+0x52>
     7a6:	26 e6       	ldi	r18, 0x66	; 102
     7a8:	36 e6       	ldi	r19, 0x66	; 102
     7aa:	40 e1       	ldi	r20, 0x10	; 16
     7ac:	52 e4       	ldi	r21, 0x42	; 66
     7ae:	c7 01       	movw	r24, r14
     7b0:	b6 01       	movw	r22, r12
     7b2:	0e 94 c5 09 	call	0x138a	; 0x138a <__cmpsf2>
     7b6:	88 23       	and	r24, r24
     7b8:	bc f4       	brge	.+46     	; 0x7e8 <checkPatientTemp+0x80>
        notifyGSM("Temperature Not Normal-",PatientTemp());
     7ba:	b8 01       	movw	r22, r16
     7bc:	84 ec       	ldi	r24, 0xC4	; 196
     7be:	90 e0       	ldi	r25, 0x00	; 0
     7c0:	0e 94 90 03 	call	0x720	; 0x720 <notifyGSM>
     7c4:	4a e0       	ldi	r20, 0x0A	; 10
     7c6:	be 01       	movw	r22, r28
     7c8:	6f 5f       	subi	r22, 0xFF	; 255
     7ca:	7f 4f       	sbci	r23, 0xFF	; 255
     7cc:	c8 01       	movw	r24, r16
     7ce:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__itoa_ncheck>
		char Spercentage[4];
		itoa(PatientTemp(),Spercentage,10);//convert int to string
		notifyDisplay(concatS("Temperature Not Normal-", Spercentage)); 
     7d2:	be 01       	movw	r22, r28
     7d4:	6f 5f       	subi	r22, 0xFF	; 255
     7d6:	7f 4f       	sbci	r23, 0xFF	; 255
     7d8:	84 ec       	ldi	r24, 0xC4	; 196
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <concatS>
     7e0:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <notifyDisplay>
        notifySpeaker();
        return 0;
     7e4:	80 e0       	ldi	r24, 0x00	; 0
     7e6:	01 c0       	rjmp	.+2      	; 0x7ea <checkPatientTemp+0x82>
    }else{
        return 1;
     7e8:	81 e0       	ldi	r24, 0x01	; 1
    }
    //if normal return 1 else notify speaker and gsm
}
     7ea:	0f 90       	pop	r0
     7ec:	0f 90       	pop	r0
     7ee:	0f 90       	pop	r0
     7f0:	0f 90       	pop	r0
     7f2:	df 91       	pop	r29
     7f4:	cf 91       	pop	r28
     7f6:	1f 91       	pop	r17
     7f8:	0f 91       	pop	r16
     7fa:	ff 90       	pop	r15
     7fc:	ef 90       	pop	r14
     7fe:	df 90       	pop	r13
     800:	cf 90       	pop	r12
     802:	08 95       	ret

00000804 <oxygenTankPercentage>:

}

int oxygenTankPercentage() {
    return 80;
}
     804:	80 e5       	ldi	r24, 0x50	; 80
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	08 95       	ret

0000080a <checkStatus>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}

bool checkStatus() {
     80a:	ef 92       	push	r14
     80c:	ff 92       	push	r15
     80e:	1f 93       	push	r17
     810:	cf 93       	push	r28
     812:	df 93       	push	r29
     814:	00 d0       	rcall	.+0      	; 0x816 <checkStatus+0xc>
     816:	00 d0       	rcall	.+0      	; 0x818 <checkStatus+0xe>
     818:	cd b7       	in	r28, 0x3d	; 61
     81a:	de b7       	in	r29, 0x3e	; 62
    if (turnOn()) {
     81c:	0e 94 ef 02 	call	0x5de	; 0x5de <turnOn>
     820:	18 2f       	mov	r17, r24
     822:	88 23       	and	r24, r24
     824:	e9 f0       	breq	.+58     	; 0x860 <__stack+0x1>
        if (oxygenTankPercentage() < 10) {
     826:	0e 94 02 04 	call	0x804	; 0x804 <oxygenTankPercentage>
     82a:	7c 01       	movw	r14, r24
     82c:	8a e0       	ldi	r24, 0x0A	; 10
     82e:	e8 16       	cp	r14, r24
     830:	f1 04       	cpc	r15, r1
     832:	b4 f4       	brge	.+44     	; 0x860 <__stack+0x1>
            notifyGSM("Oxygen Tank Percentage : ", oxygenTankPercentage());
     834:	b7 01       	movw	r22, r14
     836:	8c ed       	ldi	r24, 0xDC	; 220
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	0e 94 90 03 	call	0x720	; 0x720 <notifyGSM>
     83e:	4a e0       	ldi	r20, 0x0A	; 10
     840:	be 01       	movw	r22, r28
     842:	6f 5f       	subi	r22, 0xFF	; 255
     844:	7f 4f       	sbci	r23, 0xFF	; 255
     846:	c7 01       	movw	r24, r14
     848:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__itoa_ncheck>
			char Spercentage[4];
			itoa(oxygenTankPercentage(),Spercentage,10);//convert int to string
            notifyDisplay(concatS("Oxygen Tank Percentage ", Spercentage));
     84c:	be 01       	movw	r22, r28
     84e:	6f 5f       	subi	r22, 0xFF	; 255
     850:	7f 4f       	sbci	r23, 0xFF	; 255
     852:	86 ef       	ldi	r24, 0xF6	; 246
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <concatS>
     85a:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <notifyDisplay>
            return 0;
     85e:	10 e0       	ldi	r17, 0x00	; 0
        } else { return 1; }
    }else{return 0;}
}
     860:	81 2f       	mov	r24, r17
     862:	0f 90       	pop	r0
     864:	0f 90       	pop	r0
     866:	0f 90       	pop	r0
     868:	0f 90       	pop	r0
     86a:	df 91       	pop	r29
     86c:	cf 91       	pop	r28
     86e:	1f 91       	pop	r17
     870:	ff 90       	pop	r15
     872:	ef 90       	pop	r14
     874:	08 95       	ret

00000876 <startStepperMotor>:
}

int oxygenTankPercentage() {
    return 80;
}
void startStepperMotor(int breathPerMin, int BreathLength) {
     876:	0f 93       	push	r16
     878:	1f 93       	push	r17
     87a:	cf 93       	push	r28
     87c:	df 93       	push	r29
     87e:	ec 01       	movw	r28, r24
	if(prev_millis0==NULL){
     880:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <prev_millis0>
     884:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <prev_millis0+0x1>
     888:	89 2b       	or	r24, r25
     88a:	09 f0       	breq	.+2      	; 0x88e <startStepperMotor+0x18>
     88c:	3f c0       	rjmp	.+126    	; 0x90c <startStepperMotor+0x96>
		
		prev_millis0=millis();
     88e:	0e 94 48 09 	call	0x1290	; 0x1290 <millis>
     892:	8b 01       	movw	r16, r22
     894:	9c 01       	movw	r18, r24
     896:	60 93 68 04 	sts	0x0468, r22	; 0x800468 <prev_millis0>
     89a:	70 93 69 04 	sts	0x0469, r23	; 0x800469 <prev_millis0+0x1>
     89e:	80 93 6a 04 	sts	0x046A, r24	; 0x80046a <prev_millis0+0x2>
     8a2:	90 93 6b 04 	sts	0x046B, r25	; 0x80046b <prev_millis0+0x3>
		need_millis0=30000/(breathPerMin*10)+prev_millis0;
     8a6:	ce 01       	movw	r24, r28
     8a8:	88 0f       	add	r24, r24
     8aa:	99 1f       	adc	r25, r25
     8ac:	be 01       	movw	r22, r28
     8ae:	66 0f       	add	r22, r22
     8b0:	77 1f       	adc	r23, r23
     8b2:	66 0f       	add	r22, r22
     8b4:	77 1f       	adc	r23, r23
     8b6:	66 0f       	add	r22, r22
     8b8:	77 1f       	adc	r23, r23
     8ba:	68 0f       	add	r22, r24
     8bc:	79 1f       	adc	r23, r25
     8be:	80 e3       	ldi	r24, 0x30	; 48
     8c0:	95 e7       	ldi	r25, 0x75	; 117
     8c2:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     8c6:	cb 01       	movw	r24, r22
     8c8:	77 0f       	add	r23, r23
     8ca:	aa 0b       	sbc	r26, r26
     8cc:	bb 0b       	sbc	r27, r27
     8ce:	08 0f       	add	r16, r24
     8d0:	19 1f       	adc	r17, r25
     8d2:	2a 1f       	adc	r18, r26
     8d4:	3b 1f       	adc	r19, r27
     8d6:	00 93 16 03 	sts	0x0316, r16	; 0x800316 <need_millis0>
     8da:	10 93 17 03 	sts	0x0317, r17	; 0x800317 <need_millis0+0x1>
     8de:	20 93 18 03 	sts	0x0318, r18	; 0x800318 <need_millis0+0x2>
     8e2:	30 93 19 03 	sts	0x0319, r19	; 0x800319 <need_millis0+0x3>
		case_num0=1;
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     8ee:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
		PORTC = PORTC | (1<<4);case_num0++;
     8f2:	85 b3       	in	r24, 0x15	; 21
     8f4:	80 61       	ori	r24, 0x10	; 16
     8f6:	85 bb       	out	0x15, r24	; 21
     8f8:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     8fc:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     906:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     90a:	e3 c3       	rjmp	.+1990   	; 0x10d2 <startStepperMotor+0x85c>
		}else if(need_millis0<millis()){
     90c:	0e 94 48 09 	call	0x1290	; 0x1290 <millis>
     910:	00 91 16 03 	lds	r16, 0x0316	; 0x800316 <need_millis0>
     914:	10 91 17 03 	lds	r17, 0x0317	; 0x800317 <need_millis0+0x1>
     918:	20 91 18 03 	lds	r18, 0x0318	; 0x800318 <need_millis0+0x2>
     91c:	30 91 19 03 	lds	r19, 0x0319	; 0x800319 <need_millis0+0x3>
     920:	06 17       	cp	r16, r22
     922:	17 07       	cpc	r17, r23
     924:	28 07       	cpc	r18, r24
     926:	39 07       	cpc	r19, r25
     928:	08 f0       	brcs	.+2      	; 0x92c <startStepperMotor+0xb6>
     92a:	d3 c3       	rjmp	.+1958   	; 0x10d2 <startStepperMotor+0x85c>
		
		switch(case_num0){
     92c:	e0 91 ba 03 	lds	r30, 0x03BA	; 0x8003ba <case_num0>
     930:	f0 91 bb 03 	lds	r31, 0x03BB	; 0x8003bb <case_num0+0x1>
     934:	32 97       	sbiw	r30, 0x02	; 2
     936:	e3 31       	cpi	r30, 0x13	; 19
     938:	f1 05       	cpc	r31, r1
     93a:	08 f0       	brcs	.+2      	; 0x93e <startStepperMotor+0xc8>
     93c:	be c3       	rjmp	.+1916   	; 0x10ba <startStepperMotor+0x844>
     93e:	e6 5d       	subi	r30, 0xD6	; 214
     940:	ff 4f       	sbci	r31, 0xFF	; 255
     942:	0c 94 27 0c 	jmp	0x184e	; 0x184e <__tablejump2__>
			
			case 2:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     946:	85 b3       	in	r24, 0x15	; 21
     948:	80 64       	ori	r24, 0x40	; 64
     94a:	85 bb       	out	0x15, r24	; 21
     94c:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     950:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     954:	01 96       	adiw	r24, 0x01	; 1
     956:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     95a:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     95e:	ce 01       	movw	r24, r28
     960:	88 0f       	add	r24, r24
     962:	99 1f       	adc	r25, r25
     964:	be 01       	movw	r22, r28
     966:	66 0f       	add	r22, r22
     968:	77 1f       	adc	r23, r23
     96a:	66 0f       	add	r22, r22
     96c:	77 1f       	adc	r23, r23
     96e:	66 0f       	add	r22, r22
     970:	77 1f       	adc	r23, r23
     972:	68 0f       	add	r22, r24
     974:	79 1f       	adc	r23, r25
     976:	80 e3       	ldi	r24, 0x30	; 48
     978:	95 e7       	ldi	r25, 0x75	; 117
     97a:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     97e:	ab 01       	movw	r20, r22
     980:	77 0f       	add	r23, r23
     982:	66 0b       	sbc	r22, r22
     984:	77 0b       	sbc	r23, r23
     986:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     98a:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     98e:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     992:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     996:	84 0f       	add	r24, r20
     998:	95 1f       	adc	r25, r21
     99a:	a6 1f       	adc	r26, r22
     99c:	b7 1f       	adc	r27, r23
     99e:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     9a2:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     9a6:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     9aa:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     9ae:	91 c3       	rjmp	.+1826   	; 0x10d2 <startStepperMotor+0x85c>
			case 3:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     9b0:	85 b3       	in	r24, 0x15	; 21
     9b2:	8f 7e       	andi	r24, 0xEF	; 239
     9b4:	85 bb       	out	0x15, r24	; 21
     9b6:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     9ba:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     9be:	01 96       	adiw	r24, 0x01	; 1
     9c0:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     9c4:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     9c8:	ce 01       	movw	r24, r28
     9ca:	88 0f       	add	r24, r24
     9cc:	99 1f       	adc	r25, r25
     9ce:	be 01       	movw	r22, r28
     9d0:	66 0f       	add	r22, r22
     9d2:	77 1f       	adc	r23, r23
     9d4:	66 0f       	add	r22, r22
     9d6:	77 1f       	adc	r23, r23
     9d8:	66 0f       	add	r22, r22
     9da:	77 1f       	adc	r23, r23
     9dc:	68 0f       	add	r22, r24
     9de:	79 1f       	adc	r23, r25
     9e0:	80 e3       	ldi	r24, 0x30	; 48
     9e2:	95 e7       	ldi	r25, 0x75	; 117
     9e4:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     9e8:	ab 01       	movw	r20, r22
     9ea:	77 0f       	add	r23, r23
     9ec:	66 0b       	sbc	r22, r22
     9ee:	77 0b       	sbc	r23, r23
     9f0:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     9f4:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     9f8:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     9fc:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     a00:	84 0f       	add	r24, r20
     a02:	95 1f       	adc	r25, r21
     a04:	a6 1f       	adc	r26, r22
     a06:	b7 1f       	adc	r27, r23
     a08:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     a0c:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     a10:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     a14:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     a18:	5c c3       	rjmp	.+1720   	; 0x10d2 <startStepperMotor+0x85c>
			case 4:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     a1a:	85 b3       	in	r24, 0x15	; 21
     a1c:	80 62       	ori	r24, 0x20	; 32
     a1e:	85 bb       	out	0x15, r24	; 21
     a20:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     a24:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     a28:	01 96       	adiw	r24, 0x01	; 1
     a2a:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     a2e:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     a32:	ce 01       	movw	r24, r28
     a34:	88 0f       	add	r24, r24
     a36:	99 1f       	adc	r25, r25
     a38:	be 01       	movw	r22, r28
     a3a:	66 0f       	add	r22, r22
     a3c:	77 1f       	adc	r23, r23
     a3e:	66 0f       	add	r22, r22
     a40:	77 1f       	adc	r23, r23
     a42:	66 0f       	add	r22, r22
     a44:	77 1f       	adc	r23, r23
     a46:	68 0f       	add	r22, r24
     a48:	79 1f       	adc	r23, r25
     a4a:	80 e3       	ldi	r24, 0x30	; 48
     a4c:	95 e7       	ldi	r25, 0x75	; 117
     a4e:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     a52:	ab 01       	movw	r20, r22
     a54:	77 0f       	add	r23, r23
     a56:	66 0b       	sbc	r22, r22
     a58:	77 0b       	sbc	r23, r23
     a5a:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     a5e:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     a62:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     a66:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     a6a:	84 0f       	add	r24, r20
     a6c:	95 1f       	adc	r25, r21
     a6e:	a6 1f       	adc	r26, r22
     a70:	b7 1f       	adc	r27, r23
     a72:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     a76:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     a7a:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     a7e:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     a82:	27 c3       	rjmp	.+1614   	; 0x10d2 <startStepperMotor+0x85c>
			case 5:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     a84:	85 b3       	in	r24, 0x15	; 21
     a86:	8f 7b       	andi	r24, 0xBF	; 191
     a88:	85 bb       	out	0x15, r24	; 21
     a8a:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     a8e:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     a92:	01 96       	adiw	r24, 0x01	; 1
     a94:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     a98:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     a9c:	ce 01       	movw	r24, r28
     a9e:	88 0f       	add	r24, r24
     aa0:	99 1f       	adc	r25, r25
     aa2:	be 01       	movw	r22, r28
     aa4:	66 0f       	add	r22, r22
     aa6:	77 1f       	adc	r23, r23
     aa8:	66 0f       	add	r22, r22
     aaa:	77 1f       	adc	r23, r23
     aac:	66 0f       	add	r22, r22
     aae:	77 1f       	adc	r23, r23
     ab0:	68 0f       	add	r22, r24
     ab2:	79 1f       	adc	r23, r25
     ab4:	80 e3       	ldi	r24, 0x30	; 48
     ab6:	95 e7       	ldi	r25, 0x75	; 117
     ab8:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     abc:	ab 01       	movw	r20, r22
     abe:	77 0f       	add	r23, r23
     ac0:	66 0b       	sbc	r22, r22
     ac2:	77 0b       	sbc	r23, r23
     ac4:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     ac8:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     acc:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     ad0:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     ad4:	84 0f       	add	r24, r20
     ad6:	95 1f       	adc	r25, r21
     ad8:	a6 1f       	adc	r26, r22
     ada:	b7 1f       	adc	r27, r23
     adc:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     ae0:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     ae4:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     ae8:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     aec:	f2 c2       	rjmp	.+1508   	; 0x10d2 <startStepperMotor+0x85c>
			case 6:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     aee:	85 b3       	in	r24, 0x15	; 21
     af0:	80 68       	ori	r24, 0x80	; 128
     af2:	85 bb       	out	0x15, r24	; 21
     af4:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     af8:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     afc:	01 96       	adiw	r24, 0x01	; 1
     afe:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     b02:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     b06:	ce 01       	movw	r24, r28
     b08:	88 0f       	add	r24, r24
     b0a:	99 1f       	adc	r25, r25
     b0c:	be 01       	movw	r22, r28
     b0e:	66 0f       	add	r22, r22
     b10:	77 1f       	adc	r23, r23
     b12:	66 0f       	add	r22, r22
     b14:	77 1f       	adc	r23, r23
     b16:	66 0f       	add	r22, r22
     b18:	77 1f       	adc	r23, r23
     b1a:	68 0f       	add	r22, r24
     b1c:	79 1f       	adc	r23, r25
     b1e:	80 e3       	ldi	r24, 0x30	; 48
     b20:	95 e7       	ldi	r25, 0x75	; 117
     b22:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     b26:	ab 01       	movw	r20, r22
     b28:	77 0f       	add	r23, r23
     b2a:	66 0b       	sbc	r22, r22
     b2c:	77 0b       	sbc	r23, r23
     b2e:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     b32:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     b36:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     b3a:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     b3e:	84 0f       	add	r24, r20
     b40:	95 1f       	adc	r25, r21
     b42:	a6 1f       	adc	r26, r22
     b44:	b7 1f       	adc	r27, r23
     b46:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     b4a:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     b4e:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     b52:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     b56:	bd c2       	rjmp	.+1402   	; 0x10d2 <startStepperMotor+0x85c>
			case 7:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     b58:	85 b3       	in	r24, 0x15	; 21
     b5a:	8f 7d       	andi	r24, 0xDF	; 223
     b5c:	85 bb       	out	0x15, r24	; 21
     b5e:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     b62:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     b66:	01 96       	adiw	r24, 0x01	; 1
     b68:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     b6c:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     b70:	ce 01       	movw	r24, r28
     b72:	88 0f       	add	r24, r24
     b74:	99 1f       	adc	r25, r25
     b76:	be 01       	movw	r22, r28
     b78:	66 0f       	add	r22, r22
     b7a:	77 1f       	adc	r23, r23
     b7c:	66 0f       	add	r22, r22
     b7e:	77 1f       	adc	r23, r23
     b80:	66 0f       	add	r22, r22
     b82:	77 1f       	adc	r23, r23
     b84:	68 0f       	add	r22, r24
     b86:	79 1f       	adc	r23, r25
     b88:	80 e3       	ldi	r24, 0x30	; 48
     b8a:	95 e7       	ldi	r25, 0x75	; 117
     b8c:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     b90:	ab 01       	movw	r20, r22
     b92:	77 0f       	add	r23, r23
     b94:	66 0b       	sbc	r22, r22
     b96:	77 0b       	sbc	r23, r23
     b98:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     b9c:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     ba0:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     ba4:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     ba8:	84 0f       	add	r24, r20
     baa:	95 1f       	adc	r25, r21
     bac:	a6 1f       	adc	r26, r22
     bae:	b7 1f       	adc	r27, r23
     bb0:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     bb4:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     bb8:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     bbc:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     bc0:	88 c2       	rjmp	.+1296   	; 0x10d2 <startStepperMotor+0x85c>
			case 8:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     bc2:	85 b3       	in	r24, 0x15	; 21
     bc4:	80 61       	ori	r24, 0x10	; 16
     bc6:	85 bb       	out	0x15, r24	; 21
     bc8:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     bcc:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     bd0:	01 96       	adiw	r24, 0x01	; 1
     bd2:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     bd6:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     bda:	ce 01       	movw	r24, r28
     bdc:	88 0f       	add	r24, r24
     bde:	99 1f       	adc	r25, r25
     be0:	be 01       	movw	r22, r28
     be2:	66 0f       	add	r22, r22
     be4:	77 1f       	adc	r23, r23
     be6:	66 0f       	add	r22, r22
     be8:	77 1f       	adc	r23, r23
     bea:	66 0f       	add	r22, r22
     bec:	77 1f       	adc	r23, r23
     bee:	68 0f       	add	r22, r24
     bf0:	79 1f       	adc	r23, r25
     bf2:	80 e3       	ldi	r24, 0x30	; 48
     bf4:	95 e7       	ldi	r25, 0x75	; 117
     bf6:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     bfa:	ab 01       	movw	r20, r22
     bfc:	77 0f       	add	r23, r23
     bfe:	66 0b       	sbc	r22, r22
     c00:	77 0b       	sbc	r23, r23
     c02:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     c06:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     c0a:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     c0e:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     c12:	84 0f       	add	r24, r20
     c14:	95 1f       	adc	r25, r21
     c16:	a6 1f       	adc	r26, r22
     c18:	b7 1f       	adc	r27, r23
     c1a:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     c1e:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     c22:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     c26:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     c2a:	53 c2       	rjmp	.+1190   	; 0x10d2 <startStepperMotor+0x85c>
			case 9:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     c2c:	85 b3       	in	r24, 0x15	; 21
     c2e:	8f 77       	andi	r24, 0x7F	; 127
     c30:	85 bb       	out	0x15, r24	; 21
     c32:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     c36:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     c40:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     c44:	ce 01       	movw	r24, r28
     c46:	88 0f       	add	r24, r24
     c48:	99 1f       	adc	r25, r25
     c4a:	be 01       	movw	r22, r28
     c4c:	66 0f       	add	r22, r22
     c4e:	77 1f       	adc	r23, r23
     c50:	66 0f       	add	r22, r22
     c52:	77 1f       	adc	r23, r23
     c54:	66 0f       	add	r22, r22
     c56:	77 1f       	adc	r23, r23
     c58:	68 0f       	add	r22, r24
     c5a:	79 1f       	adc	r23, r25
     c5c:	80 e3       	ldi	r24, 0x30	; 48
     c5e:	95 e7       	ldi	r25, 0x75	; 117
     c60:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     c64:	ab 01       	movw	r20, r22
     c66:	77 0f       	add	r23, r23
     c68:	66 0b       	sbc	r22, r22
     c6a:	77 0b       	sbc	r23, r23
     c6c:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     c70:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     c74:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     c78:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     c7c:	84 0f       	add	r24, r20
     c7e:	95 1f       	adc	r25, r21
     c80:	a6 1f       	adc	r26, r22
     c82:	b7 1f       	adc	r27, r23
     c84:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     c88:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     c8c:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     c90:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     c94:	1e c2       	rjmp	.+1084   	; 0x10d2 <startStepperMotor+0x85c>
			case 10:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     c96:	85 b3       	in	r24, 0x15	; 21
     c98:	8f 7e       	andi	r24, 0xEF	; 239
     c9a:	85 bb       	out	0x15, r24	; 21
     c9c:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     ca0:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     ca4:	01 96       	adiw	r24, 0x01	; 1
     ca6:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     caa:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     cae:	ce 01       	movw	r24, r28
     cb0:	88 0f       	add	r24, r24
     cb2:	99 1f       	adc	r25, r25
     cb4:	be 01       	movw	r22, r28
     cb6:	66 0f       	add	r22, r22
     cb8:	77 1f       	adc	r23, r23
     cba:	66 0f       	add	r22, r22
     cbc:	77 1f       	adc	r23, r23
     cbe:	66 0f       	add	r22, r22
     cc0:	77 1f       	adc	r23, r23
     cc2:	68 0f       	add	r22, r24
     cc4:	79 1f       	adc	r23, r25
     cc6:	80 e3       	ldi	r24, 0x30	; 48
     cc8:	95 e7       	ldi	r25, 0x75	; 117
     cca:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     cce:	ab 01       	movw	r20, r22
     cd0:	77 0f       	add	r23, r23
     cd2:	66 0b       	sbc	r22, r22
     cd4:	77 0b       	sbc	r23, r23
     cd6:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     cda:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     cde:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     ce2:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     ce6:	84 0f       	add	r24, r20
     ce8:	95 1f       	adc	r25, r21
     cea:	a6 1f       	adc	r26, r22
     cec:	b7 1f       	adc	r27, r23
     cee:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     cf2:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     cf6:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     cfa:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     cfe:	e9 c1       	rjmp	.+978    	; 0x10d2 <startStepperMotor+0x85c>
			case 11:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     d00:	85 b3       	in	r24, 0x15	; 21
     d02:	80 61       	ori	r24, 0x10	; 16
     d04:	85 bb       	out	0x15, r24	; 21
     d06:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     d0a:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     d0e:	01 96       	adiw	r24, 0x01	; 1
     d10:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     d14:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     d18:	ce 01       	movw	r24, r28
     d1a:	88 0f       	add	r24, r24
     d1c:	99 1f       	adc	r25, r25
     d1e:	be 01       	movw	r22, r28
     d20:	66 0f       	add	r22, r22
     d22:	77 1f       	adc	r23, r23
     d24:	66 0f       	add	r22, r22
     d26:	77 1f       	adc	r23, r23
     d28:	66 0f       	add	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	68 0f       	add	r22, r24
     d2e:	79 1f       	adc	r23, r25
     d30:	80 e3       	ldi	r24, 0x30	; 48
     d32:	95 e7       	ldi	r25, 0x75	; 117
     d34:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     d38:	ab 01       	movw	r20, r22
     d3a:	77 0f       	add	r23, r23
     d3c:	66 0b       	sbc	r22, r22
     d3e:	77 0b       	sbc	r23, r23
     d40:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     d44:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     d48:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     d4c:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     d50:	84 0f       	add	r24, r20
     d52:	95 1f       	adc	r25, r21
     d54:	a6 1f       	adc	r26, r22
     d56:	b7 1f       	adc	r27, r23
     d58:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     d5c:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     d60:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     d64:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     d68:	b4 c1       	rjmp	.+872    	; 0x10d2 <startStepperMotor+0x85c>
			case 12:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     d6a:	85 b3       	in	r24, 0x15	; 21
     d6c:	80 68       	ori	r24, 0x80	; 128
     d6e:	85 bb       	out	0x15, r24	; 21
     d70:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     d74:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     d78:	01 96       	adiw	r24, 0x01	; 1
     d7a:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     d7e:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     d82:	ce 01       	movw	r24, r28
     d84:	88 0f       	add	r24, r24
     d86:	99 1f       	adc	r25, r25
     d88:	be 01       	movw	r22, r28
     d8a:	66 0f       	add	r22, r22
     d8c:	77 1f       	adc	r23, r23
     d8e:	66 0f       	add	r22, r22
     d90:	77 1f       	adc	r23, r23
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	68 0f       	add	r22, r24
     d98:	79 1f       	adc	r23, r25
     d9a:	80 e3       	ldi	r24, 0x30	; 48
     d9c:	95 e7       	ldi	r25, 0x75	; 117
     d9e:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     da2:	ab 01       	movw	r20, r22
     da4:	77 0f       	add	r23, r23
     da6:	66 0b       	sbc	r22, r22
     da8:	77 0b       	sbc	r23, r23
     daa:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     dae:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     db2:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     db6:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     dba:	84 0f       	add	r24, r20
     dbc:	95 1f       	adc	r25, r21
     dbe:	a6 1f       	adc	r26, r22
     dc0:	b7 1f       	adc	r27, r23
     dc2:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     dc6:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     dca:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     dce:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     dd2:	7f c1       	rjmp	.+766    	; 0x10d2 <startStepperMotor+0x85c>
			case 13:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     dd4:	85 b3       	in	r24, 0x15	; 21
     dd6:	8f 7e       	andi	r24, 0xEF	; 239
     dd8:	85 bb       	out	0x15, r24	; 21
     dda:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     dde:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     de2:	01 96       	adiw	r24, 0x01	; 1
     de4:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     de8:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     dec:	ce 01       	movw	r24, r28
     dee:	88 0f       	add	r24, r24
     df0:	99 1f       	adc	r25, r25
     df2:	be 01       	movw	r22, r28
     df4:	66 0f       	add	r22, r22
     df6:	77 1f       	adc	r23, r23
     df8:	66 0f       	add	r22, r22
     dfa:	77 1f       	adc	r23, r23
     dfc:	66 0f       	add	r22, r22
     dfe:	77 1f       	adc	r23, r23
     e00:	68 0f       	add	r22, r24
     e02:	79 1f       	adc	r23, r25
     e04:	80 e3       	ldi	r24, 0x30	; 48
     e06:	95 e7       	ldi	r25, 0x75	; 117
     e08:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     e0c:	ab 01       	movw	r20, r22
     e0e:	77 0f       	add	r23, r23
     e10:	66 0b       	sbc	r22, r22
     e12:	77 0b       	sbc	r23, r23
     e14:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     e18:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     e1c:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     e20:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     e24:	84 0f       	add	r24, r20
     e26:	95 1f       	adc	r25, r21
     e28:	a6 1f       	adc	r26, r22
     e2a:	b7 1f       	adc	r27, r23
     e2c:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     e30:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     e34:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     e38:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     e3c:	4a c1       	rjmp	.+660    	; 0x10d2 <startStepperMotor+0x85c>
			case 14:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     e3e:	85 b3       	in	r24, 0x15	; 21
     e40:	80 62       	ori	r24, 0x20	; 32
     e42:	85 bb       	out	0x15, r24	; 21
     e44:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     e48:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     e4c:	01 96       	adiw	r24, 0x01	; 1
     e4e:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     e52:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     e56:	ce 01       	movw	r24, r28
     e58:	88 0f       	add	r24, r24
     e5a:	99 1f       	adc	r25, r25
     e5c:	be 01       	movw	r22, r28
     e5e:	66 0f       	add	r22, r22
     e60:	77 1f       	adc	r23, r23
     e62:	66 0f       	add	r22, r22
     e64:	77 1f       	adc	r23, r23
     e66:	66 0f       	add	r22, r22
     e68:	77 1f       	adc	r23, r23
     e6a:	68 0f       	add	r22, r24
     e6c:	79 1f       	adc	r23, r25
     e6e:	80 e3       	ldi	r24, 0x30	; 48
     e70:	95 e7       	ldi	r25, 0x75	; 117
     e72:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     e76:	ab 01       	movw	r20, r22
     e78:	77 0f       	add	r23, r23
     e7a:	66 0b       	sbc	r22, r22
     e7c:	77 0b       	sbc	r23, r23
     e7e:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     e82:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     e86:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     e8a:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     e8e:	84 0f       	add	r24, r20
     e90:	95 1f       	adc	r25, r21
     e92:	a6 1f       	adc	r26, r22
     e94:	b7 1f       	adc	r27, r23
     e96:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     e9a:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     e9e:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     ea2:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     ea6:	15 c1       	rjmp	.+554    	; 0x10d2 <startStepperMotor+0x85c>
			case 16:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     ea8:	85 b3       	in	r24, 0x15	; 21
     eaa:	8f 77       	andi	r24, 0x7F	; 127
     eac:	85 bb       	out	0x15, r24	; 21
     eae:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     eb2:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     eb6:	01 96       	adiw	r24, 0x01	; 1
     eb8:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     ebc:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     ec0:	ce 01       	movw	r24, r28
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	be 01       	movw	r22, r28
     ec8:	66 0f       	add	r22, r22
     eca:	77 1f       	adc	r23, r23
     ecc:	66 0f       	add	r22, r22
     ece:	77 1f       	adc	r23, r23
     ed0:	66 0f       	add	r22, r22
     ed2:	77 1f       	adc	r23, r23
     ed4:	68 0f       	add	r22, r24
     ed6:	79 1f       	adc	r23, r25
     ed8:	80 e3       	ldi	r24, 0x30	; 48
     eda:	95 e7       	ldi	r25, 0x75	; 117
     edc:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     ee0:	ab 01       	movw	r20, r22
     ee2:	77 0f       	add	r23, r23
     ee4:	66 0b       	sbc	r22, r22
     ee6:	77 0b       	sbc	r23, r23
     ee8:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     eec:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     ef0:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     ef4:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     ef8:	84 0f       	add	r24, r20
     efa:	95 1f       	adc	r25, r21
     efc:	a6 1f       	adc	r26, r22
     efe:	b7 1f       	adc	r27, r23
     f00:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     f04:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     f08:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     f0c:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     f10:	e0 c0       	rjmp	.+448    	; 0x10d2 <startStepperMotor+0x85c>
			case 17:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     f12:	85 b3       	in	r24, 0x15	; 21
     f14:	80 64       	ori	r24, 0x40	; 64
     f16:	85 bb       	out	0x15, r24	; 21
     f18:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     f1c:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     f20:	01 96       	adiw	r24, 0x01	; 1
     f22:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     f26:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     f2a:	ce 01       	movw	r24, r28
     f2c:	88 0f       	add	r24, r24
     f2e:	99 1f       	adc	r25, r25
     f30:	be 01       	movw	r22, r28
     f32:	66 0f       	add	r22, r22
     f34:	77 1f       	adc	r23, r23
     f36:	66 0f       	add	r22, r22
     f38:	77 1f       	adc	r23, r23
     f3a:	66 0f       	add	r22, r22
     f3c:	77 1f       	adc	r23, r23
     f3e:	68 0f       	add	r22, r24
     f40:	79 1f       	adc	r23, r25
     f42:	80 e3       	ldi	r24, 0x30	; 48
     f44:	95 e7       	ldi	r25, 0x75	; 117
     f46:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     f4a:	ab 01       	movw	r20, r22
     f4c:	77 0f       	add	r23, r23
     f4e:	66 0b       	sbc	r22, r22
     f50:	77 0b       	sbc	r23, r23
     f52:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     f56:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     f5a:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     f5e:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     f62:	84 0f       	add	r24, r20
     f64:	95 1f       	adc	r25, r21
     f66:	a6 1f       	adc	r26, r22
     f68:	b7 1f       	adc	r27, r23
     f6a:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     f6e:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     f72:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     f76:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     f7a:	ab c0       	rjmp	.+342    	; 0x10d2 <startStepperMotor+0x85c>
			case 18:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     f7c:	85 b3       	in	r24, 0x15	; 21
     f7e:	8f 7d       	andi	r24, 0xDF	; 223
     f80:	85 bb       	out	0x15, r24	; 21
     f82:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     f86:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     f8a:	01 96       	adiw	r24, 0x01	; 1
     f8c:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     f90:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     f94:	ce 01       	movw	r24, r28
     f96:	88 0f       	add	r24, r24
     f98:	99 1f       	adc	r25, r25
     f9a:	be 01       	movw	r22, r28
     f9c:	66 0f       	add	r22, r22
     f9e:	77 1f       	adc	r23, r23
     fa0:	66 0f       	add	r22, r22
     fa2:	77 1f       	adc	r23, r23
     fa4:	66 0f       	add	r22, r22
     fa6:	77 1f       	adc	r23, r23
     fa8:	68 0f       	add	r22, r24
     faa:	79 1f       	adc	r23, r25
     fac:	80 e3       	ldi	r24, 0x30	; 48
     fae:	95 e7       	ldi	r25, 0x75	; 117
     fb0:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
     fb4:	ab 01       	movw	r20, r22
     fb6:	77 0f       	add	r23, r23
     fb8:	66 0b       	sbc	r22, r22
     fba:	77 0b       	sbc	r23, r23
     fbc:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
     fc0:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
     fc4:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
     fc8:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
     fcc:	84 0f       	add	r24, r20
     fce:	95 1f       	adc	r25, r21
     fd0:	a6 1f       	adc	r26, r22
     fd2:	b7 1f       	adc	r27, r23
     fd4:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
     fd8:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
     fdc:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
     fe0:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
     fe4:	76 c0       	rjmp	.+236    	; 0x10d2 <startStepperMotor+0x85c>
			case 19:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     fe6:	85 b3       	in	r24, 0x15	; 21
     fe8:	8f 7b       	andi	r24, 0xBF	; 191
     fea:	85 bb       	out	0x15, r24	; 21
     fec:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
     ff0:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
     ff4:	01 96       	adiw	r24, 0x01	; 1
     ff6:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
     ffa:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
     ffe:	ce 01       	movw	r24, r28
    1000:	88 0f       	add	r24, r24
    1002:	99 1f       	adc	r25, r25
    1004:	be 01       	movw	r22, r28
    1006:	66 0f       	add	r22, r22
    1008:	77 1f       	adc	r23, r23
    100a:	66 0f       	add	r22, r22
    100c:	77 1f       	adc	r23, r23
    100e:	66 0f       	add	r22, r22
    1010:	77 1f       	adc	r23, r23
    1012:	68 0f       	add	r22, r24
    1014:	79 1f       	adc	r23, r25
    1016:	80 e3       	ldi	r24, 0x30	; 48
    1018:	95 e7       	ldi	r25, 0x75	; 117
    101a:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
    101e:	ab 01       	movw	r20, r22
    1020:	77 0f       	add	r23, r23
    1022:	66 0b       	sbc	r22, r22
    1024:	77 0b       	sbc	r23, r23
    1026:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
    102a:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
    102e:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
    1032:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
    1036:	84 0f       	add	r24, r20
    1038:	95 1f       	adc	r25, r21
    103a:	a6 1f       	adc	r26, r22
    103c:	b7 1f       	adc	r27, r23
    103e:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
    1042:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
    1046:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
    104a:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
    104e:	41 c0       	rjmp	.+130    	; 0x10d2 <startStepperMotor+0x85c>
			case 20:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1050:	85 b3       	in	r24, 0x15	; 21
    1052:	8f 7e       	andi	r24, 0xEF	; 239
    1054:	85 bb       	out	0x15, r24	; 21
    1056:	80 91 ba 03 	lds	r24, 0x03BA	; 0x8003ba <case_num0>
    105a:	90 91 bb 03 	lds	r25, 0x03BB	; 0x8003bb <case_num0+0x1>
    105e:	01 96       	adiw	r24, 0x01	; 1
    1060:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <case_num0+0x1>
    1064:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <case_num0>
    1068:	ce 01       	movw	r24, r28
    106a:	88 0f       	add	r24, r24
    106c:	99 1f       	adc	r25, r25
    106e:	be 01       	movw	r22, r28
    1070:	66 0f       	add	r22, r22
    1072:	77 1f       	adc	r23, r23
    1074:	66 0f       	add	r22, r22
    1076:	77 1f       	adc	r23, r23
    1078:	66 0f       	add	r22, r22
    107a:	77 1f       	adc	r23, r23
    107c:	68 0f       	add	r22, r24
    107e:	79 1f       	adc	r23, r25
    1080:	80 e3       	ldi	r24, 0x30	; 48
    1082:	95 e7       	ldi	r25, 0x75	; 117
    1084:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <__divmodhi4>
    1088:	ab 01       	movw	r20, r22
    108a:	77 0f       	add	r23, r23
    108c:	66 0b       	sbc	r22, r22
    108e:	77 0b       	sbc	r23, r23
    1090:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <need_millis0>
    1094:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <need_millis0+0x1>
    1098:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <need_millis0+0x2>
    109c:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <need_millis0+0x3>
    10a0:	84 0f       	add	r24, r20
    10a2:	95 1f       	adc	r25, r21
    10a4:	a6 1f       	adc	r26, r22
    10a6:	b7 1f       	adc	r27, r23
    10a8:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <need_millis0>
    10ac:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <need_millis0+0x1>
    10b0:	a0 93 18 03 	sts	0x0318, r26	; 0x800318 <need_millis0+0x2>
    10b4:	b0 93 19 03 	sts	0x0319, r27	; 0x800319 <need_millis0+0x3>
    10b8:	0c c0       	rjmp	.+24     	; 0x10d2 <startStepperMotor+0x85c>
			default:case_num0=NULL;prev_millis0=NULL;
    10ba:	10 92 bb 03 	sts	0x03BB, r1	; 0x8003bb <case_num0+0x1>
    10be:	10 92 ba 03 	sts	0x03BA, r1	; 0x8003ba <case_num0>
    10c2:	10 92 68 04 	sts	0x0468, r1	; 0x800468 <prev_millis0>
    10c6:	10 92 69 04 	sts	0x0469, r1	; 0x800469 <prev_millis0+0x1>
    10ca:	10 92 6a 04 	sts	0x046A, r1	; 0x80046a <prev_millis0+0x2>
    10ce:	10 92 6b 04 	sts	0x046B, r1	; 0x80046b <prev_millis0+0x3>
	}
	//rotateFullForward(breathPerMin);
		
	//rotateFullBackward(breathPerMin);
	
}
    10d2:	df 91       	pop	r29
    10d4:	cf 91       	pop	r28
    10d6:	1f 91       	pop	r17
    10d8:	0f 91       	pop	r16
    10da:	08 95       	ret

000010dc <startOxygenAndAirSupply>:
    memset(USART_BUFFER, 0, 100);
    _delay_ms(10);
    USART_SendString("AT+SAPBR=1,1\r");
}

void startOxygenAndAirSupply(int percentage) {
    10dc:	cf 93       	push	r28
    10de:	df 93       	push	r29
    controlOxygenPercentage(checkBloodOxygenLevel());
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    10e0:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    10e4:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    10e8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    10ec:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    10f0:	0e 94 3b 04 	call	0x876	; 0x876 <startStepperMotor>
    controlSolenoidValve(Oxygen_percentage, Average_Breath_Per_Min);
    10f4:	c0 91 68 00 	lds	r28, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    10f8:	d0 91 69 00 	lds	r29, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    10fc:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <Oxygen_percentage>
    1100:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    1104:	07 2e       	mov	r0, r23
    1106:	00 0c       	add	r0, r0
    1108:	88 0b       	sbc	r24, r24
    110a:	99 0b       	sbc	r25, r25
    110c:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__floatsisf>
    1110:	ae 01       	movw	r20, r28
    1112:	0e 94 59 02 	call	0x4b2	; 0x4b2 <controlSolenoidValve>
}
    1116:	df 91       	pop	r29
    1118:	cf 91       	pop	r28
    111a:	08 95       	ret

0000111c <startAirSupply>:
}



void startAirSupply() {
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    111c:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    1120:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    1124:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    1128:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    112c:	0e 94 3b 04 	call	0x876	; 0x876 <startStepperMotor>
    controlSolenoidValve(100, Average_Breath_Per_Min);
    1130:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    1134:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    1138:	60 e0       	ldi	r22, 0x00	; 0
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	88 ec       	ldi	r24, 0xC8	; 200
    113e:	92 e4       	ldi	r25, 0x42	; 66
    1140:	0e 94 59 02 	call	0x4b2	; 0x4b2 <controlSolenoidValve>
    1144:	08 95       	ret

00001146 <main>:


int main(void)
{
    /* Replace with your application code */
    DDRC = DDRC | (1<<2); // solenoid valve
    1146:	84 b3       	in	r24, 0x14	; 20
    1148:	84 60       	ori	r24, 0x04	; 4
    114a:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<3); // solenoid valve
    114c:	84 b3       	in	r24, 0x14	; 20
    114e:	88 60       	ori	r24, 0x08	; 8
    1150:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<4); // stepper motor
    1152:	84 b3       	in	r24, 0x14	; 20
    1154:	80 61       	ori	r24, 0x10	; 16
    1156:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<5); // stepper motor
    1158:	84 b3       	in	r24, 0x14	; 20
    115a:	80 62       	ori	r24, 0x20	; 32
    115c:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<6); // stepper motor
    115e:	84 b3       	in	r24, 0x14	; 20
    1160:	80 64       	ori	r24, 0x40	; 64
    1162:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<7); // stepper motor
    1164:	84 b3       	in	r24, 0x14	; 20
    1166:	80 68       	ori	r24, 0x80	; 128
    1168:	84 bb       	out	0x14, r24	; 20
	DDRB=0x0F;            //Make PB0 to PB3 = output and PB4 to PB6=input for key pad
    116a:	8f e0       	ldi	r24, 0x0F	; 15
    116c:	87 bb       	out	0x17, r24	; 23
	init_millis(8000000UL);
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	72 e1       	ldi	r23, 0x12	; 18
    1172:	8a e7       	ldi	r24, 0x7A	; 122
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	0e 94 35 09 	call	0x126a	; 0x126a <init_millis>
	sei();
    117a:	78 94       	sei
     i2c_init();
    117c:	0e 94 30 01 	call	0x260	; 0x260 <i2c_init>
	 i2c_start();
    1180:	0e 94 36 01 	call	0x26c	; 0x26c <i2c_start>
	 i2c_write(0x70);
    1184:	80 e7       	ldi	r24, 0x70	; 112
    1186:	0e 94 3c 01 	call	0x278	; 0x278 <i2c_write>
	 lcd_init();
    118a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_init>
    USART_Init(9600);
    118e:	60 e8       	ldi	r22, 0x80	; 128
    1190:	75 e2       	ldi	r23, 0x25	; 37
    1192:	80 e0       	ldi	r24, 0x00	; 0
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 43 01 	call	0x286	; 0x286 <USART_Init>
    119a:	2f ef       	ldi	r18, 0xFF	; 255
    119c:	89 e6       	ldi	r24, 0x69	; 105
    119e:	98 e1       	ldi	r25, 0x18	; 24
    11a0:	21 50       	subi	r18, 0x01	; 1
    11a2:	80 40       	sbci	r24, 0x00	; 0
    11a4:	90 40       	sbci	r25, 0x00	; 0
    11a6:	e1 f7       	brne	.-8      	; 0x11a0 <main+0x5a>
    11a8:	00 c0       	rjmp	.+0      	; 0x11aa <main+0x64>
    11aa:	00 00       	nop
    _delay_ms(1000);
    GSMConnect();
    11ac:	0e 94 8b 01 	call	0x316	; 0x316 <GSMConnect>
	
     lcd_cmd(0x80);
    11b0:	80 e8       	ldi	r24, 0x80	; 128
    11b2:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     lcd_msg("Enter Number");
    11b6:	8e e0       	ldi	r24, 0x0E	; 14
    11b8:	91 e0       	ldi	r25, 0x01	; 1
    11ba:	0e 94 23 01 	call	0x246	; 0x246 <lcd_msg>
	 
	 
    while (1)
    {   
		
     startStepperMotor(12,12);
    11be:	6c e0       	ldi	r22, 0x0C	; 12
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	8c e0       	ldi	r24, 0x0C	; 12
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	0e 94 3b 04 	call	0x876	; 0x876 <startStepperMotor>



        if(checkStatus()){
    11ca:	0e 94 05 04 	call	0x80a	; 0x80a <checkStatus>
    11ce:	88 23       	and	r24, r24
    11d0:	21 f1       	breq	.+72     	; 0x121a <main+0xd4>
            if(automationOn()){
    11d2:	0e 94 ed 02 	call	0x5da	; 0x5da <automationOn>
    11d6:	88 23       	and	r24, r24
    11d8:	b9 f0       	breq	.+46     	; 0x1208 <main+0xc2>
                if(checkPatientTemp()){
    11da:	0e 94 b4 03 	call	0x768	; 0x768 <checkPatientTemp>
    11de:	88 23       	and	r24, r24
    11e0:	71 f3       	breq	.-36     	; 0x11be <main+0x78>

                    if(checkBloodOxygenLevel() < Average_Blood_Oxygen_level){
    11e2:	0e 94 e7 02 	call	0x5ce	; 0x5ce <checkBloodOxygenLevel>
    11e6:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <Average_Blood_Oxygen_level>
    11ea:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <Average_Blood_Oxygen_level+0x1>
    11ee:	82 17       	cp	r24, r18
    11f0:	93 07       	cpc	r25, r19
    11f2:	3c f4       	brge	.+14     	; 0x1202 <main+0xbc>
                        startOxygenAndAirSupply(Oxygen_percentage);
    11f4:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    11f8:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    11fc:	0e 94 6e 08 	call	0x10dc	; 0x10dc <startOxygenAndAirSupply>
    1200:	de cf       	rjmp	.-68     	; 0x11be <main+0x78>
                    }else{
                        startAirSupply();
    1202:	0e 94 8e 08 	call	0x111c	; 0x111c <startAirSupply>
    1206:	db cf       	rjmp	.-74     	; 0x11be <main+0x78>
                    }
                }
            }else{
                checkPatientTemp();
    1208:	0e 94 b4 03 	call	0x768	; 0x768 <checkPatientTemp>
                getParametersFromKnobs();
                startOxygenAndAirSupply(Oxygen_percentage);
    120c:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    1210:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    1214:	0e 94 6e 08 	call	0x10dc	; 0x10dc <startOxygenAndAirSupply>
    1218:	d2 cf       	rjmp	.-92     	; 0x11be <main+0x78>
            }
        }else{return 0;}
    }
}
    121a:	80 e0       	ldi	r24, 0x00	; 0
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	08 95       	ret

00001220 <__vector_7>:
#include <avr/interrupt.h>

#include "millis.h"

ISR(TIMER1_COMPA_vect)
{
    1220:	1f 92       	push	r1
    1222:	0f 92       	push	r0
    1224:	0f b6       	in	r0, 0x3f	; 63
    1226:	0f 92       	push	r0
    1228:	11 24       	eor	r1, r1
    122a:	8f 93       	push	r24
    122c:	9f 93       	push	r25
    122e:	af 93       	push	r26
    1230:	bf 93       	push	r27
  timer1_millis++;
    1232:	80 91 c0 03 	lds	r24, 0x03C0	; 0x8003c0 <timer1_millis>
    1236:	90 91 c1 03 	lds	r25, 0x03C1	; 0x8003c1 <timer1_millis+0x1>
    123a:	a0 91 c2 03 	lds	r26, 0x03C2	; 0x8003c2 <timer1_millis+0x2>
    123e:	b0 91 c3 03 	lds	r27, 0x03C3	; 0x8003c3 <timer1_millis+0x3>
    1242:	01 96       	adiw	r24, 0x01	; 1
    1244:	a1 1d       	adc	r26, r1
    1246:	b1 1d       	adc	r27, r1
    1248:	80 93 c0 03 	sts	0x03C0, r24	; 0x8003c0 <timer1_millis>
    124c:	90 93 c1 03 	sts	0x03C1, r25	; 0x8003c1 <timer1_millis+0x1>
    1250:	a0 93 c2 03 	sts	0x03C2, r26	; 0x8003c2 <timer1_millis+0x2>
    1254:	b0 93 c3 03 	sts	0x03C3, r27	; 0x8003c3 <timer1_millis+0x3>
}
    1258:	bf 91       	pop	r27
    125a:	af 91       	pop	r26
    125c:	9f 91       	pop	r25
    125e:	8f 91       	pop	r24
    1260:	0f 90       	pop	r0
    1262:	0f be       	out	0x3f, r0	; 63
    1264:	0f 90       	pop	r0
    1266:	1f 90       	pop	r1
    1268:	18 95       	reti

0000126a <init_millis>:

void init_millis(unsigned long f_cpu)
{
  unsigned long ctc_match_overflow;

  ctc_match_overflow = ((f_cpu / 1000) / 8); //when timer1 is this value, 1ms has passed
    126a:	20 e4       	ldi	r18, 0x40	; 64
    126c:	3f e1       	ldi	r19, 0x1F	; 31
    126e:	40 e0       	ldi	r20, 0x00	; 0
    1270:	50 e0       	ldi	r21, 0x00	; 0
    1272:	0e 94 05 0c 	call	0x180a	; 0x180a <__udivmodsi4>

  // (Set timer to clear when matching ctc_match_overflow) | (Set clock divisor to 8)
  TCCR1B |= (1 << WGM12) | (1 << CS11);
    1276:	8e b5       	in	r24, 0x2e	; 46
    1278:	8a 60       	ori	r24, 0x0A	; 10
    127a:	8e bd       	out	0x2e, r24	; 46

  // high byte first, then low byte
  OCR1AH = (ctc_match_overflow >> 8);
    127c:	bb 27       	eor	r27, r27
    127e:	a5 2f       	mov	r26, r21
    1280:	94 2f       	mov	r25, r20
    1282:	83 2f       	mov	r24, r19
    1284:	8b bd       	out	0x2b, r24	; 43
  OCR1AL = ctc_match_overflow;
    1286:	2a bd       	out	0x2a, r18	; 42

  // Enable the compare match interrupt
  TIMSK |= (1 << OCIE1A);
    1288:	89 b7       	in	r24, 0x39	; 57
    128a:	80 61       	ori	r24, 0x10	; 16
    128c:	89 bf       	out	0x39, r24	; 57
    128e:	08 95       	ret

00001290 <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1290:	f8 94       	cli
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    1292:	21 e0       	ldi	r18, 0x01	; 1
    1294:	09 c0       	rjmp	.+18     	; 0x12a8 <millis+0x18>
    millis_return = timer1_millis;
    1296:	60 91 c0 03 	lds	r22, 0x03C0	; 0x8003c0 <timer1_millis>
    129a:	70 91 c1 03 	lds	r23, 0x03C1	; 0x8003c1 <timer1_millis+0x1>
    129e:	80 91 c2 03 	lds	r24, 0x03C2	; 0x8003c2 <timer1_millis+0x2>
    12a2:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <timer1_millis+0x3>
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    12a6:	20 e0       	ldi	r18, 0x00	; 0
    12a8:	21 11       	cpse	r18, r1
    12aa:	f5 cf       	rjmp	.-22     	; 0x1296 <millis+0x6>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
    12ac:	78 94       	sei
    millis_return = timer1_millis;
  }
  return millis_return;
}
    12ae:	08 95       	ret

000012b0 <__subsf3>:
    12b0:	50 58       	subi	r21, 0x80	; 128

000012b2 <__addsf3>:
    12b2:	bb 27       	eor	r27, r27
    12b4:	aa 27       	eor	r26, r26
    12b6:	0e 94 70 09 	call	0x12e0	; 0x12e0 <__addsf3x>
    12ba:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_round>
    12be:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__fp_pscA>
    12c2:	38 f0       	brcs	.+14     	; 0x12d2 <__addsf3+0x20>
    12c4:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <__fp_pscB>
    12c8:	20 f0       	brcs	.+8      	; 0x12d2 <__addsf3+0x20>
    12ca:	39 f4       	brne	.+14     	; 0x12da <__addsf3+0x28>
    12cc:	9f 3f       	cpi	r25, 0xFF	; 255
    12ce:	19 f4       	brne	.+6      	; 0x12d6 <__addsf3+0x24>
    12d0:	26 f4       	brtc	.+8      	; 0x12da <__addsf3+0x28>
    12d2:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__fp_nan>
    12d6:	0e f4       	brtc	.+2      	; 0x12da <__addsf3+0x28>
    12d8:	e0 95       	com	r30
    12da:	e7 fb       	bst	r30, 7
    12dc:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__fp_inf>

000012e0 <__addsf3x>:
    12e0:	e9 2f       	mov	r30, r25
    12e2:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <__fp_split3>
    12e6:	58 f3       	brcs	.-42     	; 0x12be <__addsf3+0xc>
    12e8:	ba 17       	cp	r27, r26
    12ea:	62 07       	cpc	r22, r18
    12ec:	73 07       	cpc	r23, r19
    12ee:	84 07       	cpc	r24, r20
    12f0:	95 07       	cpc	r25, r21
    12f2:	20 f0       	brcs	.+8      	; 0x12fc <__addsf3x+0x1c>
    12f4:	79 f4       	brne	.+30     	; 0x1314 <__addsf3x+0x34>
    12f6:	a6 f5       	brtc	.+104    	; 0x1360 <__addsf3x+0x80>
    12f8:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__fp_zero>
    12fc:	0e f4       	brtc	.+2      	; 0x1300 <__addsf3x+0x20>
    12fe:	e0 95       	com	r30
    1300:	0b 2e       	mov	r0, r27
    1302:	ba 2f       	mov	r27, r26
    1304:	a0 2d       	mov	r26, r0
    1306:	0b 01       	movw	r0, r22
    1308:	b9 01       	movw	r22, r18
    130a:	90 01       	movw	r18, r0
    130c:	0c 01       	movw	r0, r24
    130e:	ca 01       	movw	r24, r20
    1310:	a0 01       	movw	r20, r0
    1312:	11 24       	eor	r1, r1
    1314:	ff 27       	eor	r31, r31
    1316:	59 1b       	sub	r21, r25
    1318:	99 f0       	breq	.+38     	; 0x1340 <__addsf3x+0x60>
    131a:	59 3f       	cpi	r21, 0xF9	; 249
    131c:	50 f4       	brcc	.+20     	; 0x1332 <__addsf3x+0x52>
    131e:	50 3e       	cpi	r21, 0xE0	; 224
    1320:	68 f1       	brcs	.+90     	; 0x137c <__addsf3x+0x9c>
    1322:	1a 16       	cp	r1, r26
    1324:	f0 40       	sbci	r31, 0x00	; 0
    1326:	a2 2f       	mov	r26, r18
    1328:	23 2f       	mov	r18, r19
    132a:	34 2f       	mov	r19, r20
    132c:	44 27       	eor	r20, r20
    132e:	58 5f       	subi	r21, 0xF8	; 248
    1330:	f3 cf       	rjmp	.-26     	; 0x1318 <__addsf3x+0x38>
    1332:	46 95       	lsr	r20
    1334:	37 95       	ror	r19
    1336:	27 95       	ror	r18
    1338:	a7 95       	ror	r26
    133a:	f0 40       	sbci	r31, 0x00	; 0
    133c:	53 95       	inc	r21
    133e:	c9 f7       	brne	.-14     	; 0x1332 <__addsf3x+0x52>
    1340:	7e f4       	brtc	.+30     	; 0x1360 <__addsf3x+0x80>
    1342:	1f 16       	cp	r1, r31
    1344:	ba 0b       	sbc	r27, r26
    1346:	62 0b       	sbc	r22, r18
    1348:	73 0b       	sbc	r23, r19
    134a:	84 0b       	sbc	r24, r20
    134c:	ba f0       	brmi	.+46     	; 0x137c <__addsf3x+0x9c>
    134e:	91 50       	subi	r25, 0x01	; 1
    1350:	a1 f0       	breq	.+40     	; 0x137a <__addsf3x+0x9a>
    1352:	ff 0f       	add	r31, r31
    1354:	bb 1f       	adc	r27, r27
    1356:	66 1f       	adc	r22, r22
    1358:	77 1f       	adc	r23, r23
    135a:	88 1f       	adc	r24, r24
    135c:	c2 f7       	brpl	.-16     	; 0x134e <__addsf3x+0x6e>
    135e:	0e c0       	rjmp	.+28     	; 0x137c <__addsf3x+0x9c>
    1360:	ba 0f       	add	r27, r26
    1362:	62 1f       	adc	r22, r18
    1364:	73 1f       	adc	r23, r19
    1366:	84 1f       	adc	r24, r20
    1368:	48 f4       	brcc	.+18     	; 0x137c <__addsf3x+0x9c>
    136a:	87 95       	ror	r24
    136c:	77 95       	ror	r23
    136e:	67 95       	ror	r22
    1370:	b7 95       	ror	r27
    1372:	f7 95       	ror	r31
    1374:	9e 3f       	cpi	r25, 0xFE	; 254
    1376:	08 f0       	brcs	.+2      	; 0x137a <__addsf3x+0x9a>
    1378:	b0 cf       	rjmp	.-160    	; 0x12da <__addsf3+0x28>
    137a:	93 95       	inc	r25
    137c:	88 0f       	add	r24, r24
    137e:	08 f0       	brcs	.+2      	; 0x1382 <__addsf3x+0xa2>
    1380:	99 27       	eor	r25, r25
    1382:	ee 0f       	add	r30, r30
    1384:	97 95       	ror	r25
    1386:	87 95       	ror	r24
    1388:	08 95       	ret

0000138a <__cmpsf2>:
    138a:	0e 94 af 0a 	call	0x155e	; 0x155e <__fp_cmp>
    138e:	08 f4       	brcc	.+2      	; 0x1392 <__cmpsf2+0x8>
    1390:	81 e0       	ldi	r24, 0x01	; 1
    1392:	08 95       	ret

00001394 <__divsf3>:
    1394:	0e 94 de 09 	call	0x13bc	; 0x13bc <__divsf3x>
    1398:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_round>
    139c:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <__fp_pscB>
    13a0:	58 f0       	brcs	.+22     	; 0x13b8 <__divsf3+0x24>
    13a2:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__fp_pscA>
    13a6:	40 f0       	brcs	.+16     	; 0x13b8 <__divsf3+0x24>
    13a8:	29 f4       	brne	.+10     	; 0x13b4 <__divsf3+0x20>
    13aa:	5f 3f       	cpi	r21, 0xFF	; 255
    13ac:	29 f0       	breq	.+10     	; 0x13b8 <__divsf3+0x24>
    13ae:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__fp_inf>
    13b2:	51 11       	cpse	r21, r1
    13b4:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_szero>
    13b8:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__fp_nan>

000013bc <__divsf3x>:
    13bc:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <__fp_split3>
    13c0:	68 f3       	brcs	.-38     	; 0x139c <__divsf3+0x8>

000013c2 <__divsf3_pse>:
    13c2:	99 23       	and	r25, r25
    13c4:	b1 f3       	breq	.-20     	; 0x13b2 <__divsf3+0x1e>
    13c6:	55 23       	and	r21, r21
    13c8:	91 f3       	breq	.-28     	; 0x13ae <__divsf3+0x1a>
    13ca:	95 1b       	sub	r25, r21
    13cc:	55 0b       	sbc	r21, r21
    13ce:	bb 27       	eor	r27, r27
    13d0:	aa 27       	eor	r26, r26
    13d2:	62 17       	cp	r22, r18
    13d4:	73 07       	cpc	r23, r19
    13d6:	84 07       	cpc	r24, r20
    13d8:	38 f0       	brcs	.+14     	; 0x13e8 <__divsf3_pse+0x26>
    13da:	9f 5f       	subi	r25, 0xFF	; 255
    13dc:	5f 4f       	sbci	r21, 0xFF	; 255
    13de:	22 0f       	add	r18, r18
    13e0:	33 1f       	adc	r19, r19
    13e2:	44 1f       	adc	r20, r20
    13e4:	aa 1f       	adc	r26, r26
    13e6:	a9 f3       	breq	.-22     	; 0x13d2 <__divsf3_pse+0x10>
    13e8:	35 d0       	rcall	.+106    	; 0x1454 <__divsf3_pse+0x92>
    13ea:	0e 2e       	mov	r0, r30
    13ec:	3a f0       	brmi	.+14     	; 0x13fc <__divsf3_pse+0x3a>
    13ee:	e0 e8       	ldi	r30, 0x80	; 128
    13f0:	32 d0       	rcall	.+100    	; 0x1456 <__divsf3_pse+0x94>
    13f2:	91 50       	subi	r25, 0x01	; 1
    13f4:	50 40       	sbci	r21, 0x00	; 0
    13f6:	e6 95       	lsr	r30
    13f8:	00 1c       	adc	r0, r0
    13fa:	ca f7       	brpl	.-14     	; 0x13ee <__divsf3_pse+0x2c>
    13fc:	2b d0       	rcall	.+86     	; 0x1454 <__divsf3_pse+0x92>
    13fe:	fe 2f       	mov	r31, r30
    1400:	29 d0       	rcall	.+82     	; 0x1454 <__divsf3_pse+0x92>
    1402:	66 0f       	add	r22, r22
    1404:	77 1f       	adc	r23, r23
    1406:	88 1f       	adc	r24, r24
    1408:	bb 1f       	adc	r27, r27
    140a:	26 17       	cp	r18, r22
    140c:	37 07       	cpc	r19, r23
    140e:	48 07       	cpc	r20, r24
    1410:	ab 07       	cpc	r26, r27
    1412:	b0 e8       	ldi	r27, 0x80	; 128
    1414:	09 f0       	breq	.+2      	; 0x1418 <__divsf3_pse+0x56>
    1416:	bb 0b       	sbc	r27, r27
    1418:	80 2d       	mov	r24, r0
    141a:	bf 01       	movw	r22, r30
    141c:	ff 27       	eor	r31, r31
    141e:	93 58       	subi	r25, 0x83	; 131
    1420:	5f 4f       	sbci	r21, 0xFF	; 255
    1422:	3a f0       	brmi	.+14     	; 0x1432 <__divsf3_pse+0x70>
    1424:	9e 3f       	cpi	r25, 0xFE	; 254
    1426:	51 05       	cpc	r21, r1
    1428:	78 f0       	brcs	.+30     	; 0x1448 <__divsf3_pse+0x86>
    142a:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__fp_inf>
    142e:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_szero>
    1432:	5f 3f       	cpi	r21, 0xFF	; 255
    1434:	e4 f3       	brlt	.-8      	; 0x142e <__divsf3_pse+0x6c>
    1436:	98 3e       	cpi	r25, 0xE8	; 232
    1438:	d4 f3       	brlt	.-12     	; 0x142e <__divsf3_pse+0x6c>
    143a:	86 95       	lsr	r24
    143c:	77 95       	ror	r23
    143e:	67 95       	ror	r22
    1440:	b7 95       	ror	r27
    1442:	f7 95       	ror	r31
    1444:	9f 5f       	subi	r25, 0xFF	; 255
    1446:	c9 f7       	brne	.-14     	; 0x143a <__divsf3_pse+0x78>
    1448:	88 0f       	add	r24, r24
    144a:	91 1d       	adc	r25, r1
    144c:	96 95       	lsr	r25
    144e:	87 95       	ror	r24
    1450:	97 f9       	bld	r25, 7
    1452:	08 95       	ret
    1454:	e1 e0       	ldi	r30, 0x01	; 1
    1456:	66 0f       	add	r22, r22
    1458:	77 1f       	adc	r23, r23
    145a:	88 1f       	adc	r24, r24
    145c:	bb 1f       	adc	r27, r27
    145e:	62 17       	cp	r22, r18
    1460:	73 07       	cpc	r23, r19
    1462:	84 07       	cpc	r24, r20
    1464:	ba 07       	cpc	r27, r26
    1466:	20 f0       	brcs	.+8      	; 0x1470 <__divsf3_pse+0xae>
    1468:	62 1b       	sub	r22, r18
    146a:	73 0b       	sbc	r23, r19
    146c:	84 0b       	sbc	r24, r20
    146e:	ba 0b       	sbc	r27, r26
    1470:	ee 1f       	adc	r30, r30
    1472:	88 f7       	brcc	.-30     	; 0x1456 <__divsf3_pse+0x94>
    1474:	e0 95       	com	r30
    1476:	08 95       	ret

00001478 <__fixsfsi>:
    1478:	0e 94 43 0a 	call	0x1486	; 0x1486 <__fixunssfsi>
    147c:	68 94       	set
    147e:	b1 11       	cpse	r27, r1
    1480:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_szero>
    1484:	08 95       	ret

00001486 <__fixunssfsi>:
    1486:	0e 94 03 0b 	call	0x1606	; 0x1606 <__fp_splitA>
    148a:	88 f0       	brcs	.+34     	; 0x14ae <__fixunssfsi+0x28>
    148c:	9f 57       	subi	r25, 0x7F	; 127
    148e:	98 f0       	brcs	.+38     	; 0x14b6 <__fixunssfsi+0x30>
    1490:	b9 2f       	mov	r27, r25
    1492:	99 27       	eor	r25, r25
    1494:	b7 51       	subi	r27, 0x17	; 23
    1496:	b0 f0       	brcs	.+44     	; 0x14c4 <__fixunssfsi+0x3e>
    1498:	e1 f0       	breq	.+56     	; 0x14d2 <__fixunssfsi+0x4c>
    149a:	66 0f       	add	r22, r22
    149c:	77 1f       	adc	r23, r23
    149e:	88 1f       	adc	r24, r24
    14a0:	99 1f       	adc	r25, r25
    14a2:	1a f0       	brmi	.+6      	; 0x14aa <__fixunssfsi+0x24>
    14a4:	ba 95       	dec	r27
    14a6:	c9 f7       	brne	.-14     	; 0x149a <__fixunssfsi+0x14>
    14a8:	14 c0       	rjmp	.+40     	; 0x14d2 <__fixunssfsi+0x4c>
    14aa:	b1 30       	cpi	r27, 0x01	; 1
    14ac:	91 f0       	breq	.+36     	; 0x14d2 <__fixunssfsi+0x4c>
    14ae:	0e 94 1d 0b 	call	0x163a	; 0x163a <__fp_zero>
    14b2:	b1 e0       	ldi	r27, 0x01	; 1
    14b4:	08 95       	ret
    14b6:	0c 94 1d 0b 	jmp	0x163a	; 0x163a <__fp_zero>
    14ba:	67 2f       	mov	r22, r23
    14bc:	78 2f       	mov	r23, r24
    14be:	88 27       	eor	r24, r24
    14c0:	b8 5f       	subi	r27, 0xF8	; 248
    14c2:	39 f0       	breq	.+14     	; 0x14d2 <__fixunssfsi+0x4c>
    14c4:	b9 3f       	cpi	r27, 0xF9	; 249
    14c6:	cc f3       	brlt	.-14     	; 0x14ba <__fixunssfsi+0x34>
    14c8:	86 95       	lsr	r24
    14ca:	77 95       	ror	r23
    14cc:	67 95       	ror	r22
    14ce:	b3 95       	inc	r27
    14d0:	d9 f7       	brne	.-10     	; 0x14c8 <__fixunssfsi+0x42>
    14d2:	3e f4       	brtc	.+14     	; 0x14e2 <__fixunssfsi+0x5c>
    14d4:	90 95       	com	r25
    14d6:	80 95       	com	r24
    14d8:	70 95       	com	r23
    14da:	61 95       	neg	r22
    14dc:	7f 4f       	sbci	r23, 0xFF	; 255
    14de:	8f 4f       	sbci	r24, 0xFF	; 255
    14e0:	9f 4f       	sbci	r25, 0xFF	; 255
    14e2:	08 95       	ret

000014e4 <__floatunsisf>:
    14e4:	e8 94       	clt
    14e6:	09 c0       	rjmp	.+18     	; 0x14fa <__floatsisf+0x12>

000014e8 <__floatsisf>:
    14e8:	97 fb       	bst	r25, 7
    14ea:	3e f4       	brtc	.+14     	; 0x14fa <__floatsisf+0x12>
    14ec:	90 95       	com	r25
    14ee:	80 95       	com	r24
    14f0:	70 95       	com	r23
    14f2:	61 95       	neg	r22
    14f4:	7f 4f       	sbci	r23, 0xFF	; 255
    14f6:	8f 4f       	sbci	r24, 0xFF	; 255
    14f8:	9f 4f       	sbci	r25, 0xFF	; 255
    14fa:	99 23       	and	r25, r25
    14fc:	a9 f0       	breq	.+42     	; 0x1528 <__floatsisf+0x40>
    14fe:	f9 2f       	mov	r31, r25
    1500:	96 e9       	ldi	r25, 0x96	; 150
    1502:	bb 27       	eor	r27, r27
    1504:	93 95       	inc	r25
    1506:	f6 95       	lsr	r31
    1508:	87 95       	ror	r24
    150a:	77 95       	ror	r23
    150c:	67 95       	ror	r22
    150e:	b7 95       	ror	r27
    1510:	f1 11       	cpse	r31, r1
    1512:	f8 cf       	rjmp	.-16     	; 0x1504 <__floatsisf+0x1c>
    1514:	fa f4       	brpl	.+62     	; 0x1554 <__floatsisf+0x6c>
    1516:	bb 0f       	add	r27, r27
    1518:	11 f4       	brne	.+4      	; 0x151e <__floatsisf+0x36>
    151a:	60 ff       	sbrs	r22, 0
    151c:	1b c0       	rjmp	.+54     	; 0x1554 <__floatsisf+0x6c>
    151e:	6f 5f       	subi	r22, 0xFF	; 255
    1520:	7f 4f       	sbci	r23, 0xFF	; 255
    1522:	8f 4f       	sbci	r24, 0xFF	; 255
    1524:	9f 4f       	sbci	r25, 0xFF	; 255
    1526:	16 c0       	rjmp	.+44     	; 0x1554 <__floatsisf+0x6c>
    1528:	88 23       	and	r24, r24
    152a:	11 f0       	breq	.+4      	; 0x1530 <__floatsisf+0x48>
    152c:	96 e9       	ldi	r25, 0x96	; 150
    152e:	11 c0       	rjmp	.+34     	; 0x1552 <__floatsisf+0x6a>
    1530:	77 23       	and	r23, r23
    1532:	21 f0       	breq	.+8      	; 0x153c <__floatsisf+0x54>
    1534:	9e e8       	ldi	r25, 0x8E	; 142
    1536:	87 2f       	mov	r24, r23
    1538:	76 2f       	mov	r23, r22
    153a:	05 c0       	rjmp	.+10     	; 0x1546 <__floatsisf+0x5e>
    153c:	66 23       	and	r22, r22
    153e:	71 f0       	breq	.+28     	; 0x155c <__floatsisf+0x74>
    1540:	96 e8       	ldi	r25, 0x86	; 134
    1542:	86 2f       	mov	r24, r22
    1544:	70 e0       	ldi	r23, 0x00	; 0
    1546:	60 e0       	ldi	r22, 0x00	; 0
    1548:	2a f0       	brmi	.+10     	; 0x1554 <__floatsisf+0x6c>
    154a:	9a 95       	dec	r25
    154c:	66 0f       	add	r22, r22
    154e:	77 1f       	adc	r23, r23
    1550:	88 1f       	adc	r24, r24
    1552:	da f7       	brpl	.-10     	; 0x154a <__floatsisf+0x62>
    1554:	88 0f       	add	r24, r24
    1556:	96 95       	lsr	r25
    1558:	87 95       	ror	r24
    155a:	97 f9       	bld	r25, 7
    155c:	08 95       	ret

0000155e <__fp_cmp>:
    155e:	99 0f       	add	r25, r25
    1560:	00 08       	sbc	r0, r0
    1562:	55 0f       	add	r21, r21
    1564:	aa 0b       	sbc	r26, r26
    1566:	e0 e8       	ldi	r30, 0x80	; 128
    1568:	fe ef       	ldi	r31, 0xFE	; 254
    156a:	16 16       	cp	r1, r22
    156c:	17 06       	cpc	r1, r23
    156e:	e8 07       	cpc	r30, r24
    1570:	f9 07       	cpc	r31, r25
    1572:	c0 f0       	brcs	.+48     	; 0x15a4 <__fp_cmp+0x46>
    1574:	12 16       	cp	r1, r18
    1576:	13 06       	cpc	r1, r19
    1578:	e4 07       	cpc	r30, r20
    157a:	f5 07       	cpc	r31, r21
    157c:	98 f0       	brcs	.+38     	; 0x15a4 <__fp_cmp+0x46>
    157e:	62 1b       	sub	r22, r18
    1580:	73 0b       	sbc	r23, r19
    1582:	84 0b       	sbc	r24, r20
    1584:	95 0b       	sbc	r25, r21
    1586:	39 f4       	brne	.+14     	; 0x1596 <__fp_cmp+0x38>
    1588:	0a 26       	eor	r0, r26
    158a:	61 f0       	breq	.+24     	; 0x15a4 <__fp_cmp+0x46>
    158c:	23 2b       	or	r18, r19
    158e:	24 2b       	or	r18, r20
    1590:	25 2b       	or	r18, r21
    1592:	21 f4       	brne	.+8      	; 0x159c <__fp_cmp+0x3e>
    1594:	08 95       	ret
    1596:	0a 26       	eor	r0, r26
    1598:	09 f4       	brne	.+2      	; 0x159c <__fp_cmp+0x3e>
    159a:	a1 40       	sbci	r26, 0x01	; 1
    159c:	a6 95       	lsr	r26
    159e:	8f ef       	ldi	r24, 0xFF	; 255
    15a0:	81 1d       	adc	r24, r1
    15a2:	81 1d       	adc	r24, r1
    15a4:	08 95       	ret

000015a6 <__fp_inf>:
    15a6:	97 f9       	bld	r25, 7
    15a8:	9f 67       	ori	r25, 0x7F	; 127
    15aa:	80 e8       	ldi	r24, 0x80	; 128
    15ac:	70 e0       	ldi	r23, 0x00	; 0
    15ae:	60 e0       	ldi	r22, 0x00	; 0
    15b0:	08 95       	ret

000015b2 <__fp_nan>:
    15b2:	9f ef       	ldi	r25, 0xFF	; 255
    15b4:	80 ec       	ldi	r24, 0xC0	; 192
    15b6:	08 95       	ret

000015b8 <__fp_pscA>:
    15b8:	00 24       	eor	r0, r0
    15ba:	0a 94       	dec	r0
    15bc:	16 16       	cp	r1, r22
    15be:	17 06       	cpc	r1, r23
    15c0:	18 06       	cpc	r1, r24
    15c2:	09 06       	cpc	r0, r25
    15c4:	08 95       	ret

000015c6 <__fp_pscB>:
    15c6:	00 24       	eor	r0, r0
    15c8:	0a 94       	dec	r0
    15ca:	12 16       	cp	r1, r18
    15cc:	13 06       	cpc	r1, r19
    15ce:	14 06       	cpc	r1, r20
    15d0:	05 06       	cpc	r0, r21
    15d2:	08 95       	ret

000015d4 <__fp_round>:
    15d4:	09 2e       	mov	r0, r25
    15d6:	03 94       	inc	r0
    15d8:	00 0c       	add	r0, r0
    15da:	11 f4       	brne	.+4      	; 0x15e0 <__fp_round+0xc>
    15dc:	88 23       	and	r24, r24
    15de:	52 f0       	brmi	.+20     	; 0x15f4 <__fp_round+0x20>
    15e0:	bb 0f       	add	r27, r27
    15e2:	40 f4       	brcc	.+16     	; 0x15f4 <__fp_round+0x20>
    15e4:	bf 2b       	or	r27, r31
    15e6:	11 f4       	brne	.+4      	; 0x15ec <__fp_round+0x18>
    15e8:	60 ff       	sbrs	r22, 0
    15ea:	04 c0       	rjmp	.+8      	; 0x15f4 <__fp_round+0x20>
    15ec:	6f 5f       	subi	r22, 0xFF	; 255
    15ee:	7f 4f       	sbci	r23, 0xFF	; 255
    15f0:	8f 4f       	sbci	r24, 0xFF	; 255
    15f2:	9f 4f       	sbci	r25, 0xFF	; 255
    15f4:	08 95       	ret

000015f6 <__fp_split3>:
    15f6:	57 fd       	sbrc	r21, 7
    15f8:	90 58       	subi	r25, 0x80	; 128
    15fa:	44 0f       	add	r20, r20
    15fc:	55 1f       	adc	r21, r21
    15fe:	59 f0       	breq	.+22     	; 0x1616 <__fp_splitA+0x10>
    1600:	5f 3f       	cpi	r21, 0xFF	; 255
    1602:	71 f0       	breq	.+28     	; 0x1620 <__fp_splitA+0x1a>
    1604:	47 95       	ror	r20

00001606 <__fp_splitA>:
    1606:	88 0f       	add	r24, r24
    1608:	97 fb       	bst	r25, 7
    160a:	99 1f       	adc	r25, r25
    160c:	61 f0       	breq	.+24     	; 0x1626 <__fp_splitA+0x20>
    160e:	9f 3f       	cpi	r25, 0xFF	; 255
    1610:	79 f0       	breq	.+30     	; 0x1630 <__fp_splitA+0x2a>
    1612:	87 95       	ror	r24
    1614:	08 95       	ret
    1616:	12 16       	cp	r1, r18
    1618:	13 06       	cpc	r1, r19
    161a:	14 06       	cpc	r1, r20
    161c:	55 1f       	adc	r21, r21
    161e:	f2 cf       	rjmp	.-28     	; 0x1604 <__fp_split3+0xe>
    1620:	46 95       	lsr	r20
    1622:	f1 df       	rcall	.-30     	; 0x1606 <__fp_splitA>
    1624:	08 c0       	rjmp	.+16     	; 0x1636 <__fp_splitA+0x30>
    1626:	16 16       	cp	r1, r22
    1628:	17 06       	cpc	r1, r23
    162a:	18 06       	cpc	r1, r24
    162c:	99 1f       	adc	r25, r25
    162e:	f1 cf       	rjmp	.-30     	; 0x1612 <__fp_splitA+0xc>
    1630:	86 95       	lsr	r24
    1632:	71 05       	cpc	r23, r1
    1634:	61 05       	cpc	r22, r1
    1636:	08 94       	sec
    1638:	08 95       	ret

0000163a <__fp_zero>:
    163a:	e8 94       	clt

0000163c <__fp_szero>:
    163c:	bb 27       	eor	r27, r27
    163e:	66 27       	eor	r22, r22
    1640:	77 27       	eor	r23, r23
    1642:	cb 01       	movw	r24, r22
    1644:	97 f9       	bld	r25, 7
    1646:	08 95       	ret

00001648 <__gesf2>:
    1648:	0e 94 af 0a 	call	0x155e	; 0x155e <__fp_cmp>
    164c:	08 f4       	brcc	.+2      	; 0x1650 <__gesf2+0x8>
    164e:	8f ef       	ldi	r24, 0xFF	; 255
    1650:	08 95       	ret

00001652 <__mulsf3>:
    1652:	0e 94 3c 0b 	call	0x1678	; 0x1678 <__mulsf3x>
    1656:	0c 94 ea 0a 	jmp	0x15d4	; 0x15d4 <__fp_round>
    165a:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__fp_pscA>
    165e:	38 f0       	brcs	.+14     	; 0x166e <__mulsf3+0x1c>
    1660:	0e 94 e3 0a 	call	0x15c6	; 0x15c6 <__fp_pscB>
    1664:	20 f0       	brcs	.+8      	; 0x166e <__mulsf3+0x1c>
    1666:	95 23       	and	r25, r21
    1668:	11 f0       	breq	.+4      	; 0x166e <__mulsf3+0x1c>
    166a:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__fp_inf>
    166e:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__fp_nan>
    1672:	11 24       	eor	r1, r1
    1674:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_szero>

00001678 <__mulsf3x>:
    1678:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <__fp_split3>
    167c:	70 f3       	brcs	.-36     	; 0x165a <__mulsf3+0x8>

0000167e <__mulsf3_pse>:
    167e:	95 9f       	mul	r25, r21
    1680:	c1 f3       	breq	.-16     	; 0x1672 <__mulsf3+0x20>
    1682:	95 0f       	add	r25, r21
    1684:	50 e0       	ldi	r21, 0x00	; 0
    1686:	55 1f       	adc	r21, r21
    1688:	62 9f       	mul	r22, r18
    168a:	f0 01       	movw	r30, r0
    168c:	72 9f       	mul	r23, r18
    168e:	bb 27       	eor	r27, r27
    1690:	f0 0d       	add	r31, r0
    1692:	b1 1d       	adc	r27, r1
    1694:	63 9f       	mul	r22, r19
    1696:	aa 27       	eor	r26, r26
    1698:	f0 0d       	add	r31, r0
    169a:	b1 1d       	adc	r27, r1
    169c:	aa 1f       	adc	r26, r26
    169e:	64 9f       	mul	r22, r20
    16a0:	66 27       	eor	r22, r22
    16a2:	b0 0d       	add	r27, r0
    16a4:	a1 1d       	adc	r26, r1
    16a6:	66 1f       	adc	r22, r22
    16a8:	82 9f       	mul	r24, r18
    16aa:	22 27       	eor	r18, r18
    16ac:	b0 0d       	add	r27, r0
    16ae:	a1 1d       	adc	r26, r1
    16b0:	62 1f       	adc	r22, r18
    16b2:	73 9f       	mul	r23, r19
    16b4:	b0 0d       	add	r27, r0
    16b6:	a1 1d       	adc	r26, r1
    16b8:	62 1f       	adc	r22, r18
    16ba:	83 9f       	mul	r24, r19
    16bc:	a0 0d       	add	r26, r0
    16be:	61 1d       	adc	r22, r1
    16c0:	22 1f       	adc	r18, r18
    16c2:	74 9f       	mul	r23, r20
    16c4:	33 27       	eor	r19, r19
    16c6:	a0 0d       	add	r26, r0
    16c8:	61 1d       	adc	r22, r1
    16ca:	23 1f       	adc	r18, r19
    16cc:	84 9f       	mul	r24, r20
    16ce:	60 0d       	add	r22, r0
    16d0:	21 1d       	adc	r18, r1
    16d2:	82 2f       	mov	r24, r18
    16d4:	76 2f       	mov	r23, r22
    16d6:	6a 2f       	mov	r22, r26
    16d8:	11 24       	eor	r1, r1
    16da:	9f 57       	subi	r25, 0x7F	; 127
    16dc:	50 40       	sbci	r21, 0x00	; 0
    16de:	9a f0       	brmi	.+38     	; 0x1706 <__mulsf3_pse+0x88>
    16e0:	f1 f0       	breq	.+60     	; 0x171e <__mulsf3_pse+0xa0>
    16e2:	88 23       	and	r24, r24
    16e4:	4a f0       	brmi	.+18     	; 0x16f8 <__mulsf3_pse+0x7a>
    16e6:	ee 0f       	add	r30, r30
    16e8:	ff 1f       	adc	r31, r31
    16ea:	bb 1f       	adc	r27, r27
    16ec:	66 1f       	adc	r22, r22
    16ee:	77 1f       	adc	r23, r23
    16f0:	88 1f       	adc	r24, r24
    16f2:	91 50       	subi	r25, 0x01	; 1
    16f4:	50 40       	sbci	r21, 0x00	; 0
    16f6:	a9 f7       	brne	.-22     	; 0x16e2 <__mulsf3_pse+0x64>
    16f8:	9e 3f       	cpi	r25, 0xFE	; 254
    16fa:	51 05       	cpc	r21, r1
    16fc:	80 f0       	brcs	.+32     	; 0x171e <__mulsf3_pse+0xa0>
    16fe:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__fp_inf>
    1702:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__fp_szero>
    1706:	5f 3f       	cpi	r21, 0xFF	; 255
    1708:	e4 f3       	brlt	.-8      	; 0x1702 <__mulsf3_pse+0x84>
    170a:	98 3e       	cpi	r25, 0xE8	; 232
    170c:	d4 f3       	brlt	.-12     	; 0x1702 <__mulsf3_pse+0x84>
    170e:	86 95       	lsr	r24
    1710:	77 95       	ror	r23
    1712:	67 95       	ror	r22
    1714:	b7 95       	ror	r27
    1716:	f7 95       	ror	r31
    1718:	e7 95       	ror	r30
    171a:	9f 5f       	subi	r25, 0xFF	; 255
    171c:	c1 f7       	brne	.-16     	; 0x170e <__mulsf3_pse+0x90>
    171e:	fe 2b       	or	r31, r30
    1720:	88 0f       	add	r24, r24
    1722:	91 1d       	adc	r25, r1
    1724:	96 95       	lsr	r25
    1726:	87 95       	ror	r24
    1728:	97 f9       	bld	r25, 7
    172a:	08 95       	ret
    172c:	19 f4       	brne	.+6      	; 0x1734 <__mulsf3_pse+0xb6>
    172e:	16 f4       	brtc	.+4      	; 0x1734 <__mulsf3_pse+0xb6>
    1730:	0c 94 d9 0a 	jmp	0x15b2	; 0x15b2 <__fp_nan>
    1734:	0c 94 dc 0b 	jmp	0x17b8	; 0x17b8 <__fp_mpack>

00001738 <sqrt>:
    1738:	0e 94 03 0b 	call	0x1606	; 0x1606 <__fp_splitA>
    173c:	b8 f3       	brcs	.-18     	; 0x172c <__mulsf3_pse+0xae>
    173e:	99 23       	and	r25, r25
    1740:	c9 f3       	breq	.-14     	; 0x1734 <__mulsf3_pse+0xb6>
    1742:	b6 f3       	brts	.-20     	; 0x1730 <__mulsf3_pse+0xb2>
    1744:	9f 57       	subi	r25, 0x7F	; 127
    1746:	55 0b       	sbc	r21, r21
    1748:	87 ff       	sbrs	r24, 7
    174a:	0e 94 ea 0b 	call	0x17d4	; 0x17d4 <__fp_norm2>
    174e:	00 24       	eor	r0, r0
    1750:	a0 e6       	ldi	r26, 0x60	; 96
    1752:	40 ea       	ldi	r20, 0xA0	; 160
    1754:	90 01       	movw	r18, r0
    1756:	80 58       	subi	r24, 0x80	; 128
    1758:	56 95       	lsr	r21
    175a:	97 95       	ror	r25
    175c:	28 f4       	brcc	.+10     	; 0x1768 <sqrt+0x30>
    175e:	80 5c       	subi	r24, 0xC0	; 192
    1760:	66 0f       	add	r22, r22
    1762:	77 1f       	adc	r23, r23
    1764:	88 1f       	adc	r24, r24
    1766:	20 f0       	brcs	.+8      	; 0x1770 <sqrt+0x38>
    1768:	26 17       	cp	r18, r22
    176a:	37 07       	cpc	r19, r23
    176c:	48 07       	cpc	r20, r24
    176e:	30 f4       	brcc	.+12     	; 0x177c <sqrt+0x44>
    1770:	62 1b       	sub	r22, r18
    1772:	73 0b       	sbc	r23, r19
    1774:	84 0b       	sbc	r24, r20
    1776:	20 29       	or	r18, r0
    1778:	31 29       	or	r19, r1
    177a:	4a 2b       	or	r20, r26
    177c:	a6 95       	lsr	r26
    177e:	17 94       	ror	r1
    1780:	07 94       	ror	r0
    1782:	20 25       	eor	r18, r0
    1784:	31 25       	eor	r19, r1
    1786:	4a 27       	eor	r20, r26
    1788:	58 f7       	brcc	.-42     	; 0x1760 <sqrt+0x28>
    178a:	66 0f       	add	r22, r22
    178c:	77 1f       	adc	r23, r23
    178e:	88 1f       	adc	r24, r24
    1790:	20 f0       	brcs	.+8      	; 0x179a <sqrt+0x62>
    1792:	26 17       	cp	r18, r22
    1794:	37 07       	cpc	r19, r23
    1796:	48 07       	cpc	r20, r24
    1798:	30 f4       	brcc	.+12     	; 0x17a6 <sqrt+0x6e>
    179a:	62 0b       	sbc	r22, r18
    179c:	73 0b       	sbc	r23, r19
    179e:	84 0b       	sbc	r24, r20
    17a0:	20 0d       	add	r18, r0
    17a2:	31 1d       	adc	r19, r1
    17a4:	41 1d       	adc	r20, r1
    17a6:	a0 95       	com	r26
    17a8:	81 f7       	brne	.-32     	; 0x178a <sqrt+0x52>
    17aa:	b9 01       	movw	r22, r18
    17ac:	84 2f       	mov	r24, r20
    17ae:	91 58       	subi	r25, 0x81	; 129
    17b0:	88 0f       	add	r24, r24
    17b2:	96 95       	lsr	r25
    17b4:	87 95       	ror	r24
    17b6:	08 95       	ret

000017b8 <__fp_mpack>:
    17b8:	9f 3f       	cpi	r25, 0xFF	; 255
    17ba:	31 f0       	breq	.+12     	; 0x17c8 <__fp_mpack_finite+0xc>

000017bc <__fp_mpack_finite>:
    17bc:	91 50       	subi	r25, 0x01	; 1
    17be:	20 f4       	brcc	.+8      	; 0x17c8 <__fp_mpack_finite+0xc>
    17c0:	87 95       	ror	r24
    17c2:	77 95       	ror	r23
    17c4:	67 95       	ror	r22
    17c6:	b7 95       	ror	r27
    17c8:	88 0f       	add	r24, r24
    17ca:	91 1d       	adc	r25, r1
    17cc:	96 95       	lsr	r25
    17ce:	87 95       	ror	r24
    17d0:	97 f9       	bld	r25, 7
    17d2:	08 95       	ret

000017d4 <__fp_norm2>:
    17d4:	91 50       	subi	r25, 0x01	; 1
    17d6:	50 40       	sbci	r21, 0x00	; 0
    17d8:	66 0f       	add	r22, r22
    17da:	77 1f       	adc	r23, r23
    17dc:	88 1f       	adc	r24, r24
    17de:	d2 f7       	brpl	.-12     	; 0x17d4 <__fp_norm2>
    17e0:	08 95       	ret

000017e2 <__divmodhi4>:
    17e2:	97 fb       	bst	r25, 7
    17e4:	07 2e       	mov	r0, r23
    17e6:	16 f4       	brtc	.+4      	; 0x17ec <__divmodhi4+0xa>
    17e8:	00 94       	com	r0
    17ea:	07 d0       	rcall	.+14     	; 0x17fa <__divmodhi4_neg1>
    17ec:	77 fd       	sbrc	r23, 7
    17ee:	09 d0       	rcall	.+18     	; 0x1802 <__divmodhi4_neg2>
    17f0:	0e 94 2d 0c 	call	0x185a	; 0x185a <__udivmodhi4>
    17f4:	07 fc       	sbrc	r0, 7
    17f6:	05 d0       	rcall	.+10     	; 0x1802 <__divmodhi4_neg2>
    17f8:	3e f4       	brtc	.+14     	; 0x1808 <__divmodhi4_exit>

000017fa <__divmodhi4_neg1>:
    17fa:	90 95       	com	r25
    17fc:	81 95       	neg	r24
    17fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1800:	08 95       	ret

00001802 <__divmodhi4_neg2>:
    1802:	70 95       	com	r23
    1804:	61 95       	neg	r22
    1806:	7f 4f       	sbci	r23, 0xFF	; 255

00001808 <__divmodhi4_exit>:
    1808:	08 95       	ret

0000180a <__udivmodsi4>:
    180a:	a1 e2       	ldi	r26, 0x21	; 33
    180c:	1a 2e       	mov	r1, r26
    180e:	aa 1b       	sub	r26, r26
    1810:	bb 1b       	sub	r27, r27
    1812:	fd 01       	movw	r30, r26
    1814:	0d c0       	rjmp	.+26     	; 0x1830 <__udivmodsi4_ep>

00001816 <__udivmodsi4_loop>:
    1816:	aa 1f       	adc	r26, r26
    1818:	bb 1f       	adc	r27, r27
    181a:	ee 1f       	adc	r30, r30
    181c:	ff 1f       	adc	r31, r31
    181e:	a2 17       	cp	r26, r18
    1820:	b3 07       	cpc	r27, r19
    1822:	e4 07       	cpc	r30, r20
    1824:	f5 07       	cpc	r31, r21
    1826:	20 f0       	brcs	.+8      	; 0x1830 <__udivmodsi4_ep>
    1828:	a2 1b       	sub	r26, r18
    182a:	b3 0b       	sbc	r27, r19
    182c:	e4 0b       	sbc	r30, r20
    182e:	f5 0b       	sbc	r31, r21

00001830 <__udivmodsi4_ep>:
    1830:	66 1f       	adc	r22, r22
    1832:	77 1f       	adc	r23, r23
    1834:	88 1f       	adc	r24, r24
    1836:	99 1f       	adc	r25, r25
    1838:	1a 94       	dec	r1
    183a:	69 f7       	brne	.-38     	; 0x1816 <__udivmodsi4_loop>
    183c:	60 95       	com	r22
    183e:	70 95       	com	r23
    1840:	80 95       	com	r24
    1842:	90 95       	com	r25
    1844:	9b 01       	movw	r18, r22
    1846:	ac 01       	movw	r20, r24
    1848:	bd 01       	movw	r22, r26
    184a:	cf 01       	movw	r24, r30
    184c:	08 95       	ret

0000184e <__tablejump2__>:
    184e:	ee 0f       	add	r30, r30
    1850:	ff 1f       	adc	r31, r31
    1852:	05 90       	lpm	r0, Z+
    1854:	f4 91       	lpm	r31, Z
    1856:	e0 2d       	mov	r30, r0
    1858:	09 94       	ijmp

0000185a <__udivmodhi4>:
    185a:	aa 1b       	sub	r26, r26
    185c:	bb 1b       	sub	r27, r27
    185e:	51 e1       	ldi	r21, 0x11	; 17
    1860:	07 c0       	rjmp	.+14     	; 0x1870 <__udivmodhi4_ep>

00001862 <__udivmodhi4_loop>:
    1862:	aa 1f       	adc	r26, r26
    1864:	bb 1f       	adc	r27, r27
    1866:	a6 17       	cp	r26, r22
    1868:	b7 07       	cpc	r27, r23
    186a:	10 f0       	brcs	.+4      	; 0x1870 <__udivmodhi4_ep>
    186c:	a6 1b       	sub	r26, r22
    186e:	b7 0b       	sbc	r27, r23

00001870 <__udivmodhi4_ep>:
    1870:	88 1f       	adc	r24, r24
    1872:	99 1f       	adc	r25, r25
    1874:	5a 95       	dec	r21
    1876:	a9 f7       	brne	.-22     	; 0x1862 <__udivmodhi4_loop>
    1878:	80 95       	com	r24
    187a:	90 95       	com	r25
    187c:	bc 01       	movw	r22, r24
    187e:	cd 01       	movw	r24, r26
    1880:	08 95       	ret

00001882 <malloc>:
    1882:	0f 93       	push	r16
    1884:	1f 93       	push	r17
    1886:	cf 93       	push	r28
    1888:	df 93       	push	r29
    188a:	82 30       	cpi	r24, 0x02	; 2
    188c:	91 05       	cpc	r25, r1
    188e:	10 f4       	brcc	.+4      	; 0x1894 <malloc+0x12>
    1890:	82 e0       	ldi	r24, 0x02	; 2
    1892:	90 e0       	ldi	r25, 0x00	; 0
    1894:	e0 91 6f 04 	lds	r30, 0x046F	; 0x80046f <__flp>
    1898:	f0 91 70 04 	lds	r31, 0x0470	; 0x800470 <__flp+0x1>
    189c:	20 e0       	ldi	r18, 0x00	; 0
    189e:	30 e0       	ldi	r19, 0x00	; 0
    18a0:	a0 e0       	ldi	r26, 0x00	; 0
    18a2:	b0 e0       	ldi	r27, 0x00	; 0
    18a4:	30 97       	sbiw	r30, 0x00	; 0
    18a6:	19 f1       	breq	.+70     	; 0x18ee <malloc+0x6c>
    18a8:	40 81       	ld	r20, Z
    18aa:	51 81       	ldd	r21, Z+1	; 0x01
    18ac:	02 81       	ldd	r16, Z+2	; 0x02
    18ae:	13 81       	ldd	r17, Z+3	; 0x03
    18b0:	48 17       	cp	r20, r24
    18b2:	59 07       	cpc	r21, r25
    18b4:	c8 f0       	brcs	.+50     	; 0x18e8 <malloc+0x66>
    18b6:	84 17       	cp	r24, r20
    18b8:	95 07       	cpc	r25, r21
    18ba:	69 f4       	brne	.+26     	; 0x18d6 <malloc+0x54>
    18bc:	10 97       	sbiw	r26, 0x00	; 0
    18be:	31 f0       	breq	.+12     	; 0x18cc <malloc+0x4a>
    18c0:	12 96       	adiw	r26, 0x02	; 2
    18c2:	0c 93       	st	X, r16
    18c4:	12 97       	sbiw	r26, 0x02	; 2
    18c6:	13 96       	adiw	r26, 0x03	; 3
    18c8:	1c 93       	st	X, r17
    18ca:	27 c0       	rjmp	.+78     	; 0x191a <malloc+0x98>
    18cc:	00 93 6f 04 	sts	0x046F, r16	; 0x80046f <__flp>
    18d0:	10 93 70 04 	sts	0x0470, r17	; 0x800470 <__flp+0x1>
    18d4:	22 c0       	rjmp	.+68     	; 0x191a <malloc+0x98>
    18d6:	21 15       	cp	r18, r1
    18d8:	31 05       	cpc	r19, r1
    18da:	19 f0       	breq	.+6      	; 0x18e2 <malloc+0x60>
    18dc:	42 17       	cp	r20, r18
    18de:	53 07       	cpc	r21, r19
    18e0:	18 f4       	brcc	.+6      	; 0x18e8 <malloc+0x66>
    18e2:	9a 01       	movw	r18, r20
    18e4:	bd 01       	movw	r22, r26
    18e6:	ef 01       	movw	r28, r30
    18e8:	df 01       	movw	r26, r30
    18ea:	f8 01       	movw	r30, r16
    18ec:	db cf       	rjmp	.-74     	; 0x18a4 <malloc+0x22>
    18ee:	21 15       	cp	r18, r1
    18f0:	31 05       	cpc	r19, r1
    18f2:	f9 f0       	breq	.+62     	; 0x1932 <malloc+0xb0>
    18f4:	28 1b       	sub	r18, r24
    18f6:	39 0b       	sbc	r19, r25
    18f8:	24 30       	cpi	r18, 0x04	; 4
    18fa:	31 05       	cpc	r19, r1
    18fc:	80 f4       	brcc	.+32     	; 0x191e <malloc+0x9c>
    18fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1900:	9b 81       	ldd	r25, Y+3	; 0x03
    1902:	61 15       	cp	r22, r1
    1904:	71 05       	cpc	r23, r1
    1906:	21 f0       	breq	.+8      	; 0x1910 <malloc+0x8e>
    1908:	fb 01       	movw	r30, r22
    190a:	93 83       	std	Z+3, r25	; 0x03
    190c:	82 83       	std	Z+2, r24	; 0x02
    190e:	04 c0       	rjmp	.+8      	; 0x1918 <malloc+0x96>
    1910:	90 93 70 04 	sts	0x0470, r25	; 0x800470 <__flp+0x1>
    1914:	80 93 6f 04 	sts	0x046F, r24	; 0x80046f <__flp>
    1918:	fe 01       	movw	r30, r28
    191a:	32 96       	adiw	r30, 0x02	; 2
    191c:	44 c0       	rjmp	.+136    	; 0x19a6 <malloc+0x124>
    191e:	fe 01       	movw	r30, r28
    1920:	e2 0f       	add	r30, r18
    1922:	f3 1f       	adc	r31, r19
    1924:	81 93       	st	Z+, r24
    1926:	91 93       	st	Z+, r25
    1928:	22 50       	subi	r18, 0x02	; 2
    192a:	31 09       	sbc	r19, r1
    192c:	39 83       	std	Y+1, r19	; 0x01
    192e:	28 83       	st	Y, r18
    1930:	3a c0       	rjmp	.+116    	; 0x19a6 <malloc+0x124>
    1932:	20 91 6d 04 	lds	r18, 0x046D	; 0x80046d <__brkval>
    1936:	30 91 6e 04 	lds	r19, 0x046E	; 0x80046e <__brkval+0x1>
    193a:	23 2b       	or	r18, r19
    193c:	41 f4       	brne	.+16     	; 0x194e <malloc+0xcc>
    193e:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    1942:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    1946:	30 93 6e 04 	sts	0x046E, r19	; 0x80046e <__brkval+0x1>
    194a:	20 93 6d 04 	sts	0x046D, r18	; 0x80046d <__brkval>
    194e:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1952:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1956:	21 15       	cp	r18, r1
    1958:	31 05       	cpc	r19, r1
    195a:	41 f4       	brne	.+16     	; 0x196c <malloc+0xea>
    195c:	2d b7       	in	r18, 0x3d	; 61
    195e:	3e b7       	in	r19, 0x3e	; 62
    1960:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    1964:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    1968:	24 1b       	sub	r18, r20
    196a:	35 0b       	sbc	r19, r21
    196c:	e0 91 6d 04 	lds	r30, 0x046D	; 0x80046d <__brkval>
    1970:	f0 91 6e 04 	lds	r31, 0x046E	; 0x80046e <__brkval+0x1>
    1974:	e2 17       	cp	r30, r18
    1976:	f3 07       	cpc	r31, r19
    1978:	a0 f4       	brcc	.+40     	; 0x19a2 <malloc+0x120>
    197a:	2e 1b       	sub	r18, r30
    197c:	3f 0b       	sbc	r19, r31
    197e:	28 17       	cp	r18, r24
    1980:	39 07       	cpc	r19, r25
    1982:	78 f0       	brcs	.+30     	; 0x19a2 <malloc+0x120>
    1984:	ac 01       	movw	r20, r24
    1986:	4e 5f       	subi	r20, 0xFE	; 254
    1988:	5f 4f       	sbci	r21, 0xFF	; 255
    198a:	24 17       	cp	r18, r20
    198c:	35 07       	cpc	r19, r21
    198e:	48 f0       	brcs	.+18     	; 0x19a2 <malloc+0x120>
    1990:	4e 0f       	add	r20, r30
    1992:	5f 1f       	adc	r21, r31
    1994:	50 93 6e 04 	sts	0x046E, r21	; 0x80046e <__brkval+0x1>
    1998:	40 93 6d 04 	sts	0x046D, r20	; 0x80046d <__brkval>
    199c:	81 93       	st	Z+, r24
    199e:	91 93       	st	Z+, r25
    19a0:	02 c0       	rjmp	.+4      	; 0x19a6 <malloc+0x124>
    19a2:	e0 e0       	ldi	r30, 0x00	; 0
    19a4:	f0 e0       	ldi	r31, 0x00	; 0
    19a6:	cf 01       	movw	r24, r30
    19a8:	df 91       	pop	r29
    19aa:	cf 91       	pop	r28
    19ac:	1f 91       	pop	r17
    19ae:	0f 91       	pop	r16
    19b0:	08 95       	ret

000019b2 <free>:
    19b2:	cf 93       	push	r28
    19b4:	df 93       	push	r29
    19b6:	00 97       	sbiw	r24, 0x00	; 0
    19b8:	09 f4       	brne	.+2      	; 0x19bc <free+0xa>
    19ba:	81 c0       	rjmp	.+258    	; 0x1abe <free+0x10c>
    19bc:	fc 01       	movw	r30, r24
    19be:	32 97       	sbiw	r30, 0x02	; 2
    19c0:	13 82       	std	Z+3, r1	; 0x03
    19c2:	12 82       	std	Z+2, r1	; 0x02
    19c4:	a0 91 6f 04 	lds	r26, 0x046F	; 0x80046f <__flp>
    19c8:	b0 91 70 04 	lds	r27, 0x0470	; 0x800470 <__flp+0x1>
    19cc:	10 97       	sbiw	r26, 0x00	; 0
    19ce:	81 f4       	brne	.+32     	; 0x19f0 <free+0x3e>
    19d0:	20 81       	ld	r18, Z
    19d2:	31 81       	ldd	r19, Z+1	; 0x01
    19d4:	82 0f       	add	r24, r18
    19d6:	93 1f       	adc	r25, r19
    19d8:	20 91 6d 04 	lds	r18, 0x046D	; 0x80046d <__brkval>
    19dc:	30 91 6e 04 	lds	r19, 0x046E	; 0x80046e <__brkval+0x1>
    19e0:	28 17       	cp	r18, r24
    19e2:	39 07       	cpc	r19, r25
    19e4:	51 f5       	brne	.+84     	; 0x1a3a <free+0x88>
    19e6:	f0 93 6e 04 	sts	0x046E, r31	; 0x80046e <__brkval+0x1>
    19ea:	e0 93 6d 04 	sts	0x046D, r30	; 0x80046d <__brkval>
    19ee:	67 c0       	rjmp	.+206    	; 0x1abe <free+0x10c>
    19f0:	ed 01       	movw	r28, r26
    19f2:	20 e0       	ldi	r18, 0x00	; 0
    19f4:	30 e0       	ldi	r19, 0x00	; 0
    19f6:	ce 17       	cp	r28, r30
    19f8:	df 07       	cpc	r29, r31
    19fa:	40 f4       	brcc	.+16     	; 0x1a0c <free+0x5a>
    19fc:	4a 81       	ldd	r20, Y+2	; 0x02
    19fe:	5b 81       	ldd	r21, Y+3	; 0x03
    1a00:	9e 01       	movw	r18, r28
    1a02:	41 15       	cp	r20, r1
    1a04:	51 05       	cpc	r21, r1
    1a06:	f1 f0       	breq	.+60     	; 0x1a44 <free+0x92>
    1a08:	ea 01       	movw	r28, r20
    1a0a:	f5 cf       	rjmp	.-22     	; 0x19f6 <free+0x44>
    1a0c:	d3 83       	std	Z+3, r29	; 0x03
    1a0e:	c2 83       	std	Z+2, r28	; 0x02
    1a10:	40 81       	ld	r20, Z
    1a12:	51 81       	ldd	r21, Z+1	; 0x01
    1a14:	84 0f       	add	r24, r20
    1a16:	95 1f       	adc	r25, r21
    1a18:	c8 17       	cp	r28, r24
    1a1a:	d9 07       	cpc	r29, r25
    1a1c:	59 f4       	brne	.+22     	; 0x1a34 <free+0x82>
    1a1e:	88 81       	ld	r24, Y
    1a20:	99 81       	ldd	r25, Y+1	; 0x01
    1a22:	84 0f       	add	r24, r20
    1a24:	95 1f       	adc	r25, r21
    1a26:	02 96       	adiw	r24, 0x02	; 2
    1a28:	91 83       	std	Z+1, r25	; 0x01
    1a2a:	80 83       	st	Z, r24
    1a2c:	8a 81       	ldd	r24, Y+2	; 0x02
    1a2e:	9b 81       	ldd	r25, Y+3	; 0x03
    1a30:	93 83       	std	Z+3, r25	; 0x03
    1a32:	82 83       	std	Z+2, r24	; 0x02
    1a34:	21 15       	cp	r18, r1
    1a36:	31 05       	cpc	r19, r1
    1a38:	29 f4       	brne	.+10     	; 0x1a44 <free+0x92>
    1a3a:	f0 93 70 04 	sts	0x0470, r31	; 0x800470 <__flp+0x1>
    1a3e:	e0 93 6f 04 	sts	0x046F, r30	; 0x80046f <__flp>
    1a42:	3d c0       	rjmp	.+122    	; 0x1abe <free+0x10c>
    1a44:	e9 01       	movw	r28, r18
    1a46:	fb 83       	std	Y+3, r31	; 0x03
    1a48:	ea 83       	std	Y+2, r30	; 0x02
    1a4a:	49 91       	ld	r20, Y+
    1a4c:	59 91       	ld	r21, Y+
    1a4e:	c4 0f       	add	r28, r20
    1a50:	d5 1f       	adc	r29, r21
    1a52:	ec 17       	cp	r30, r28
    1a54:	fd 07       	cpc	r31, r29
    1a56:	61 f4       	brne	.+24     	; 0x1a70 <free+0xbe>
    1a58:	80 81       	ld	r24, Z
    1a5a:	91 81       	ldd	r25, Z+1	; 0x01
    1a5c:	84 0f       	add	r24, r20
    1a5e:	95 1f       	adc	r25, r21
    1a60:	02 96       	adiw	r24, 0x02	; 2
    1a62:	e9 01       	movw	r28, r18
    1a64:	99 83       	std	Y+1, r25	; 0x01
    1a66:	88 83       	st	Y, r24
    1a68:	82 81       	ldd	r24, Z+2	; 0x02
    1a6a:	93 81       	ldd	r25, Z+3	; 0x03
    1a6c:	9b 83       	std	Y+3, r25	; 0x03
    1a6e:	8a 83       	std	Y+2, r24	; 0x02
    1a70:	e0 e0       	ldi	r30, 0x00	; 0
    1a72:	f0 e0       	ldi	r31, 0x00	; 0
    1a74:	12 96       	adiw	r26, 0x02	; 2
    1a76:	8d 91       	ld	r24, X+
    1a78:	9c 91       	ld	r25, X
    1a7a:	13 97       	sbiw	r26, 0x03	; 3
    1a7c:	00 97       	sbiw	r24, 0x00	; 0
    1a7e:	19 f0       	breq	.+6      	; 0x1a86 <free+0xd4>
    1a80:	fd 01       	movw	r30, r26
    1a82:	dc 01       	movw	r26, r24
    1a84:	f7 cf       	rjmp	.-18     	; 0x1a74 <free+0xc2>
    1a86:	8d 91       	ld	r24, X+
    1a88:	9c 91       	ld	r25, X
    1a8a:	11 97       	sbiw	r26, 0x01	; 1
    1a8c:	9d 01       	movw	r18, r26
    1a8e:	2e 5f       	subi	r18, 0xFE	; 254
    1a90:	3f 4f       	sbci	r19, 0xFF	; 255
    1a92:	82 0f       	add	r24, r18
    1a94:	93 1f       	adc	r25, r19
    1a96:	20 91 6d 04 	lds	r18, 0x046D	; 0x80046d <__brkval>
    1a9a:	30 91 6e 04 	lds	r19, 0x046E	; 0x80046e <__brkval+0x1>
    1a9e:	28 17       	cp	r18, r24
    1aa0:	39 07       	cpc	r19, r25
    1aa2:	69 f4       	brne	.+26     	; 0x1abe <free+0x10c>
    1aa4:	30 97       	sbiw	r30, 0x00	; 0
    1aa6:	29 f4       	brne	.+10     	; 0x1ab2 <free+0x100>
    1aa8:	10 92 70 04 	sts	0x0470, r1	; 0x800470 <__flp+0x1>
    1aac:	10 92 6f 04 	sts	0x046F, r1	; 0x80046f <__flp>
    1ab0:	02 c0       	rjmp	.+4      	; 0x1ab6 <free+0x104>
    1ab2:	13 82       	std	Z+3, r1	; 0x03
    1ab4:	12 82       	std	Z+2, r1	; 0x02
    1ab6:	b0 93 6e 04 	sts	0x046E, r27	; 0x80046e <__brkval+0x1>
    1aba:	a0 93 6d 04 	sts	0x046D, r26	; 0x80046d <__brkval>
    1abe:	df 91       	pop	r29
    1ac0:	cf 91       	pop	r28
    1ac2:	08 95       	ret

00001ac4 <strcat>:
    1ac4:	fb 01       	movw	r30, r22
    1ac6:	dc 01       	movw	r26, r24
    1ac8:	0d 90       	ld	r0, X+
    1aca:	00 20       	and	r0, r0
    1acc:	e9 f7       	brne	.-6      	; 0x1ac8 <strcat+0x4>
    1ace:	11 97       	sbiw	r26, 0x01	; 1
    1ad0:	01 90       	ld	r0, Z+
    1ad2:	0d 92       	st	X+, r0
    1ad4:	00 20       	and	r0, r0
    1ad6:	e1 f7       	brne	.-8      	; 0x1ad0 <strcat+0xc>
    1ad8:	08 95       	ret

00001ada <strcpy>:
    1ada:	fb 01       	movw	r30, r22
    1adc:	dc 01       	movw	r26, r24
    1ade:	01 90       	ld	r0, Z+
    1ae0:	0d 92       	st	X+, r0
    1ae2:	00 20       	and	r0, r0
    1ae4:	e1 f7       	brne	.-8      	; 0x1ade <strcpy+0x4>
    1ae6:	08 95       	ret

00001ae8 <__itoa_ncheck>:
    1ae8:	bb 27       	eor	r27, r27
    1aea:	4a 30       	cpi	r20, 0x0A	; 10
    1aec:	31 f4       	brne	.+12     	; 0x1afa <__itoa_ncheck+0x12>
    1aee:	99 23       	and	r25, r25
    1af0:	22 f4       	brpl	.+8      	; 0x1afa <__itoa_ncheck+0x12>
    1af2:	bd e2       	ldi	r27, 0x2D	; 45
    1af4:	90 95       	com	r25
    1af6:	81 95       	neg	r24
    1af8:	9f 4f       	sbci	r25, 0xFF	; 255
    1afa:	0c 94 80 0d 	jmp	0x1b00	; 0x1b00 <__utoa_common>

00001afe <__utoa_ncheck>:
    1afe:	bb 27       	eor	r27, r27

00001b00 <__utoa_common>:
    1b00:	fb 01       	movw	r30, r22
    1b02:	55 27       	eor	r21, r21
    1b04:	aa 27       	eor	r26, r26
    1b06:	88 0f       	add	r24, r24
    1b08:	99 1f       	adc	r25, r25
    1b0a:	aa 1f       	adc	r26, r26
    1b0c:	a4 17       	cp	r26, r20
    1b0e:	10 f0       	brcs	.+4      	; 0x1b14 <__utoa_common+0x14>
    1b10:	a4 1b       	sub	r26, r20
    1b12:	83 95       	inc	r24
    1b14:	50 51       	subi	r21, 0x10	; 16
    1b16:	b9 f7       	brne	.-18     	; 0x1b06 <__utoa_common+0x6>
    1b18:	a0 5d       	subi	r26, 0xD0	; 208
    1b1a:	aa 33       	cpi	r26, 0x3A	; 58
    1b1c:	08 f0       	brcs	.+2      	; 0x1b20 <__utoa_common+0x20>
    1b1e:	a9 5d       	subi	r26, 0xD9	; 217
    1b20:	a1 93       	st	Z+, r26
    1b22:	00 97       	sbiw	r24, 0x00	; 0
    1b24:	79 f7       	brne	.-34     	; 0x1b04 <__utoa_common+0x4>
    1b26:	b1 11       	cpse	r27, r1
    1b28:	b1 93       	st	Z+, r27
    1b2a:	11 92       	st	Z+, r1
    1b2c:	cb 01       	movw	r24, r22
    1b2e:	0c 94 b2 0f 	jmp	0x1f64	; 0x1f64 <strrev>

00001b32 <sprintf>:
    1b32:	ae e0       	ldi	r26, 0x0E	; 14
    1b34:	b0 e0       	ldi	r27, 0x00	; 0
    1b36:	ef e9       	ldi	r30, 0x9F	; 159
    1b38:	fd e0       	ldi	r31, 0x0D	; 13
    1b3a:	0c 94 6a 10 	jmp	0x20d4	; 0x20d4 <__prologue_saves__+0x1c>
    1b3e:	0d 89       	ldd	r16, Y+21	; 0x15
    1b40:	1e 89       	ldd	r17, Y+22	; 0x16
    1b42:	86 e0       	ldi	r24, 0x06	; 6
    1b44:	8c 83       	std	Y+4, r24	; 0x04
    1b46:	1a 83       	std	Y+2, r17	; 0x02
    1b48:	09 83       	std	Y+1, r16	; 0x01
    1b4a:	8f ef       	ldi	r24, 0xFF	; 255
    1b4c:	9f e7       	ldi	r25, 0x7F	; 127
    1b4e:	9e 83       	std	Y+6, r25	; 0x06
    1b50:	8d 83       	std	Y+5, r24	; 0x05
    1b52:	ae 01       	movw	r20, r28
    1b54:	47 5e       	subi	r20, 0xE7	; 231
    1b56:	5f 4f       	sbci	r21, 0xFF	; 255
    1b58:	6f 89       	ldd	r22, Y+23	; 0x17
    1b5a:	78 8d       	ldd	r23, Y+24	; 0x18
    1b5c:	ce 01       	movw	r24, r28
    1b5e:	01 96       	adiw	r24, 0x01	; 1
    1b60:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <vfprintf>
    1b64:	ef 81       	ldd	r30, Y+7	; 0x07
    1b66:	f8 85       	ldd	r31, Y+8	; 0x08
    1b68:	e0 0f       	add	r30, r16
    1b6a:	f1 1f       	adc	r31, r17
    1b6c:	10 82       	st	Z, r1
    1b6e:	2e 96       	adiw	r28, 0x0e	; 14
    1b70:	e4 e0       	ldi	r30, 0x04	; 4
    1b72:	0c 94 86 10 	jmp	0x210c	; 0x210c <__epilogue_restores__+0x1c>

00001b76 <vfprintf>:
    1b76:	ab e0       	ldi	r26, 0x0B	; 11
    1b78:	b0 e0       	ldi	r27, 0x00	; 0
    1b7a:	e1 ec       	ldi	r30, 0xC1	; 193
    1b7c:	fd e0       	ldi	r31, 0x0D	; 13
    1b7e:	0c 94 5c 10 	jmp	0x20b8	; 0x20b8 <__prologue_saves__>
    1b82:	6c 01       	movw	r12, r24
    1b84:	7b 01       	movw	r14, r22
    1b86:	8a 01       	movw	r16, r20
    1b88:	fc 01       	movw	r30, r24
    1b8a:	17 82       	std	Z+7, r1	; 0x07
    1b8c:	16 82       	std	Z+6, r1	; 0x06
    1b8e:	83 81       	ldd	r24, Z+3	; 0x03
    1b90:	81 ff       	sbrs	r24, 1
    1b92:	cc c1       	rjmp	.+920    	; 0x1f2c <vfprintf+0x3b6>
    1b94:	ce 01       	movw	r24, r28
    1b96:	01 96       	adiw	r24, 0x01	; 1
    1b98:	3c 01       	movw	r6, r24
    1b9a:	f6 01       	movw	r30, r12
    1b9c:	93 81       	ldd	r25, Z+3	; 0x03
    1b9e:	f7 01       	movw	r30, r14
    1ba0:	93 fd       	sbrc	r25, 3
    1ba2:	85 91       	lpm	r24, Z+
    1ba4:	93 ff       	sbrs	r25, 3
    1ba6:	81 91       	ld	r24, Z+
    1ba8:	7f 01       	movw	r14, r30
    1baa:	88 23       	and	r24, r24
    1bac:	09 f4       	brne	.+2      	; 0x1bb0 <vfprintf+0x3a>
    1bae:	ba c1       	rjmp	.+884    	; 0x1f24 <vfprintf+0x3ae>
    1bb0:	85 32       	cpi	r24, 0x25	; 37
    1bb2:	39 f4       	brne	.+14     	; 0x1bc2 <vfprintf+0x4c>
    1bb4:	93 fd       	sbrc	r25, 3
    1bb6:	85 91       	lpm	r24, Z+
    1bb8:	93 ff       	sbrs	r25, 3
    1bba:	81 91       	ld	r24, Z+
    1bbc:	7f 01       	movw	r14, r30
    1bbe:	85 32       	cpi	r24, 0x25	; 37
    1bc0:	29 f4       	brne	.+10     	; 0x1bcc <vfprintf+0x56>
    1bc2:	b6 01       	movw	r22, r12
    1bc4:	90 e0       	ldi	r25, 0x00	; 0
    1bc6:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1bca:	e7 cf       	rjmp	.-50     	; 0x1b9a <vfprintf+0x24>
    1bcc:	91 2c       	mov	r9, r1
    1bce:	21 2c       	mov	r2, r1
    1bd0:	31 2c       	mov	r3, r1
    1bd2:	ff e1       	ldi	r31, 0x1F	; 31
    1bd4:	f3 15       	cp	r31, r3
    1bd6:	d8 f0       	brcs	.+54     	; 0x1c0e <vfprintf+0x98>
    1bd8:	8b 32       	cpi	r24, 0x2B	; 43
    1bda:	79 f0       	breq	.+30     	; 0x1bfa <vfprintf+0x84>
    1bdc:	38 f4       	brcc	.+14     	; 0x1bec <vfprintf+0x76>
    1bde:	80 32       	cpi	r24, 0x20	; 32
    1be0:	79 f0       	breq	.+30     	; 0x1c00 <vfprintf+0x8a>
    1be2:	83 32       	cpi	r24, 0x23	; 35
    1be4:	a1 f4       	brne	.+40     	; 0x1c0e <vfprintf+0x98>
    1be6:	23 2d       	mov	r18, r3
    1be8:	20 61       	ori	r18, 0x10	; 16
    1bea:	1d c0       	rjmp	.+58     	; 0x1c26 <vfprintf+0xb0>
    1bec:	8d 32       	cpi	r24, 0x2D	; 45
    1bee:	61 f0       	breq	.+24     	; 0x1c08 <vfprintf+0x92>
    1bf0:	80 33       	cpi	r24, 0x30	; 48
    1bf2:	69 f4       	brne	.+26     	; 0x1c0e <vfprintf+0x98>
    1bf4:	23 2d       	mov	r18, r3
    1bf6:	21 60       	ori	r18, 0x01	; 1
    1bf8:	16 c0       	rjmp	.+44     	; 0x1c26 <vfprintf+0xb0>
    1bfa:	83 2d       	mov	r24, r3
    1bfc:	82 60       	ori	r24, 0x02	; 2
    1bfe:	38 2e       	mov	r3, r24
    1c00:	e3 2d       	mov	r30, r3
    1c02:	e4 60       	ori	r30, 0x04	; 4
    1c04:	3e 2e       	mov	r3, r30
    1c06:	2a c0       	rjmp	.+84     	; 0x1c5c <vfprintf+0xe6>
    1c08:	f3 2d       	mov	r31, r3
    1c0a:	f8 60       	ori	r31, 0x08	; 8
    1c0c:	1d c0       	rjmp	.+58     	; 0x1c48 <vfprintf+0xd2>
    1c0e:	37 fc       	sbrc	r3, 7
    1c10:	2d c0       	rjmp	.+90     	; 0x1c6c <vfprintf+0xf6>
    1c12:	20 ed       	ldi	r18, 0xD0	; 208
    1c14:	28 0f       	add	r18, r24
    1c16:	2a 30       	cpi	r18, 0x0A	; 10
    1c18:	40 f0       	brcs	.+16     	; 0x1c2a <vfprintf+0xb4>
    1c1a:	8e 32       	cpi	r24, 0x2E	; 46
    1c1c:	b9 f4       	brne	.+46     	; 0x1c4c <vfprintf+0xd6>
    1c1e:	36 fc       	sbrc	r3, 6
    1c20:	81 c1       	rjmp	.+770    	; 0x1f24 <vfprintf+0x3ae>
    1c22:	23 2d       	mov	r18, r3
    1c24:	20 64       	ori	r18, 0x40	; 64
    1c26:	32 2e       	mov	r3, r18
    1c28:	19 c0       	rjmp	.+50     	; 0x1c5c <vfprintf+0xe6>
    1c2a:	36 fe       	sbrs	r3, 6
    1c2c:	06 c0       	rjmp	.+12     	; 0x1c3a <vfprintf+0xc4>
    1c2e:	8a e0       	ldi	r24, 0x0A	; 10
    1c30:	98 9e       	mul	r9, r24
    1c32:	20 0d       	add	r18, r0
    1c34:	11 24       	eor	r1, r1
    1c36:	92 2e       	mov	r9, r18
    1c38:	11 c0       	rjmp	.+34     	; 0x1c5c <vfprintf+0xe6>
    1c3a:	ea e0       	ldi	r30, 0x0A	; 10
    1c3c:	2e 9e       	mul	r2, r30
    1c3e:	20 0d       	add	r18, r0
    1c40:	11 24       	eor	r1, r1
    1c42:	22 2e       	mov	r2, r18
    1c44:	f3 2d       	mov	r31, r3
    1c46:	f0 62       	ori	r31, 0x20	; 32
    1c48:	3f 2e       	mov	r3, r31
    1c4a:	08 c0       	rjmp	.+16     	; 0x1c5c <vfprintf+0xe6>
    1c4c:	8c 36       	cpi	r24, 0x6C	; 108
    1c4e:	21 f4       	brne	.+8      	; 0x1c58 <vfprintf+0xe2>
    1c50:	83 2d       	mov	r24, r3
    1c52:	80 68       	ori	r24, 0x80	; 128
    1c54:	38 2e       	mov	r3, r24
    1c56:	02 c0       	rjmp	.+4      	; 0x1c5c <vfprintf+0xe6>
    1c58:	88 36       	cpi	r24, 0x68	; 104
    1c5a:	41 f4       	brne	.+16     	; 0x1c6c <vfprintf+0xf6>
    1c5c:	f7 01       	movw	r30, r14
    1c5e:	93 fd       	sbrc	r25, 3
    1c60:	85 91       	lpm	r24, Z+
    1c62:	93 ff       	sbrs	r25, 3
    1c64:	81 91       	ld	r24, Z+
    1c66:	7f 01       	movw	r14, r30
    1c68:	81 11       	cpse	r24, r1
    1c6a:	b3 cf       	rjmp	.-154    	; 0x1bd2 <vfprintf+0x5c>
    1c6c:	98 2f       	mov	r25, r24
    1c6e:	9f 7d       	andi	r25, 0xDF	; 223
    1c70:	95 54       	subi	r25, 0x45	; 69
    1c72:	93 30       	cpi	r25, 0x03	; 3
    1c74:	28 f4       	brcc	.+10     	; 0x1c80 <vfprintf+0x10a>
    1c76:	0c 5f       	subi	r16, 0xFC	; 252
    1c78:	1f 4f       	sbci	r17, 0xFF	; 255
    1c7a:	9f e3       	ldi	r25, 0x3F	; 63
    1c7c:	99 83       	std	Y+1, r25	; 0x01
    1c7e:	0d c0       	rjmp	.+26     	; 0x1c9a <vfprintf+0x124>
    1c80:	83 36       	cpi	r24, 0x63	; 99
    1c82:	31 f0       	breq	.+12     	; 0x1c90 <vfprintf+0x11a>
    1c84:	83 37       	cpi	r24, 0x73	; 115
    1c86:	71 f0       	breq	.+28     	; 0x1ca4 <vfprintf+0x12e>
    1c88:	83 35       	cpi	r24, 0x53	; 83
    1c8a:	09 f0       	breq	.+2      	; 0x1c8e <vfprintf+0x118>
    1c8c:	59 c0       	rjmp	.+178    	; 0x1d40 <vfprintf+0x1ca>
    1c8e:	21 c0       	rjmp	.+66     	; 0x1cd2 <vfprintf+0x15c>
    1c90:	f8 01       	movw	r30, r16
    1c92:	80 81       	ld	r24, Z
    1c94:	89 83       	std	Y+1, r24	; 0x01
    1c96:	0e 5f       	subi	r16, 0xFE	; 254
    1c98:	1f 4f       	sbci	r17, 0xFF	; 255
    1c9a:	88 24       	eor	r8, r8
    1c9c:	83 94       	inc	r8
    1c9e:	91 2c       	mov	r9, r1
    1ca0:	53 01       	movw	r10, r6
    1ca2:	13 c0       	rjmp	.+38     	; 0x1cca <vfprintf+0x154>
    1ca4:	28 01       	movw	r4, r16
    1ca6:	f2 e0       	ldi	r31, 0x02	; 2
    1ca8:	4f 0e       	add	r4, r31
    1caa:	51 1c       	adc	r5, r1
    1cac:	f8 01       	movw	r30, r16
    1cae:	a0 80       	ld	r10, Z
    1cb0:	b1 80       	ldd	r11, Z+1	; 0x01
    1cb2:	36 fe       	sbrs	r3, 6
    1cb4:	03 c0       	rjmp	.+6      	; 0x1cbc <vfprintf+0x146>
    1cb6:	69 2d       	mov	r22, r9
    1cb8:	70 e0       	ldi	r23, 0x00	; 0
    1cba:	02 c0       	rjmp	.+4      	; 0x1cc0 <vfprintf+0x14a>
    1cbc:	6f ef       	ldi	r22, 0xFF	; 255
    1cbe:	7f ef       	ldi	r23, 0xFF	; 255
    1cc0:	c5 01       	movw	r24, r10
    1cc2:	0e 94 a7 0f 	call	0x1f4e	; 0x1f4e <strnlen>
    1cc6:	4c 01       	movw	r8, r24
    1cc8:	82 01       	movw	r16, r4
    1cca:	f3 2d       	mov	r31, r3
    1ccc:	ff 77       	andi	r31, 0x7F	; 127
    1cce:	3f 2e       	mov	r3, r31
    1cd0:	16 c0       	rjmp	.+44     	; 0x1cfe <vfprintf+0x188>
    1cd2:	28 01       	movw	r4, r16
    1cd4:	22 e0       	ldi	r18, 0x02	; 2
    1cd6:	42 0e       	add	r4, r18
    1cd8:	51 1c       	adc	r5, r1
    1cda:	f8 01       	movw	r30, r16
    1cdc:	a0 80       	ld	r10, Z
    1cde:	b1 80       	ldd	r11, Z+1	; 0x01
    1ce0:	36 fe       	sbrs	r3, 6
    1ce2:	03 c0       	rjmp	.+6      	; 0x1cea <vfprintf+0x174>
    1ce4:	69 2d       	mov	r22, r9
    1ce6:	70 e0       	ldi	r23, 0x00	; 0
    1ce8:	02 c0       	rjmp	.+4      	; 0x1cee <vfprintf+0x178>
    1cea:	6f ef       	ldi	r22, 0xFF	; 255
    1cec:	7f ef       	ldi	r23, 0xFF	; 255
    1cee:	c5 01       	movw	r24, r10
    1cf0:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <strnlen_P>
    1cf4:	4c 01       	movw	r8, r24
    1cf6:	f3 2d       	mov	r31, r3
    1cf8:	f0 68       	ori	r31, 0x80	; 128
    1cfa:	3f 2e       	mov	r3, r31
    1cfc:	82 01       	movw	r16, r4
    1cfe:	33 fc       	sbrc	r3, 3
    1d00:	1b c0       	rjmp	.+54     	; 0x1d38 <vfprintf+0x1c2>
    1d02:	82 2d       	mov	r24, r2
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	88 16       	cp	r8, r24
    1d08:	99 06       	cpc	r9, r25
    1d0a:	b0 f4       	brcc	.+44     	; 0x1d38 <vfprintf+0x1c2>
    1d0c:	b6 01       	movw	r22, r12
    1d0e:	80 e2       	ldi	r24, 0x20	; 32
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1d16:	2a 94       	dec	r2
    1d18:	f4 cf       	rjmp	.-24     	; 0x1d02 <vfprintf+0x18c>
    1d1a:	f5 01       	movw	r30, r10
    1d1c:	37 fc       	sbrc	r3, 7
    1d1e:	85 91       	lpm	r24, Z+
    1d20:	37 fe       	sbrs	r3, 7
    1d22:	81 91       	ld	r24, Z+
    1d24:	5f 01       	movw	r10, r30
    1d26:	b6 01       	movw	r22, r12
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1d2e:	21 10       	cpse	r2, r1
    1d30:	2a 94       	dec	r2
    1d32:	21 e0       	ldi	r18, 0x01	; 1
    1d34:	82 1a       	sub	r8, r18
    1d36:	91 08       	sbc	r9, r1
    1d38:	81 14       	cp	r8, r1
    1d3a:	91 04       	cpc	r9, r1
    1d3c:	71 f7       	brne	.-36     	; 0x1d1a <vfprintf+0x1a4>
    1d3e:	e8 c0       	rjmp	.+464    	; 0x1f10 <vfprintf+0x39a>
    1d40:	84 36       	cpi	r24, 0x64	; 100
    1d42:	11 f0       	breq	.+4      	; 0x1d48 <vfprintf+0x1d2>
    1d44:	89 36       	cpi	r24, 0x69	; 105
    1d46:	41 f5       	brne	.+80     	; 0x1d98 <vfprintf+0x222>
    1d48:	f8 01       	movw	r30, r16
    1d4a:	37 fe       	sbrs	r3, 7
    1d4c:	07 c0       	rjmp	.+14     	; 0x1d5c <vfprintf+0x1e6>
    1d4e:	60 81       	ld	r22, Z
    1d50:	71 81       	ldd	r23, Z+1	; 0x01
    1d52:	82 81       	ldd	r24, Z+2	; 0x02
    1d54:	93 81       	ldd	r25, Z+3	; 0x03
    1d56:	0c 5f       	subi	r16, 0xFC	; 252
    1d58:	1f 4f       	sbci	r17, 0xFF	; 255
    1d5a:	08 c0       	rjmp	.+16     	; 0x1d6c <vfprintf+0x1f6>
    1d5c:	60 81       	ld	r22, Z
    1d5e:	71 81       	ldd	r23, Z+1	; 0x01
    1d60:	07 2e       	mov	r0, r23
    1d62:	00 0c       	add	r0, r0
    1d64:	88 0b       	sbc	r24, r24
    1d66:	99 0b       	sbc	r25, r25
    1d68:	0e 5f       	subi	r16, 0xFE	; 254
    1d6a:	1f 4f       	sbci	r17, 0xFF	; 255
    1d6c:	f3 2d       	mov	r31, r3
    1d6e:	ff 76       	andi	r31, 0x6F	; 111
    1d70:	3f 2e       	mov	r3, r31
    1d72:	97 ff       	sbrs	r25, 7
    1d74:	09 c0       	rjmp	.+18     	; 0x1d88 <vfprintf+0x212>
    1d76:	90 95       	com	r25
    1d78:	80 95       	com	r24
    1d7a:	70 95       	com	r23
    1d7c:	61 95       	neg	r22
    1d7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d80:	8f 4f       	sbci	r24, 0xFF	; 255
    1d82:	9f 4f       	sbci	r25, 0xFF	; 255
    1d84:	f0 68       	ori	r31, 0x80	; 128
    1d86:	3f 2e       	mov	r3, r31
    1d88:	2a e0       	ldi	r18, 0x0A	; 10
    1d8a:	30 e0       	ldi	r19, 0x00	; 0
    1d8c:	a3 01       	movw	r20, r6
    1d8e:	0e 94 fe 0f 	call	0x1ffc	; 0x1ffc <__ultoa_invert>
    1d92:	88 2e       	mov	r8, r24
    1d94:	86 18       	sub	r8, r6
    1d96:	45 c0       	rjmp	.+138    	; 0x1e22 <vfprintf+0x2ac>
    1d98:	85 37       	cpi	r24, 0x75	; 117
    1d9a:	31 f4       	brne	.+12     	; 0x1da8 <vfprintf+0x232>
    1d9c:	23 2d       	mov	r18, r3
    1d9e:	2f 7e       	andi	r18, 0xEF	; 239
    1da0:	b2 2e       	mov	r11, r18
    1da2:	2a e0       	ldi	r18, 0x0A	; 10
    1da4:	30 e0       	ldi	r19, 0x00	; 0
    1da6:	25 c0       	rjmp	.+74     	; 0x1df2 <vfprintf+0x27c>
    1da8:	93 2d       	mov	r25, r3
    1daa:	99 7f       	andi	r25, 0xF9	; 249
    1dac:	b9 2e       	mov	r11, r25
    1dae:	8f 36       	cpi	r24, 0x6F	; 111
    1db0:	c1 f0       	breq	.+48     	; 0x1de2 <vfprintf+0x26c>
    1db2:	18 f4       	brcc	.+6      	; 0x1dba <vfprintf+0x244>
    1db4:	88 35       	cpi	r24, 0x58	; 88
    1db6:	79 f0       	breq	.+30     	; 0x1dd6 <vfprintf+0x260>
    1db8:	b5 c0       	rjmp	.+362    	; 0x1f24 <vfprintf+0x3ae>
    1dba:	80 37       	cpi	r24, 0x70	; 112
    1dbc:	19 f0       	breq	.+6      	; 0x1dc4 <vfprintf+0x24e>
    1dbe:	88 37       	cpi	r24, 0x78	; 120
    1dc0:	21 f0       	breq	.+8      	; 0x1dca <vfprintf+0x254>
    1dc2:	b0 c0       	rjmp	.+352    	; 0x1f24 <vfprintf+0x3ae>
    1dc4:	e9 2f       	mov	r30, r25
    1dc6:	e0 61       	ori	r30, 0x10	; 16
    1dc8:	be 2e       	mov	r11, r30
    1dca:	b4 fe       	sbrs	r11, 4
    1dcc:	0d c0       	rjmp	.+26     	; 0x1de8 <vfprintf+0x272>
    1dce:	fb 2d       	mov	r31, r11
    1dd0:	f4 60       	ori	r31, 0x04	; 4
    1dd2:	bf 2e       	mov	r11, r31
    1dd4:	09 c0       	rjmp	.+18     	; 0x1de8 <vfprintf+0x272>
    1dd6:	34 fe       	sbrs	r3, 4
    1dd8:	0a c0       	rjmp	.+20     	; 0x1dee <vfprintf+0x278>
    1dda:	29 2f       	mov	r18, r25
    1ddc:	26 60       	ori	r18, 0x06	; 6
    1dde:	b2 2e       	mov	r11, r18
    1de0:	06 c0       	rjmp	.+12     	; 0x1dee <vfprintf+0x278>
    1de2:	28 e0       	ldi	r18, 0x08	; 8
    1de4:	30 e0       	ldi	r19, 0x00	; 0
    1de6:	05 c0       	rjmp	.+10     	; 0x1df2 <vfprintf+0x27c>
    1de8:	20 e1       	ldi	r18, 0x10	; 16
    1dea:	30 e0       	ldi	r19, 0x00	; 0
    1dec:	02 c0       	rjmp	.+4      	; 0x1df2 <vfprintf+0x27c>
    1dee:	20 e1       	ldi	r18, 0x10	; 16
    1df0:	32 e0       	ldi	r19, 0x02	; 2
    1df2:	f8 01       	movw	r30, r16
    1df4:	b7 fe       	sbrs	r11, 7
    1df6:	07 c0       	rjmp	.+14     	; 0x1e06 <vfprintf+0x290>
    1df8:	60 81       	ld	r22, Z
    1dfa:	71 81       	ldd	r23, Z+1	; 0x01
    1dfc:	82 81       	ldd	r24, Z+2	; 0x02
    1dfe:	93 81       	ldd	r25, Z+3	; 0x03
    1e00:	0c 5f       	subi	r16, 0xFC	; 252
    1e02:	1f 4f       	sbci	r17, 0xFF	; 255
    1e04:	06 c0       	rjmp	.+12     	; 0x1e12 <vfprintf+0x29c>
    1e06:	60 81       	ld	r22, Z
    1e08:	71 81       	ldd	r23, Z+1	; 0x01
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	90 e0       	ldi	r25, 0x00	; 0
    1e0e:	0e 5f       	subi	r16, 0xFE	; 254
    1e10:	1f 4f       	sbci	r17, 0xFF	; 255
    1e12:	a3 01       	movw	r20, r6
    1e14:	0e 94 fe 0f 	call	0x1ffc	; 0x1ffc <__ultoa_invert>
    1e18:	88 2e       	mov	r8, r24
    1e1a:	86 18       	sub	r8, r6
    1e1c:	fb 2d       	mov	r31, r11
    1e1e:	ff 77       	andi	r31, 0x7F	; 127
    1e20:	3f 2e       	mov	r3, r31
    1e22:	36 fe       	sbrs	r3, 6
    1e24:	0d c0       	rjmp	.+26     	; 0x1e40 <vfprintf+0x2ca>
    1e26:	23 2d       	mov	r18, r3
    1e28:	2e 7f       	andi	r18, 0xFE	; 254
    1e2a:	a2 2e       	mov	r10, r18
    1e2c:	89 14       	cp	r8, r9
    1e2e:	58 f4       	brcc	.+22     	; 0x1e46 <vfprintf+0x2d0>
    1e30:	34 fe       	sbrs	r3, 4
    1e32:	0b c0       	rjmp	.+22     	; 0x1e4a <vfprintf+0x2d4>
    1e34:	32 fc       	sbrc	r3, 2
    1e36:	09 c0       	rjmp	.+18     	; 0x1e4a <vfprintf+0x2d4>
    1e38:	83 2d       	mov	r24, r3
    1e3a:	8e 7e       	andi	r24, 0xEE	; 238
    1e3c:	a8 2e       	mov	r10, r24
    1e3e:	05 c0       	rjmp	.+10     	; 0x1e4a <vfprintf+0x2d4>
    1e40:	b8 2c       	mov	r11, r8
    1e42:	a3 2c       	mov	r10, r3
    1e44:	03 c0       	rjmp	.+6      	; 0x1e4c <vfprintf+0x2d6>
    1e46:	b8 2c       	mov	r11, r8
    1e48:	01 c0       	rjmp	.+2      	; 0x1e4c <vfprintf+0x2d6>
    1e4a:	b9 2c       	mov	r11, r9
    1e4c:	a4 fe       	sbrs	r10, 4
    1e4e:	0f c0       	rjmp	.+30     	; 0x1e6e <vfprintf+0x2f8>
    1e50:	fe 01       	movw	r30, r28
    1e52:	e8 0d       	add	r30, r8
    1e54:	f1 1d       	adc	r31, r1
    1e56:	80 81       	ld	r24, Z
    1e58:	80 33       	cpi	r24, 0x30	; 48
    1e5a:	21 f4       	brne	.+8      	; 0x1e64 <vfprintf+0x2ee>
    1e5c:	9a 2d       	mov	r25, r10
    1e5e:	99 7e       	andi	r25, 0xE9	; 233
    1e60:	a9 2e       	mov	r10, r25
    1e62:	09 c0       	rjmp	.+18     	; 0x1e76 <vfprintf+0x300>
    1e64:	a2 fe       	sbrs	r10, 2
    1e66:	06 c0       	rjmp	.+12     	; 0x1e74 <vfprintf+0x2fe>
    1e68:	b3 94       	inc	r11
    1e6a:	b3 94       	inc	r11
    1e6c:	04 c0       	rjmp	.+8      	; 0x1e76 <vfprintf+0x300>
    1e6e:	8a 2d       	mov	r24, r10
    1e70:	86 78       	andi	r24, 0x86	; 134
    1e72:	09 f0       	breq	.+2      	; 0x1e76 <vfprintf+0x300>
    1e74:	b3 94       	inc	r11
    1e76:	a3 fc       	sbrc	r10, 3
    1e78:	11 c0       	rjmp	.+34     	; 0x1e9c <vfprintf+0x326>
    1e7a:	a0 fe       	sbrs	r10, 0
    1e7c:	06 c0       	rjmp	.+12     	; 0x1e8a <vfprintf+0x314>
    1e7e:	b2 14       	cp	r11, r2
    1e80:	88 f4       	brcc	.+34     	; 0x1ea4 <vfprintf+0x32e>
    1e82:	28 0c       	add	r2, r8
    1e84:	92 2c       	mov	r9, r2
    1e86:	9b 18       	sub	r9, r11
    1e88:	0e c0       	rjmp	.+28     	; 0x1ea6 <vfprintf+0x330>
    1e8a:	b2 14       	cp	r11, r2
    1e8c:	60 f4       	brcc	.+24     	; 0x1ea6 <vfprintf+0x330>
    1e8e:	b6 01       	movw	r22, r12
    1e90:	80 e2       	ldi	r24, 0x20	; 32
    1e92:	90 e0       	ldi	r25, 0x00	; 0
    1e94:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1e98:	b3 94       	inc	r11
    1e9a:	f7 cf       	rjmp	.-18     	; 0x1e8a <vfprintf+0x314>
    1e9c:	b2 14       	cp	r11, r2
    1e9e:	18 f4       	brcc	.+6      	; 0x1ea6 <vfprintf+0x330>
    1ea0:	2b 18       	sub	r2, r11
    1ea2:	02 c0       	rjmp	.+4      	; 0x1ea8 <vfprintf+0x332>
    1ea4:	98 2c       	mov	r9, r8
    1ea6:	21 2c       	mov	r2, r1
    1ea8:	a4 fe       	sbrs	r10, 4
    1eaa:	10 c0       	rjmp	.+32     	; 0x1ecc <vfprintf+0x356>
    1eac:	b6 01       	movw	r22, r12
    1eae:	80 e3       	ldi	r24, 0x30	; 48
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1eb6:	a2 fe       	sbrs	r10, 2
    1eb8:	17 c0       	rjmp	.+46     	; 0x1ee8 <vfprintf+0x372>
    1eba:	a1 fc       	sbrc	r10, 1
    1ebc:	03 c0       	rjmp	.+6      	; 0x1ec4 <vfprintf+0x34e>
    1ebe:	88 e7       	ldi	r24, 0x78	; 120
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	02 c0       	rjmp	.+4      	; 0x1ec8 <vfprintf+0x352>
    1ec4:	88 e5       	ldi	r24, 0x58	; 88
    1ec6:	90 e0       	ldi	r25, 0x00	; 0
    1ec8:	b6 01       	movw	r22, r12
    1eca:	0c c0       	rjmp	.+24     	; 0x1ee4 <vfprintf+0x36e>
    1ecc:	8a 2d       	mov	r24, r10
    1ece:	86 78       	andi	r24, 0x86	; 134
    1ed0:	59 f0       	breq	.+22     	; 0x1ee8 <vfprintf+0x372>
    1ed2:	a1 fe       	sbrs	r10, 1
    1ed4:	02 c0       	rjmp	.+4      	; 0x1eda <vfprintf+0x364>
    1ed6:	8b e2       	ldi	r24, 0x2B	; 43
    1ed8:	01 c0       	rjmp	.+2      	; 0x1edc <vfprintf+0x366>
    1eda:	80 e2       	ldi	r24, 0x20	; 32
    1edc:	a7 fc       	sbrc	r10, 7
    1ede:	8d e2       	ldi	r24, 0x2D	; 45
    1ee0:	b6 01       	movw	r22, r12
    1ee2:	90 e0       	ldi	r25, 0x00	; 0
    1ee4:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1ee8:	89 14       	cp	r8, r9
    1eea:	38 f4       	brcc	.+14     	; 0x1efa <vfprintf+0x384>
    1eec:	b6 01       	movw	r22, r12
    1eee:	80 e3       	ldi	r24, 0x30	; 48
    1ef0:	90 e0       	ldi	r25, 0x00	; 0
    1ef2:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1ef6:	9a 94       	dec	r9
    1ef8:	f7 cf       	rjmp	.-18     	; 0x1ee8 <vfprintf+0x372>
    1efa:	8a 94       	dec	r8
    1efc:	f3 01       	movw	r30, r6
    1efe:	e8 0d       	add	r30, r8
    1f00:	f1 1d       	adc	r31, r1
    1f02:	80 81       	ld	r24, Z
    1f04:	b6 01       	movw	r22, r12
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1f0c:	81 10       	cpse	r8, r1
    1f0e:	f5 cf       	rjmp	.-22     	; 0x1efa <vfprintf+0x384>
    1f10:	22 20       	and	r2, r2
    1f12:	09 f4       	brne	.+2      	; 0x1f16 <vfprintf+0x3a0>
    1f14:	42 ce       	rjmp	.-892    	; 0x1b9a <vfprintf+0x24>
    1f16:	b6 01       	movw	r22, r12
    1f18:	80 e2       	ldi	r24, 0x20	; 32
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <fputc>
    1f20:	2a 94       	dec	r2
    1f22:	f6 cf       	rjmp	.-20     	; 0x1f10 <vfprintf+0x39a>
    1f24:	f6 01       	movw	r30, r12
    1f26:	86 81       	ldd	r24, Z+6	; 0x06
    1f28:	97 81       	ldd	r25, Z+7	; 0x07
    1f2a:	02 c0       	rjmp	.+4      	; 0x1f30 <vfprintf+0x3ba>
    1f2c:	8f ef       	ldi	r24, 0xFF	; 255
    1f2e:	9f ef       	ldi	r25, 0xFF	; 255
    1f30:	2b 96       	adiw	r28, 0x0b	; 11
    1f32:	e2 e1       	ldi	r30, 0x12	; 18
    1f34:	0c 94 78 10 	jmp	0x20f0	; 0x20f0 <__epilogue_restores__>

00001f38 <strnlen_P>:
    1f38:	fc 01       	movw	r30, r24
    1f3a:	05 90       	lpm	r0, Z+
    1f3c:	61 50       	subi	r22, 0x01	; 1
    1f3e:	70 40       	sbci	r23, 0x00	; 0
    1f40:	01 10       	cpse	r0, r1
    1f42:	d8 f7       	brcc	.-10     	; 0x1f3a <strnlen_P+0x2>
    1f44:	80 95       	com	r24
    1f46:	90 95       	com	r25
    1f48:	8e 0f       	add	r24, r30
    1f4a:	9f 1f       	adc	r25, r31
    1f4c:	08 95       	ret

00001f4e <strnlen>:
    1f4e:	fc 01       	movw	r30, r24
    1f50:	61 50       	subi	r22, 0x01	; 1
    1f52:	70 40       	sbci	r23, 0x00	; 0
    1f54:	01 90       	ld	r0, Z+
    1f56:	01 10       	cpse	r0, r1
    1f58:	d8 f7       	brcc	.-10     	; 0x1f50 <strnlen+0x2>
    1f5a:	80 95       	com	r24
    1f5c:	90 95       	com	r25
    1f5e:	8e 0f       	add	r24, r30
    1f60:	9f 1f       	adc	r25, r31
    1f62:	08 95       	ret

00001f64 <strrev>:
    1f64:	dc 01       	movw	r26, r24
    1f66:	fc 01       	movw	r30, r24
    1f68:	67 2f       	mov	r22, r23
    1f6a:	71 91       	ld	r23, Z+
    1f6c:	77 23       	and	r23, r23
    1f6e:	e1 f7       	brne	.-8      	; 0x1f68 <strrev+0x4>
    1f70:	32 97       	sbiw	r30, 0x02	; 2
    1f72:	04 c0       	rjmp	.+8      	; 0x1f7c <strrev+0x18>
    1f74:	7c 91       	ld	r23, X
    1f76:	6d 93       	st	X+, r22
    1f78:	70 83       	st	Z, r23
    1f7a:	62 91       	ld	r22, -Z
    1f7c:	ae 17       	cp	r26, r30
    1f7e:	bf 07       	cpc	r27, r31
    1f80:	c8 f3       	brcs	.-14     	; 0x1f74 <strrev+0x10>
    1f82:	08 95       	ret

00001f84 <fputc>:
    1f84:	0f 93       	push	r16
    1f86:	1f 93       	push	r17
    1f88:	cf 93       	push	r28
    1f8a:	df 93       	push	r29
    1f8c:	fb 01       	movw	r30, r22
    1f8e:	23 81       	ldd	r18, Z+3	; 0x03
    1f90:	21 fd       	sbrc	r18, 1
    1f92:	03 c0       	rjmp	.+6      	; 0x1f9a <fputc+0x16>
    1f94:	8f ef       	ldi	r24, 0xFF	; 255
    1f96:	9f ef       	ldi	r25, 0xFF	; 255
    1f98:	2c c0       	rjmp	.+88     	; 0x1ff2 <fputc+0x6e>
    1f9a:	22 ff       	sbrs	r18, 2
    1f9c:	16 c0       	rjmp	.+44     	; 0x1fca <fputc+0x46>
    1f9e:	46 81       	ldd	r20, Z+6	; 0x06
    1fa0:	57 81       	ldd	r21, Z+7	; 0x07
    1fa2:	24 81       	ldd	r18, Z+4	; 0x04
    1fa4:	35 81       	ldd	r19, Z+5	; 0x05
    1fa6:	42 17       	cp	r20, r18
    1fa8:	53 07       	cpc	r21, r19
    1faa:	44 f4       	brge	.+16     	; 0x1fbc <fputc+0x38>
    1fac:	a0 81       	ld	r26, Z
    1fae:	b1 81       	ldd	r27, Z+1	; 0x01
    1fb0:	9d 01       	movw	r18, r26
    1fb2:	2f 5f       	subi	r18, 0xFF	; 255
    1fb4:	3f 4f       	sbci	r19, 0xFF	; 255
    1fb6:	31 83       	std	Z+1, r19	; 0x01
    1fb8:	20 83       	st	Z, r18
    1fba:	8c 93       	st	X, r24
    1fbc:	26 81       	ldd	r18, Z+6	; 0x06
    1fbe:	37 81       	ldd	r19, Z+7	; 0x07
    1fc0:	2f 5f       	subi	r18, 0xFF	; 255
    1fc2:	3f 4f       	sbci	r19, 0xFF	; 255
    1fc4:	37 83       	std	Z+7, r19	; 0x07
    1fc6:	26 83       	std	Z+6, r18	; 0x06
    1fc8:	14 c0       	rjmp	.+40     	; 0x1ff2 <fputc+0x6e>
    1fca:	8b 01       	movw	r16, r22
    1fcc:	ec 01       	movw	r28, r24
    1fce:	fb 01       	movw	r30, r22
    1fd0:	00 84       	ldd	r0, Z+8	; 0x08
    1fd2:	f1 85       	ldd	r31, Z+9	; 0x09
    1fd4:	e0 2d       	mov	r30, r0
    1fd6:	09 95       	icall
    1fd8:	89 2b       	or	r24, r25
    1fda:	e1 f6       	brne	.-72     	; 0x1f94 <fputc+0x10>
    1fdc:	d8 01       	movw	r26, r16
    1fde:	16 96       	adiw	r26, 0x06	; 6
    1fe0:	8d 91       	ld	r24, X+
    1fe2:	9c 91       	ld	r25, X
    1fe4:	17 97       	sbiw	r26, 0x07	; 7
    1fe6:	01 96       	adiw	r24, 0x01	; 1
    1fe8:	17 96       	adiw	r26, 0x07	; 7
    1fea:	9c 93       	st	X, r25
    1fec:	8e 93       	st	-X, r24
    1fee:	16 97       	sbiw	r26, 0x06	; 6
    1ff0:	ce 01       	movw	r24, r28
    1ff2:	df 91       	pop	r29
    1ff4:	cf 91       	pop	r28
    1ff6:	1f 91       	pop	r17
    1ff8:	0f 91       	pop	r16
    1ffa:	08 95       	ret

00001ffc <__ultoa_invert>:
    1ffc:	fa 01       	movw	r30, r20
    1ffe:	aa 27       	eor	r26, r26
    2000:	28 30       	cpi	r18, 0x08	; 8
    2002:	51 f1       	breq	.+84     	; 0x2058 <__ultoa_invert+0x5c>
    2004:	20 31       	cpi	r18, 0x10	; 16
    2006:	81 f1       	breq	.+96     	; 0x2068 <__ultoa_invert+0x6c>
    2008:	e8 94       	clt
    200a:	6f 93       	push	r22
    200c:	6e 7f       	andi	r22, 0xFE	; 254
    200e:	6e 5f       	subi	r22, 0xFE	; 254
    2010:	7f 4f       	sbci	r23, 0xFF	; 255
    2012:	8f 4f       	sbci	r24, 0xFF	; 255
    2014:	9f 4f       	sbci	r25, 0xFF	; 255
    2016:	af 4f       	sbci	r26, 0xFF	; 255
    2018:	b1 e0       	ldi	r27, 0x01	; 1
    201a:	3e d0       	rcall	.+124    	; 0x2098 <__ultoa_invert+0x9c>
    201c:	b4 e0       	ldi	r27, 0x04	; 4
    201e:	3c d0       	rcall	.+120    	; 0x2098 <__ultoa_invert+0x9c>
    2020:	67 0f       	add	r22, r23
    2022:	78 1f       	adc	r23, r24
    2024:	89 1f       	adc	r24, r25
    2026:	9a 1f       	adc	r25, r26
    2028:	a1 1d       	adc	r26, r1
    202a:	68 0f       	add	r22, r24
    202c:	79 1f       	adc	r23, r25
    202e:	8a 1f       	adc	r24, r26
    2030:	91 1d       	adc	r25, r1
    2032:	a1 1d       	adc	r26, r1
    2034:	6a 0f       	add	r22, r26
    2036:	71 1d       	adc	r23, r1
    2038:	81 1d       	adc	r24, r1
    203a:	91 1d       	adc	r25, r1
    203c:	a1 1d       	adc	r26, r1
    203e:	20 d0       	rcall	.+64     	; 0x2080 <__ultoa_invert+0x84>
    2040:	09 f4       	brne	.+2      	; 0x2044 <__ultoa_invert+0x48>
    2042:	68 94       	set
    2044:	3f 91       	pop	r19
    2046:	2a e0       	ldi	r18, 0x0A	; 10
    2048:	26 9f       	mul	r18, r22
    204a:	11 24       	eor	r1, r1
    204c:	30 19       	sub	r19, r0
    204e:	30 5d       	subi	r19, 0xD0	; 208
    2050:	31 93       	st	Z+, r19
    2052:	de f6       	brtc	.-74     	; 0x200a <__ultoa_invert+0xe>
    2054:	cf 01       	movw	r24, r30
    2056:	08 95       	ret
    2058:	46 2f       	mov	r20, r22
    205a:	47 70       	andi	r20, 0x07	; 7
    205c:	40 5d       	subi	r20, 0xD0	; 208
    205e:	41 93       	st	Z+, r20
    2060:	b3 e0       	ldi	r27, 0x03	; 3
    2062:	0f d0       	rcall	.+30     	; 0x2082 <__ultoa_invert+0x86>
    2064:	c9 f7       	brne	.-14     	; 0x2058 <__ultoa_invert+0x5c>
    2066:	f6 cf       	rjmp	.-20     	; 0x2054 <__ultoa_invert+0x58>
    2068:	46 2f       	mov	r20, r22
    206a:	4f 70       	andi	r20, 0x0F	; 15
    206c:	40 5d       	subi	r20, 0xD0	; 208
    206e:	4a 33       	cpi	r20, 0x3A	; 58
    2070:	18 f0       	brcs	.+6      	; 0x2078 <__ultoa_invert+0x7c>
    2072:	49 5d       	subi	r20, 0xD9	; 217
    2074:	31 fd       	sbrc	r19, 1
    2076:	40 52       	subi	r20, 0x20	; 32
    2078:	41 93       	st	Z+, r20
    207a:	02 d0       	rcall	.+4      	; 0x2080 <__ultoa_invert+0x84>
    207c:	a9 f7       	brne	.-22     	; 0x2068 <__ultoa_invert+0x6c>
    207e:	ea cf       	rjmp	.-44     	; 0x2054 <__ultoa_invert+0x58>
    2080:	b4 e0       	ldi	r27, 0x04	; 4
    2082:	a6 95       	lsr	r26
    2084:	97 95       	ror	r25
    2086:	87 95       	ror	r24
    2088:	77 95       	ror	r23
    208a:	67 95       	ror	r22
    208c:	ba 95       	dec	r27
    208e:	c9 f7       	brne	.-14     	; 0x2082 <__ultoa_invert+0x86>
    2090:	00 97       	sbiw	r24, 0x00	; 0
    2092:	61 05       	cpc	r22, r1
    2094:	71 05       	cpc	r23, r1
    2096:	08 95       	ret
    2098:	9b 01       	movw	r18, r22
    209a:	ac 01       	movw	r20, r24
    209c:	0a 2e       	mov	r0, r26
    209e:	06 94       	lsr	r0
    20a0:	57 95       	ror	r21
    20a2:	47 95       	ror	r20
    20a4:	37 95       	ror	r19
    20a6:	27 95       	ror	r18
    20a8:	ba 95       	dec	r27
    20aa:	c9 f7       	brne	.-14     	; 0x209e <__ultoa_invert+0xa2>
    20ac:	62 0f       	add	r22, r18
    20ae:	73 1f       	adc	r23, r19
    20b0:	84 1f       	adc	r24, r20
    20b2:	95 1f       	adc	r25, r21
    20b4:	a0 1d       	adc	r26, r0
    20b6:	08 95       	ret

000020b8 <__prologue_saves__>:
    20b8:	2f 92       	push	r2
    20ba:	3f 92       	push	r3
    20bc:	4f 92       	push	r4
    20be:	5f 92       	push	r5
    20c0:	6f 92       	push	r6
    20c2:	7f 92       	push	r7
    20c4:	8f 92       	push	r8
    20c6:	9f 92       	push	r9
    20c8:	af 92       	push	r10
    20ca:	bf 92       	push	r11
    20cc:	cf 92       	push	r12
    20ce:	df 92       	push	r13
    20d0:	ef 92       	push	r14
    20d2:	ff 92       	push	r15
    20d4:	0f 93       	push	r16
    20d6:	1f 93       	push	r17
    20d8:	cf 93       	push	r28
    20da:	df 93       	push	r29
    20dc:	cd b7       	in	r28, 0x3d	; 61
    20de:	de b7       	in	r29, 0x3e	; 62
    20e0:	ca 1b       	sub	r28, r26
    20e2:	db 0b       	sbc	r29, r27
    20e4:	0f b6       	in	r0, 0x3f	; 63
    20e6:	f8 94       	cli
    20e8:	de bf       	out	0x3e, r29	; 62
    20ea:	0f be       	out	0x3f, r0	; 63
    20ec:	cd bf       	out	0x3d, r28	; 61
    20ee:	09 94       	ijmp

000020f0 <__epilogue_restores__>:
    20f0:	2a 88       	ldd	r2, Y+18	; 0x12
    20f2:	39 88       	ldd	r3, Y+17	; 0x11
    20f4:	48 88       	ldd	r4, Y+16	; 0x10
    20f6:	5f 84       	ldd	r5, Y+15	; 0x0f
    20f8:	6e 84       	ldd	r6, Y+14	; 0x0e
    20fa:	7d 84       	ldd	r7, Y+13	; 0x0d
    20fc:	8c 84       	ldd	r8, Y+12	; 0x0c
    20fe:	9b 84       	ldd	r9, Y+11	; 0x0b
    2100:	aa 84       	ldd	r10, Y+10	; 0x0a
    2102:	b9 84       	ldd	r11, Y+9	; 0x09
    2104:	c8 84       	ldd	r12, Y+8	; 0x08
    2106:	df 80       	ldd	r13, Y+7	; 0x07
    2108:	ee 80       	ldd	r14, Y+6	; 0x06
    210a:	fd 80       	ldd	r15, Y+5	; 0x05
    210c:	0c 81       	ldd	r16, Y+4	; 0x04
    210e:	1b 81       	ldd	r17, Y+3	; 0x03
    2110:	aa 81       	ldd	r26, Y+2	; 0x02
    2112:	b9 81       	ldd	r27, Y+1	; 0x01
    2114:	ce 0f       	add	r28, r30
    2116:	d1 1d       	adc	r29, r1
    2118:	0f b6       	in	r0, 0x3f	; 63
    211a:	f8 94       	cli
    211c:	de bf       	out	0x3e, r29	; 62
    211e:	0f be       	out	0x3f, r0	; 63
    2120:	cd bf       	out	0x3d, r28	; 61
    2122:	ed 01       	movw	r28, r26
    2124:	08 95       	ret

00002126 <_exit>:
    2126:	f8 94       	cli

00002128 <__stop_program>:
    2128:	ff cf       	rjmp	.-2      	; 0x2128 <__stop_program>
