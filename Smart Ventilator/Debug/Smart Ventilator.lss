
Smart Ventilator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000298a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000112  00800060  0000298a  00002a1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000366  00800172  00800172  00002b30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002b30  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002b8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00002bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020ca  00000000  00000000  00002d88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b2a  00000000  00000000  00004e52  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012e1  00000000  00000000  0000597c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000058c  00000000  00000000  00006c60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000083f  00000000  00000000  000071ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001649  00000000  00000000  00007a2b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000190  00000000  00000000  00009074  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
       4:	0c 94 36 09 	jmp	0x126c	; 0x126c <__vector_1>
       8:	0c 94 7b 09 	jmp	0x12f6	; 0x12f6 <__vector_2>
       c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      1c:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <__vector_7>
      20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      54:	50 05       	cpc	r21, r0
      56:	85 05       	cpc	r24, r5
      58:	ba 05       	cpc	r27, r10
      5a:	ef 05       	cpc	r30, r15
      5c:	24 06       	cpc	r2, r20
      5e:	59 06       	cpc	r5, r25
      60:	8e 06       	cpc	r8, r30
      62:	c3 06       	cpc	r12, r19
      64:	f8 06       	cpc	r15, r24
      66:	2d 07       	cpc	r18, r29
      68:	62 07       	cpc	r22, r18
      6a:	97 07       	cpc	r25, r23
      6c:	cc 07       	cpc	r28, r28
      6e:	0a 09       	sbc	r16, r10
      70:	01 08       	sbc	r0, r1
      72:	36 08       	sbc	r3, r6
      74:	6b 08       	sbc	r6, r11
      76:	a0 08       	sbc	r10, r0
      78:	d5 08       	sbc	r13, r5

0000007a <__ctors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf e5       	ldi	r28, 0x5F	; 95
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	11 e0       	ldi	r17, 0x01	; 1
      88:	a0 e6       	ldi	r26, 0x60	; 96
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	ea e8       	ldi	r30, 0x8A	; 138
      8e:	f9 e2       	ldi	r31, 0x29	; 41
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	a2 37       	cpi	r26, 0x72	; 114
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	24 e0       	ldi	r18, 0x04	; 4
      9e:	a2 e7       	ldi	r26, 0x72	; 114
      a0:	b1 e0       	ldi	r27, 0x01	; 1
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	a8 3d       	cpi	r26, 0xD8	; 216
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
      ac:	0e 94 a8 0b 	call	0x1750	; 0x1750 <main>
      b0:	0c 94 c3 14 	jmp	0x2986	; 0x2986 <_exit>

000000b4 <__bad_interrupt>:
      b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <Keypad>:


char Keypad()
{
	
	PORTB=0b1111110;         // make first row 0
      b8:	8e e7       	ldi	r24, 0x7E	; 126
      ba:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
      bc:	b4 99       	sbic	0x16, 4	; 22
      be:	0c c0       	rjmp	.+24     	; 0xd8 <Keypad+0x20>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      c0:	2f ef       	ldi	r18, 0xFF	; 255
      c2:	89 ef       	ldi	r24, 0xF9	; 249
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	21 50       	subi	r18, 0x01	; 1
      c8:	80 40       	sbci	r24, 0x00	; 0
      ca:	90 40       	sbci	r25, 0x00	; 0
      cc:	e1 f7       	brne	.-8      	; 0xc6 <Keypad+0xe>
      ce:	00 c0       	rjmp	.+0      	; 0xd0 <Keypad+0x18>
      d0:	00 00       	nop
	{
		_delay_ms(20);
		return"1";
      d2:	8e e6       	ldi	r24, 0x6E	; 110
      d4:	90 e0       	ldi	r25, 0x00	; 0
      d6:	08 95       	ret
	}

	else if((PINB&(1<<PINB5))==0)
      d8:	b5 99       	sbic	0x16, 5	; 22
      da:	0c c0       	rjmp	.+24     	; 0xf4 <Keypad+0x3c>
      dc:	2f ef       	ldi	r18, 0xFF	; 255
      de:	89 ef       	ldi	r24, 0xF9	; 249
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	21 50       	subi	r18, 0x01	; 1
      e4:	80 40       	sbci	r24, 0x00	; 0
      e6:	90 40       	sbci	r25, 0x00	; 0
      e8:	e1 f7       	brne	.-8      	; 0xe2 <Keypad+0x2a>
      ea:	00 c0       	rjmp	.+0      	; 0xec <Keypad+0x34>
      ec:	00 00       	nop
	{
		_delay_ms(20);
		return"2";
      ee:	80 e7       	ldi	r24, 0x70	; 112
      f0:	90 e0       	ldi	r25, 0x00	; 0
      f2:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
      f4:	b6 99       	sbic	0x16, 6	; 22
      f6:	0c c0       	rjmp	.+24     	; 0x110 <Keypad+0x58>
      f8:	2f ef       	ldi	r18, 0xFF	; 255
      fa:	89 ef       	ldi	r24, 0xF9	; 249
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	21 50       	subi	r18, 0x01	; 1
     100:	80 40       	sbci	r24, 0x00	; 0
     102:	90 40       	sbci	r25, 0x00	; 0
     104:	e1 f7       	brne	.-8      	; 0xfe <Keypad+0x46>
     106:	00 c0       	rjmp	.+0      	; 0x108 <Keypad+0x50>
     108:	00 00       	nop
	{
		_delay_ms(20);
		return"3";
     10a:	82 e7       	ldi	r24, 0x72	; 114
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	08 95       	ret
	}
	

	PORTB=0b1111101;   // make second row 0
     110:	8d e7       	ldi	r24, 0x7D	; 125
     112:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
     114:	b4 99       	sbic	0x16, 4	; 22
     116:	0c c0       	rjmp	.+24     	; 0x130 <Keypad+0x78>
     118:	2f ef       	ldi	r18, 0xFF	; 255
     11a:	89 ef       	ldi	r24, 0xF9	; 249
     11c:	90 e0       	ldi	r25, 0x00	; 0
     11e:	21 50       	subi	r18, 0x01	; 1
     120:	80 40       	sbci	r24, 0x00	; 0
     122:	90 40       	sbci	r25, 0x00	; 0
     124:	e1 f7       	brne	.-8      	; 0x11e <Keypad+0x66>
     126:	00 c0       	rjmp	.+0      	; 0x128 <Keypad+0x70>
     128:	00 00       	nop
	{
		_delay_ms(20);
		return"4";
     12a:	84 e7       	ldi	r24, 0x74	; 116
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	08 95       	ret
	}
	else if((PINB&(1<<PINB5))==0)
     130:	b5 99       	sbic	0x16, 5	; 22
     132:	0c c0       	rjmp	.+24     	; 0x14c <Keypad+0x94>
     134:	2f ef       	ldi	r18, 0xFF	; 255
     136:	89 ef       	ldi	r24, 0xF9	; 249
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	21 50       	subi	r18, 0x01	; 1
     13c:	80 40       	sbci	r24, 0x00	; 0
     13e:	90 40       	sbci	r25, 0x00	; 0
     140:	e1 f7       	brne	.-8      	; 0x13a <Keypad+0x82>
     142:	00 c0       	rjmp	.+0      	; 0x144 <Keypad+0x8c>
     144:	00 00       	nop
	{
		_delay_ms(20);
		return"5";
     146:	86 e7       	ldi	r24, 0x76	; 118
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
     14c:	b6 99       	sbic	0x16, 6	; 22
     14e:	0c c0       	rjmp	.+24     	; 0x168 <Keypad+0xb0>
     150:	2f ef       	ldi	r18, 0xFF	; 255
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	21 50       	subi	r18, 0x01	; 1
     158:	80 40       	sbci	r24, 0x00	; 0
     15a:	90 40       	sbci	r25, 0x00	; 0
     15c:	e1 f7       	brne	.-8      	; 0x156 <Keypad+0x9e>
     15e:	00 c0       	rjmp	.+0      	; 0x160 <Keypad+0xa8>
     160:	00 00       	nop
	{
		_delay_ms(20);
		return"6";
     162:	88 e7       	ldi	r24, 0x78	; 120
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	08 95       	ret
	}
	

	PORTB=0b1111011;   // make third row 0
     168:	8b e7       	ldi	r24, 0x7B	; 123
     16a:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
     16c:	b4 99       	sbic	0x16, 4	; 22
     16e:	0c c0       	rjmp	.+24     	; 0x188 <Keypad+0xd0>
     170:	2f ef       	ldi	r18, 0xFF	; 255
     172:	89 ef       	ldi	r24, 0xF9	; 249
     174:	90 e0       	ldi	r25, 0x00	; 0
     176:	21 50       	subi	r18, 0x01	; 1
     178:	80 40       	sbci	r24, 0x00	; 0
     17a:	90 40       	sbci	r25, 0x00	; 0
     17c:	e1 f7       	brne	.-8      	; 0x176 <Keypad+0xbe>
     17e:	00 c0       	rjmp	.+0      	; 0x180 <Keypad+0xc8>
     180:	00 00       	nop
	{
		_delay_ms(20);
		return"7";
     182:	8a e7       	ldi	r24, 0x7A	; 122
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	08 95       	ret
	}
	else if((PINB&(1<<PINB5))==0)
     188:	b5 99       	sbic	0x16, 5	; 22
     18a:	0c c0       	rjmp	.+24     	; 0x1a4 <Keypad+0xec>
     18c:	2f ef       	ldi	r18, 0xFF	; 255
     18e:	89 ef       	ldi	r24, 0xF9	; 249
     190:	90 e0       	ldi	r25, 0x00	; 0
     192:	21 50       	subi	r18, 0x01	; 1
     194:	80 40       	sbci	r24, 0x00	; 0
     196:	90 40       	sbci	r25, 0x00	; 0
     198:	e1 f7       	brne	.-8      	; 0x192 <Keypad+0xda>
     19a:	00 c0       	rjmp	.+0      	; 0x19c <Keypad+0xe4>
     19c:	00 00       	nop
	{
		_delay_ms(20);
		return"8";
     19e:	8c e7       	ldi	r24, 0x7C	; 124
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
     1a4:	b6 99       	sbic	0x16, 6	; 22
     1a6:	0c c0       	rjmp	.+24     	; 0x1c0 <Keypad+0x108>
     1a8:	2f ef       	ldi	r18, 0xFF	; 255
     1aa:	89 ef       	ldi	r24, 0xF9	; 249
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	21 50       	subi	r18, 0x01	; 1
     1b0:	80 40       	sbci	r24, 0x00	; 0
     1b2:	90 40       	sbci	r25, 0x00	; 0
     1b4:	e1 f7       	brne	.-8      	; 0x1ae <Keypad+0xf6>
     1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <Keypad+0x100>
     1b8:	00 00       	nop
	{
		_delay_ms(20);
		return"9";
     1ba:	8e e7       	ldi	r24, 0x7E	; 126
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	08 95       	ret
	}
	

	PORTB=0b1110111;   // make fourth row 0
     1c0:	87 e7       	ldi	r24, 0x77	; 119
     1c2:	88 bb       	out	0x18, r24	; 24
	if((PINB &(1<<PINB4))==0)
     1c4:	b4 99       	sbic	0x16, 4	; 22
     1c6:	0c c0       	rjmp	.+24     	; 0x1e0 <Keypad+0x128>
     1c8:	2f ef       	ldi	r18, 0xFF	; 255
     1ca:	89 ef       	ldi	r24, 0xF9	; 249
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	21 50       	subi	r18, 0x01	; 1
     1d0:	80 40       	sbci	r24, 0x00	; 0
     1d2:	90 40       	sbci	r25, 0x00	; 0
     1d4:	e1 f7       	brne	.-8      	; 0x1ce <Keypad+0x116>
     1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <Keypad+0x120>
     1d8:	00 00       	nop
	{
		_delay_ms(20);
		return"del";
     1da:	80 e8       	ldi	r24, 0x80	; 128
     1dc:	90 e0       	ldi	r25, 0x00	; 0
     1de:	08 95       	ret
		
	}
	else if((PINB&(1<<PINB5))==0)
     1e0:	b5 99       	sbic	0x16, 5	; 22
     1e2:	0c c0       	rjmp	.+24     	; 0x1fc <Keypad+0x144>
     1e4:	2f ef       	ldi	r18, 0xFF	; 255
     1e6:	89 ef       	ldi	r24, 0xF9	; 249
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	21 50       	subi	r18, 0x01	; 1
     1ec:	80 40       	sbci	r24, 0x00	; 0
     1ee:	90 40       	sbci	r25, 0x00	; 0
     1f0:	e1 f7       	brne	.-8      	; 0x1ea <Keypad+0x132>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <Keypad+0x13c>
     1f4:	00 00       	nop
	{
		_delay_ms(20);
		return"0";
     1f6:	84 e8       	ldi	r24, 0x84	; 132
     1f8:	90 e0       	ldi	r25, 0x00	; 0
     1fa:	08 95       	ret
	}
	else if((PINB&(1<<PINB6))==0)
     1fc:	b6 99       	sbic	0x16, 6	; 22
     1fe:	0c c0       	rjmp	.+24     	; 0x218 <Keypad+0x160>
     200:	2f ef       	ldi	r18, 0xFF	; 255
     202:	89 ef       	ldi	r24, 0xF9	; 249
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	21 50       	subi	r18, 0x01	; 1
     208:	80 40       	sbci	r24, 0x00	; 0
     20a:	90 40       	sbci	r25, 0x00	; 0
     20c:	e1 f7       	brne	.-8      	; 0x206 <Keypad+0x14e>
     20e:	00 c0       	rjmp	.+0      	; 0x210 <Keypad+0x158>
     210:	00 00       	nop
	{
		_delay_ms(20);
		return"ok";
     212:	86 e8       	ldi	r24, 0x86	; 134
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	08 95       	ret
	}
	

}
     218:	08 95       	ret

0000021a <delay>:
	_delay_ms(50);
	lcd_cmd(0x01);  

}

char *boolstring( _Bool b ) { return b ? "true" : "false"; }
     21a:	40 e0       	ldi	r20, 0x00	; 0
     21c:	50 e0       	ldi	r21, 0x00	; 0
     21e:	0a c0       	rjmp	.+20     	; 0x234 <delay+0x1a>
     220:	2f 5f       	subi	r18, 0xFF	; 255
     222:	3f 4f       	sbci	r19, 0xFF	; 255
     224:	02 c0       	rjmp	.+4      	; 0x22a <delay+0x10>
     226:	20 e0       	ldi	r18, 0x00	; 0
     228:	30 e0       	ldi	r19, 0x00	; 0
     22a:	29 37       	cpi	r18, 0x79	; 121
     22c:	31 05       	cpc	r19, r1
     22e:	c4 f3       	brlt	.-16     	; 0x220 <delay+0x6>
     230:	4f 5f       	subi	r20, 0xFF	; 255
     232:	5f 4f       	sbci	r21, 0xFF	; 255
     234:	84 17       	cp	r24, r20
     236:	95 07       	cpc	r25, r21
     238:	b4 f7       	brge	.-20     	; 0x226 <delay+0xc>
     23a:	08 95       	ret

0000023c <toggle>:
     23c:	83 b1       	in	r24, 0x03	; 3
     23e:	82 60       	ori	r24, 0x02	; 2
     240:	83 b9       	out	0x03, r24	; 3
     242:	84 e8       	ldi	r24, 0x84	; 132
     244:	86 bf       	out	0x36, r24	; 54
     246:	06 b6       	in	r0, 0x36	; 54
     248:	07 fe       	sbrs	r0, 7
     24a:	fd cf       	rjmp	.-6      	; 0x246 <toggle+0xa>
     24c:	81 e0       	ldi	r24, 0x01	; 1
     24e:	90 e0       	ldi	r25, 0x00	; 0
     250:	0e 94 0d 01 	call	0x21a	; 0x21a <delay>
     254:	83 b1       	in	r24, 0x03	; 3
     256:	8d 7f       	andi	r24, 0xFD	; 253
     258:	83 b9       	out	0x03, r24	; 3
     25a:	84 e8       	ldi	r24, 0x84	; 132
     25c:	86 bf       	out	0x36, r24	; 54
     25e:	06 b6       	in	r0, 0x36	; 54
     260:	07 fe       	sbrs	r0, 7
     262:	fd cf       	rjmp	.-6      	; 0x25e <toggle+0x22>
     264:	08 95       	ret

00000266 <lcd_cmd_hf>:
     266:	93 b1       	in	r25, 0x03	; 3
     268:	9e 7f       	andi	r25, 0xFE	; 254
     26a:	93 b9       	out	0x03, r25	; 3
     26c:	94 e8       	ldi	r25, 0x84	; 132
     26e:	96 bf       	out	0x36, r25	; 54
     270:	06 b6       	in	r0, 0x36	; 54
     272:	07 fe       	sbrs	r0, 7
     274:	fd cf       	rjmp	.-6      	; 0x270 <lcd_cmd_hf+0xa>
     276:	93 b1       	in	r25, 0x03	; 3
     278:	9f 70       	andi	r25, 0x0F	; 15
     27a:	93 b9       	out	0x03, r25	; 3
     27c:	94 e8       	ldi	r25, 0x84	; 132
     27e:	96 bf       	out	0x36, r25	; 54
     280:	06 b6       	in	r0, 0x36	; 54
     282:	07 fe       	sbrs	r0, 7
     284:	fd cf       	rjmp	.-6      	; 0x280 <lcd_cmd_hf+0x1a>
     286:	93 b1       	in	r25, 0x03	; 3
     288:	80 7f       	andi	r24, 0xF0	; 240
     28a:	89 2b       	or	r24, r25
     28c:	83 b9       	out	0x03, r24	; 3
     28e:	84 e8       	ldi	r24, 0x84	; 132
     290:	86 bf       	out	0x36, r24	; 54
     292:	06 b6       	in	r0, 0x36	; 54
     294:	07 fe       	sbrs	r0, 7
     296:	fd cf       	rjmp	.-6      	; 0x292 <lcd_cmd_hf+0x2c>
     298:	0e 94 1e 01 	call	0x23c	; 0x23c <toggle>
     29c:	08 95       	ret

0000029e <lcd_cmd>:
     29e:	cf 93       	push	r28
     2a0:	c8 2f       	mov	r28, r24
     2a2:	83 b1       	in	r24, 0x03	; 3
     2a4:	8e 7f       	andi	r24, 0xFE	; 254
     2a6:	83 b9       	out	0x03, r24	; 3
     2a8:	84 e8       	ldi	r24, 0x84	; 132
     2aa:	86 bf       	out	0x36, r24	; 54
     2ac:	06 b6       	in	r0, 0x36	; 54
     2ae:	07 fe       	sbrs	r0, 7
     2b0:	fd cf       	rjmp	.-6      	; 0x2ac <lcd_cmd+0xe>
     2b2:	83 b1       	in	r24, 0x03	; 3
     2b4:	8f 70       	andi	r24, 0x0F	; 15
     2b6:	83 b9       	out	0x03, r24	; 3
     2b8:	84 e8       	ldi	r24, 0x84	; 132
     2ba:	86 bf       	out	0x36, r24	; 54
     2bc:	06 b6       	in	r0, 0x36	; 54
     2be:	07 fe       	sbrs	r0, 7
     2c0:	fd cf       	rjmp	.-6      	; 0x2bc <lcd_cmd+0x1e>
     2c2:	83 b1       	in	r24, 0x03	; 3
     2c4:	9c 2f       	mov	r25, r28
     2c6:	90 7f       	andi	r25, 0xF0	; 240
     2c8:	89 2b       	or	r24, r25
     2ca:	83 b9       	out	0x03, r24	; 3
     2cc:	84 e8       	ldi	r24, 0x84	; 132
     2ce:	86 bf       	out	0x36, r24	; 54
     2d0:	06 b6       	in	r0, 0x36	; 54
     2d2:	07 fe       	sbrs	r0, 7
     2d4:	fd cf       	rjmp	.-6      	; 0x2d0 <lcd_cmd+0x32>
     2d6:	0e 94 1e 01 	call	0x23c	; 0x23c <toggle>
     2da:	83 b1       	in	r24, 0x03	; 3
     2dc:	8f 70       	andi	r24, 0x0F	; 15
     2de:	83 b9       	out	0x03, r24	; 3
     2e0:	84 e8       	ldi	r24, 0x84	; 132
     2e2:	86 bf       	out	0x36, r24	; 54
     2e4:	06 b6       	in	r0, 0x36	; 54
     2e6:	07 fe       	sbrs	r0, 7
     2e8:	fd cf       	rjmp	.-6      	; 0x2e4 <lcd_cmd+0x46>
     2ea:	23 b1       	in	r18, 0x03	; 3
     2ec:	30 e1       	ldi	r19, 0x10	; 16
     2ee:	c3 9f       	mul	r28, r19
     2f0:	c0 01       	movw	r24, r0
     2f2:	11 24       	eor	r1, r1
     2f4:	82 2b       	or	r24, r18
     2f6:	83 b9       	out	0x03, r24	; 3
     2f8:	84 e8       	ldi	r24, 0x84	; 132
     2fa:	86 bf       	out	0x36, r24	; 54
     2fc:	06 b6       	in	r0, 0x36	; 54
     2fe:	07 fe       	sbrs	r0, 7
     300:	fd cf       	rjmp	.-6      	; 0x2fc <lcd_cmd+0x5e>
     302:	0e 94 1e 01 	call	0x23c	; 0x23c <toggle>
     306:	cf 91       	pop	r28
     308:	08 95       	ret

0000030a <lcd_init>:
     30a:	80 e3       	ldi	r24, 0x30	; 48
     30c:	0e 94 33 01 	call	0x266	; 0x266 <lcd_cmd_hf>
     310:	80 e3       	ldi	r24, 0x30	; 48
     312:	0e 94 33 01 	call	0x266	; 0x266 <lcd_cmd_hf>
     316:	80 e2       	ldi	r24, 0x20	; 32
     318:	0e 94 33 01 	call	0x266	; 0x266 <lcd_cmd_hf>
     31c:	88 e2       	ldi	r24, 0x28	; 40
     31e:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
     322:	8c e0       	ldi	r24, 0x0C	; 12
     324:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
     328:	81 e0       	ldi	r24, 0x01	; 1
     32a:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
     32e:	86 e0       	ldi	r24, 0x06	; 6
     330:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
     334:	80 e8       	ldi	r24, 0x80	; 128
     336:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
     33a:	08 95       	ret

0000033c <lcd_dwr>:
     33c:	cf 93       	push	r28
     33e:	c8 2f       	mov	r28, r24
     340:	83 b1       	in	r24, 0x03	; 3
     342:	81 60       	ori	r24, 0x01	; 1
     344:	83 b9       	out	0x03, r24	; 3
     346:	84 e8       	ldi	r24, 0x84	; 132
     348:	86 bf       	out	0x36, r24	; 54
     34a:	06 b6       	in	r0, 0x36	; 54
     34c:	07 fe       	sbrs	r0, 7
     34e:	fd cf       	rjmp	.-6      	; 0x34a <lcd_dwr+0xe>
     350:	83 b1       	in	r24, 0x03	; 3
     352:	8f 70       	andi	r24, 0x0F	; 15
     354:	83 b9       	out	0x03, r24	; 3
     356:	84 e8       	ldi	r24, 0x84	; 132
     358:	86 bf       	out	0x36, r24	; 54
     35a:	06 b6       	in	r0, 0x36	; 54
     35c:	07 fe       	sbrs	r0, 7
     35e:	fd cf       	rjmp	.-6      	; 0x35a <lcd_dwr+0x1e>
     360:	83 b1       	in	r24, 0x03	; 3
     362:	9c 2f       	mov	r25, r28
     364:	90 7f       	andi	r25, 0xF0	; 240
     366:	89 2b       	or	r24, r25
     368:	83 b9       	out	0x03, r24	; 3
     36a:	84 e8       	ldi	r24, 0x84	; 132
     36c:	86 bf       	out	0x36, r24	; 54
     36e:	06 b6       	in	r0, 0x36	; 54
     370:	07 fe       	sbrs	r0, 7
     372:	fd cf       	rjmp	.-6      	; 0x36e <lcd_dwr+0x32>
     374:	0e 94 1e 01 	call	0x23c	; 0x23c <toggle>
     378:	83 b1       	in	r24, 0x03	; 3
     37a:	8f 70       	andi	r24, 0x0F	; 15
     37c:	83 b9       	out	0x03, r24	; 3
     37e:	84 e8       	ldi	r24, 0x84	; 132
     380:	86 bf       	out	0x36, r24	; 54
     382:	06 b6       	in	r0, 0x36	; 54
     384:	07 fe       	sbrs	r0, 7
     386:	fd cf       	rjmp	.-6      	; 0x382 <lcd_dwr+0x46>
     388:	23 b1       	in	r18, 0x03	; 3
     38a:	30 e1       	ldi	r19, 0x10	; 16
     38c:	c3 9f       	mul	r28, r19
     38e:	c0 01       	movw	r24, r0
     390:	11 24       	eor	r1, r1
     392:	82 2b       	or	r24, r18
     394:	83 b9       	out	0x03, r24	; 3
     396:	84 e8       	ldi	r24, 0x84	; 132
     398:	86 bf       	out	0x36, r24	; 54
     39a:	06 b6       	in	r0, 0x36	; 54
     39c:	07 fe       	sbrs	r0, 7
     39e:	fd cf       	rjmp	.-6      	; 0x39a <lcd_dwr+0x5e>
     3a0:	0e 94 1e 01 	call	0x23c	; 0x23c <toggle>
     3a4:	cf 91       	pop	r28
     3a6:	08 95       	ret

000003a8 <lcd_msg>:
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	ec 01       	movw	r28, r24
     3ae:	03 c0       	rjmp	.+6      	; 0x3b6 <lcd_msg+0xe>
     3b0:	21 96       	adiw	r28, 0x01	; 1
     3b2:	0e 94 9e 01 	call	0x33c	; 0x33c <lcd_dwr>
     3b6:	88 81       	ld	r24, Y
     3b8:	81 11       	cpse	r24, r1
     3ba:	fa cf       	rjmp	.-12     	; 0x3b0 <lcd_msg+0x8>
     3bc:	df 91       	pop	r29
     3be:	cf 91       	pop	r28
     3c0:	08 95       	ret

000003c2 <i2c_init>:
     3c2:	82 e6       	ldi	r24, 0x62	; 98
     3c4:	80 b9       	out	0x00, r24	; 0
     3c6:	84 e0       	ldi	r24, 0x04	; 4
     3c8:	86 bf       	out	0x36, r24	; 54
     3ca:	11 b8       	out	0x01, r1	; 1
     3cc:	08 95       	ret

000003ce <i2c_start>:
     3ce:	84 ea       	ldi	r24, 0xA4	; 164
     3d0:	86 bf       	out	0x36, r24	; 54
     3d2:	06 b6       	in	r0, 0x36	; 54
     3d4:	07 fe       	sbrs	r0, 7
     3d6:	fd cf       	rjmp	.-6      	; 0x3d2 <i2c_start+0x4>
     3d8:	08 95       	ret

000003da <i2c_write>:
     3da:	83 b9       	out	0x03, r24	; 3
     3dc:	84 e8       	ldi	r24, 0x84	; 132
     3de:	86 bf       	out	0x36, r24	; 54
     3e0:	06 b6       	in	r0, 0x36	; 54
     3e2:	07 fe       	sbrs	r0, 7
     3e4:	fd cf       	rjmp	.-6      	; 0x3e0 <i2c_write+0x6>
     3e6:	08 95       	ret

000003e8 <USART_Init>:
     3e8:	2a b1       	in	r18, 0x0a	; 10
     3ea:	28 69       	ori	r18, 0x98	; 152
     3ec:	2a b9       	out	0x0a, r18	; 10
     3ee:	20 b5       	in	r18, 0x20	; 32
     3f0:	26 68       	ori	r18, 0x86	; 134
     3f2:	20 bd       	out	0x20, r18	; 32
     3f4:	dc 01       	movw	r26, r24
     3f6:	cb 01       	movw	r24, r22
     3f8:	88 0f       	add	r24, r24
     3fa:	99 1f       	adc	r25, r25
     3fc:	aa 1f       	adc	r26, r26
     3fe:	bb 1f       	adc	r27, r27
     400:	88 0f       	add	r24, r24
     402:	99 1f       	adc	r25, r25
     404:	aa 1f       	adc	r26, r26
     406:	bb 1f       	adc	r27, r27
     408:	9c 01       	movw	r18, r24
     40a:	ad 01       	movw	r20, r26
     40c:	22 0f       	add	r18, r18
     40e:	33 1f       	adc	r19, r19
     410:	44 1f       	adc	r20, r20
     412:	55 1f       	adc	r21, r21
     414:	22 0f       	add	r18, r18
     416:	33 1f       	adc	r19, r19
     418:	44 1f       	adc	r20, r20
     41a:	55 1f       	adc	r21, r21
     41c:	60 e0       	ldi	r22, 0x00	; 0
     41e:	72 e1       	ldi	r23, 0x12	; 18
     420:	8a e7       	ldi	r24, 0x7A	; 122
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	0e 94 0f 10 	call	0x201e	; 0x201e <__udivmodsi4>
     428:	8f ef       	ldi	r24, 0xFF	; 255
     42a:	82 0f       	add	r24, r18
     42c:	89 b9       	out	0x09, r24	; 9
     42e:	da 01       	movw	r26, r20
     430:	c9 01       	movw	r24, r18
     432:	01 97       	sbiw	r24, 0x01	; 1
     434:	a1 09       	sbc	r26, r1
     436:	b1 09       	sbc	r27, r1
     438:	89 2f       	mov	r24, r25
     43a:	9a 2f       	mov	r25, r26
     43c:	ab 2f       	mov	r26, r27
     43e:	bb 27       	eor	r27, r27
     440:	80 bd       	out	0x20, r24	; 32
     442:	08 95       	ret

00000444 <USART_TxChar>:
     444:	8c b9       	out	0x0c, r24	; 12
     446:	5d 9b       	sbis	0x0b, 5	; 11
     448:	fe cf       	rjmp	.-4      	; 0x446 <USART_TxChar+0x2>
     44a:	08 95       	ret

0000044c <USART_SendString>:
     44c:	0f 93       	push	r16
     44e:	1f 93       	push	r17
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	8c 01       	movw	r16, r24
     456:	c0 e0       	ldi	r28, 0x00	; 0
     458:	d0 e0       	ldi	r29, 0x00	; 0
     45a:	03 c0       	rjmp	.+6      	; 0x462 <USART_SendString+0x16>
     45c:	0e 94 22 02 	call	0x444	; 0x444 <USART_TxChar>
     460:	21 96       	adiw	r28, 0x01	; 1
     462:	f8 01       	movw	r30, r16
     464:	ec 0f       	add	r30, r28
     466:	fd 1f       	adc	r31, r29
     468:	80 81       	ld	r24, Z
     46a:	81 11       	cpse	r24, r1
     46c:	f7 cf       	rjmp	.-18     	; 0x45c <USART_SendString+0x10>
     46e:	df 91       	pop	r29
     470:	cf 91       	pop	r28
     472:	1f 91       	pop	r17
     474:	0f 91       	pop	r16
     476:	08 95       	ret

00000478 <sendSMS>:
     478:	bf 92       	push	r11
     47a:	cf 92       	push	r12
     47c:	df 92       	push	r13
     47e:	ef 92       	push	r14
     480:	ff 92       	push	r15
     482:	0f 93       	push	r16
     484:	1f 93       	push	r17
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	cd b7       	in	r28, 0x3d	; 61
     48c:	de b7       	in	r29, 0x3e	; 62
     48e:	c4 56       	subi	r28, 0x64	; 100
     490:	d1 09       	sbc	r29, r1
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	f8 94       	cli
     496:	de bf       	out	0x3e, r29	; 62
     498:	0f be       	out	0x3f, r0	; 63
     49a:	cd bf       	out	0x3d, r28	; 61
     49c:	18 2f       	mov	r17, r24
     49e:	09 2f       	mov	r16, r25
     4a0:	c6 2e       	mov	r12, r22
     4a2:	b7 2e       	mov	r11, r23
     4a4:	89 e8       	ldi	r24, 0x89	; 137
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	0e 94 26 02 	call	0x44c	; 0x44c <USART_SendString>
     4ac:	8f e1       	ldi	r24, 0x1F	; 31
     4ae:	9e e4       	ldi	r25, 0x4E	; 78
     4b0:	01 97       	sbiw	r24, 0x01	; 1
     4b2:	f1 f7       	brne	.-4      	; 0x4b0 <sendSMS+0x38>
     4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <sendSMS+0x3e>
     4b6:	00 00       	nop
     4b8:	8d e8       	ldi	r24, 0x8D	; 141
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	0e 94 26 02 	call	0x44c	; 0x44c <USART_SendString>
     4c0:	ef e1       	ldi	r30, 0x1F	; 31
     4c2:	fe e4       	ldi	r31, 0x4E	; 78
     4c4:	31 97       	sbiw	r30, 0x01	; 1
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <sendSMS+0x4c>
     4c8:	00 c0       	rjmp	.+0      	; 0x4ca <sendSMS+0x52>
     4ca:	00 00       	nop
     4cc:	0f 93       	push	r16
     4ce:	1f 93       	push	r17
     4d0:	88 e9       	ldi	r24, 0x98	; 152
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	9f 93       	push	r25
     4d6:	8f 93       	push	r24
     4d8:	8e 01       	movw	r16, r28
     4da:	0f 5f       	subi	r16, 0xFF	; 255
     4dc:	1f 4f       	sbci	r17, 0xFF	; 255
     4de:	1f 93       	push	r17
     4e0:	0f 93       	push	r16
     4e2:	0e 94 c9 11 	call	0x2392	; 0x2392 <sprintf>
     4e6:	c8 01       	movw	r24, r16
     4e8:	0e 94 26 02 	call	0x44c	; 0x44c <USART_SendString>
     4ec:	0f 2e       	mov	r0, r31
     4ee:	f2 e7       	ldi	r31, 0x72	; 114
     4f0:	ef 2e       	mov	r14, r31
     4f2:	f1 e0       	ldi	r31, 0x01	; 1
     4f4:	ff 2e       	mov	r15, r31
     4f6:	f0 2d       	mov	r31, r0
     4f8:	0f 2e       	mov	r0, r31
     4fa:	f4 e6       	ldi	r31, 0x64	; 100
     4fc:	df 2e       	mov	r13, r31
     4fe:	f0 2d       	mov	r31, r0
     500:	f7 01       	movw	r30, r14
     502:	8d 2d       	mov	r24, r13
     504:	11 92       	st	Z+, r1
     506:	8a 95       	dec	r24
     508:	e9 f7       	brne	.-6      	; 0x504 <sendSMS+0x8c>
     50a:	bf 92       	push	r11
     50c:	cf 92       	push	r12
     50e:	80 ea       	ldi	r24, 0xA0	; 160
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	9f 93       	push	r25
     514:	8f 93       	push	r24
     516:	1f 93       	push	r17
     518:	0f 93       	push	r16
     51a:	0e 94 c9 11 	call	0x2392	; 0x2392 <sprintf>
     51e:	c8 01       	movw	r24, r16
     520:	0e 94 26 02 	call	0x44c	; 0x44c <USART_SendString>
     524:	f7 01       	movw	r30, r14
     526:	11 92       	st	Z+, r1
     528:	da 94       	dec	r13
     52a:	e9 f7       	brne	.-6      	; 0x526 <sendSMS+0xae>
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	cc 59       	subi	r28, 0x9C	; 156
     538:	df 4f       	sbci	r29, 0xFF	; 255
     53a:	0f b6       	in	r0, 0x3f	; 63
     53c:	f8 94       	cli
     53e:	de bf       	out	0x3e, r29	; 62
     540:	0f be       	out	0x3f, r0	; 63
     542:	cd bf       	out	0x3d, r28	; 61
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	1f 91       	pop	r17
     54a:	0f 91       	pop	r16
     54c:	ff 90       	pop	r15
     54e:	ef 90       	pop	r14
     550:	df 90       	pop	r13
     552:	cf 90       	pop	r12
     554:	bf 90       	pop	r11
     556:	08 95       	ret

00000558 <GSMConnect>:
     558:	0f 93       	push	r16
     55a:	1f 93       	push	r17
     55c:	cf 93       	push	r28
     55e:	df 93       	push	r29
     560:	cd b7       	in	r28, 0x3d	; 61
     562:	de b7       	in	r29, 0x3e	; 62
     564:	c4 56       	subi	r28, 0x64	; 100
     566:	d1 09       	sbc	r29, r1
     568:	0f b6       	in	r0, 0x3f	; 63
     56a:	f8 94       	cli
     56c:	de bf       	out	0x3e, r29	; 62
     56e:	0f be       	out	0x3f, r0	; 63
     570:	cd bf       	out	0x3d, r28	; 61
     572:	84 ea       	ldi	r24, 0xA4	; 164
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	0e 94 26 02 	call	0x44c	; 0x44c <USART_SendString>
     57a:	8f e1       	ldi	r24, 0x1F	; 31
     57c:	9e e4       	ldi	r25, 0x4E	; 78
     57e:	01 97       	sbiw	r24, 0x01	; 1
     580:	f1 f7       	brne	.-4      	; 0x57e <GSMConnect+0x26>
     582:	00 c0       	rjmp	.+0      	; 0x584 <GSMConnect+0x2c>
     584:	00 00       	nop
     586:	8a ea       	ldi	r24, 0xAA	; 170
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	9f 93       	push	r25
     58c:	8f 93       	push	r24
     58e:	9f 93       	push	r25
     590:	8f 93       	push	r24
     592:	82 eb       	ldi	r24, 0xB2	; 178
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	9f 93       	push	r25
     598:	8f 93       	push	r24
     59a:	89 eb       	ldi	r24, 0xB9	; 185
     59c:	90 e0       	ldi	r25, 0x00	; 0
     59e:	9f 93       	push	r25
     5a0:	8f 93       	push	r24
     5a2:	8e 01       	movw	r16, r28
     5a4:	0f 5f       	subi	r16, 0xFF	; 255
     5a6:	1f 4f       	sbci	r17, 0xFF	; 255
     5a8:	1f 93       	push	r17
     5aa:	0f 93       	push	r16
     5ac:	0e 94 c9 11 	call	0x2392	; 0x2392 <sprintf>
     5b0:	c8 01       	movw	r24, r16
     5b2:	0e 94 26 02 	call	0x44c	; 0x44c <USART_SendString>
     5b6:	84 e6       	ldi	r24, 0x64	; 100
     5b8:	e2 e7       	ldi	r30, 0x72	; 114
     5ba:	f1 e0       	ldi	r31, 0x01	; 1
     5bc:	df 01       	movw	r26, r30
     5be:	1d 92       	st	X+, r1
     5c0:	8a 95       	dec	r24
     5c2:	e9 f7       	brne	.-6      	; 0x5be <GSMConnect+0x66>
     5c4:	8f e1       	ldi	r24, 0x1F	; 31
     5c6:	9e e4       	ldi	r25, 0x4E	; 78
     5c8:	01 97       	sbiw	r24, 0x01	; 1
     5ca:	f1 f7       	brne	.-4      	; 0x5c8 <GSMConnect+0x70>
     5cc:	00 c0       	rjmp	.+0      	; 0x5ce <GSMConnect+0x76>
     5ce:	00 00       	nop
     5d0:	81 ed       	ldi	r24, 0xD1	; 209
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	0e 94 26 02 	call	0x44c	; 0x44c <USART_SendString>
     5d8:	0f b6       	in	r0, 0x3f	; 63
     5da:	f8 94       	cli
     5dc:	de bf       	out	0x3e, r29	; 62
     5de:	0f be       	out	0x3f, r0	; 63
     5e0:	cd bf       	out	0x3d, r28	; 61
     5e2:	cc 59       	subi	r28, 0x9C	; 156
     5e4:	df 4f       	sbci	r29, 0xFF	; 255
     5e6:	0f b6       	in	r0, 0x3f	; 63
     5e8:	f8 94       	cli
     5ea:	de bf       	out	0x3e, r29	; 62
     5ec:	0f be       	out	0x3f, r0	; 63
     5ee:	cd bf       	out	0x3d, r28	; 61
     5f0:	df 91       	pop	r29
     5f2:	cf 91       	pop	r28
     5f4:	1f 91       	pop	r17
     5f6:	0f 91       	pop	r16
     5f8:	08 95       	ret

000005fa <openSolenoidValves>:
     5fa:	8f 92       	push	r8
     5fc:	9f 92       	push	r9
     5fe:	af 92       	push	r10
     600:	bf 92       	push	r11
     602:	cf 92       	push	r12
     604:	df 92       	push	r13
     606:	ef 92       	push	r14
     608:	ff 92       	push	r15
     60a:	0f 93       	push	r16
     60c:	1f 93       	push	r17
     60e:	4b 01       	movw	r8, r22
     610:	5c 01       	movw	r10, r24
     612:	ca 01       	movw	r24, r20
     614:	b9 01       	movw	r22, r18
     616:	20 e0       	ldi	r18, 0x00	; 0
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	4a e7       	ldi	r20, 0x7A	; 122
     61c:	54 e4       	ldi	r21, 0x44	; 68
     61e:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__mulsf3>
     622:	6b 01       	movw	r12, r22
     624:	7c 01       	movw	r14, r24
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	4a e7       	ldi	r20, 0x7A	; 122
     62c:	54 e4       	ldi	r21, 0x44	; 68
     62e:	c5 01       	movw	r24, r10
     630:	b4 01       	movw	r22, r8
     632:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__mulsf3>
     636:	4b 01       	movw	r8, r22
     638:	5c 01       	movw	r10, r24
     63a:	9b 01       	movw	r18, r22
     63c:	ac 01       	movw	r20, r24
     63e:	c7 01       	movw	r24, r14
     640:	b6 01       	movw	r22, r12
     642:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <__gesf2>
     646:	18 16       	cp	r1, r24
     648:	0c f0       	brlt	.+2      	; 0x64c <openSolenoidValves+0x52>
     64a:	b7 c1       	rjmp	.+878    	; 0x9ba <__stack+0x15b>
     64c:	80 91 1d 04 	lds	r24, 0x041D	; 0x80041d <prev_millis1>
     650:	90 91 1e 04 	lds	r25, 0x041E	; 0x80041e <prev_millis1+0x1>
     654:	89 2b       	or	r24, r25
     656:	09 f0       	breq	.+2      	; 0x65a <openSolenoidValves+0x60>
     658:	40 c0       	rjmp	.+128    	; 0x6da <openSolenoidValves+0xe0>
     65a:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <millis>
     65e:	60 93 1d 04 	sts	0x041D, r22	; 0x80041d <prev_millis1>
     662:	70 93 1e 04 	sts	0x041E, r23	; 0x80041e <prev_millis1+0x1>
     666:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <prev_millis1+0x2>
     66a:	90 93 20 04 	sts	0x0420, r25	; 0x800420 <prev_millis1+0x3>
     66e:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatunsisf>
     672:	a5 01       	movw	r20, r10
     674:	94 01       	movw	r18, r8
     676:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__addsf3>
     67a:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <__fixunssfsi>
     67e:	60 93 19 04 	sts	0x0419, r22	; 0x800419 <need_millis1>
     682:	70 93 1a 04 	sts	0x041A, r23	; 0x80041a <need_millis1+0x1>
     686:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <need_millis1+0x2>
     68a:	90 93 1c 04 	sts	0x041C, r25	; 0x80041c <need_millis1+0x3>
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	a0 e0       	ldi	r26, 0x00	; 0
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     69a:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     69e:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     6a2:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     6a6:	85 b3       	in	r24, 0x15	; 21
     6a8:	84 60       	ori	r24, 0x04	; 4
     6aa:	85 bb       	out	0x15, r24	; 21
     6ac:	85 b3       	in	r24, 0x15	; 21
     6ae:	87 7f       	andi	r24, 0xF7	; 247
     6b0:	85 bb       	out	0x15, r24	; 21
     6b2:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     6b6:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     6ba:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     6be:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     6c2:	01 96       	adiw	r24, 0x01	; 1
     6c4:	a1 1d       	adc	r26, r1
     6c6:	b1 1d       	adc	r27, r1
     6c8:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     6cc:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     6d0:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     6d4:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     6d8:	70 c1       	rjmp	.+736    	; 0x9ba <__stack+0x15b>
     6da:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <millis>
     6de:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <need_millis1>
     6e2:	10 91 1a 04 	lds	r17, 0x041A	; 0x80041a <need_millis1+0x1>
     6e6:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <need_millis1+0x2>
     6ea:	30 91 1c 04 	lds	r19, 0x041C	; 0x80041c <need_millis1+0x3>
     6ee:	06 17       	cp	r16, r22
     6f0:	17 07       	cpc	r17, r23
     6f2:	28 07       	cpc	r18, r24
     6f4:	39 07       	cpc	r19, r25
     6f6:	08 f0       	brcs	.+2      	; 0x6fa <openSolenoidValves+0x100>
     6f8:	85 c0       	rjmp	.+266    	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     6fa:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     6fe:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     702:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     706:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     70a:	82 30       	cpi	r24, 0x02	; 2
     70c:	91 05       	cpc	r25, r1
     70e:	a1 05       	cpc	r26, r1
     710:	b1 05       	cpc	r27, r1
     712:	29 f0       	breq	.+10     	; 0x71e <openSolenoidValves+0x124>
     714:	03 97       	sbiw	r24, 0x03	; 3
     716:	a1 05       	cpc	r26, r1
     718:	b1 05       	cpc	r27, r1
     71a:	a1 f1       	breq	.+104    	; 0x784 <openSolenoidValves+0x18a>
     71c:	62 c0       	rjmp	.+196    	; 0x7e2 <openSolenoidValves+0x1e8>
     71e:	85 b3       	in	r24, 0x15	; 21
     720:	8b 7f       	andi	r24, 0xFB	; 251
     722:	85 bb       	out	0x15, r24	; 21
     724:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     728:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     72c:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     730:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     734:	01 96       	adiw	r24, 0x01	; 1
     736:	a1 1d       	adc	r26, r1
     738:	b1 1d       	adc	r27, r1
     73a:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     73e:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     742:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     746:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     74a:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <need_millis1>
     74e:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <need_millis1+0x1>
     752:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <need_millis1+0x2>
     756:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <need_millis1+0x3>
     75a:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatunsisf>
     75e:	a7 01       	movw	r20, r14
     760:	96 01       	movw	r18, r12
     762:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__addsf3>
     766:	a5 01       	movw	r20, r10
     768:	94 01       	movw	r18, r8
     76a:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__subsf3>
     76e:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <__fixunssfsi>
     772:	60 93 19 04 	sts	0x0419, r22	; 0x800419 <need_millis1>
     776:	70 93 1a 04 	sts	0x041A, r23	; 0x80041a <need_millis1+0x1>
     77a:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <need_millis1+0x2>
     77e:	90 93 1c 04 	sts	0x041C, r25	; 0x80041c <need_millis1+0x3>
     782:	1b c1       	rjmp	.+566    	; 0x9ba <__stack+0x15b>
     784:	85 b3       	in	r24, 0x15	; 21
     786:	88 60       	ori	r24, 0x08	; 8
     788:	85 bb       	out	0x15, r24	; 21
     78a:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     78e:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     792:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     796:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     79a:	01 96       	adiw	r24, 0x01	; 1
     79c:	a1 1d       	adc	r26, r1
     79e:	b1 1d       	adc	r27, r1
     7a0:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     7a4:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     7a8:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     7ac:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     7b0:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <need_millis1>
     7b4:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <need_millis1+0x1>
     7b8:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <need_millis1+0x2>
     7bc:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <need_millis1+0x3>
     7c0:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatunsisf>
     7c4:	a7 01       	movw	r20, r14
     7c6:	96 01       	movw	r18, r12
     7c8:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__addsf3>
     7cc:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <__fixunssfsi>
     7d0:	60 93 19 04 	sts	0x0419, r22	; 0x800419 <need_millis1>
     7d4:	70 93 1a 04 	sts	0x041A, r23	; 0x80041a <need_millis1+0x1>
     7d8:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <need_millis1+0x2>
     7dc:	90 93 1c 04 	sts	0x041C, r25	; 0x80041c <need_millis1+0x3>
     7e0:	ec c0       	rjmp	.+472    	; 0x9ba <__stack+0x15b>
     7e2:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <case_num1>
     7e6:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <case_num1+0x1>
     7ea:	10 92 6a 03 	sts	0x036A, r1	; 0x80036a <case_num1+0x2>
     7ee:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <case_num1+0x3>
     7f2:	10 92 1d 04 	sts	0x041D, r1	; 0x80041d <prev_millis1>
     7f6:	10 92 1e 04 	sts	0x041E, r1	; 0x80041e <prev_millis1+0x1>
     7fa:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <prev_millis1+0x2>
     7fe:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <prev_millis1+0x3>
     802:	db c0       	rjmp	.+438    	; 0x9ba <__stack+0x15b>
     804:	80 91 1d 04 	lds	r24, 0x041D	; 0x80041d <prev_millis1>
     808:	90 91 1e 04 	lds	r25, 0x041E	; 0x80041e <prev_millis1+0x1>
     80c:	89 2b       	or	r24, r25
     80e:	09 f0       	breq	.+2      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     810:	40 c0       	rjmp	.+128    	; 0x892 <__stack+0x33>
     812:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <millis>
     816:	60 93 1d 04 	sts	0x041D, r22	; 0x80041d <prev_millis1>
     81a:	70 93 1e 04 	sts	0x041E, r23	; 0x80041e <prev_millis1+0x1>
     81e:	80 93 1f 04 	sts	0x041F, r24	; 0x80041f <prev_millis1+0x2>
     822:	90 93 20 04 	sts	0x0420, r25	; 0x800420 <prev_millis1+0x3>
     826:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatunsisf>
     82a:	a7 01       	movw	r20, r14
     82c:	96 01       	movw	r18, r12
     82e:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__addsf3>
     832:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <__fixunssfsi>
     836:	60 93 19 04 	sts	0x0419, r22	; 0x800419 <need_millis1>
     83a:	70 93 1a 04 	sts	0x041A, r23	; 0x80041a <need_millis1+0x1>
     83e:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <need_millis1+0x2>
     842:	90 93 1c 04 	sts	0x041C, r25	; 0x80041c <need_millis1+0x3>
     846:	81 e0       	ldi	r24, 0x01	; 1
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	a0 e0       	ldi	r26, 0x00	; 0
     84c:	b0 e0       	ldi	r27, 0x00	; 0
     84e:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     852:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     856:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     85a:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     85e:	85 b3       	in	r24, 0x15	; 21
     860:	84 60       	ori	r24, 0x04	; 4
     862:	85 bb       	out	0x15, r24	; 21
     864:	85 b3       	in	r24, 0x15	; 21
     866:	87 7f       	andi	r24, 0xF7	; 247
     868:	85 bb       	out	0x15, r24	; 21
     86a:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     86e:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     872:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     876:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     87a:	01 96       	adiw	r24, 0x01	; 1
     87c:	a1 1d       	adc	r26, r1
     87e:	b1 1d       	adc	r27, r1
     880:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     884:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     888:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     88c:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     890:	94 c0       	rjmp	.+296    	; 0x9ba <__stack+0x15b>
     892:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <millis>
     896:	00 91 19 04 	lds	r16, 0x0419	; 0x800419 <need_millis1>
     89a:	10 91 1a 04 	lds	r17, 0x041A	; 0x80041a <need_millis1+0x1>
     89e:	20 91 1b 04 	lds	r18, 0x041B	; 0x80041b <need_millis1+0x2>
     8a2:	30 91 1c 04 	lds	r19, 0x041C	; 0x80041c <need_millis1+0x3>
     8a6:	06 17       	cp	r16, r22
     8a8:	17 07       	cpc	r17, r23
     8aa:	28 07       	cpc	r18, r24
     8ac:	39 07       	cpc	r19, r25
     8ae:	08 f0       	brcs	.+2      	; 0x8b2 <__stack+0x53>
     8b0:	84 c0       	rjmp	.+264    	; 0x9ba <__stack+0x15b>
     8b2:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     8b6:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     8ba:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     8be:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     8c2:	82 30       	cpi	r24, 0x02	; 2
     8c4:	91 05       	cpc	r25, r1
     8c6:	a1 05       	cpc	r26, r1
     8c8:	b1 05       	cpc	r27, r1
     8ca:	29 f0       	breq	.+10     	; 0x8d6 <__stack+0x77>
     8cc:	03 97       	sbiw	r24, 0x03	; 3
     8ce:	a1 05       	cpc	r26, r1
     8d0:	b1 05       	cpc	r27, r1
     8d2:	a1 f1       	breq	.+104    	; 0x93c <__stack+0xdd>
     8d4:	62 c0       	rjmp	.+196    	; 0x99a <__stack+0x13b>
     8d6:	85 b3       	in	r24, 0x15	; 21
     8d8:	88 60       	ori	r24, 0x08	; 8
     8da:	85 bb       	out	0x15, r24	; 21
     8dc:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     8e0:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     8e4:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     8e8:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     8ec:	01 96       	adiw	r24, 0x01	; 1
     8ee:	a1 1d       	adc	r26, r1
     8f0:	b1 1d       	adc	r27, r1
     8f2:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     8f6:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     8fa:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     8fe:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     902:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <need_millis1>
     906:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <need_millis1+0x1>
     90a:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <need_millis1+0x2>
     90e:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <need_millis1+0x3>
     912:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatunsisf>
     916:	a5 01       	movw	r20, r10
     918:	94 01       	movw	r18, r8
     91a:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__addsf3>
     91e:	a7 01       	movw	r20, r14
     920:	96 01       	movw	r18, r12
     922:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__subsf3>
     926:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <__fixunssfsi>
     92a:	60 93 19 04 	sts	0x0419, r22	; 0x800419 <need_millis1>
     92e:	70 93 1a 04 	sts	0x041A, r23	; 0x80041a <need_millis1+0x1>
     932:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <need_millis1+0x2>
     936:	90 93 1c 04 	sts	0x041C, r25	; 0x80041c <need_millis1+0x3>
     93a:	3f c0       	rjmp	.+126    	; 0x9ba <__stack+0x15b>
     93c:	85 b3       	in	r24, 0x15	; 21
     93e:	8b 7f       	andi	r24, 0xFB	; 251
     940:	85 bb       	out	0x15, r24	; 21
     942:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <case_num1>
     946:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <case_num1+0x1>
     94a:	a0 91 6a 03 	lds	r26, 0x036A	; 0x80036a <case_num1+0x2>
     94e:	b0 91 6b 03 	lds	r27, 0x036B	; 0x80036b <case_num1+0x3>
     952:	01 96       	adiw	r24, 0x01	; 1
     954:	a1 1d       	adc	r26, r1
     956:	b1 1d       	adc	r27, r1
     958:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <case_num1>
     95c:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <case_num1+0x1>
     960:	a0 93 6a 03 	sts	0x036A, r26	; 0x80036a <case_num1+0x2>
     964:	b0 93 6b 03 	sts	0x036B, r27	; 0x80036b <case_num1+0x3>
     968:	60 91 19 04 	lds	r22, 0x0419	; 0x800419 <need_millis1>
     96c:	70 91 1a 04 	lds	r23, 0x041A	; 0x80041a <need_millis1+0x1>
     970:	80 91 1b 04 	lds	r24, 0x041B	; 0x80041b <need_millis1+0x2>
     974:	90 91 1c 04 	lds	r25, 0x041C	; 0x80041c <need_millis1+0x3>
     978:	0e 94 7c 0e 	call	0x1cf8	; 0x1cf8 <__floatunsisf>
     97c:	a5 01       	movw	r20, r10
     97e:	94 01       	movw	r18, r8
     980:	0e 94 6a 0d 	call	0x1ad4	; 0x1ad4 <__addsf3>
     984:	0e 94 4d 0e 	call	0x1c9a	; 0x1c9a <__fixunssfsi>
     988:	60 93 19 04 	sts	0x0419, r22	; 0x800419 <need_millis1>
     98c:	70 93 1a 04 	sts	0x041A, r23	; 0x80041a <need_millis1+0x1>
     990:	80 93 1b 04 	sts	0x041B, r24	; 0x80041b <need_millis1+0x2>
     994:	90 93 1c 04 	sts	0x041C, r25	; 0x80041c <need_millis1+0x3>
     998:	10 c0       	rjmp	.+32     	; 0x9ba <__stack+0x15b>
     99a:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <case_num1>
     99e:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <case_num1+0x1>
     9a2:	10 92 6a 03 	sts	0x036A, r1	; 0x80036a <case_num1+0x2>
     9a6:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <case_num1+0x3>
     9aa:	10 92 1d 04 	sts	0x041D, r1	; 0x80041d <prev_millis1>
     9ae:	10 92 1e 04 	sts	0x041E, r1	; 0x80041e <prev_millis1+0x1>
     9b2:	10 92 1f 04 	sts	0x041F, r1	; 0x80041f <prev_millis1+0x2>
     9b6:	10 92 20 04 	sts	0x0420, r1	; 0x800420 <prev_millis1+0x3>
     9ba:	1f 91       	pop	r17
     9bc:	0f 91       	pop	r16
     9be:	ff 90       	pop	r15
     9c0:	ef 90       	pop	r14
     9c2:	df 90       	pop	r13
     9c4:	cf 90       	pop	r12
     9c6:	bf 90       	pop	r11
     9c8:	af 90       	pop	r10
     9ca:	9f 90       	pop	r9
     9cc:	8f 90       	pop	r8
     9ce:	08 95       	ret

000009d0 <startStepperMotor>:
     9d0:	0f 93       	push	r16
     9d2:	1f 93       	push	r17
     9d4:	cf 93       	push	r28
     9d6:	df 93       	push	r29
     9d8:	ec 01       	movw	r28, r24
     9da:	80 91 ce 04 	lds	r24, 0x04CE	; 0x8004ce <prev_millis0>
     9de:	90 91 cf 04 	lds	r25, 0x04CF	; 0x8004cf <prev_millis0+0x1>
     9e2:	89 2b       	or	r24, r25
     9e4:	09 f0       	breq	.+2      	; 0x9e8 <startStepperMotor+0x18>
     9e6:	3f c0       	rjmp	.+126    	; 0xa66 <startStepperMotor+0x96>
     9e8:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <millis>
     9ec:	8b 01       	movw	r16, r22
     9ee:	9c 01       	movw	r18, r24
     9f0:	60 93 ce 04 	sts	0x04CE, r22	; 0x8004ce <prev_millis0>
     9f4:	70 93 cf 04 	sts	0x04CF, r23	; 0x8004cf <prev_millis0+0x1>
     9f8:	80 93 d0 04 	sts	0x04D0, r24	; 0x8004d0 <prev_millis0+0x2>
     9fc:	90 93 d1 04 	sts	0x04D1, r25	; 0x8004d1 <prev_millis0+0x3>
     a00:	ce 01       	movw	r24, r28
     a02:	88 0f       	add	r24, r24
     a04:	99 1f       	adc	r25, r25
     a06:	be 01       	movw	r22, r28
     a08:	66 0f       	add	r22, r22
     a0a:	77 1f       	adc	r23, r23
     a0c:	66 0f       	add	r22, r22
     a0e:	77 1f       	adc	r23, r23
     a10:	66 0f       	add	r22, r22
     a12:	77 1f       	adc	r23, r23
     a14:	68 0f       	add	r22, r24
     a16:	79 1f       	adc	r23, r25
     a18:	80 e3       	ldi	r24, 0x30	; 48
     a1a:	95 e7       	ldi	r25, 0x75	; 117
     a1c:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     a20:	cb 01       	movw	r24, r22
     a22:	77 0f       	add	r23, r23
     a24:	aa 0b       	sbc	r26, r26
     a26:	bb 0b       	sbc	r27, r27
     a28:	08 0f       	add	r16, r24
     a2a:	19 1f       	adc	r17, r25
     a2c:	2a 1f       	adc	r18, r26
     a2e:	3b 1f       	adc	r19, r27
     a30:	00 93 6d 03 	sts	0x036D, r16	; 0x80036d <need_millis0>
     a34:	10 93 6e 03 	sts	0x036E, r17	; 0x80036e <need_millis0+0x1>
     a38:	20 93 6f 03 	sts	0x036F, r18	; 0x80036f <need_millis0+0x2>
     a3c:	30 93 70 03 	sts	0x0370, r19	; 0x800370 <need_millis0+0x3>
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     a48:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     a4c:	85 b3       	in	r24, 0x15	; 21
     a4e:	80 61       	ori	r24, 0x10	; 16
     a50:	85 bb       	out	0x15, r24	; 21
     a52:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     a56:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     a5a:	01 96       	adiw	r24, 0x01	; 1
     a5c:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     a60:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     a64:	e3 c3       	rjmp	.+1990   	; 0x122c <startStepperMotor+0x85c>
     a66:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <millis>
     a6a:	00 91 6d 03 	lds	r16, 0x036D	; 0x80036d <need_millis0>
     a6e:	10 91 6e 03 	lds	r17, 0x036E	; 0x80036e <need_millis0+0x1>
     a72:	20 91 6f 03 	lds	r18, 0x036F	; 0x80036f <need_millis0+0x2>
     a76:	30 91 70 03 	lds	r19, 0x0370	; 0x800370 <need_millis0+0x3>
     a7a:	06 17       	cp	r16, r22
     a7c:	17 07       	cpc	r17, r23
     a7e:	28 07       	cpc	r18, r24
     a80:	39 07       	cpc	r19, r25
     a82:	08 f0       	brcs	.+2      	; 0xa86 <startStepperMotor+0xb6>
     a84:	d3 c3       	rjmp	.+1958   	; 0x122c <startStepperMotor+0x85c>
     a86:	e0 91 15 04 	lds	r30, 0x0415	; 0x800415 <case_num0>
     a8a:	f0 91 16 04 	lds	r31, 0x0416	; 0x800416 <case_num0+0x1>
     a8e:	32 97       	sbiw	r30, 0x02	; 2
     a90:	e3 31       	cpi	r30, 0x13	; 19
     a92:	f1 05       	cpc	r31, r1
     a94:	08 f0       	brcs	.+2      	; 0xa98 <startStepperMotor+0xc8>
     a96:	be c3       	rjmp	.+1916   	; 0x1214 <startStepperMotor+0x844>
     a98:	e6 5d       	subi	r30, 0xD6	; 214
     a9a:	ff 4f       	sbci	r31, 0xFF	; 255
     a9c:	0c 94 31 10 	jmp	0x2062	; 0x2062 <__tablejump2__>
     aa0:	85 b3       	in	r24, 0x15	; 21
     aa2:	80 64       	ori	r24, 0x40	; 64
     aa4:	85 bb       	out	0x15, r24	; 21
     aa6:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     aaa:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     ab4:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     ab8:	ce 01       	movw	r24, r28
     aba:	88 0f       	add	r24, r24
     abc:	99 1f       	adc	r25, r25
     abe:	be 01       	movw	r22, r28
     ac0:	66 0f       	add	r22, r22
     ac2:	77 1f       	adc	r23, r23
     ac4:	66 0f       	add	r22, r22
     ac6:	77 1f       	adc	r23, r23
     ac8:	66 0f       	add	r22, r22
     aca:	77 1f       	adc	r23, r23
     acc:	68 0f       	add	r22, r24
     ace:	79 1f       	adc	r23, r25
     ad0:	80 e3       	ldi	r24, 0x30	; 48
     ad2:	95 e7       	ldi	r25, 0x75	; 117
     ad4:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     ad8:	ab 01       	movw	r20, r22
     ada:	77 0f       	add	r23, r23
     adc:	66 0b       	sbc	r22, r22
     ade:	77 0b       	sbc	r23, r23
     ae0:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     ae4:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     ae8:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     aec:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     af0:	84 0f       	add	r24, r20
     af2:	95 1f       	adc	r25, r21
     af4:	a6 1f       	adc	r26, r22
     af6:	b7 1f       	adc	r27, r23
     af8:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     afc:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     b00:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     b04:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     b08:	91 c3       	rjmp	.+1826   	; 0x122c <startStepperMotor+0x85c>
     b0a:	85 b3       	in	r24, 0x15	; 21
     b0c:	8f 7e       	andi	r24, 0xEF	; 239
     b0e:	85 bb       	out	0x15, r24	; 21
     b10:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     b14:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     b18:	01 96       	adiw	r24, 0x01	; 1
     b1a:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     b1e:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     b22:	ce 01       	movw	r24, r28
     b24:	88 0f       	add	r24, r24
     b26:	99 1f       	adc	r25, r25
     b28:	be 01       	movw	r22, r28
     b2a:	66 0f       	add	r22, r22
     b2c:	77 1f       	adc	r23, r23
     b2e:	66 0f       	add	r22, r22
     b30:	77 1f       	adc	r23, r23
     b32:	66 0f       	add	r22, r22
     b34:	77 1f       	adc	r23, r23
     b36:	68 0f       	add	r22, r24
     b38:	79 1f       	adc	r23, r25
     b3a:	80 e3       	ldi	r24, 0x30	; 48
     b3c:	95 e7       	ldi	r25, 0x75	; 117
     b3e:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     b42:	ab 01       	movw	r20, r22
     b44:	77 0f       	add	r23, r23
     b46:	66 0b       	sbc	r22, r22
     b48:	77 0b       	sbc	r23, r23
     b4a:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     b4e:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     b52:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     b56:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     b5a:	84 0f       	add	r24, r20
     b5c:	95 1f       	adc	r25, r21
     b5e:	a6 1f       	adc	r26, r22
     b60:	b7 1f       	adc	r27, r23
     b62:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     b66:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     b6a:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     b6e:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     b72:	5c c3       	rjmp	.+1720   	; 0x122c <startStepperMotor+0x85c>
     b74:	85 b3       	in	r24, 0x15	; 21
     b76:	80 62       	ori	r24, 0x20	; 32
     b78:	85 bb       	out	0x15, r24	; 21
     b7a:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     b7e:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     b82:	01 96       	adiw	r24, 0x01	; 1
     b84:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     b88:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     b8c:	ce 01       	movw	r24, r28
     b8e:	88 0f       	add	r24, r24
     b90:	99 1f       	adc	r25, r25
     b92:	be 01       	movw	r22, r28
     b94:	66 0f       	add	r22, r22
     b96:	77 1f       	adc	r23, r23
     b98:	66 0f       	add	r22, r22
     b9a:	77 1f       	adc	r23, r23
     b9c:	66 0f       	add	r22, r22
     b9e:	77 1f       	adc	r23, r23
     ba0:	68 0f       	add	r22, r24
     ba2:	79 1f       	adc	r23, r25
     ba4:	80 e3       	ldi	r24, 0x30	; 48
     ba6:	95 e7       	ldi	r25, 0x75	; 117
     ba8:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     bac:	ab 01       	movw	r20, r22
     bae:	77 0f       	add	r23, r23
     bb0:	66 0b       	sbc	r22, r22
     bb2:	77 0b       	sbc	r23, r23
     bb4:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     bb8:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     bbc:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     bc0:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     bc4:	84 0f       	add	r24, r20
     bc6:	95 1f       	adc	r25, r21
     bc8:	a6 1f       	adc	r26, r22
     bca:	b7 1f       	adc	r27, r23
     bcc:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     bd0:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     bd4:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     bd8:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     bdc:	27 c3       	rjmp	.+1614   	; 0x122c <startStepperMotor+0x85c>
     bde:	85 b3       	in	r24, 0x15	; 21
     be0:	8f 7b       	andi	r24, 0xBF	; 191
     be2:	85 bb       	out	0x15, r24	; 21
     be4:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     be8:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     bec:	01 96       	adiw	r24, 0x01	; 1
     bee:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     bf2:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     bf6:	ce 01       	movw	r24, r28
     bf8:	88 0f       	add	r24, r24
     bfa:	99 1f       	adc	r25, r25
     bfc:	be 01       	movw	r22, r28
     bfe:	66 0f       	add	r22, r22
     c00:	77 1f       	adc	r23, r23
     c02:	66 0f       	add	r22, r22
     c04:	77 1f       	adc	r23, r23
     c06:	66 0f       	add	r22, r22
     c08:	77 1f       	adc	r23, r23
     c0a:	68 0f       	add	r22, r24
     c0c:	79 1f       	adc	r23, r25
     c0e:	80 e3       	ldi	r24, 0x30	; 48
     c10:	95 e7       	ldi	r25, 0x75	; 117
     c12:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     c16:	ab 01       	movw	r20, r22
     c18:	77 0f       	add	r23, r23
     c1a:	66 0b       	sbc	r22, r22
     c1c:	77 0b       	sbc	r23, r23
     c1e:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     c22:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     c26:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     c2a:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     c2e:	84 0f       	add	r24, r20
     c30:	95 1f       	adc	r25, r21
     c32:	a6 1f       	adc	r26, r22
     c34:	b7 1f       	adc	r27, r23
     c36:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     c3a:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     c3e:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     c42:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     c46:	f2 c2       	rjmp	.+1508   	; 0x122c <startStepperMotor+0x85c>
     c48:	85 b3       	in	r24, 0x15	; 21
     c4a:	80 68       	ori	r24, 0x80	; 128
     c4c:	85 bb       	out	0x15, r24	; 21
     c4e:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     c52:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     c5c:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     c60:	ce 01       	movw	r24, r28
     c62:	88 0f       	add	r24, r24
     c64:	99 1f       	adc	r25, r25
     c66:	be 01       	movw	r22, r28
     c68:	66 0f       	add	r22, r22
     c6a:	77 1f       	adc	r23, r23
     c6c:	66 0f       	add	r22, r22
     c6e:	77 1f       	adc	r23, r23
     c70:	66 0f       	add	r22, r22
     c72:	77 1f       	adc	r23, r23
     c74:	68 0f       	add	r22, r24
     c76:	79 1f       	adc	r23, r25
     c78:	80 e3       	ldi	r24, 0x30	; 48
     c7a:	95 e7       	ldi	r25, 0x75	; 117
     c7c:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     c80:	ab 01       	movw	r20, r22
     c82:	77 0f       	add	r23, r23
     c84:	66 0b       	sbc	r22, r22
     c86:	77 0b       	sbc	r23, r23
     c88:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     c8c:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     c90:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     c94:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     c98:	84 0f       	add	r24, r20
     c9a:	95 1f       	adc	r25, r21
     c9c:	a6 1f       	adc	r26, r22
     c9e:	b7 1f       	adc	r27, r23
     ca0:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     ca4:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     ca8:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     cac:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     cb0:	bd c2       	rjmp	.+1402   	; 0x122c <startStepperMotor+0x85c>
     cb2:	85 b3       	in	r24, 0x15	; 21
     cb4:	8f 7d       	andi	r24, 0xDF	; 223
     cb6:	85 bb       	out	0x15, r24	; 21
     cb8:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     cbc:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     cc0:	01 96       	adiw	r24, 0x01	; 1
     cc2:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     cc6:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     cca:	ce 01       	movw	r24, r28
     ccc:	88 0f       	add	r24, r24
     cce:	99 1f       	adc	r25, r25
     cd0:	be 01       	movw	r22, r28
     cd2:	66 0f       	add	r22, r22
     cd4:	77 1f       	adc	r23, r23
     cd6:	66 0f       	add	r22, r22
     cd8:	77 1f       	adc	r23, r23
     cda:	66 0f       	add	r22, r22
     cdc:	77 1f       	adc	r23, r23
     cde:	68 0f       	add	r22, r24
     ce0:	79 1f       	adc	r23, r25
     ce2:	80 e3       	ldi	r24, 0x30	; 48
     ce4:	95 e7       	ldi	r25, 0x75	; 117
     ce6:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     cea:	ab 01       	movw	r20, r22
     cec:	77 0f       	add	r23, r23
     cee:	66 0b       	sbc	r22, r22
     cf0:	77 0b       	sbc	r23, r23
     cf2:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     cf6:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     cfa:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     cfe:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     d02:	84 0f       	add	r24, r20
     d04:	95 1f       	adc	r25, r21
     d06:	a6 1f       	adc	r26, r22
     d08:	b7 1f       	adc	r27, r23
     d0a:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     d0e:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     d12:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     d16:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     d1a:	88 c2       	rjmp	.+1296   	; 0x122c <startStepperMotor+0x85c>
     d1c:	85 b3       	in	r24, 0x15	; 21
     d1e:	80 61       	ori	r24, 0x10	; 16
     d20:	85 bb       	out	0x15, r24	; 21
     d22:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     d26:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     d2a:	01 96       	adiw	r24, 0x01	; 1
     d2c:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     d30:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     d34:	ce 01       	movw	r24, r28
     d36:	88 0f       	add	r24, r24
     d38:	99 1f       	adc	r25, r25
     d3a:	be 01       	movw	r22, r28
     d3c:	66 0f       	add	r22, r22
     d3e:	77 1f       	adc	r23, r23
     d40:	66 0f       	add	r22, r22
     d42:	77 1f       	adc	r23, r23
     d44:	66 0f       	add	r22, r22
     d46:	77 1f       	adc	r23, r23
     d48:	68 0f       	add	r22, r24
     d4a:	79 1f       	adc	r23, r25
     d4c:	80 e3       	ldi	r24, 0x30	; 48
     d4e:	95 e7       	ldi	r25, 0x75	; 117
     d50:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     d54:	ab 01       	movw	r20, r22
     d56:	77 0f       	add	r23, r23
     d58:	66 0b       	sbc	r22, r22
     d5a:	77 0b       	sbc	r23, r23
     d5c:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     d60:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     d64:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     d68:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     d6c:	84 0f       	add	r24, r20
     d6e:	95 1f       	adc	r25, r21
     d70:	a6 1f       	adc	r26, r22
     d72:	b7 1f       	adc	r27, r23
     d74:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     d78:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     d7c:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     d80:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     d84:	53 c2       	rjmp	.+1190   	; 0x122c <startStepperMotor+0x85c>
     d86:	85 b3       	in	r24, 0x15	; 21
     d88:	8f 77       	andi	r24, 0x7F	; 127
     d8a:	85 bb       	out	0x15, r24	; 21
     d8c:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     d90:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     d94:	01 96       	adiw	r24, 0x01	; 1
     d96:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     d9a:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     d9e:	ce 01       	movw	r24, r28
     da0:	88 0f       	add	r24, r24
     da2:	99 1f       	adc	r25, r25
     da4:	be 01       	movw	r22, r28
     da6:	66 0f       	add	r22, r22
     da8:	77 1f       	adc	r23, r23
     daa:	66 0f       	add	r22, r22
     dac:	77 1f       	adc	r23, r23
     dae:	66 0f       	add	r22, r22
     db0:	77 1f       	adc	r23, r23
     db2:	68 0f       	add	r22, r24
     db4:	79 1f       	adc	r23, r25
     db6:	80 e3       	ldi	r24, 0x30	; 48
     db8:	95 e7       	ldi	r25, 0x75	; 117
     dba:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     dbe:	ab 01       	movw	r20, r22
     dc0:	77 0f       	add	r23, r23
     dc2:	66 0b       	sbc	r22, r22
     dc4:	77 0b       	sbc	r23, r23
     dc6:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     dca:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     dce:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     dd2:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     dd6:	84 0f       	add	r24, r20
     dd8:	95 1f       	adc	r25, r21
     dda:	a6 1f       	adc	r26, r22
     ddc:	b7 1f       	adc	r27, r23
     dde:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     de2:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     de6:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     dea:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     dee:	1e c2       	rjmp	.+1084   	; 0x122c <startStepperMotor+0x85c>
     df0:	85 b3       	in	r24, 0x15	; 21
     df2:	8f 7e       	andi	r24, 0xEF	; 239
     df4:	85 bb       	out	0x15, r24	; 21
     df6:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     dfa:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     dfe:	01 96       	adiw	r24, 0x01	; 1
     e00:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     e04:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     e08:	ce 01       	movw	r24, r28
     e0a:	88 0f       	add	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	be 01       	movw	r22, r28
     e10:	66 0f       	add	r22, r22
     e12:	77 1f       	adc	r23, r23
     e14:	66 0f       	add	r22, r22
     e16:	77 1f       	adc	r23, r23
     e18:	66 0f       	add	r22, r22
     e1a:	77 1f       	adc	r23, r23
     e1c:	68 0f       	add	r22, r24
     e1e:	79 1f       	adc	r23, r25
     e20:	80 e3       	ldi	r24, 0x30	; 48
     e22:	95 e7       	ldi	r25, 0x75	; 117
     e24:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     e28:	ab 01       	movw	r20, r22
     e2a:	77 0f       	add	r23, r23
     e2c:	66 0b       	sbc	r22, r22
     e2e:	77 0b       	sbc	r23, r23
     e30:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     e34:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     e38:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     e3c:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     e40:	84 0f       	add	r24, r20
     e42:	95 1f       	adc	r25, r21
     e44:	a6 1f       	adc	r26, r22
     e46:	b7 1f       	adc	r27, r23
     e48:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     e4c:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     e50:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     e54:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     e58:	e9 c1       	rjmp	.+978    	; 0x122c <startStepperMotor+0x85c>
     e5a:	85 b3       	in	r24, 0x15	; 21
     e5c:	80 61       	ori	r24, 0x10	; 16
     e5e:	85 bb       	out	0x15, r24	; 21
     e60:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     e64:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     e68:	01 96       	adiw	r24, 0x01	; 1
     e6a:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     e6e:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     e72:	ce 01       	movw	r24, r28
     e74:	88 0f       	add	r24, r24
     e76:	99 1f       	adc	r25, r25
     e78:	be 01       	movw	r22, r28
     e7a:	66 0f       	add	r22, r22
     e7c:	77 1f       	adc	r23, r23
     e7e:	66 0f       	add	r22, r22
     e80:	77 1f       	adc	r23, r23
     e82:	66 0f       	add	r22, r22
     e84:	77 1f       	adc	r23, r23
     e86:	68 0f       	add	r22, r24
     e88:	79 1f       	adc	r23, r25
     e8a:	80 e3       	ldi	r24, 0x30	; 48
     e8c:	95 e7       	ldi	r25, 0x75	; 117
     e8e:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     e92:	ab 01       	movw	r20, r22
     e94:	77 0f       	add	r23, r23
     e96:	66 0b       	sbc	r22, r22
     e98:	77 0b       	sbc	r23, r23
     e9a:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     e9e:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     ea2:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     ea6:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     eaa:	84 0f       	add	r24, r20
     eac:	95 1f       	adc	r25, r21
     eae:	a6 1f       	adc	r26, r22
     eb0:	b7 1f       	adc	r27, r23
     eb2:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     eb6:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     eba:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     ebe:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     ec2:	b4 c1       	rjmp	.+872    	; 0x122c <startStepperMotor+0x85c>
     ec4:	85 b3       	in	r24, 0x15	; 21
     ec6:	80 68       	ori	r24, 0x80	; 128
     ec8:	85 bb       	out	0x15, r24	; 21
     eca:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     ece:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     ed2:	01 96       	adiw	r24, 0x01	; 1
     ed4:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     ed8:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     edc:	ce 01       	movw	r24, r28
     ede:	88 0f       	add	r24, r24
     ee0:	99 1f       	adc	r25, r25
     ee2:	be 01       	movw	r22, r28
     ee4:	66 0f       	add	r22, r22
     ee6:	77 1f       	adc	r23, r23
     ee8:	66 0f       	add	r22, r22
     eea:	77 1f       	adc	r23, r23
     eec:	66 0f       	add	r22, r22
     eee:	77 1f       	adc	r23, r23
     ef0:	68 0f       	add	r22, r24
     ef2:	79 1f       	adc	r23, r25
     ef4:	80 e3       	ldi	r24, 0x30	; 48
     ef6:	95 e7       	ldi	r25, 0x75	; 117
     ef8:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     efc:	ab 01       	movw	r20, r22
     efe:	77 0f       	add	r23, r23
     f00:	66 0b       	sbc	r22, r22
     f02:	77 0b       	sbc	r23, r23
     f04:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     f08:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     f0c:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     f10:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     f14:	84 0f       	add	r24, r20
     f16:	95 1f       	adc	r25, r21
     f18:	a6 1f       	adc	r26, r22
     f1a:	b7 1f       	adc	r27, r23
     f1c:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     f20:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     f24:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     f28:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     f2c:	7f c1       	rjmp	.+766    	; 0x122c <startStepperMotor+0x85c>
     f2e:	85 b3       	in	r24, 0x15	; 21
     f30:	8f 7e       	andi	r24, 0xEF	; 239
     f32:	85 bb       	out	0x15, r24	; 21
     f34:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     f38:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     f3c:	01 96       	adiw	r24, 0x01	; 1
     f3e:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     f42:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     f46:	ce 01       	movw	r24, r28
     f48:	88 0f       	add	r24, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	be 01       	movw	r22, r28
     f4e:	66 0f       	add	r22, r22
     f50:	77 1f       	adc	r23, r23
     f52:	66 0f       	add	r22, r22
     f54:	77 1f       	adc	r23, r23
     f56:	66 0f       	add	r22, r22
     f58:	77 1f       	adc	r23, r23
     f5a:	68 0f       	add	r22, r24
     f5c:	79 1f       	adc	r23, r25
     f5e:	80 e3       	ldi	r24, 0x30	; 48
     f60:	95 e7       	ldi	r25, 0x75	; 117
     f62:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     f66:	ab 01       	movw	r20, r22
     f68:	77 0f       	add	r23, r23
     f6a:	66 0b       	sbc	r22, r22
     f6c:	77 0b       	sbc	r23, r23
     f6e:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     f72:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     f76:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     f7a:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     f7e:	84 0f       	add	r24, r20
     f80:	95 1f       	adc	r25, r21
     f82:	a6 1f       	adc	r26, r22
     f84:	b7 1f       	adc	r27, r23
     f86:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     f8a:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     f8e:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     f92:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
     f96:	4a c1       	rjmp	.+660    	; 0x122c <startStepperMotor+0x85c>
     f98:	85 b3       	in	r24, 0x15	; 21
     f9a:	80 62       	ori	r24, 0x20	; 32
     f9c:	85 bb       	out	0x15, r24	; 21
     f9e:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
     fa2:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
     fa6:	01 96       	adiw	r24, 0x01	; 1
     fa8:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
     fac:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
     fb0:	ce 01       	movw	r24, r28
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25
     fb6:	be 01       	movw	r22, r28
     fb8:	66 0f       	add	r22, r22
     fba:	77 1f       	adc	r23, r23
     fbc:	66 0f       	add	r22, r22
     fbe:	77 1f       	adc	r23, r23
     fc0:	66 0f       	add	r22, r22
     fc2:	77 1f       	adc	r23, r23
     fc4:	68 0f       	add	r22, r24
     fc6:	79 1f       	adc	r23, r25
     fc8:	80 e3       	ldi	r24, 0x30	; 48
     fca:	95 e7       	ldi	r25, 0x75	; 117
     fcc:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
     fd0:	ab 01       	movw	r20, r22
     fd2:	77 0f       	add	r23, r23
     fd4:	66 0b       	sbc	r22, r22
     fd6:	77 0b       	sbc	r23, r23
     fd8:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
     fdc:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
     fe0:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
     fe4:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
     fe8:	84 0f       	add	r24, r20
     fea:	95 1f       	adc	r25, r21
     fec:	a6 1f       	adc	r26, r22
     fee:	b7 1f       	adc	r27, r23
     ff0:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
     ff4:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
     ff8:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
     ffc:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
    1000:	15 c1       	rjmp	.+554    	; 0x122c <startStepperMotor+0x85c>
    1002:	85 b3       	in	r24, 0x15	; 21
    1004:	8f 77       	andi	r24, 0x7F	; 127
    1006:	85 bb       	out	0x15, r24	; 21
    1008:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
    100c:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
    1010:	01 96       	adiw	r24, 0x01	; 1
    1012:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
    1016:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
    101a:	ce 01       	movw	r24, r28
    101c:	88 0f       	add	r24, r24
    101e:	99 1f       	adc	r25, r25
    1020:	be 01       	movw	r22, r28
    1022:	66 0f       	add	r22, r22
    1024:	77 1f       	adc	r23, r23
    1026:	66 0f       	add	r22, r22
    1028:	77 1f       	adc	r23, r23
    102a:	66 0f       	add	r22, r22
    102c:	77 1f       	adc	r23, r23
    102e:	68 0f       	add	r22, r24
    1030:	79 1f       	adc	r23, r25
    1032:	80 e3       	ldi	r24, 0x30	; 48
    1034:	95 e7       	ldi	r25, 0x75	; 117
    1036:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
    103a:	ab 01       	movw	r20, r22
    103c:	77 0f       	add	r23, r23
    103e:	66 0b       	sbc	r22, r22
    1040:	77 0b       	sbc	r23, r23
    1042:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
    1046:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
    104a:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
    104e:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
    1052:	84 0f       	add	r24, r20
    1054:	95 1f       	adc	r25, r21
    1056:	a6 1f       	adc	r26, r22
    1058:	b7 1f       	adc	r27, r23
    105a:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
    105e:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
    1062:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
    1066:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
    106a:	e0 c0       	rjmp	.+448    	; 0x122c <startStepperMotor+0x85c>
    106c:	85 b3       	in	r24, 0x15	; 21
    106e:	80 64       	ori	r24, 0x40	; 64
    1070:	85 bb       	out	0x15, r24	; 21
    1072:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
    1076:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
    107a:	01 96       	adiw	r24, 0x01	; 1
    107c:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
    1080:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
    1084:	ce 01       	movw	r24, r28
    1086:	88 0f       	add	r24, r24
    1088:	99 1f       	adc	r25, r25
    108a:	be 01       	movw	r22, r28
    108c:	66 0f       	add	r22, r22
    108e:	77 1f       	adc	r23, r23
    1090:	66 0f       	add	r22, r22
    1092:	77 1f       	adc	r23, r23
    1094:	66 0f       	add	r22, r22
    1096:	77 1f       	adc	r23, r23
    1098:	68 0f       	add	r22, r24
    109a:	79 1f       	adc	r23, r25
    109c:	80 e3       	ldi	r24, 0x30	; 48
    109e:	95 e7       	ldi	r25, 0x75	; 117
    10a0:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
    10a4:	ab 01       	movw	r20, r22
    10a6:	77 0f       	add	r23, r23
    10a8:	66 0b       	sbc	r22, r22
    10aa:	77 0b       	sbc	r23, r23
    10ac:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
    10b0:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
    10b4:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
    10b8:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
    10bc:	84 0f       	add	r24, r20
    10be:	95 1f       	adc	r25, r21
    10c0:	a6 1f       	adc	r26, r22
    10c2:	b7 1f       	adc	r27, r23
    10c4:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
    10c8:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
    10cc:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
    10d0:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
    10d4:	ab c0       	rjmp	.+342    	; 0x122c <startStepperMotor+0x85c>
    10d6:	85 b3       	in	r24, 0x15	; 21
    10d8:	8f 7d       	andi	r24, 0xDF	; 223
    10da:	85 bb       	out	0x15, r24	; 21
    10dc:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
    10e0:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
    10e4:	01 96       	adiw	r24, 0x01	; 1
    10e6:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
    10ea:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
    10ee:	ce 01       	movw	r24, r28
    10f0:	88 0f       	add	r24, r24
    10f2:	99 1f       	adc	r25, r25
    10f4:	be 01       	movw	r22, r28
    10f6:	66 0f       	add	r22, r22
    10f8:	77 1f       	adc	r23, r23
    10fa:	66 0f       	add	r22, r22
    10fc:	77 1f       	adc	r23, r23
    10fe:	66 0f       	add	r22, r22
    1100:	77 1f       	adc	r23, r23
    1102:	68 0f       	add	r22, r24
    1104:	79 1f       	adc	r23, r25
    1106:	80 e3       	ldi	r24, 0x30	; 48
    1108:	95 e7       	ldi	r25, 0x75	; 117
    110a:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
    110e:	ab 01       	movw	r20, r22
    1110:	77 0f       	add	r23, r23
    1112:	66 0b       	sbc	r22, r22
    1114:	77 0b       	sbc	r23, r23
    1116:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
    111a:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
    111e:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
    1122:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
    1126:	84 0f       	add	r24, r20
    1128:	95 1f       	adc	r25, r21
    112a:	a6 1f       	adc	r26, r22
    112c:	b7 1f       	adc	r27, r23
    112e:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
    1132:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
    1136:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
    113a:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
    113e:	76 c0       	rjmp	.+236    	; 0x122c <startStepperMotor+0x85c>
    1140:	85 b3       	in	r24, 0x15	; 21
    1142:	8f 7b       	andi	r24, 0xBF	; 191
    1144:	85 bb       	out	0x15, r24	; 21
    1146:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
    114a:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
    114e:	01 96       	adiw	r24, 0x01	; 1
    1150:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
    1154:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
    1158:	ce 01       	movw	r24, r28
    115a:	88 0f       	add	r24, r24
    115c:	99 1f       	adc	r25, r25
    115e:	be 01       	movw	r22, r28
    1160:	66 0f       	add	r22, r22
    1162:	77 1f       	adc	r23, r23
    1164:	66 0f       	add	r22, r22
    1166:	77 1f       	adc	r23, r23
    1168:	66 0f       	add	r22, r22
    116a:	77 1f       	adc	r23, r23
    116c:	68 0f       	add	r22, r24
    116e:	79 1f       	adc	r23, r25
    1170:	80 e3       	ldi	r24, 0x30	; 48
    1172:	95 e7       	ldi	r25, 0x75	; 117
    1174:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
    1178:	ab 01       	movw	r20, r22
    117a:	77 0f       	add	r23, r23
    117c:	66 0b       	sbc	r22, r22
    117e:	77 0b       	sbc	r23, r23
    1180:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
    1184:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
    1188:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
    118c:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
    1190:	84 0f       	add	r24, r20
    1192:	95 1f       	adc	r25, r21
    1194:	a6 1f       	adc	r26, r22
    1196:	b7 1f       	adc	r27, r23
    1198:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
    119c:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
    11a0:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
    11a4:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
    11a8:	41 c0       	rjmp	.+130    	; 0x122c <startStepperMotor+0x85c>
    11aa:	85 b3       	in	r24, 0x15	; 21
    11ac:	8f 7e       	andi	r24, 0xEF	; 239
    11ae:	85 bb       	out	0x15, r24	; 21
    11b0:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <case_num0>
    11b4:	90 91 16 04 	lds	r25, 0x0416	; 0x800416 <case_num0+0x1>
    11b8:	01 96       	adiw	r24, 0x01	; 1
    11ba:	90 93 16 04 	sts	0x0416, r25	; 0x800416 <case_num0+0x1>
    11be:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <case_num0>
    11c2:	ce 01       	movw	r24, r28
    11c4:	88 0f       	add	r24, r24
    11c6:	99 1f       	adc	r25, r25
    11c8:	be 01       	movw	r22, r28
    11ca:	66 0f       	add	r22, r22
    11cc:	77 1f       	adc	r23, r23
    11ce:	66 0f       	add	r22, r22
    11d0:	77 1f       	adc	r23, r23
    11d2:	66 0f       	add	r22, r22
    11d4:	77 1f       	adc	r23, r23
    11d6:	68 0f       	add	r22, r24
    11d8:	79 1f       	adc	r23, r25
    11da:	80 e3       	ldi	r24, 0x30	; 48
    11dc:	95 e7       	ldi	r25, 0x75	; 117
    11de:	0e 94 fb 0f 	call	0x1ff6	; 0x1ff6 <__divmodhi4>
    11e2:	ab 01       	movw	r20, r22
    11e4:	77 0f       	add	r23, r23
    11e6:	66 0b       	sbc	r22, r22
    11e8:	77 0b       	sbc	r23, r23
    11ea:	80 91 6d 03 	lds	r24, 0x036D	; 0x80036d <need_millis0>
    11ee:	90 91 6e 03 	lds	r25, 0x036E	; 0x80036e <need_millis0+0x1>
    11f2:	a0 91 6f 03 	lds	r26, 0x036F	; 0x80036f <need_millis0+0x2>
    11f6:	b0 91 70 03 	lds	r27, 0x0370	; 0x800370 <need_millis0+0x3>
    11fa:	84 0f       	add	r24, r20
    11fc:	95 1f       	adc	r25, r21
    11fe:	a6 1f       	adc	r26, r22
    1200:	b7 1f       	adc	r27, r23
    1202:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <need_millis0>
    1206:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <need_millis0+0x1>
    120a:	a0 93 6f 03 	sts	0x036F, r26	; 0x80036f <need_millis0+0x2>
    120e:	b0 93 70 03 	sts	0x0370, r27	; 0x800370 <need_millis0+0x3>
    1212:	0c c0       	rjmp	.+24     	; 0x122c <startStepperMotor+0x85c>
    1214:	10 92 16 04 	sts	0x0416, r1	; 0x800416 <case_num0+0x1>
    1218:	10 92 15 04 	sts	0x0415, r1	; 0x800415 <case_num0>
    121c:	10 92 ce 04 	sts	0x04CE, r1	; 0x8004ce <prev_millis0>
    1220:	10 92 cf 04 	sts	0x04CF, r1	; 0x8004cf <prev_millis0+0x1>
    1224:	10 92 d0 04 	sts	0x04D0, r1	; 0x8004d0 <prev_millis0+0x2>
    1228:	10 92 d1 04 	sts	0x04D1, r1	; 0x8004d1 <prev_millis0+0x3>
    122c:	df 91       	pop	r29
    122e:	cf 91       	pop	r28
    1230:	1f 91       	pop	r17
    1232:	0f 91       	pop	r16
    1234:	08 95       	ret

00001236 <ADC_Init>:
    1236:	1a ba       	out	0x1a, r1	; 26
    1238:	87 e8       	ldi	r24, 0x87	; 135
    123a:	86 b9       	out	0x06, r24	; 6
    123c:	80 e4       	ldi	r24, 0x40	; 64
    123e:	87 b9       	out	0x07, r24	; 7
    1240:	08 95       	ret

00001242 <ADC_Read>:
    1242:	97 b1       	in	r25, 0x07	; 7
    1244:	8f 70       	andi	r24, 0x0F	; 15
    1246:	98 2b       	or	r25, r24
    1248:	97 b9       	out	0x07, r25	; 7
    124a:	86 b1       	in	r24, 0x06	; 6
    124c:	80 64       	ori	r24, 0x40	; 64
    124e:	86 b9       	out	0x06, r24	; 6
    1250:	34 9b       	sbis	0x06, 4	; 6
    1252:	fe cf       	rjmp	.-4      	; 0x1250 <ADC_Read+0xe>
    1254:	8a e1       	ldi	r24, 0x1A	; 26
    1256:	8a 95       	dec	r24
    1258:	f1 f7       	brne	.-4      	; 0x1256 <ADC_Read+0x14>
    125a:	00 c0       	rjmp	.+0      	; 0x125c <ADC_Read+0x1a>
    125c:	24 b1       	in	r18, 0x04	; 4
    125e:	85 b1       	in	r24, 0x05	; 5
    1260:	90 e0       	ldi	r25, 0x00	; 0
    1262:	98 2f       	mov	r25, r24
    1264:	88 27       	eor	r24, r24
    1266:	82 0f       	add	r24, r18
    1268:	91 1d       	adc	r25, r1
    126a:	08 95       	ret

0000126c <__vector_1>:
    126c:	1f 92       	push	r1
    126e:	0f 92       	push	r0
    1270:	0f b6       	in	r0, 0x3f	; 63
    1272:	0f 92       	push	r0
    1274:	11 24       	eor	r1, r1
    1276:	2f 93       	push	r18
    1278:	3f 93       	push	r19
    127a:	4f 93       	push	r20
    127c:	5f 93       	push	r21
    127e:	6f 93       	push	r22
    1280:	7f 93       	push	r23
    1282:	8f 93       	push	r24
    1284:	9f 93       	push	r25
    1286:	af 93       	push	r26
    1288:	bf 93       	push	r27
    128a:	ef 93       	push	r30
    128c:	ff 93       	push	r31
    128e:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <OxygenAutomation>
    1292:	81 e0       	ldi	r24, 0x01	; 1
    1294:	89 27       	eor	r24, r25
    1296:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <OxygenAutomation>
    129a:	88 23       	and	r24, r24
    129c:	41 f0       	breq	.+16     	; 0x12ae <__vector_1+0x42>
    129e:	81 e0       	ldi	r24, 0x01	; 1
    12a0:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    12a4:	8f ed       	ldi	r24, 0xDF	; 223
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    12ac:	07 c0       	rjmp	.+14     	; 0x12bc <__vector_1+0x50>
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    12b4:	8a ee       	ldi	r24, 0xEA	; 234
    12b6:	90 e0       	ldi	r25, 0x00	; 0
    12b8:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    12bc:	2f e7       	ldi	r18, 0x7F	; 127
    12be:	88 e3       	ldi	r24, 0x38	; 56
    12c0:	91 e0       	ldi	r25, 0x01	; 1
    12c2:	21 50       	subi	r18, 0x01	; 1
    12c4:	80 40       	sbci	r24, 0x00	; 0
    12c6:	90 40       	sbci	r25, 0x00	; 0
    12c8:	e1 f7       	brne	.-8      	; 0x12c2 <__vector_1+0x56>
    12ca:	00 c0       	rjmp	.+0      	; 0x12cc <__vector_1+0x60>
    12cc:	00 00       	nop
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    12d4:	ff 91       	pop	r31
    12d6:	ef 91       	pop	r30
    12d8:	bf 91       	pop	r27
    12da:	af 91       	pop	r26
    12dc:	9f 91       	pop	r25
    12de:	8f 91       	pop	r24
    12e0:	7f 91       	pop	r23
    12e2:	6f 91       	pop	r22
    12e4:	5f 91       	pop	r21
    12e6:	4f 91       	pop	r20
    12e8:	3f 91       	pop	r19
    12ea:	2f 91       	pop	r18
    12ec:	0f 90       	pop	r0
    12ee:	0f be       	out	0x3f, r0	; 63
    12f0:	0f 90       	pop	r0
    12f2:	1f 90       	pop	r1
    12f4:	18 95       	reti

000012f6 <__vector_2>:
    12f6:	1f 92       	push	r1
    12f8:	0f 92       	push	r0
    12fa:	0f b6       	in	r0, 0x3f	; 63
    12fc:	0f 92       	push	r0
    12fe:	11 24       	eor	r1, r1
    1300:	2f 93       	push	r18
    1302:	3f 93       	push	r19
    1304:	4f 93       	push	r20
    1306:	5f 93       	push	r21
    1308:	6f 93       	push	r22
    130a:	7f 93       	push	r23
    130c:	8f 93       	push	r24
    130e:	9f 93       	push	r25
    1310:	af 93       	push	r26
    1312:	bf 93       	push	r27
    1314:	ef 93       	push	r30
    1316:	ff 93       	push	r31
    1318:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <power>
    131c:	81 e0       	ldi	r24, 0x01	; 1
    131e:	89 27       	eor	r24, r25
    1320:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <power>
    1324:	88 23       	and	r24, r24
    1326:	41 f0       	breq	.+16     	; 0x1338 <__vector_2+0x42>
    1328:	81 e0       	ldi	r24, 0x01	; 1
    132a:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    132e:	86 ef       	ldi	r24, 0xF6	; 246
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    1336:	07 c0       	rjmp	.+14     	; 0x1346 <__vector_2+0x50>
    1338:	81 e0       	ldi	r24, 0x01	; 1
    133a:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    133e:	8f ef       	ldi	r24, 0xFF	; 255
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    1346:	2f e7       	ldi	r18, 0x7F	; 127
    1348:	88 e3       	ldi	r24, 0x38	; 56
    134a:	91 e0       	ldi	r25, 0x01	; 1
    134c:	21 50       	subi	r18, 0x01	; 1
    134e:	80 40       	sbci	r24, 0x00	; 0
    1350:	90 40       	sbci	r25, 0x00	; 0
    1352:	e1 f7       	brne	.-8      	; 0x134c <__vector_2+0x56>
    1354:	00 c0       	rjmp	.+0      	; 0x1356 <__vector_2+0x60>
    1356:	00 00       	nop
    1358:	81 e0       	ldi	r24, 0x01	; 1
    135a:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    135e:	ff 91       	pop	r31
    1360:	ef 91       	pop	r30
    1362:	bf 91       	pop	r27
    1364:	af 91       	pop	r26
    1366:	9f 91       	pop	r25
    1368:	8f 91       	pop	r24
    136a:	7f 91       	pop	r23
    136c:	6f 91       	pop	r22
    136e:	5f 91       	pop	r21
    1370:	4f 91       	pop	r20
    1372:	3f 91       	pop	r19
    1374:	2f 91       	pop	r18
    1376:	0f 90       	pop	r0
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	0f 90       	pop	r0
    137c:	1f 90       	pop	r1
    137e:	18 95       	reti

00001380 <controlOxygenPercentage>:
	controlSolenoidValve(Oxygen_percentage, rBPM);
    startStepperMotor(rBPM, rBL);
    
}
void controlOxygenPercentage(int bloodOxygenLevel){
	if (bloodOxygenLevel<40)
    1380:	88 32       	cpi	r24, 0x28	; 40
    1382:	91 05       	cpc	r25, r1
    1384:	3c f4       	brge	.+14     	; 0x1394 <controlOxygenPercentage+0x14>
	{
		Oxygen_percentage=90;
    1386:	8a e5       	ldi	r24, 0x5A	; 90
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <Oxygen_percentage+0x1>
    138e:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <Oxygen_percentage>
    1392:	08 95       	ret
	}else if (bloodOxygenLevel<70)
    1394:	86 34       	cpi	r24, 0x46	; 70
    1396:	91 05       	cpc	r25, r1
    1398:	3c f4       	brge	.+14     	; 0x13a8 <controlOxygenPercentage+0x28>
	{
		Oxygen_percentage=70;
    139a:	86 e4       	ldi	r24, 0x46	; 70
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <Oxygen_percentage+0x1>
    13a2:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <Oxygen_percentage>
    13a6:	08 95       	ret
	}else if (bloodOxygenLevel<90)
    13a8:	8a 35       	cpi	r24, 0x5A	; 90
    13aa:	91 05       	cpc	r25, r1
    13ac:	3c f4       	brge	.+14     	; 0x13bc <controlOxygenPercentage+0x3c>
	{
		Oxygen_percentage=60;
    13ae:	8c e3       	ldi	r24, 0x3C	; 60
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <Oxygen_percentage+0x1>
    13b6:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <Oxygen_percentage>
    13ba:	08 95       	ret
	}else if(bloodOxygenLevel<94){
    13bc:	8e 35       	cpi	r24, 0x5E	; 94
    13be:	91 05       	cpc	r25, r1
    13c0:	34 f4       	brge	.+12     	; 0x13ce <controlOxygenPercentage+0x4e>
	Oxygen_percentage=40;
    13c2:	88 e2       	ldi	r24, 0x28	; 40
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <Oxygen_percentage+0x1>
    13ca:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <Oxygen_percentage>
    13ce:	08 95       	ret

000013d0 <getOxygenTankPressure>:
   }
}

double getOxygenTankPressure() {
    return 12000;//return Oxygen tank pressure in pascal
}
    13d0:	60 e0       	ldi	r22, 0x00	; 0
    13d2:	70 e8       	ldi	r23, 0x80	; 128
    13d4:	8b e3       	ldi	r24, 0x3B	; 59
    13d6:	96 e4       	ldi	r25, 0x46	; 70
    13d8:	08 95       	ret

000013da <controlSolenoidValve>:
	Oxygen_percentage=40;
	}
    //update variable Oxygen Percentage According to Blood Oxygen Level
}

void controlSolenoidValve(double oxygenPercentage, int breathPerMin) {
    13da:	4f 92       	push	r4
    13dc:	5f 92       	push	r5
    13de:	6f 92       	push	r6
    13e0:	7f 92       	push	r7
    13e2:	8f 92       	push	r8
    13e4:	9f 92       	push	r9
    13e6:	af 92       	push	r10
    13e8:	bf 92       	push	r11
    13ea:	cf 92       	push	r12
    13ec:	df 92       	push	r13
    13ee:	ef 92       	push	r14
    13f0:	ff 92       	push	r15
    13f2:	6b 01       	movw	r12, r22
    13f4:	7c 01       	movw	r14, r24
    double inflationTime=30.0000/breathPerMin;
    13f6:	ba 01       	movw	r22, r20
    13f8:	55 0f       	add	r21, r21
    13fa:	88 0b       	sbc	r24, r24
    13fc:	99 0b       	sbc	r25, r25
    13fe:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <__floatsisf>
    1402:	9b 01       	movw	r18, r22
    1404:	ac 01       	movw	r20, r24
    1406:	60 e0       	ldi	r22, 0x00	; 0
    1408:	70 e0       	ldi	r23, 0x00	; 0
    140a:	80 ef       	ldi	r24, 0xF0	; 240
    140c:	91 e4       	ldi	r25, 0x41	; 65
    140e:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
    1412:	4b 01       	movw	r8, r22
    1414:	5c 01       	movw	r10, r24
    double Pressure=101325;
    double airDensity=1.225;
    double OxygenDensity=1.355;


   constValue=(0.79*(1.266*oxygenPercentage-26.67)/(100-oxygenPercentage))*sqrt(Pressure*OxygenDensity/getOxygenTankPressure()/airDensity);
    1416:	2a e4       	ldi	r18, 0x4A	; 74
    1418:	3c e0       	ldi	r19, 0x0C	; 12
    141a:	42 ea       	ldi	r20, 0xA2	; 162
    141c:	5f e3       	ldi	r21, 0x3F	; 63
    141e:	c7 01       	movw	r24, r14
    1420:	b6 01       	movw	r22, r12
    1422:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__mulsf3>
    1426:	29 e2       	ldi	r18, 0x29	; 41
    1428:	3c e5       	ldi	r19, 0x5C	; 92
    142a:	45 ed       	ldi	r20, 0xD5	; 213
    142c:	51 e4       	ldi	r21, 0x41	; 65
    142e:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__subsf3>
    1432:	21 e7       	ldi	r18, 0x71	; 113
    1434:	3d e3       	ldi	r19, 0x3D	; 61
    1436:	4a e4       	ldi	r20, 0x4A	; 74
    1438:	5f e3       	ldi	r21, 0x3F	; 63
    143a:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__mulsf3>
    143e:	2b 01       	movw	r4, r22
    1440:	3c 01       	movw	r6, r24
    1442:	a7 01       	movw	r20, r14
    1444:	96 01       	movw	r18, r12
    1446:	60 e0       	ldi	r22, 0x00	; 0
    1448:	70 e0       	ldi	r23, 0x00	; 0
    144a:	88 ec       	ldi	r24, 0xC8	; 200
    144c:	92 e4       	ldi	r25, 0x42	; 66
    144e:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__subsf3>
    1452:	9b 01       	movw	r18, r22
    1454:	ac 01       	movw	r20, r24
    1456:	c3 01       	movw	r24, r6
    1458:	b2 01       	movw	r22, r4
    145a:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
    145e:	2b 01       	movw	r4, r22
    1460:	3c 01       	movw	r6, r24
    1462:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <getOxygenTankPressure>
    1466:	9b 01       	movw	r18, r22
    1468:	ac 01       	movw	r20, r24
    146a:	68 ed       	ldi	r22, 0xD8	; 216
    146c:	73 e1       	ldi	r23, 0x13	; 19
    146e:	86 e0       	ldi	r24, 0x06	; 6
    1470:	98 e4       	ldi	r25, 0x48	; 72
    1472:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
    1476:	6b 01       	movw	r12, r22
    1478:	7c 01       	movw	r14, r24
    147a:	2d ec       	ldi	r18, 0xCD	; 205
    147c:	3c ec       	ldi	r19, 0xCC	; 204
    147e:	4c e9       	ldi	r20, 0x9C	; 156
    1480:	5f e3       	ldi	r21, 0x3F	; 63
    1482:	c7 01       	movw	r24, r14
    1484:	b6 01       	movw	r22, r12
    1486:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
    148a:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <sqrt>
    148e:	9b 01       	movw	r18, r22
    1490:	ac 01       	movw	r20, r24
    1492:	c3 01       	movw	r24, r6
    1494:	b2 01       	movw	r22, r4
    1496:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__mulsf3>
    149a:	6b 01       	movw	r12, r22
    149c:	7c 01       	movw	r14, r24
   if(constValue>1){
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	40 e8       	ldi	r20, 0x80	; 128
    14a4:	5f e3       	ldi	r21, 0x3F	; 63
    14a6:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <__gesf2>
    14aa:	18 16       	cp	r1, r24
    14ac:	5c f4       	brge	.+22     	; 0x14c4 <controlSolenoidValve+0xea>
       tOxygen=inflationTime;
       tAir=tOxygen/constValue;
    14ae:	a7 01       	movw	r20, r14
    14b0:	96 01       	movw	r18, r12
    14b2:	c5 01       	movw	r24, r10
    14b4:	b4 01       	movw	r22, r8
    14b6:	0e 94 db 0d 	call	0x1bb6	; 0x1bb6 <__divsf3>
       openSolenoidValves(tAir,tOxygen);// values in s
    14ba:	a5 01       	movw	r20, r10
    14bc:	94 01       	movw	r18, r8
    14be:	0e 94 fd 02 	call	0x5fa	; 0x5fa <openSolenoidValves>
    14c2:	0c c0       	rjmp	.+24     	; 0x14dc <controlSolenoidValve+0x102>
   } else{
       tAir=inflationTime;
       tOxygen=tAir*constValue;
    14c4:	a7 01       	movw	r20, r14
    14c6:	96 01       	movw	r18, r12
    14c8:	c5 01       	movw	r24, r10
    14ca:	b4 01       	movw	r22, r8
    14cc:	0e 94 33 0f 	call	0x1e66	; 0x1e66 <__mulsf3>
    14d0:	9b 01       	movw	r18, r22
    14d2:	ac 01       	movw	r20, r24
       openSolenoidValves(tAir,tOxygen);//values in s
    14d4:	c5 01       	movw	r24, r10
    14d6:	b4 01       	movw	r22, r8
    14d8:	0e 94 fd 02 	call	0x5fa	; 0x5fa <openSolenoidValves>
   }
}
    14dc:	ff 90       	pop	r15
    14de:	ef 90       	pop	r14
    14e0:	df 90       	pop	r13
    14e2:	cf 90       	pop	r12
    14e4:	bf 90       	pop	r11
    14e6:	af 90       	pop	r10
    14e8:	9f 90       	pop	r9
    14ea:	8f 90       	pop	r8
    14ec:	7f 90       	pop	r7
    14ee:	6f 90       	pop	r6
    14f0:	5f 90       	pop	r5
    14f2:	4f 90       	pop	r4
    14f4:	08 95       	ret

000014f6 <startAirSupply>:
}



void startAirSupply() {
    startStepperMotor(rBPM, rBL);
    14f6:	60 91 11 04 	lds	r22, 0x0411	; 0x800411 <rBL>
    14fa:	70 91 12 04 	lds	r23, 0x0412	; 0x800412 <rBL+0x1>
    14fe:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <rBPM>
    1502:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <rBPM+0x1>
    1506:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <startStepperMotor>
    controlSolenoidValve(0,rBPM);
    150a:	40 91 13 04 	lds	r20, 0x0413	; 0x800413 <rBPM>
    150e:	50 91 14 04 	lds	r21, 0x0414	; 0x800414 <rBPM+0x1>
    1512:	60 e0       	ldi	r22, 0x00	; 0
    1514:	70 e0       	ldi	r23, 0x00	; 0
    1516:	cb 01       	movw	r24, r22
    1518:	0e 94 ed 09 	call	0x13da	; 0x13da <controlSolenoidValve>
    151c:	08 95       	ret

0000151e <checkBloodOxygenLevel>:
}
int checkBloodOxygenLevel() {

    return 39;//return Blood Oxygen Level
}
    151e:	87 e2       	ldi	r24, 0x27	; 39
    1520:	90 e0       	ldi	r25, 0x00	; 0
    1522:	08 95       	ret

00001524 <startOxygenAndAirSupply>:
	lcd_cmd(0x01);  

}

char *boolstring( _Bool b ) { return b ? "true" : "false"; }
void startOxygenAndAirSupply(int percentage) {
    1524:	cf 93       	push	r28
    1526:	df 93       	push	r29
    controlOxygenPercentage(checkBloodOxygenLevel());
    1528:	0e 94 8f 0a 	call	0x151e	; 0x151e <checkBloodOxygenLevel>
    152c:	0e 94 c0 09 	call	0x1380	; 0x1380 <controlOxygenPercentage>
	controlSolenoidValve(Oxygen_percentage, rBPM);
    1530:	c0 91 13 04 	lds	r28, 0x0413	; 0x800413 <rBPM>
    1534:	d0 91 14 04 	lds	r29, 0x0414	; 0x800414 <rBPM+0x1>
    1538:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Oxygen_percentage>
    153c:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Oxygen_percentage+0x1>
    1540:	07 2e       	mov	r0, r23
    1542:	00 0c       	add	r0, r0
    1544:	88 0b       	sbc	r24, r24
    1546:	99 0b       	sbc	r25, r25
    1548:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <__floatsisf>
    154c:	ae 01       	movw	r20, r28
    154e:	0e 94 ed 09 	call	0x13da	; 0x13da <controlSolenoidValve>
    startStepperMotor(rBPM, rBL);
    1552:	60 91 11 04 	lds	r22, 0x0411	; 0x800411 <rBL>
    1556:	70 91 12 04 	lds	r23, 0x0412	; 0x800412 <rBL+0x1>
    155a:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <rBPM>
    155e:	90 91 14 04 	lds	r25, 0x0414	; 0x800414 <rBPM+0x1>
    1562:	0e 94 e8 04 	call	0x9d0	; 0x9d0 <startStepperMotor>
    
}
    1566:	df 91       	pop	r29
    1568:	cf 91       	pop	r28
    156a:	08 95       	ret

0000156c <PatientTemp>:
    return 39;//return Blood Oxygen Level
}

int PatientTemp() {
    return 37;//return temperature value
}
    156c:	85 e2       	ldi	r24, 0x25	; 37
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	08 95       	ret

00001572 <notifySpeaker>:

void notifySpeaker() {
   DDRD=DDRD | (1<<4);
    1572:	81 b3       	in	r24, 0x11	; 17
    1574:	80 61       	ori	r24, 0x10	; 16
    1576:	81 bb       	out	0x11, r24	; 17
    1578:	08 95       	ret

0000157a <getParametersFromKnobs>:
    //if normal return 1 else notify speaker and gsm
}

void getParametersFromKnobs() {
    
	Oxygen_percentage=rOP;
    157a:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <rOP>
    157e:	90 91 67 03 	lds	r25, 0x0367	; 0x800367 <rOP+0x1>
    1582:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <Oxygen_percentage+0x1>
    1586:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <Oxygen_percentage>
    158a:	08 95       	ret

0000158c <automationOn>:
    //get values and update  Breath per min,Oxygen Percentage,Breath Length
}

bool automationOn() {
    return OxygenAutomation;//Check Automation On/Off
}
    158c:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <OxygenAutomation>
    1590:	08 95       	ret

00001592 <turnOn>:

bool turnOn() {
    return power;//return 1 if power on switched pressed else return 0
}
    1592:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <power>
    1596:	08 95       	ret

00001598 <notifyDisplay>:
        } else { return 1; }
    }else{return 0;}
}

void notifyDisplay(const char *string) {
   lcd_msg(string);
    1598:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    159c:	08 95       	ret

0000159e <concatS>:
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
}
const char *concatS(const char *string, char sPercentage[4]) {
    159e:	ef 92       	push	r14
    15a0:	ff 92       	push	r15
    15a2:	0f 93       	push	r16
    15a4:	1f 93       	push	r17
    15a6:	cf 93       	push	r28
    15a8:	df 93       	push	r29
    15aa:	8c 01       	movw	r16, r24
    15ac:	eb 01       	movw	r28, r22
    char *result = malloc(strlen(string) + strlen(sPercentage) + 1);
    15ae:	fc 01       	movw	r30, r24
    15b0:	01 90       	ld	r0, Z+
    15b2:	00 20       	and	r0, r0
    15b4:	e9 f7       	brne	.-6      	; 0x15b0 <concatS+0x12>
    15b6:	31 97       	sbiw	r30, 0x01	; 1
    15b8:	cf 01       	movw	r24, r30
    15ba:	80 1b       	sub	r24, r16
    15bc:	91 0b       	sbc	r25, r17
    15be:	fb 01       	movw	r30, r22
    15c0:	01 90       	ld	r0, Z+
    15c2:	00 20       	and	r0, r0
    15c4:	e9 f7       	brne	.-6      	; 0x15c0 <concatS+0x22>
    15c6:	31 97       	sbiw	r30, 0x01	; 1
    15c8:	e6 1b       	sub	r30, r22
    15ca:	f7 0b       	sbc	r31, r23
    15cc:	8e 0f       	add	r24, r30
    15ce:	9f 1f       	adc	r25, r31
    15d0:	01 96       	adiw	r24, 0x01	; 1
    15d2:	0e 94 4b 10 	call	0x2096	; 0x2096 <malloc>
    15d6:	7c 01       	movw	r14, r24
    strcpy(result, string);
    15d8:	b8 01       	movw	r22, r16
    15da:	0e 94 95 11 	call	0x232a	; 0x232a <strcpy>
    strcat(result, sPercentage);
    15de:	be 01       	movw	r22, r28
    15e0:	c7 01       	movw	r24, r14
    15e2:	0e 94 8a 11 	call	0x2314	; 0x2314 <strcat>
    return result;
}
    15e6:	c7 01       	movw	r24, r14
    15e8:	df 91       	pop	r29
    15ea:	cf 91       	pop	r28
    15ec:	1f 91       	pop	r17
    15ee:	0f 91       	pop	r16
    15f0:	ff 90       	pop	r15
    15f2:	ef 90       	pop	r14
    15f4:	08 95       	ret

000015f6 <notifyGSM>:

void notifyDisplay(const char *string) {
   lcd_msg(string);
}

void notifyGSM(const char *string, int percentage) {
    15f6:	0f 93       	push	r16
    15f8:	1f 93       	push	r17
    15fa:	cf 93       	push	r28
    15fc:	df 93       	push	r29
    15fe:	00 d0       	rcall	.+0      	; 0x1600 <notifyGSM+0xa>
    1600:	00 d0       	rcall	.+0      	; 0x1602 <notifyGSM+0xc>
    1602:	cd b7       	in	r28, 0x3d	; 61
    1604:	de b7       	in	r29, 0x3e	; 62
    1606:	8c 01       	movw	r16, r24
    1608:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    160a:	4a e0       	ldi	r20, 0x0A	; 10
    160c:	be 01       	movw	r22, r28
    160e:	6f 5f       	subi	r22, 0xFF	; 255
    1610:	7f 4f       	sbci	r23, 0xFF	; 255
    1612:	0e 94 9c 11 	call	0x2338	; 0x2338 <__itoa_ncheck>
    char Spercentage[4];
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
    1616:	be 01       	movw	r22, r28
    1618:	6f 5f       	subi	r22, 0xFF	; 255
    161a:	7f 4f       	sbci	r23, 0xFF	; 255
    161c:	c8 01       	movw	r24, r16
    161e:	0e 94 cf 0a 	call	0x159e	; 0x159e <concatS>
    1622:	bc 01       	movw	r22, r24
    1624:	8b eb       	ldi	r24, 0xBB	; 187
    1626:	94 e0       	ldi	r25, 0x04	; 4
    1628:	0e 94 3c 02 	call	0x478	; 0x478 <sendSMS>
}
    162c:	0f 90       	pop	r0
    162e:	0f 90       	pop	r0
    1630:	0f 90       	pop	r0
    1632:	0f 90       	pop	r0
    1634:	df 91       	pop	r29
    1636:	cf 91       	pop	r28
    1638:	1f 91       	pop	r17
    163a:	0f 91       	pop	r16
    163c:	08 95       	ret

0000163e <checkPatientTemp>:
void notifySpeaker() {
   DDRD=DDRD | (1<<4);
   
}

bool checkPatientTemp() {
    163e:	cf 92       	push	r12
    1640:	df 92       	push	r13
    1642:	ef 92       	push	r14
    1644:	ff 92       	push	r15
    1646:	0f 93       	push	r16
    1648:	1f 93       	push	r17
    164a:	cf 93       	push	r28
    164c:	df 93       	push	r29
    164e:	00 d0       	rcall	.+0      	; 0x1650 <checkPatientTemp+0x12>
    1650:	00 d0       	rcall	.+0      	; 0x1652 <checkPatientTemp+0x14>
    1652:	cd b7       	in	r28, 0x3d	; 61
    1654:	de b7       	in	r29, 0x3e	; 62
    if(PatientTemp()>37.2||PatientTemp()<36.1){
    1656:	0e 94 b6 0a 	call	0x156c	; 0x156c <PatientTemp>
    165a:	8c 01       	movw	r16, r24
    165c:	bc 01       	movw	r22, r24
    165e:	99 0f       	add	r25, r25
    1660:	88 0b       	sbc	r24, r24
    1662:	99 0b       	sbc	r25, r25
    1664:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <__floatsisf>
    1668:	6b 01       	movw	r12, r22
    166a:	7c 01       	movw	r14, r24
    166c:	2d ec       	ldi	r18, 0xCD	; 205
    166e:	3c ec       	ldi	r19, 0xCC	; 204
    1670:	44 e1       	ldi	r20, 0x14	; 20
    1672:	52 e4       	ldi	r21, 0x42	; 66
    1674:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <__gesf2>
    1678:	18 16       	cp	r1, r24
    167a:	54 f0       	brlt	.+20     	; 0x1690 <checkPatientTemp+0x52>
    167c:	26 e6       	ldi	r18, 0x66	; 102
    167e:	36 e6       	ldi	r19, 0x66	; 102
    1680:	40 e1       	ldi	r20, 0x10	; 16
    1682:	52 e4       	ldi	r21, 0x42	; 66
    1684:	c7 01       	movw	r24, r14
    1686:	b6 01       	movw	r22, r12
    1688:	0e 94 d6 0d 	call	0x1bac	; 0x1bac <__cmpsf2>
    168c:	88 23       	and	r24, r24
    168e:	cc f4       	brge	.+50     	; 0x16c2 <checkPatientTemp+0x84>
        notifyGSM("Temperature Not Normal-",PatientTemp());
    1690:	b8 01       	movw	r22, r16
    1692:	84 e1       	ldi	r24, 0x14	; 20
    1694:	91 e0       	ldi	r25, 0x01	; 1
    1696:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <notifyGSM>
    169a:	4a e0       	ldi	r20, 0x0A	; 10
    169c:	be 01       	movw	r22, r28
    169e:	6f 5f       	subi	r22, 0xFF	; 255
    16a0:	7f 4f       	sbci	r23, 0xFF	; 255
    16a2:	c8 01       	movw	r24, r16
    16a4:	0e 94 9c 11 	call	0x2338	; 0x2338 <__itoa_ncheck>
		char Spercentage[4];
		itoa(PatientTemp(),Spercentage,10);//convert int to string
		notifyDisplay(concatS("Temperature Not Normal-", Spercentage)); 
    16a8:	be 01       	movw	r22, r28
    16aa:	6f 5f       	subi	r22, 0xFF	; 255
    16ac:	7f 4f       	sbci	r23, 0xFF	; 255
    16ae:	84 e1       	ldi	r24, 0x14	; 20
    16b0:	91 e0       	ldi	r25, 0x01	; 1
    16b2:	0e 94 cf 0a 	call	0x159e	; 0x159e <concatS>
    16b6:	0e 94 cc 0a 	call	0x1598	; 0x1598 <notifyDisplay>
        notifySpeaker();
    16ba:	0e 94 b9 0a 	call	0x1572	; 0x1572 <notifySpeaker>
        return 0;
    16be:	80 e0       	ldi	r24, 0x00	; 0
    16c0:	01 c0       	rjmp	.+2      	; 0x16c4 <checkPatientTemp+0x86>
    }else{
        return 1;
    16c2:	81 e0       	ldi	r24, 0x01	; 1
    }
    //if normal return 1 else notify speaker and gsm
}
    16c4:	0f 90       	pop	r0
    16c6:	0f 90       	pop	r0
    16c8:	0f 90       	pop	r0
    16ca:	0f 90       	pop	r0
    16cc:	df 91       	pop	r29
    16ce:	cf 91       	pop	r28
    16d0:	1f 91       	pop	r17
    16d2:	0f 91       	pop	r16
    16d4:	ff 90       	pop	r15
    16d6:	ef 90       	pop	r14
    16d8:	df 90       	pop	r13
    16da:	cf 90       	pop	r12
    16dc:	08 95       	ret

000016de <oxygenTankPercentage>:
    return result;
}

int oxygenTankPercentage() {
    return 80;
}
    16de:	80 e5       	ldi	r24, 0x50	; 80
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	08 95       	ret

000016e4 <checkStatus>:

bool turnOn() {
    return power;//return 1 if power on switched pressed else return 0
}

bool checkStatus() {
    16e4:	ef 92       	push	r14
    16e6:	ff 92       	push	r15
    16e8:	1f 93       	push	r17
    16ea:	cf 93       	push	r28
    16ec:	df 93       	push	r29
    16ee:	00 d0       	rcall	.+0      	; 0x16f0 <checkStatus+0xc>
    16f0:	00 d0       	rcall	.+0      	; 0x16f2 <checkStatus+0xe>
    16f2:	cd b7       	in	r28, 0x3d	; 61
    16f4:	de b7       	in	r29, 0x3e	; 62
    if (turnOn()) {
    16f6:	0e 94 c9 0a 	call	0x1592	; 0x1592 <turnOn>
    16fa:	18 2f       	mov	r17, r24
    16fc:	88 23       	and	r24, r24
    16fe:	e9 f0       	breq	.+58     	; 0x173a <checkStatus+0x56>
        if (oxygenTankPercentage() < 10) {
    1700:	0e 94 6f 0b 	call	0x16de	; 0x16de <oxygenTankPercentage>
    1704:	7c 01       	movw	r14, r24
    1706:	8a e0       	ldi	r24, 0x0A	; 10
    1708:	e8 16       	cp	r14, r24
    170a:	f1 04       	cpc	r15, r1
    170c:	b4 f4       	brge	.+44     	; 0x173a <checkStatus+0x56>
            notifyGSM("Oxygen Tank Percentage : ", oxygenTankPercentage());
    170e:	b7 01       	movw	r22, r14
    1710:	8c e2       	ldi	r24, 0x2C	; 44
    1712:	91 e0       	ldi	r25, 0x01	; 1
    1714:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <notifyGSM>
    1718:	4a e0       	ldi	r20, 0x0A	; 10
    171a:	be 01       	movw	r22, r28
    171c:	6f 5f       	subi	r22, 0xFF	; 255
    171e:	7f 4f       	sbci	r23, 0xFF	; 255
    1720:	c7 01       	movw	r24, r14
    1722:	0e 94 9c 11 	call	0x2338	; 0x2338 <__itoa_ncheck>
			char Spercentage[4];
			itoa(oxygenTankPercentage(),Spercentage,10);//convert int to string
            notifyDisplay(concatS("Oxygen Tank Percentage ", Spercentage));
    1726:	be 01       	movw	r22, r28
    1728:	6f 5f       	subi	r22, 0xFF	; 255
    172a:	7f 4f       	sbci	r23, 0xFF	; 255
    172c:	86 e4       	ldi	r24, 0x46	; 70
    172e:	91 e0       	ldi	r25, 0x01	; 1
    1730:	0e 94 cf 0a 	call	0x159e	; 0x159e <concatS>
    1734:	0e 94 cc 0a 	call	0x1598	; 0x1598 <notifyDisplay>
            return 0;
    1738:	10 e0       	ldi	r17, 0x00	; 0
        } else { return 1; }
    }else{return 0;}
}
    173a:	81 2f       	mov	r24, r17
    173c:	0f 90       	pop	r0
    173e:	0f 90       	pop	r0
    1740:	0f 90       	pop	r0
    1742:	0f 90       	pop	r0
    1744:	df 91       	pop	r29
    1746:	cf 91       	pop	r28
    1748:	1f 91       	pop	r17
    174a:	ff 90       	pop	r15
    174c:	ef 90       	pop	r14
    174e:	08 95       	ret

00001750 <main>:
char String[5];
int value;


int main(void)
{
    1750:	0f 93       	push	r16
    1752:	1f 93       	push	r17
    1754:	cf 93       	push	r28
    1756:	df 93       	push	r29
    /* Replace with your application code */
    DDRC = DDRC | (1<<2); // solenoid valve
    1758:	84 b3       	in	r24, 0x14	; 20
    175a:	84 60       	ori	r24, 0x04	; 4
    175c:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<3); // solenoid valve
    175e:	84 b3       	in	r24, 0x14	; 20
    1760:	88 60       	ori	r24, 0x08	; 8
    1762:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<4); // stepper motor
    1764:	84 b3       	in	r24, 0x14	; 20
    1766:	80 61       	ori	r24, 0x10	; 16
    1768:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<5); // stepper motor
    176a:	84 b3       	in	r24, 0x14	; 20
    176c:	80 62       	ori	r24, 0x20	; 32
    176e:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<6); // stepper motor
    1770:	84 b3       	in	r24, 0x14	; 20
    1772:	80 64       	ori	r24, 0x40	; 64
    1774:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<7); // stepper motor
    1776:	84 b3       	in	r24, 0x14	; 20
    1778:	80 68       	ori	r24, 0x80	; 128
    177a:	84 bb       	out	0x14, r24	; 20
	
	 DDRB=0x0F; // 0,1,3,2--->1   4,5,6,7-->0 for keypad 
    177c:	8f e0       	ldi	r24, 0x0F	; 15
    177e:	87 bb       	out	0x17, r24	; 23
	 DDRD=DDRD | (0<<2);//PD2 as Oxygen Automation
    1780:	81 b3       	in	r24, 0x11	; 17
    1782:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (0<<3);//PD3 as input for power on
    1784:	81 b3       	in	r24, 0x11	; 17
    1786:	81 bb       	out	0x11, r24	; 17
	 DDRD=DDRD | (1<<4);//Speaker
    1788:	81 b3       	in	r24, 0x11	; 17
    178a:	80 61       	ori	r24, 0x10	; 16
    178c:	81 bb       	out	0x11, r24	; 17
	 
	 MCUCR  |= 1<<ISC01;   //interrupt fire on falling edge in INT0
    178e:	85 b7       	in	r24, 0x35	; 53
    1790:	82 60       	ori	r24, 0x02	; 2
    1792:	85 bf       	out	0x35, r24	; 53
	 MCUCR  |= 1<<ISC11;   //interrupt fire on falling edge in INT1
    1794:	85 b7       	in	r24, 0x35	; 53
    1796:	88 60       	ori	r24, 0x08	; 8
    1798:	85 bf       	out	0x35, r24	; 53
	 
	 //
	 GICR |= 1<<INT0;     //Enable the external interrupt source in general interrupt control register
    179a:	8b b7       	in	r24, 0x3b	; 59
    179c:	80 64       	ori	r24, 0x40	; 64
    179e:	8b bf       	out	0x3b, r24	; 59
	 GICR |= 1<<INT1;     //Enable the external interrupt source in general interrupt control register
    17a0:	8b b7       	in	r24, 0x3b	; 59
    17a2:	80 68       	ori	r24, 0x80	; 128
    17a4:	8b bf       	out	0x3b, r24	; 59
	
	init_millis(8000000UL);
    17a6:	60 e0       	ldi	r22, 0x00	; 0
    17a8:	72 e1       	ldi	r23, 0x12	; 18
    17aa:	8a e7       	ldi	r24, 0x7A	; 122
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <init_millis>
	sei();
    17b2:	78 94       	sei
	 ADC_Init();
    17b4:	0e 94 1b 09 	call	0x1236	; 0x1236 <ADC_Init>
     i2c_init();
    17b8:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <i2c_init>
	 i2c_start();
    17bc:	0e 94 e7 01 	call	0x3ce	; 0x3ce <i2c_start>
	 i2c_write(0x70);
    17c0:	80 e7       	ldi	r24, 0x70	; 112
    17c2:	0e 94 ed 01 	call	0x3da	; 0x3da <i2c_write>
	 lcd_init();
    17c6:	0e 94 85 01 	call	0x30a	; 0x30a <lcd_init>
	 
	lcd_cmd(0x80);
    17ca:	80 e8       	ldi	r24, 0x80	; 128
    17cc:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
	lcd_msg("Enter Phone");
    17d0:	8e e5       	ldi	r24, 0x5E	; 94
    17d2:	91 e0       	ldi	r25, 0x01	; 1
    17d4:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    17d8:	2f ef       	ldi	r18, 0xFF	; 255
    17da:	40 e7       	ldi	r20, 0x70	; 112
    17dc:	52 e0       	ldi	r21, 0x02	; 2
    17de:	21 50       	subi	r18, 0x01	; 1
    17e0:	40 40       	sbci	r20, 0x00	; 0
    17e2:	50 40       	sbci	r21, 0x00	; 0
    17e4:	e1 f7       	brne	.-8      	; 0x17de <main+0x8e>
    17e6:	00 c0       	rjmp	.+0      	; 0x17e8 <main+0x98>
    17e8:	00 00       	nop
	_delay_ms(100);
	lcd_cmd(0xC0);
    17ea:	80 ec       	ldi	r24, 0xC0	; 192
    17ec:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    17f0:	8f ef       	ldi	r24, 0xFF	; 255
    17f2:	90 e7       	ldi	r25, 0x70	; 112
    17f4:	22 e0       	ldi	r18, 0x02	; 2
    17f6:	81 50       	subi	r24, 0x01	; 1
    17f8:	90 40       	sbci	r25, 0x00	; 0
    17fa:	20 40       	sbci	r18, 0x00	; 0
    17fc:	e1 f7       	brne	.-8      	; 0x17f6 <main+0xa6>
    17fe:	00 c0       	rjmp	.+0      	; 0x1800 <main+0xb0>
    1800:	00 00       	nop
	_delay_ms(100);
	lcd_msg("Number");
    1802:	8a e6       	ldi	r24, 0x6A	; 106
    1804:	91 e0       	ldi	r25, 0x01	; 1
    1806:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    180a:	4f ef       	ldi	r20, 0xFF	; 255
    180c:	50 e7       	ldi	r21, 0x70	; 112
    180e:	82 e0       	ldi	r24, 0x02	; 2
    1810:	41 50       	subi	r20, 0x01	; 1
    1812:	50 40       	sbci	r21, 0x00	; 0
    1814:	80 40       	sbci	r24, 0x00	; 0
    1816:	e1 f7       	brne	.-8      	; 0x1810 <main+0xc0>
    1818:	00 c0       	rjmp	.+0      	; 0x181a <main+0xca>
    181a:	00 00       	nop
	_delay_ms(100);
	lcd_cmd(0x01);
    181c:	81 e0       	ldi	r24, 0x01	; 1
    181e:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
    1822:	9f ef       	ldi	r25, 0xFF	; 255
    1824:	20 e7       	ldi	r18, 0x70	; 112
    1826:	42 e0       	ldi	r20, 0x02	; 2
    1828:	91 50       	subi	r25, 0x01	; 1
    182a:	20 40       	sbci	r18, 0x00	; 0
    182c:	40 40       	sbci	r20, 0x00	; 0
    182e:	e1 f7       	brne	.-8      	; 0x1828 <main+0xd8>
    1830:	00 c0       	rjmp	.+0      	; 0x1832 <main+0xe2>
    1832:	00 00       	nop
	_delay_ms(100);
	lcd_cmd(0x80);
    1834:	80 e8       	ldi	r24, 0x80	; 128
    1836:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_cmd>
	 
	 for (i=0;i<10;)
    183a:	10 92 18 04 	sts	0x0418, r1	; 0x800418 <i+0x1>
    183e:	10 92 17 04 	sts	0x0417, r1	; 0x800417 <i>
    1842:	2b c0       	rjmp	.+86     	; 0x189a <main+0x14a>
	 {
		PORTB =0xF0;  
    1844:	80 ef       	ldi	r24, 0xF0	; 240
    1846:	88 bb       	out	0x18, r24	; 24
		do{
			x=Keypad();
    1848:	0e 94 5c 00 	call	0xb8	; 0xb8 <Keypad>
    184c:	80 93 6c 03 	sts	0x036C, r24	; 0x80036c <x>
			
			Mobile_no[i]=atoi(x);
    1850:	00 91 17 04 	lds	r16, 0x0417	; 0x800417 <i>
    1854:	10 91 18 04 	lds	r17, 0x0418	; 0x800418 <i+0x1>
    1858:	c8 2f       	mov	r28, r24
    185a:	d0 e0       	ldi	r29, 0x00	; 0
    185c:	ce 01       	movw	r24, r28
    185e:	0e 94 6c 11 	call	0x22d8	; 0x22d8 <atoi>
    1862:	f8 01       	movw	r30, r16
    1864:	e5 54       	subi	r30, 0x45	; 69
    1866:	fb 4f       	sbci	r31, 0xFB	; 251
    1868:	80 83       	st	Z, r24
			lcd_msg(x);
    186a:	ce 01       	movw	r24, r28
    186c:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <lcd_msg>
    1870:	5f e7       	ldi	r21, 0x7F	; 127
    1872:	88 e3       	ldi	r24, 0x38	; 56
    1874:	91 e0       	ldi	r25, 0x01	; 1
    1876:	51 50       	subi	r21, 0x01	; 1
    1878:	80 40       	sbci	r24, 0x00	; 0
    187a:	90 40       	sbci	r25, 0x00	; 0
    187c:	e1 f7       	brne	.-8      	; 0x1876 <main+0x126>
    187e:	00 c0       	rjmp	.+0      	; 0x1880 <main+0x130>
    1880:	00 00       	nop
			_delay_ms(50);
		}while(PINB!=0xF0);
    1882:	86 b3       	in	r24, 0x16	; 22
    1884:	80 3f       	cpi	r24, 0xF0	; 240
    1886:	01 f7       	brne	.-64     	; 0x1848 <main+0xf8>
		i++;
    1888:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <i>
    188c:	90 91 18 04 	lds	r25, 0x0418	; 0x800418 <i+0x1>
    1890:	01 96       	adiw	r24, 0x01	; 1
    1892:	90 93 18 04 	sts	0x0418, r25	; 0x800418 <i+0x1>
    1896:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <i>
	_delay_ms(100);
	lcd_cmd(0x01);
	_delay_ms(100);
	lcd_cmd(0x80);
	 
	 for (i=0;i<10;)
    189a:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <i>
    189e:	90 91 18 04 	lds	r25, 0x0418	; 0x800418 <i+0x1>
    18a2:	0a 97       	sbiw	r24, 0x0a	; 10
    18a4:	7c f2       	brlt	.-98     	; 0x1844 <main+0xf4>
		}while(PINB!=0xF0);
		i++;
	 }
	 
	 
    USART_Init(9600);
    18a6:	60 e8       	ldi	r22, 0x80	; 128
    18a8:	75 e2       	ldi	r23, 0x25	; 37
    18aa:	80 e0       	ldi	r24, 0x00	; 0
    18ac:	90 e0       	ldi	r25, 0x00	; 0
    18ae:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <USART_Init>
    18b2:	2f ef       	ldi	r18, 0xFF	; 255
    18b4:	49 e6       	ldi	r20, 0x69	; 105
    18b6:	58 e1       	ldi	r21, 0x18	; 24
    18b8:	21 50       	subi	r18, 0x01	; 1
    18ba:	40 40       	sbci	r20, 0x00	; 0
    18bc:	50 40       	sbci	r21, 0x00	; 0
    18be:	e1 f7       	brne	.-8      	; 0x18b8 <main+0x168>
    18c0:	00 c0       	rjmp	.+0      	; 0x18c2 <main+0x172>
    18c2:	00 00       	nop
    _delay_ms(1000);
    GSMConnect();
    18c4:	0e 94 ac 02 	call	0x558	; 0x558 <GSMConnect>
		
	 
    while (1)
    {   
		
		switch(caseADC){
    18c8:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <caseADC>
    18cc:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <caseADC+0x1>
    18d0:	82 30       	cpi	r24, 0x02	; 2
    18d2:	91 05       	cpc	r25, r1
    18d4:	a9 f1       	breq	.+106    	; 0x1940 <main+0x1f0>
    18d6:	83 30       	cpi	r24, 0x03	; 3
    18d8:	91 05       	cpc	r25, r1
    18da:	09 f4       	brne	.+2      	; 0x18de <main+0x18e>
    18dc:	5d c0       	rjmp	.+186    	; 0x1998 <main+0x248>
    18de:	01 97       	sbiw	r24, 0x01	; 1
    18e0:	09 f0       	breq	.+2      	; 0x18e4 <main+0x194>
    18e2:	7d c0       	rjmp	.+250    	; 0x19de <main+0x28e>
			case 1:{
				value=ADC_Read(0);
    18e4:	80 e0       	ldi	r24, 0x00	; 0
    18e6:	0e 94 21 09 	call	0x1242	; 0x1242 <ADC_Read>
    18ea:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <value+0x1>
    18ee:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <value>
				rBPM=((value*14)/1024)+10; // BPM range vary from 10 to 24 
    18f2:	88 0f       	add	r24, r24
    18f4:	99 1f       	adc	r25, r25
    18f6:	9c 01       	movw	r18, r24
    18f8:	22 0f       	add	r18, r18
    18fa:	33 1f       	adc	r19, r19
    18fc:	22 0f       	add	r18, r18
    18fe:	33 1f       	adc	r19, r19
    1900:	22 0f       	add	r18, r18
    1902:	33 1f       	adc	r19, r19
    1904:	a9 01       	movw	r20, r18
    1906:	48 1b       	sub	r20, r24
    1908:	59 0b       	sbc	r21, r25
    190a:	9a 01       	movw	r18, r20
    190c:	12 f4       	brpl	.+4      	; 0x1912 <main+0x1c2>
    190e:	21 50       	subi	r18, 0x01	; 1
    1910:	3c 4f       	sbci	r19, 0xFC	; 252
    1912:	83 2f       	mov	r24, r19
    1914:	85 95       	asr	r24
    1916:	85 95       	asr	r24
    1918:	93 2f       	mov	r25, r19
    191a:	99 0f       	add	r25, r25
    191c:	99 0b       	sbc	r25, r25
    191e:	0a 96       	adiw	r24, 0x0a	; 10
    1920:	90 93 14 04 	sts	0x0414, r25	; 0x800414 <rBPM+0x1>
    1924:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <rBPM>
				caseADC++;
    1928:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <caseADC>
    192c:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <caseADC+0x1>
    1930:	01 96       	adiw	r24, 0x01	; 1
    1932:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <caseADC+0x1>
    1936:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <caseADC>
				ADC_Init();
    193a:	0e 94 1b 09 	call	0x1236	; 0x1236 <ADC_Init>
				break;
    193e:	4f c0       	rjmp	.+158    	; 0x19de <main+0x28e>
				
			}
			case 2:{
				value=ADC_Read(3);
    1940:	83 e0       	ldi	r24, 0x03	; 3
    1942:	0e 94 21 09 	call	0x1242	; 0x1242 <ADC_Read>
    1946:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <value+0x1>
    194a:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <value>
				rBL=((value*650)/1024)+250; // BL range vary from 250 to 900
    194e:	4a e8       	ldi	r20, 0x8A	; 138
    1950:	52 e0       	ldi	r21, 0x02	; 2
    1952:	84 9f       	mul	r24, r20
    1954:	90 01       	movw	r18, r0
    1956:	85 9f       	mul	r24, r21
    1958:	30 0d       	add	r19, r0
    195a:	94 9f       	mul	r25, r20
    195c:	30 0d       	add	r19, r0
    195e:	11 24       	eor	r1, r1
    1960:	33 23       	and	r19, r19
    1962:	14 f4       	brge	.+4      	; 0x1968 <main+0x218>
    1964:	21 50       	subi	r18, 0x01	; 1
    1966:	3c 4f       	sbci	r19, 0xFC	; 252
    1968:	83 2f       	mov	r24, r19
    196a:	85 95       	asr	r24
    196c:	85 95       	asr	r24
    196e:	93 2f       	mov	r25, r19
    1970:	99 0f       	add	r25, r25
    1972:	99 0b       	sbc	r25, r25
    1974:	86 50       	subi	r24, 0x06	; 6
    1976:	9f 4f       	sbci	r25, 0xFF	; 255
    1978:	90 93 12 04 	sts	0x0412, r25	; 0x800412 <rBL+0x1>
    197c:	80 93 11 04 	sts	0x0411, r24	; 0x800411 <rBL>
				caseADC++;
    1980:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <caseADC>
    1984:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <caseADC+0x1>
    1988:	01 96       	adiw	r24, 0x01	; 1
    198a:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <caseADC+0x1>
    198e:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <caseADC>
				ADC_Init();
    1992:	0e 94 1b 09 	call	0x1236	; 0x1236 <ADC_Init>
				break;
    1996:	23 c0       	rjmp	.+70     	; 0x19de <main+0x28e>
			}
			case 3:{
				value=ADC_Read(4);
    1998:	84 e0       	ldi	r24, 0x04	; 4
    199a:	0e 94 21 09 	call	0x1242	; 0x1242 <ADC_Read>
    199e:	90 93 d3 04 	sts	0x04D3, r25	; 0x8004d3 <value+0x1>
    19a2:	80 93 d2 04 	sts	0x04D2, r24	; 0x8004d2 <value>
				rOP=(100*value)/1024; // OP range vary from 0 to 100
    19a6:	44 e6       	ldi	r20, 0x64	; 100
    19a8:	48 9f       	mul	r20, r24
    19aa:	90 01       	movw	r18, r0
    19ac:	49 9f       	mul	r20, r25
    19ae:	30 0d       	add	r19, r0
    19b0:	11 24       	eor	r1, r1
    19b2:	33 23       	and	r19, r19
    19b4:	14 f4       	brge	.+4      	; 0x19ba <main+0x26a>
    19b6:	21 50       	subi	r18, 0x01	; 1
    19b8:	3c 4f       	sbci	r19, 0xFC	; 252
    19ba:	83 2f       	mov	r24, r19
    19bc:	88 0f       	add	r24, r24
    19be:	88 0b       	sbc	r24, r24
    19c0:	93 2f       	mov	r25, r19
    19c2:	95 95       	asr	r25
    19c4:	95 95       	asr	r25
    19c6:	90 93 66 03 	sts	0x0366, r25	; 0x800366 <rOP>
    19ca:	80 93 67 03 	sts	0x0367, r24	; 0x800367 <rOP+0x1>
				caseADC=1;
    19ce:	81 e0       	ldi	r24, 0x01	; 1
    19d0:	90 e0       	ldi	r25, 0x00	; 0
    19d2:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <caseADC+0x1>
    19d6:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <caseADC>
				ADC_Init();
    19da:	0e 94 1b 09 	call	0x1236	; 0x1236 <ADC_Init>

     



        if(checkStatus()){
    19de:	0e 94 72 0b 	call	0x16e4	; 0x16e4 <checkStatus>
    19e2:	88 23       	and	r24, r24
    19e4:	39 f1       	breq	.+78     	; 0x1a34 <main+0x2e4>
            if(automationOn()){
    19e6:	0e 94 c6 0a 	call	0x158c	; 0x158c <automationOn>
    19ea:	88 23       	and	r24, r24
    19ec:	c1 f0       	breq	.+48     	; 0x1a1e <main+0x2ce>
                if(checkPatientTemp()){
    19ee:	0e 94 1f 0b 	call	0x163e	; 0x163e <checkPatientTemp>
    19f2:	88 23       	and	r24, r24
    19f4:	09 f4       	brne	.+2      	; 0x19f8 <main+0x2a8>
    19f6:	68 cf       	rjmp	.-304    	; 0x18c8 <main+0x178>

                    if(checkBloodOxygenLevel() < Average_Blood_Oxygen_level){
    19f8:	0e 94 8f 0a 	call	0x151e	; 0x151e <checkBloodOxygenLevel>
    19fc:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <Average_Blood_Oxygen_level>
    1a00:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <Average_Blood_Oxygen_level+0x1>
    1a04:	82 17       	cp	r24, r18
    1a06:	93 07       	cpc	r25, r19
    1a08:	3c f4       	brge	.+14     	; 0x1a18 <main+0x2c8>
                        startOxygenAndAirSupply(Oxygen_percentage);
    1a0a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <Oxygen_percentage>
    1a0e:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <Oxygen_percentage+0x1>
    1a12:	0e 94 92 0a 	call	0x1524	; 0x1524 <startOxygenAndAirSupply>
    1a16:	58 cf       	rjmp	.-336    	; 0x18c8 <main+0x178>
                    }else{
                        startAirSupply();
    1a18:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <startAirSupply>
    1a1c:	55 cf       	rjmp	.-342    	; 0x18c8 <main+0x178>
                    }
                }
            }else{
                checkPatientTemp();
    1a1e:	0e 94 1f 0b 	call	0x163e	; 0x163e <checkPatientTemp>
                getParametersFromKnobs();// update o2 percentage manually
    1a22:	0e 94 bd 0a 	call	0x157a	; 0x157a <getParametersFromKnobs>
                startOxygenAndAirSupply(Oxygen_percentage);
    1a26:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <Oxygen_percentage>
    1a2a:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <Oxygen_percentage+0x1>
    1a2e:	0e 94 92 0a 	call	0x1524	; 0x1524 <startOxygenAndAirSupply>
    1a32:	4a cf       	rjmp	.-364    	; 0x18c8 <main+0x178>
            }
        }else{return 0;}
    }
}
    1a34:	80 e0       	ldi	r24, 0x00	; 0
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	df 91       	pop	r29
    1a3a:	cf 91       	pop	r28
    1a3c:	1f 91       	pop	r17
    1a3e:	0f 91       	pop	r16
    1a40:	08 95       	ret

00001a42 <__vector_7>:
#include <avr/interrupt.h>

#include "millis.h"

ISR(TIMER1_COMPA_vect)
{
    1a42:	1f 92       	push	r1
    1a44:	0f 92       	push	r0
    1a46:	0f b6       	in	r0, 0x3f	; 63
    1a48:	0f 92       	push	r0
    1a4a:	11 24       	eor	r1, r1
    1a4c:	8f 93       	push	r24
    1a4e:	9f 93       	push	r25
    1a50:	af 93       	push	r26
    1a52:	bf 93       	push	r27
  timer1_millis++;
    1a54:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <timer1_millis>
    1a58:	90 91 22 04 	lds	r25, 0x0422	; 0x800422 <timer1_millis+0x1>
    1a5c:	a0 91 23 04 	lds	r26, 0x0423	; 0x800423 <timer1_millis+0x2>
    1a60:	b0 91 24 04 	lds	r27, 0x0424	; 0x800424 <timer1_millis+0x3>
    1a64:	01 96       	adiw	r24, 0x01	; 1
    1a66:	a1 1d       	adc	r26, r1
    1a68:	b1 1d       	adc	r27, r1
    1a6a:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <timer1_millis>
    1a6e:	90 93 22 04 	sts	0x0422, r25	; 0x800422 <timer1_millis+0x1>
    1a72:	a0 93 23 04 	sts	0x0423, r26	; 0x800423 <timer1_millis+0x2>
    1a76:	b0 93 24 04 	sts	0x0424, r27	; 0x800424 <timer1_millis+0x3>
}
    1a7a:	bf 91       	pop	r27
    1a7c:	af 91       	pop	r26
    1a7e:	9f 91       	pop	r25
    1a80:	8f 91       	pop	r24
    1a82:	0f 90       	pop	r0
    1a84:	0f be       	out	0x3f, r0	; 63
    1a86:	0f 90       	pop	r0
    1a88:	1f 90       	pop	r1
    1a8a:	18 95       	reti

00001a8c <init_millis>:

void init_millis(unsigned long f_cpu)
{
  unsigned long ctc_match_overflow;

  ctc_match_overflow = ((f_cpu / 1000) / 8); //when timer1 is this value, 1ms has passed
    1a8c:	20 e4       	ldi	r18, 0x40	; 64
    1a8e:	3f e1       	ldi	r19, 0x1F	; 31
    1a90:	40 e0       	ldi	r20, 0x00	; 0
    1a92:	50 e0       	ldi	r21, 0x00	; 0
    1a94:	0e 94 0f 10 	call	0x201e	; 0x201e <__udivmodsi4>

  // (Set timer to clear when matching ctc_match_overflow) | (Set clock divisor to 8)
  TCCR1B |= (1 << WGM12) | (1 << CS11);
    1a98:	8e b5       	in	r24, 0x2e	; 46
    1a9a:	8a 60       	ori	r24, 0x0A	; 10
    1a9c:	8e bd       	out	0x2e, r24	; 46

  // high byte first, then low byte
  OCR1AH = (ctc_match_overflow >> 8);
    1a9e:	bb 27       	eor	r27, r27
    1aa0:	a5 2f       	mov	r26, r21
    1aa2:	94 2f       	mov	r25, r20
    1aa4:	83 2f       	mov	r24, r19
    1aa6:	8b bd       	out	0x2b, r24	; 43
  OCR1AL = ctc_match_overflow;
    1aa8:	2a bd       	out	0x2a, r18	; 42

  // Enable the compare match interrupt
  TIMSK |= (1 << OCIE1A);
    1aaa:	89 b7       	in	r24, 0x39	; 57
    1aac:	80 61       	ori	r24, 0x10	; 16
    1aae:	89 bf       	out	0x39, r24	; 57
    1ab0:	08 95       	ret

00001ab2 <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1ab2:	f8 94       	cli
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    1ab4:	21 e0       	ldi	r18, 0x01	; 1
    1ab6:	09 c0       	rjmp	.+18     	; 0x1aca <millis+0x18>
    millis_return = timer1_millis;
    1ab8:	60 91 21 04 	lds	r22, 0x0421	; 0x800421 <timer1_millis>
    1abc:	70 91 22 04 	lds	r23, 0x0422	; 0x800422 <timer1_millis+0x1>
    1ac0:	80 91 23 04 	lds	r24, 0x0423	; 0x800423 <timer1_millis+0x2>
    1ac4:	90 91 24 04 	lds	r25, 0x0424	; 0x800424 <timer1_millis+0x3>
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    1ac8:	20 e0       	ldi	r18, 0x00	; 0
    1aca:	21 11       	cpse	r18, r1
    1acc:	f5 cf       	rjmp	.-22     	; 0x1ab8 <millis+0x6>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
    1ace:	78 94       	sei
    millis_return = timer1_millis;
  }
  return millis_return;
}
    1ad0:	08 95       	ret

00001ad2 <__subsf3>:
    1ad2:	50 58       	subi	r21, 0x80	; 128

00001ad4 <__addsf3>:
    1ad4:	bb 27       	eor	r27, r27
    1ad6:	aa 27       	eor	r26, r26
    1ad8:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__addsf3x>
    1adc:	0c 94 f4 0e 	jmp	0x1de8	; 0x1de8 <__fp_round>
    1ae0:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <__fp_pscA>
    1ae4:	38 f0       	brcs	.+14     	; 0x1af4 <__addsf3+0x20>
    1ae6:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__fp_pscB>
    1aea:	20 f0       	brcs	.+8      	; 0x1af4 <__addsf3+0x20>
    1aec:	39 f4       	brne	.+14     	; 0x1afc <__addsf3+0x28>
    1aee:	9f 3f       	cpi	r25, 0xFF	; 255
    1af0:	19 f4       	brne	.+6      	; 0x1af8 <__addsf3+0x24>
    1af2:	26 f4       	brtc	.+8      	; 0x1afc <__addsf3+0x28>
    1af4:	0c 94 e3 0e 	jmp	0x1dc6	; 0x1dc6 <__fp_nan>
    1af8:	0e f4       	brtc	.+2      	; 0x1afc <__addsf3+0x28>
    1afa:	e0 95       	com	r30
    1afc:	e7 fb       	bst	r30, 7
    1afe:	0c 94 dd 0e 	jmp	0x1dba	; 0x1dba <__fp_inf>

00001b02 <__addsf3x>:
    1b02:	e9 2f       	mov	r30, r25
    1b04:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__fp_split3>
    1b08:	58 f3       	brcs	.-42     	; 0x1ae0 <__addsf3+0xc>
    1b0a:	ba 17       	cp	r27, r26
    1b0c:	62 07       	cpc	r22, r18
    1b0e:	73 07       	cpc	r23, r19
    1b10:	84 07       	cpc	r24, r20
    1b12:	95 07       	cpc	r25, r21
    1b14:	20 f0       	brcs	.+8      	; 0x1b1e <__addsf3x+0x1c>
    1b16:	79 f4       	brne	.+30     	; 0x1b36 <__addsf3x+0x34>
    1b18:	a6 f5       	brtc	.+104    	; 0x1b82 <__addsf3x+0x80>
    1b1a:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__fp_zero>
    1b1e:	0e f4       	brtc	.+2      	; 0x1b22 <__addsf3x+0x20>
    1b20:	e0 95       	com	r30
    1b22:	0b 2e       	mov	r0, r27
    1b24:	ba 2f       	mov	r27, r26
    1b26:	a0 2d       	mov	r26, r0
    1b28:	0b 01       	movw	r0, r22
    1b2a:	b9 01       	movw	r22, r18
    1b2c:	90 01       	movw	r18, r0
    1b2e:	0c 01       	movw	r0, r24
    1b30:	ca 01       	movw	r24, r20
    1b32:	a0 01       	movw	r20, r0
    1b34:	11 24       	eor	r1, r1
    1b36:	ff 27       	eor	r31, r31
    1b38:	59 1b       	sub	r21, r25
    1b3a:	99 f0       	breq	.+38     	; 0x1b62 <__addsf3x+0x60>
    1b3c:	59 3f       	cpi	r21, 0xF9	; 249
    1b3e:	50 f4       	brcc	.+20     	; 0x1b54 <__addsf3x+0x52>
    1b40:	50 3e       	cpi	r21, 0xE0	; 224
    1b42:	68 f1       	brcs	.+90     	; 0x1b9e <__addsf3x+0x9c>
    1b44:	1a 16       	cp	r1, r26
    1b46:	f0 40       	sbci	r31, 0x00	; 0
    1b48:	a2 2f       	mov	r26, r18
    1b4a:	23 2f       	mov	r18, r19
    1b4c:	34 2f       	mov	r19, r20
    1b4e:	44 27       	eor	r20, r20
    1b50:	58 5f       	subi	r21, 0xF8	; 248
    1b52:	f3 cf       	rjmp	.-26     	; 0x1b3a <__addsf3x+0x38>
    1b54:	46 95       	lsr	r20
    1b56:	37 95       	ror	r19
    1b58:	27 95       	ror	r18
    1b5a:	a7 95       	ror	r26
    1b5c:	f0 40       	sbci	r31, 0x00	; 0
    1b5e:	53 95       	inc	r21
    1b60:	c9 f7       	brne	.-14     	; 0x1b54 <__addsf3x+0x52>
    1b62:	7e f4       	brtc	.+30     	; 0x1b82 <__addsf3x+0x80>
    1b64:	1f 16       	cp	r1, r31
    1b66:	ba 0b       	sbc	r27, r26
    1b68:	62 0b       	sbc	r22, r18
    1b6a:	73 0b       	sbc	r23, r19
    1b6c:	84 0b       	sbc	r24, r20
    1b6e:	ba f0       	brmi	.+46     	; 0x1b9e <__addsf3x+0x9c>
    1b70:	91 50       	subi	r25, 0x01	; 1
    1b72:	a1 f0       	breq	.+40     	; 0x1b9c <__addsf3x+0x9a>
    1b74:	ff 0f       	add	r31, r31
    1b76:	bb 1f       	adc	r27, r27
    1b78:	66 1f       	adc	r22, r22
    1b7a:	77 1f       	adc	r23, r23
    1b7c:	88 1f       	adc	r24, r24
    1b7e:	c2 f7       	brpl	.-16     	; 0x1b70 <__addsf3x+0x6e>
    1b80:	0e c0       	rjmp	.+28     	; 0x1b9e <__addsf3x+0x9c>
    1b82:	ba 0f       	add	r27, r26
    1b84:	62 1f       	adc	r22, r18
    1b86:	73 1f       	adc	r23, r19
    1b88:	84 1f       	adc	r24, r20
    1b8a:	48 f4       	brcc	.+18     	; 0x1b9e <__addsf3x+0x9c>
    1b8c:	87 95       	ror	r24
    1b8e:	77 95       	ror	r23
    1b90:	67 95       	ror	r22
    1b92:	b7 95       	ror	r27
    1b94:	f7 95       	ror	r31
    1b96:	9e 3f       	cpi	r25, 0xFE	; 254
    1b98:	08 f0       	brcs	.+2      	; 0x1b9c <__addsf3x+0x9a>
    1b9a:	b0 cf       	rjmp	.-160    	; 0x1afc <__addsf3+0x28>
    1b9c:	93 95       	inc	r25
    1b9e:	88 0f       	add	r24, r24
    1ba0:	08 f0       	brcs	.+2      	; 0x1ba4 <__addsf3x+0xa2>
    1ba2:	99 27       	eor	r25, r25
    1ba4:	ee 0f       	add	r30, r30
    1ba6:	97 95       	ror	r25
    1ba8:	87 95       	ror	r24
    1baa:	08 95       	ret

00001bac <__cmpsf2>:
    1bac:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <__fp_cmp>
    1bb0:	08 f4       	brcc	.+2      	; 0x1bb4 <__cmpsf2+0x8>
    1bb2:	81 e0       	ldi	r24, 0x01	; 1
    1bb4:	08 95       	ret

00001bb6 <__divsf3>:
    1bb6:	0e 94 ef 0d 	call	0x1bde	; 0x1bde <__divsf3x>
    1bba:	0c 94 f4 0e 	jmp	0x1de8	; 0x1de8 <__fp_round>
    1bbe:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__fp_pscB>
    1bc2:	58 f0       	brcs	.+22     	; 0x1bda <__divsf3+0x24>
    1bc4:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <__fp_pscA>
    1bc8:	40 f0       	brcs	.+16     	; 0x1bda <__divsf3+0x24>
    1bca:	29 f4       	brne	.+10     	; 0x1bd6 <__divsf3+0x20>
    1bcc:	5f 3f       	cpi	r21, 0xFF	; 255
    1bce:	29 f0       	breq	.+10     	; 0x1bda <__divsf3+0x24>
    1bd0:	0c 94 dd 0e 	jmp	0x1dba	; 0x1dba <__fp_inf>
    1bd4:	51 11       	cpse	r21, r1
    1bd6:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__fp_szero>
    1bda:	0c 94 e3 0e 	jmp	0x1dc6	; 0x1dc6 <__fp_nan>

00001bde <__divsf3x>:
    1bde:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__fp_split3>
    1be2:	68 f3       	brcs	.-38     	; 0x1bbe <__divsf3+0x8>

00001be4 <__divsf3_pse>:
    1be4:	99 23       	and	r25, r25
    1be6:	b1 f3       	breq	.-20     	; 0x1bd4 <__divsf3+0x1e>
    1be8:	55 23       	and	r21, r21
    1bea:	91 f3       	breq	.-28     	; 0x1bd0 <__divsf3+0x1a>
    1bec:	95 1b       	sub	r25, r21
    1bee:	55 0b       	sbc	r21, r21
    1bf0:	bb 27       	eor	r27, r27
    1bf2:	aa 27       	eor	r26, r26
    1bf4:	62 17       	cp	r22, r18
    1bf6:	73 07       	cpc	r23, r19
    1bf8:	84 07       	cpc	r24, r20
    1bfa:	38 f0       	brcs	.+14     	; 0x1c0a <__divsf3_pse+0x26>
    1bfc:	9f 5f       	subi	r25, 0xFF	; 255
    1bfe:	5f 4f       	sbci	r21, 0xFF	; 255
    1c00:	22 0f       	add	r18, r18
    1c02:	33 1f       	adc	r19, r19
    1c04:	44 1f       	adc	r20, r20
    1c06:	aa 1f       	adc	r26, r26
    1c08:	a9 f3       	breq	.-22     	; 0x1bf4 <__divsf3_pse+0x10>
    1c0a:	35 d0       	rcall	.+106    	; 0x1c76 <__divsf3_pse+0x92>
    1c0c:	0e 2e       	mov	r0, r30
    1c0e:	3a f0       	brmi	.+14     	; 0x1c1e <__divsf3_pse+0x3a>
    1c10:	e0 e8       	ldi	r30, 0x80	; 128
    1c12:	32 d0       	rcall	.+100    	; 0x1c78 <__divsf3_pse+0x94>
    1c14:	91 50       	subi	r25, 0x01	; 1
    1c16:	50 40       	sbci	r21, 0x00	; 0
    1c18:	e6 95       	lsr	r30
    1c1a:	00 1c       	adc	r0, r0
    1c1c:	ca f7       	brpl	.-14     	; 0x1c10 <__divsf3_pse+0x2c>
    1c1e:	2b d0       	rcall	.+86     	; 0x1c76 <__divsf3_pse+0x92>
    1c20:	fe 2f       	mov	r31, r30
    1c22:	29 d0       	rcall	.+82     	; 0x1c76 <__divsf3_pse+0x92>
    1c24:	66 0f       	add	r22, r22
    1c26:	77 1f       	adc	r23, r23
    1c28:	88 1f       	adc	r24, r24
    1c2a:	bb 1f       	adc	r27, r27
    1c2c:	26 17       	cp	r18, r22
    1c2e:	37 07       	cpc	r19, r23
    1c30:	48 07       	cpc	r20, r24
    1c32:	ab 07       	cpc	r26, r27
    1c34:	b0 e8       	ldi	r27, 0x80	; 128
    1c36:	09 f0       	breq	.+2      	; 0x1c3a <__divsf3_pse+0x56>
    1c38:	bb 0b       	sbc	r27, r27
    1c3a:	80 2d       	mov	r24, r0
    1c3c:	bf 01       	movw	r22, r30
    1c3e:	ff 27       	eor	r31, r31
    1c40:	93 58       	subi	r25, 0x83	; 131
    1c42:	5f 4f       	sbci	r21, 0xFF	; 255
    1c44:	3a f0       	brmi	.+14     	; 0x1c54 <__divsf3_pse+0x70>
    1c46:	9e 3f       	cpi	r25, 0xFE	; 254
    1c48:	51 05       	cpc	r21, r1
    1c4a:	78 f0       	brcs	.+30     	; 0x1c6a <__divsf3_pse+0x86>
    1c4c:	0c 94 dd 0e 	jmp	0x1dba	; 0x1dba <__fp_inf>
    1c50:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__fp_szero>
    1c54:	5f 3f       	cpi	r21, 0xFF	; 255
    1c56:	e4 f3       	brlt	.-8      	; 0x1c50 <__divsf3_pse+0x6c>
    1c58:	98 3e       	cpi	r25, 0xE8	; 232
    1c5a:	d4 f3       	brlt	.-12     	; 0x1c50 <__divsf3_pse+0x6c>
    1c5c:	86 95       	lsr	r24
    1c5e:	77 95       	ror	r23
    1c60:	67 95       	ror	r22
    1c62:	b7 95       	ror	r27
    1c64:	f7 95       	ror	r31
    1c66:	9f 5f       	subi	r25, 0xFF	; 255
    1c68:	c9 f7       	brne	.-14     	; 0x1c5c <__divsf3_pse+0x78>
    1c6a:	88 0f       	add	r24, r24
    1c6c:	91 1d       	adc	r25, r1
    1c6e:	96 95       	lsr	r25
    1c70:	87 95       	ror	r24
    1c72:	97 f9       	bld	r25, 7
    1c74:	08 95       	ret
    1c76:	e1 e0       	ldi	r30, 0x01	; 1
    1c78:	66 0f       	add	r22, r22
    1c7a:	77 1f       	adc	r23, r23
    1c7c:	88 1f       	adc	r24, r24
    1c7e:	bb 1f       	adc	r27, r27
    1c80:	62 17       	cp	r22, r18
    1c82:	73 07       	cpc	r23, r19
    1c84:	84 07       	cpc	r24, r20
    1c86:	ba 07       	cpc	r27, r26
    1c88:	20 f0       	brcs	.+8      	; 0x1c92 <__divsf3_pse+0xae>
    1c8a:	62 1b       	sub	r22, r18
    1c8c:	73 0b       	sbc	r23, r19
    1c8e:	84 0b       	sbc	r24, r20
    1c90:	ba 0b       	sbc	r27, r26
    1c92:	ee 1f       	adc	r30, r30
    1c94:	88 f7       	brcc	.-30     	; 0x1c78 <__divsf3_pse+0x94>
    1c96:	e0 95       	com	r30
    1c98:	08 95       	ret

00001c9a <__fixunssfsi>:
    1c9a:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <__fp_splitA>
    1c9e:	88 f0       	brcs	.+34     	; 0x1cc2 <__fixunssfsi+0x28>
    1ca0:	9f 57       	subi	r25, 0x7F	; 127
    1ca2:	98 f0       	brcs	.+38     	; 0x1cca <__fixunssfsi+0x30>
    1ca4:	b9 2f       	mov	r27, r25
    1ca6:	99 27       	eor	r25, r25
    1ca8:	b7 51       	subi	r27, 0x17	; 23
    1caa:	b0 f0       	brcs	.+44     	; 0x1cd8 <__fixunssfsi+0x3e>
    1cac:	e1 f0       	breq	.+56     	; 0x1ce6 <__fixunssfsi+0x4c>
    1cae:	66 0f       	add	r22, r22
    1cb0:	77 1f       	adc	r23, r23
    1cb2:	88 1f       	adc	r24, r24
    1cb4:	99 1f       	adc	r25, r25
    1cb6:	1a f0       	brmi	.+6      	; 0x1cbe <__fixunssfsi+0x24>
    1cb8:	ba 95       	dec	r27
    1cba:	c9 f7       	brne	.-14     	; 0x1cae <__fixunssfsi+0x14>
    1cbc:	14 c0       	rjmp	.+40     	; 0x1ce6 <__fixunssfsi+0x4c>
    1cbe:	b1 30       	cpi	r27, 0x01	; 1
    1cc0:	91 f0       	breq	.+36     	; 0x1ce6 <__fixunssfsi+0x4c>
    1cc2:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <__fp_zero>
    1cc6:	b1 e0       	ldi	r27, 0x01	; 1
    1cc8:	08 95       	ret
    1cca:	0c 94 27 0f 	jmp	0x1e4e	; 0x1e4e <__fp_zero>
    1cce:	67 2f       	mov	r22, r23
    1cd0:	78 2f       	mov	r23, r24
    1cd2:	88 27       	eor	r24, r24
    1cd4:	b8 5f       	subi	r27, 0xF8	; 248
    1cd6:	39 f0       	breq	.+14     	; 0x1ce6 <__fixunssfsi+0x4c>
    1cd8:	b9 3f       	cpi	r27, 0xF9	; 249
    1cda:	cc f3       	brlt	.-14     	; 0x1cce <__fixunssfsi+0x34>
    1cdc:	86 95       	lsr	r24
    1cde:	77 95       	ror	r23
    1ce0:	67 95       	ror	r22
    1ce2:	b3 95       	inc	r27
    1ce4:	d9 f7       	brne	.-10     	; 0x1cdc <__fixunssfsi+0x42>
    1ce6:	3e f4       	brtc	.+14     	; 0x1cf6 <__fixunssfsi+0x5c>
    1ce8:	90 95       	com	r25
    1cea:	80 95       	com	r24
    1cec:	70 95       	com	r23
    1cee:	61 95       	neg	r22
    1cf0:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf2:	8f 4f       	sbci	r24, 0xFF	; 255
    1cf4:	9f 4f       	sbci	r25, 0xFF	; 255
    1cf6:	08 95       	ret

00001cf8 <__floatunsisf>:
    1cf8:	e8 94       	clt
    1cfa:	09 c0       	rjmp	.+18     	; 0x1d0e <__floatsisf+0x12>

00001cfc <__floatsisf>:
    1cfc:	97 fb       	bst	r25, 7
    1cfe:	3e f4       	brtc	.+14     	; 0x1d0e <__floatsisf+0x12>
    1d00:	90 95       	com	r25
    1d02:	80 95       	com	r24
    1d04:	70 95       	com	r23
    1d06:	61 95       	neg	r22
    1d08:	7f 4f       	sbci	r23, 0xFF	; 255
    1d0a:	8f 4f       	sbci	r24, 0xFF	; 255
    1d0c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d0e:	99 23       	and	r25, r25
    1d10:	a9 f0       	breq	.+42     	; 0x1d3c <__floatsisf+0x40>
    1d12:	f9 2f       	mov	r31, r25
    1d14:	96 e9       	ldi	r25, 0x96	; 150
    1d16:	bb 27       	eor	r27, r27
    1d18:	93 95       	inc	r25
    1d1a:	f6 95       	lsr	r31
    1d1c:	87 95       	ror	r24
    1d1e:	77 95       	ror	r23
    1d20:	67 95       	ror	r22
    1d22:	b7 95       	ror	r27
    1d24:	f1 11       	cpse	r31, r1
    1d26:	f8 cf       	rjmp	.-16     	; 0x1d18 <__floatsisf+0x1c>
    1d28:	fa f4       	brpl	.+62     	; 0x1d68 <__floatsisf+0x6c>
    1d2a:	bb 0f       	add	r27, r27
    1d2c:	11 f4       	brne	.+4      	; 0x1d32 <__floatsisf+0x36>
    1d2e:	60 ff       	sbrs	r22, 0
    1d30:	1b c0       	rjmp	.+54     	; 0x1d68 <__floatsisf+0x6c>
    1d32:	6f 5f       	subi	r22, 0xFF	; 255
    1d34:	7f 4f       	sbci	r23, 0xFF	; 255
    1d36:	8f 4f       	sbci	r24, 0xFF	; 255
    1d38:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3a:	16 c0       	rjmp	.+44     	; 0x1d68 <__floatsisf+0x6c>
    1d3c:	88 23       	and	r24, r24
    1d3e:	11 f0       	breq	.+4      	; 0x1d44 <__floatsisf+0x48>
    1d40:	96 e9       	ldi	r25, 0x96	; 150
    1d42:	11 c0       	rjmp	.+34     	; 0x1d66 <__floatsisf+0x6a>
    1d44:	77 23       	and	r23, r23
    1d46:	21 f0       	breq	.+8      	; 0x1d50 <__floatsisf+0x54>
    1d48:	9e e8       	ldi	r25, 0x8E	; 142
    1d4a:	87 2f       	mov	r24, r23
    1d4c:	76 2f       	mov	r23, r22
    1d4e:	05 c0       	rjmp	.+10     	; 0x1d5a <__floatsisf+0x5e>
    1d50:	66 23       	and	r22, r22
    1d52:	71 f0       	breq	.+28     	; 0x1d70 <__floatsisf+0x74>
    1d54:	96 e8       	ldi	r25, 0x86	; 134
    1d56:	86 2f       	mov	r24, r22
    1d58:	70 e0       	ldi	r23, 0x00	; 0
    1d5a:	60 e0       	ldi	r22, 0x00	; 0
    1d5c:	2a f0       	brmi	.+10     	; 0x1d68 <__floatsisf+0x6c>
    1d5e:	9a 95       	dec	r25
    1d60:	66 0f       	add	r22, r22
    1d62:	77 1f       	adc	r23, r23
    1d64:	88 1f       	adc	r24, r24
    1d66:	da f7       	brpl	.-10     	; 0x1d5e <__floatsisf+0x62>
    1d68:	88 0f       	add	r24, r24
    1d6a:	96 95       	lsr	r25
    1d6c:	87 95       	ror	r24
    1d6e:	97 f9       	bld	r25, 7
    1d70:	08 95       	ret

00001d72 <__fp_cmp>:
    1d72:	99 0f       	add	r25, r25
    1d74:	00 08       	sbc	r0, r0
    1d76:	55 0f       	add	r21, r21
    1d78:	aa 0b       	sbc	r26, r26
    1d7a:	e0 e8       	ldi	r30, 0x80	; 128
    1d7c:	fe ef       	ldi	r31, 0xFE	; 254
    1d7e:	16 16       	cp	r1, r22
    1d80:	17 06       	cpc	r1, r23
    1d82:	e8 07       	cpc	r30, r24
    1d84:	f9 07       	cpc	r31, r25
    1d86:	c0 f0       	brcs	.+48     	; 0x1db8 <__fp_cmp+0x46>
    1d88:	12 16       	cp	r1, r18
    1d8a:	13 06       	cpc	r1, r19
    1d8c:	e4 07       	cpc	r30, r20
    1d8e:	f5 07       	cpc	r31, r21
    1d90:	98 f0       	brcs	.+38     	; 0x1db8 <__fp_cmp+0x46>
    1d92:	62 1b       	sub	r22, r18
    1d94:	73 0b       	sbc	r23, r19
    1d96:	84 0b       	sbc	r24, r20
    1d98:	95 0b       	sbc	r25, r21
    1d9a:	39 f4       	brne	.+14     	; 0x1daa <__fp_cmp+0x38>
    1d9c:	0a 26       	eor	r0, r26
    1d9e:	61 f0       	breq	.+24     	; 0x1db8 <__fp_cmp+0x46>
    1da0:	23 2b       	or	r18, r19
    1da2:	24 2b       	or	r18, r20
    1da4:	25 2b       	or	r18, r21
    1da6:	21 f4       	brne	.+8      	; 0x1db0 <__fp_cmp+0x3e>
    1da8:	08 95       	ret
    1daa:	0a 26       	eor	r0, r26
    1dac:	09 f4       	brne	.+2      	; 0x1db0 <__fp_cmp+0x3e>
    1dae:	a1 40       	sbci	r26, 0x01	; 1
    1db0:	a6 95       	lsr	r26
    1db2:	8f ef       	ldi	r24, 0xFF	; 255
    1db4:	81 1d       	adc	r24, r1
    1db6:	81 1d       	adc	r24, r1
    1db8:	08 95       	ret

00001dba <__fp_inf>:
    1dba:	97 f9       	bld	r25, 7
    1dbc:	9f 67       	ori	r25, 0x7F	; 127
    1dbe:	80 e8       	ldi	r24, 0x80	; 128
    1dc0:	70 e0       	ldi	r23, 0x00	; 0
    1dc2:	60 e0       	ldi	r22, 0x00	; 0
    1dc4:	08 95       	ret

00001dc6 <__fp_nan>:
    1dc6:	9f ef       	ldi	r25, 0xFF	; 255
    1dc8:	80 ec       	ldi	r24, 0xC0	; 192
    1dca:	08 95       	ret

00001dcc <__fp_pscA>:
    1dcc:	00 24       	eor	r0, r0
    1dce:	0a 94       	dec	r0
    1dd0:	16 16       	cp	r1, r22
    1dd2:	17 06       	cpc	r1, r23
    1dd4:	18 06       	cpc	r1, r24
    1dd6:	09 06       	cpc	r0, r25
    1dd8:	08 95       	ret

00001dda <__fp_pscB>:
    1dda:	00 24       	eor	r0, r0
    1ddc:	0a 94       	dec	r0
    1dde:	12 16       	cp	r1, r18
    1de0:	13 06       	cpc	r1, r19
    1de2:	14 06       	cpc	r1, r20
    1de4:	05 06       	cpc	r0, r21
    1de6:	08 95       	ret

00001de8 <__fp_round>:
    1de8:	09 2e       	mov	r0, r25
    1dea:	03 94       	inc	r0
    1dec:	00 0c       	add	r0, r0
    1dee:	11 f4       	brne	.+4      	; 0x1df4 <__fp_round+0xc>
    1df0:	88 23       	and	r24, r24
    1df2:	52 f0       	brmi	.+20     	; 0x1e08 <__fp_round+0x20>
    1df4:	bb 0f       	add	r27, r27
    1df6:	40 f4       	brcc	.+16     	; 0x1e08 <__fp_round+0x20>
    1df8:	bf 2b       	or	r27, r31
    1dfa:	11 f4       	brne	.+4      	; 0x1e00 <__fp_round+0x18>
    1dfc:	60 ff       	sbrs	r22, 0
    1dfe:	04 c0       	rjmp	.+8      	; 0x1e08 <__fp_round+0x20>
    1e00:	6f 5f       	subi	r22, 0xFF	; 255
    1e02:	7f 4f       	sbci	r23, 0xFF	; 255
    1e04:	8f 4f       	sbci	r24, 0xFF	; 255
    1e06:	9f 4f       	sbci	r25, 0xFF	; 255
    1e08:	08 95       	ret

00001e0a <__fp_split3>:
    1e0a:	57 fd       	sbrc	r21, 7
    1e0c:	90 58       	subi	r25, 0x80	; 128
    1e0e:	44 0f       	add	r20, r20
    1e10:	55 1f       	adc	r21, r21
    1e12:	59 f0       	breq	.+22     	; 0x1e2a <__fp_splitA+0x10>
    1e14:	5f 3f       	cpi	r21, 0xFF	; 255
    1e16:	71 f0       	breq	.+28     	; 0x1e34 <__fp_splitA+0x1a>
    1e18:	47 95       	ror	r20

00001e1a <__fp_splitA>:
    1e1a:	88 0f       	add	r24, r24
    1e1c:	97 fb       	bst	r25, 7
    1e1e:	99 1f       	adc	r25, r25
    1e20:	61 f0       	breq	.+24     	; 0x1e3a <__fp_splitA+0x20>
    1e22:	9f 3f       	cpi	r25, 0xFF	; 255
    1e24:	79 f0       	breq	.+30     	; 0x1e44 <__fp_splitA+0x2a>
    1e26:	87 95       	ror	r24
    1e28:	08 95       	ret
    1e2a:	12 16       	cp	r1, r18
    1e2c:	13 06       	cpc	r1, r19
    1e2e:	14 06       	cpc	r1, r20
    1e30:	55 1f       	adc	r21, r21
    1e32:	f2 cf       	rjmp	.-28     	; 0x1e18 <__fp_split3+0xe>
    1e34:	46 95       	lsr	r20
    1e36:	f1 df       	rcall	.-30     	; 0x1e1a <__fp_splitA>
    1e38:	08 c0       	rjmp	.+16     	; 0x1e4a <__fp_splitA+0x30>
    1e3a:	16 16       	cp	r1, r22
    1e3c:	17 06       	cpc	r1, r23
    1e3e:	18 06       	cpc	r1, r24
    1e40:	99 1f       	adc	r25, r25
    1e42:	f1 cf       	rjmp	.-30     	; 0x1e26 <__fp_splitA+0xc>
    1e44:	86 95       	lsr	r24
    1e46:	71 05       	cpc	r23, r1
    1e48:	61 05       	cpc	r22, r1
    1e4a:	08 94       	sec
    1e4c:	08 95       	ret

00001e4e <__fp_zero>:
    1e4e:	e8 94       	clt

00001e50 <__fp_szero>:
    1e50:	bb 27       	eor	r27, r27
    1e52:	66 27       	eor	r22, r22
    1e54:	77 27       	eor	r23, r23
    1e56:	cb 01       	movw	r24, r22
    1e58:	97 f9       	bld	r25, 7
    1e5a:	08 95       	ret

00001e5c <__gesf2>:
    1e5c:	0e 94 b9 0e 	call	0x1d72	; 0x1d72 <__fp_cmp>
    1e60:	08 f4       	brcc	.+2      	; 0x1e64 <__gesf2+0x8>
    1e62:	8f ef       	ldi	r24, 0xFF	; 255
    1e64:	08 95       	ret

00001e66 <__mulsf3>:
    1e66:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__mulsf3x>
    1e6a:	0c 94 f4 0e 	jmp	0x1de8	; 0x1de8 <__fp_round>
    1e6e:	0e 94 e6 0e 	call	0x1dcc	; 0x1dcc <__fp_pscA>
    1e72:	38 f0       	brcs	.+14     	; 0x1e82 <__mulsf3+0x1c>
    1e74:	0e 94 ed 0e 	call	0x1dda	; 0x1dda <__fp_pscB>
    1e78:	20 f0       	brcs	.+8      	; 0x1e82 <__mulsf3+0x1c>
    1e7a:	95 23       	and	r25, r21
    1e7c:	11 f0       	breq	.+4      	; 0x1e82 <__mulsf3+0x1c>
    1e7e:	0c 94 dd 0e 	jmp	0x1dba	; 0x1dba <__fp_inf>
    1e82:	0c 94 e3 0e 	jmp	0x1dc6	; 0x1dc6 <__fp_nan>
    1e86:	11 24       	eor	r1, r1
    1e88:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__fp_szero>

00001e8c <__mulsf3x>:
    1e8c:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__fp_split3>
    1e90:	70 f3       	brcs	.-36     	; 0x1e6e <__mulsf3+0x8>

00001e92 <__mulsf3_pse>:
    1e92:	95 9f       	mul	r25, r21
    1e94:	c1 f3       	breq	.-16     	; 0x1e86 <__mulsf3+0x20>
    1e96:	95 0f       	add	r25, r21
    1e98:	50 e0       	ldi	r21, 0x00	; 0
    1e9a:	55 1f       	adc	r21, r21
    1e9c:	62 9f       	mul	r22, r18
    1e9e:	f0 01       	movw	r30, r0
    1ea0:	72 9f       	mul	r23, r18
    1ea2:	bb 27       	eor	r27, r27
    1ea4:	f0 0d       	add	r31, r0
    1ea6:	b1 1d       	adc	r27, r1
    1ea8:	63 9f       	mul	r22, r19
    1eaa:	aa 27       	eor	r26, r26
    1eac:	f0 0d       	add	r31, r0
    1eae:	b1 1d       	adc	r27, r1
    1eb0:	aa 1f       	adc	r26, r26
    1eb2:	64 9f       	mul	r22, r20
    1eb4:	66 27       	eor	r22, r22
    1eb6:	b0 0d       	add	r27, r0
    1eb8:	a1 1d       	adc	r26, r1
    1eba:	66 1f       	adc	r22, r22
    1ebc:	82 9f       	mul	r24, r18
    1ebe:	22 27       	eor	r18, r18
    1ec0:	b0 0d       	add	r27, r0
    1ec2:	a1 1d       	adc	r26, r1
    1ec4:	62 1f       	adc	r22, r18
    1ec6:	73 9f       	mul	r23, r19
    1ec8:	b0 0d       	add	r27, r0
    1eca:	a1 1d       	adc	r26, r1
    1ecc:	62 1f       	adc	r22, r18
    1ece:	83 9f       	mul	r24, r19
    1ed0:	a0 0d       	add	r26, r0
    1ed2:	61 1d       	adc	r22, r1
    1ed4:	22 1f       	adc	r18, r18
    1ed6:	74 9f       	mul	r23, r20
    1ed8:	33 27       	eor	r19, r19
    1eda:	a0 0d       	add	r26, r0
    1edc:	61 1d       	adc	r22, r1
    1ede:	23 1f       	adc	r18, r19
    1ee0:	84 9f       	mul	r24, r20
    1ee2:	60 0d       	add	r22, r0
    1ee4:	21 1d       	adc	r18, r1
    1ee6:	82 2f       	mov	r24, r18
    1ee8:	76 2f       	mov	r23, r22
    1eea:	6a 2f       	mov	r22, r26
    1eec:	11 24       	eor	r1, r1
    1eee:	9f 57       	subi	r25, 0x7F	; 127
    1ef0:	50 40       	sbci	r21, 0x00	; 0
    1ef2:	9a f0       	brmi	.+38     	; 0x1f1a <__mulsf3_pse+0x88>
    1ef4:	f1 f0       	breq	.+60     	; 0x1f32 <__mulsf3_pse+0xa0>
    1ef6:	88 23       	and	r24, r24
    1ef8:	4a f0       	brmi	.+18     	; 0x1f0c <__mulsf3_pse+0x7a>
    1efa:	ee 0f       	add	r30, r30
    1efc:	ff 1f       	adc	r31, r31
    1efe:	bb 1f       	adc	r27, r27
    1f00:	66 1f       	adc	r22, r22
    1f02:	77 1f       	adc	r23, r23
    1f04:	88 1f       	adc	r24, r24
    1f06:	91 50       	subi	r25, 0x01	; 1
    1f08:	50 40       	sbci	r21, 0x00	; 0
    1f0a:	a9 f7       	brne	.-22     	; 0x1ef6 <__mulsf3_pse+0x64>
    1f0c:	9e 3f       	cpi	r25, 0xFE	; 254
    1f0e:	51 05       	cpc	r21, r1
    1f10:	80 f0       	brcs	.+32     	; 0x1f32 <__mulsf3_pse+0xa0>
    1f12:	0c 94 dd 0e 	jmp	0x1dba	; 0x1dba <__fp_inf>
    1f16:	0c 94 28 0f 	jmp	0x1e50	; 0x1e50 <__fp_szero>
    1f1a:	5f 3f       	cpi	r21, 0xFF	; 255
    1f1c:	e4 f3       	brlt	.-8      	; 0x1f16 <__mulsf3_pse+0x84>
    1f1e:	98 3e       	cpi	r25, 0xE8	; 232
    1f20:	d4 f3       	brlt	.-12     	; 0x1f16 <__mulsf3_pse+0x84>
    1f22:	86 95       	lsr	r24
    1f24:	77 95       	ror	r23
    1f26:	67 95       	ror	r22
    1f28:	b7 95       	ror	r27
    1f2a:	f7 95       	ror	r31
    1f2c:	e7 95       	ror	r30
    1f2e:	9f 5f       	subi	r25, 0xFF	; 255
    1f30:	c1 f7       	brne	.-16     	; 0x1f22 <__mulsf3_pse+0x90>
    1f32:	fe 2b       	or	r31, r30
    1f34:	88 0f       	add	r24, r24
    1f36:	91 1d       	adc	r25, r1
    1f38:	96 95       	lsr	r25
    1f3a:	87 95       	ror	r24
    1f3c:	97 f9       	bld	r25, 7
    1f3e:	08 95       	ret
    1f40:	19 f4       	brne	.+6      	; 0x1f48 <__mulsf3_pse+0xb6>
    1f42:	16 f4       	brtc	.+4      	; 0x1f48 <__mulsf3_pse+0xb6>
    1f44:	0c 94 e3 0e 	jmp	0x1dc6	; 0x1dc6 <__fp_nan>
    1f48:	0c 94 e6 0f 	jmp	0x1fcc	; 0x1fcc <__fp_mpack>

00001f4c <sqrt>:
    1f4c:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <__fp_splitA>
    1f50:	b8 f3       	brcs	.-18     	; 0x1f40 <__mulsf3_pse+0xae>
    1f52:	99 23       	and	r25, r25
    1f54:	c9 f3       	breq	.-14     	; 0x1f48 <__mulsf3_pse+0xb6>
    1f56:	b6 f3       	brts	.-20     	; 0x1f44 <__mulsf3_pse+0xb2>
    1f58:	9f 57       	subi	r25, 0x7F	; 127
    1f5a:	55 0b       	sbc	r21, r21
    1f5c:	87 ff       	sbrs	r24, 7
    1f5e:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <__fp_norm2>
    1f62:	00 24       	eor	r0, r0
    1f64:	a0 e6       	ldi	r26, 0x60	; 96
    1f66:	40 ea       	ldi	r20, 0xA0	; 160
    1f68:	90 01       	movw	r18, r0
    1f6a:	80 58       	subi	r24, 0x80	; 128
    1f6c:	56 95       	lsr	r21
    1f6e:	97 95       	ror	r25
    1f70:	28 f4       	brcc	.+10     	; 0x1f7c <sqrt+0x30>
    1f72:	80 5c       	subi	r24, 0xC0	; 192
    1f74:	66 0f       	add	r22, r22
    1f76:	77 1f       	adc	r23, r23
    1f78:	88 1f       	adc	r24, r24
    1f7a:	20 f0       	brcs	.+8      	; 0x1f84 <sqrt+0x38>
    1f7c:	26 17       	cp	r18, r22
    1f7e:	37 07       	cpc	r19, r23
    1f80:	48 07       	cpc	r20, r24
    1f82:	30 f4       	brcc	.+12     	; 0x1f90 <sqrt+0x44>
    1f84:	62 1b       	sub	r22, r18
    1f86:	73 0b       	sbc	r23, r19
    1f88:	84 0b       	sbc	r24, r20
    1f8a:	20 29       	or	r18, r0
    1f8c:	31 29       	or	r19, r1
    1f8e:	4a 2b       	or	r20, r26
    1f90:	a6 95       	lsr	r26
    1f92:	17 94       	ror	r1
    1f94:	07 94       	ror	r0
    1f96:	20 25       	eor	r18, r0
    1f98:	31 25       	eor	r19, r1
    1f9a:	4a 27       	eor	r20, r26
    1f9c:	58 f7       	brcc	.-42     	; 0x1f74 <sqrt+0x28>
    1f9e:	66 0f       	add	r22, r22
    1fa0:	77 1f       	adc	r23, r23
    1fa2:	88 1f       	adc	r24, r24
    1fa4:	20 f0       	brcs	.+8      	; 0x1fae <sqrt+0x62>
    1fa6:	26 17       	cp	r18, r22
    1fa8:	37 07       	cpc	r19, r23
    1faa:	48 07       	cpc	r20, r24
    1fac:	30 f4       	brcc	.+12     	; 0x1fba <sqrt+0x6e>
    1fae:	62 0b       	sbc	r22, r18
    1fb0:	73 0b       	sbc	r23, r19
    1fb2:	84 0b       	sbc	r24, r20
    1fb4:	20 0d       	add	r18, r0
    1fb6:	31 1d       	adc	r19, r1
    1fb8:	41 1d       	adc	r20, r1
    1fba:	a0 95       	com	r26
    1fbc:	81 f7       	brne	.-32     	; 0x1f9e <sqrt+0x52>
    1fbe:	b9 01       	movw	r22, r18
    1fc0:	84 2f       	mov	r24, r20
    1fc2:	91 58       	subi	r25, 0x81	; 129
    1fc4:	88 0f       	add	r24, r24
    1fc6:	96 95       	lsr	r25
    1fc8:	87 95       	ror	r24
    1fca:	08 95       	ret

00001fcc <__fp_mpack>:
    1fcc:	9f 3f       	cpi	r25, 0xFF	; 255
    1fce:	31 f0       	breq	.+12     	; 0x1fdc <__fp_mpack_finite+0xc>

00001fd0 <__fp_mpack_finite>:
    1fd0:	91 50       	subi	r25, 0x01	; 1
    1fd2:	20 f4       	brcc	.+8      	; 0x1fdc <__fp_mpack_finite+0xc>
    1fd4:	87 95       	ror	r24
    1fd6:	77 95       	ror	r23
    1fd8:	67 95       	ror	r22
    1fda:	b7 95       	ror	r27
    1fdc:	88 0f       	add	r24, r24
    1fde:	91 1d       	adc	r25, r1
    1fe0:	96 95       	lsr	r25
    1fe2:	87 95       	ror	r24
    1fe4:	97 f9       	bld	r25, 7
    1fe6:	08 95       	ret

00001fe8 <__fp_norm2>:
    1fe8:	91 50       	subi	r25, 0x01	; 1
    1fea:	50 40       	sbci	r21, 0x00	; 0
    1fec:	66 0f       	add	r22, r22
    1fee:	77 1f       	adc	r23, r23
    1ff0:	88 1f       	adc	r24, r24
    1ff2:	d2 f7       	brpl	.-12     	; 0x1fe8 <__fp_norm2>
    1ff4:	08 95       	ret

00001ff6 <__divmodhi4>:
    1ff6:	97 fb       	bst	r25, 7
    1ff8:	07 2e       	mov	r0, r23
    1ffa:	16 f4       	brtc	.+4      	; 0x2000 <__divmodhi4+0xa>
    1ffc:	00 94       	com	r0
    1ffe:	07 d0       	rcall	.+14     	; 0x200e <__divmodhi4_neg1>
    2000:	77 fd       	sbrc	r23, 7
    2002:	09 d0       	rcall	.+18     	; 0x2016 <__divmodhi4_neg2>
    2004:	0e 94 37 10 	call	0x206e	; 0x206e <__udivmodhi4>
    2008:	07 fc       	sbrc	r0, 7
    200a:	05 d0       	rcall	.+10     	; 0x2016 <__divmodhi4_neg2>
    200c:	3e f4       	brtc	.+14     	; 0x201c <__divmodhi4_exit>

0000200e <__divmodhi4_neg1>:
    200e:	90 95       	com	r25
    2010:	81 95       	neg	r24
    2012:	9f 4f       	sbci	r25, 0xFF	; 255
    2014:	08 95       	ret

00002016 <__divmodhi4_neg2>:
    2016:	70 95       	com	r23
    2018:	61 95       	neg	r22
    201a:	7f 4f       	sbci	r23, 0xFF	; 255

0000201c <__divmodhi4_exit>:
    201c:	08 95       	ret

0000201e <__udivmodsi4>:
    201e:	a1 e2       	ldi	r26, 0x21	; 33
    2020:	1a 2e       	mov	r1, r26
    2022:	aa 1b       	sub	r26, r26
    2024:	bb 1b       	sub	r27, r27
    2026:	fd 01       	movw	r30, r26
    2028:	0d c0       	rjmp	.+26     	; 0x2044 <__udivmodsi4_ep>

0000202a <__udivmodsi4_loop>:
    202a:	aa 1f       	adc	r26, r26
    202c:	bb 1f       	adc	r27, r27
    202e:	ee 1f       	adc	r30, r30
    2030:	ff 1f       	adc	r31, r31
    2032:	a2 17       	cp	r26, r18
    2034:	b3 07       	cpc	r27, r19
    2036:	e4 07       	cpc	r30, r20
    2038:	f5 07       	cpc	r31, r21
    203a:	20 f0       	brcs	.+8      	; 0x2044 <__udivmodsi4_ep>
    203c:	a2 1b       	sub	r26, r18
    203e:	b3 0b       	sbc	r27, r19
    2040:	e4 0b       	sbc	r30, r20
    2042:	f5 0b       	sbc	r31, r21

00002044 <__udivmodsi4_ep>:
    2044:	66 1f       	adc	r22, r22
    2046:	77 1f       	adc	r23, r23
    2048:	88 1f       	adc	r24, r24
    204a:	99 1f       	adc	r25, r25
    204c:	1a 94       	dec	r1
    204e:	69 f7       	brne	.-38     	; 0x202a <__udivmodsi4_loop>
    2050:	60 95       	com	r22
    2052:	70 95       	com	r23
    2054:	80 95       	com	r24
    2056:	90 95       	com	r25
    2058:	9b 01       	movw	r18, r22
    205a:	ac 01       	movw	r20, r24
    205c:	bd 01       	movw	r22, r26
    205e:	cf 01       	movw	r24, r30
    2060:	08 95       	ret

00002062 <__tablejump2__>:
    2062:	ee 0f       	add	r30, r30
    2064:	ff 1f       	adc	r31, r31
    2066:	05 90       	lpm	r0, Z+
    2068:	f4 91       	lpm	r31, Z
    206a:	e0 2d       	mov	r30, r0
    206c:	09 94       	ijmp

0000206e <__udivmodhi4>:
    206e:	aa 1b       	sub	r26, r26
    2070:	bb 1b       	sub	r27, r27
    2072:	51 e1       	ldi	r21, 0x11	; 17
    2074:	07 c0       	rjmp	.+14     	; 0x2084 <__udivmodhi4_ep>

00002076 <__udivmodhi4_loop>:
    2076:	aa 1f       	adc	r26, r26
    2078:	bb 1f       	adc	r27, r27
    207a:	a6 17       	cp	r26, r22
    207c:	b7 07       	cpc	r27, r23
    207e:	10 f0       	brcs	.+4      	; 0x2084 <__udivmodhi4_ep>
    2080:	a6 1b       	sub	r26, r22
    2082:	b7 0b       	sbc	r27, r23

00002084 <__udivmodhi4_ep>:
    2084:	88 1f       	adc	r24, r24
    2086:	99 1f       	adc	r25, r25
    2088:	5a 95       	dec	r21
    208a:	a9 f7       	brne	.-22     	; 0x2076 <__udivmodhi4_loop>
    208c:	80 95       	com	r24
    208e:	90 95       	com	r25
    2090:	bc 01       	movw	r22, r24
    2092:	cd 01       	movw	r24, r26
    2094:	08 95       	ret

00002096 <malloc>:
    2096:	0f 93       	push	r16
    2098:	1f 93       	push	r17
    209a:	cf 93       	push	r28
    209c:	df 93       	push	r29
    209e:	82 30       	cpi	r24, 0x02	; 2
    20a0:	91 05       	cpc	r25, r1
    20a2:	10 f4       	brcc	.+4      	; 0x20a8 <malloc+0x12>
    20a4:	82 e0       	ldi	r24, 0x02	; 2
    20a6:	90 e0       	ldi	r25, 0x00	; 0
    20a8:	e0 91 d6 04 	lds	r30, 0x04D6	; 0x8004d6 <__flp>
    20ac:	f0 91 d7 04 	lds	r31, 0x04D7	; 0x8004d7 <__flp+0x1>
    20b0:	20 e0       	ldi	r18, 0x00	; 0
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	a0 e0       	ldi	r26, 0x00	; 0
    20b6:	b0 e0       	ldi	r27, 0x00	; 0
    20b8:	30 97       	sbiw	r30, 0x00	; 0
    20ba:	19 f1       	breq	.+70     	; 0x2102 <malloc+0x6c>
    20bc:	40 81       	ld	r20, Z
    20be:	51 81       	ldd	r21, Z+1	; 0x01
    20c0:	02 81       	ldd	r16, Z+2	; 0x02
    20c2:	13 81       	ldd	r17, Z+3	; 0x03
    20c4:	48 17       	cp	r20, r24
    20c6:	59 07       	cpc	r21, r25
    20c8:	c8 f0       	brcs	.+50     	; 0x20fc <malloc+0x66>
    20ca:	84 17       	cp	r24, r20
    20cc:	95 07       	cpc	r25, r21
    20ce:	69 f4       	brne	.+26     	; 0x20ea <malloc+0x54>
    20d0:	10 97       	sbiw	r26, 0x00	; 0
    20d2:	31 f0       	breq	.+12     	; 0x20e0 <malloc+0x4a>
    20d4:	12 96       	adiw	r26, 0x02	; 2
    20d6:	0c 93       	st	X, r16
    20d8:	12 97       	sbiw	r26, 0x02	; 2
    20da:	13 96       	adiw	r26, 0x03	; 3
    20dc:	1c 93       	st	X, r17
    20de:	27 c0       	rjmp	.+78     	; 0x212e <malloc+0x98>
    20e0:	00 93 d6 04 	sts	0x04D6, r16	; 0x8004d6 <__flp>
    20e4:	10 93 d7 04 	sts	0x04D7, r17	; 0x8004d7 <__flp+0x1>
    20e8:	22 c0       	rjmp	.+68     	; 0x212e <malloc+0x98>
    20ea:	21 15       	cp	r18, r1
    20ec:	31 05       	cpc	r19, r1
    20ee:	19 f0       	breq	.+6      	; 0x20f6 <malloc+0x60>
    20f0:	42 17       	cp	r20, r18
    20f2:	53 07       	cpc	r21, r19
    20f4:	18 f4       	brcc	.+6      	; 0x20fc <malloc+0x66>
    20f6:	9a 01       	movw	r18, r20
    20f8:	bd 01       	movw	r22, r26
    20fa:	ef 01       	movw	r28, r30
    20fc:	df 01       	movw	r26, r30
    20fe:	f8 01       	movw	r30, r16
    2100:	db cf       	rjmp	.-74     	; 0x20b8 <malloc+0x22>
    2102:	21 15       	cp	r18, r1
    2104:	31 05       	cpc	r19, r1
    2106:	f9 f0       	breq	.+62     	; 0x2146 <malloc+0xb0>
    2108:	28 1b       	sub	r18, r24
    210a:	39 0b       	sbc	r19, r25
    210c:	24 30       	cpi	r18, 0x04	; 4
    210e:	31 05       	cpc	r19, r1
    2110:	80 f4       	brcc	.+32     	; 0x2132 <malloc+0x9c>
    2112:	8a 81       	ldd	r24, Y+2	; 0x02
    2114:	9b 81       	ldd	r25, Y+3	; 0x03
    2116:	61 15       	cp	r22, r1
    2118:	71 05       	cpc	r23, r1
    211a:	21 f0       	breq	.+8      	; 0x2124 <malloc+0x8e>
    211c:	fb 01       	movw	r30, r22
    211e:	93 83       	std	Z+3, r25	; 0x03
    2120:	82 83       	std	Z+2, r24	; 0x02
    2122:	04 c0       	rjmp	.+8      	; 0x212c <malloc+0x96>
    2124:	90 93 d7 04 	sts	0x04D7, r25	; 0x8004d7 <__flp+0x1>
    2128:	80 93 d6 04 	sts	0x04D6, r24	; 0x8004d6 <__flp>
    212c:	fe 01       	movw	r30, r28
    212e:	32 96       	adiw	r30, 0x02	; 2
    2130:	44 c0       	rjmp	.+136    	; 0x21ba <malloc+0x124>
    2132:	fe 01       	movw	r30, r28
    2134:	e2 0f       	add	r30, r18
    2136:	f3 1f       	adc	r31, r19
    2138:	81 93       	st	Z+, r24
    213a:	91 93       	st	Z+, r25
    213c:	22 50       	subi	r18, 0x02	; 2
    213e:	31 09       	sbc	r19, r1
    2140:	39 83       	std	Y+1, r19	; 0x01
    2142:	28 83       	st	Y, r18
    2144:	3a c0       	rjmp	.+116    	; 0x21ba <malloc+0x124>
    2146:	20 91 d4 04 	lds	r18, 0x04D4	; 0x8004d4 <__brkval>
    214a:	30 91 d5 04 	lds	r19, 0x04D5	; 0x8004d5 <__brkval+0x1>
    214e:	23 2b       	or	r18, r19
    2150:	41 f4       	brne	.+16     	; 0x2162 <malloc+0xcc>
    2152:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    2156:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    215a:	30 93 d5 04 	sts	0x04D5, r19	; 0x8004d5 <__brkval+0x1>
    215e:	20 93 d4 04 	sts	0x04D4, r18	; 0x8004d4 <__brkval>
    2162:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    2166:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    216a:	21 15       	cp	r18, r1
    216c:	31 05       	cpc	r19, r1
    216e:	41 f4       	brne	.+16     	; 0x2180 <malloc+0xea>
    2170:	2d b7       	in	r18, 0x3d	; 61
    2172:	3e b7       	in	r19, 0x3e	; 62
    2174:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    2178:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    217c:	24 1b       	sub	r18, r20
    217e:	35 0b       	sbc	r19, r21
    2180:	e0 91 d4 04 	lds	r30, 0x04D4	; 0x8004d4 <__brkval>
    2184:	f0 91 d5 04 	lds	r31, 0x04D5	; 0x8004d5 <__brkval+0x1>
    2188:	e2 17       	cp	r30, r18
    218a:	f3 07       	cpc	r31, r19
    218c:	a0 f4       	brcc	.+40     	; 0x21b6 <malloc+0x120>
    218e:	2e 1b       	sub	r18, r30
    2190:	3f 0b       	sbc	r19, r31
    2192:	28 17       	cp	r18, r24
    2194:	39 07       	cpc	r19, r25
    2196:	78 f0       	brcs	.+30     	; 0x21b6 <malloc+0x120>
    2198:	ac 01       	movw	r20, r24
    219a:	4e 5f       	subi	r20, 0xFE	; 254
    219c:	5f 4f       	sbci	r21, 0xFF	; 255
    219e:	24 17       	cp	r18, r20
    21a0:	35 07       	cpc	r19, r21
    21a2:	48 f0       	brcs	.+18     	; 0x21b6 <malloc+0x120>
    21a4:	4e 0f       	add	r20, r30
    21a6:	5f 1f       	adc	r21, r31
    21a8:	50 93 d5 04 	sts	0x04D5, r21	; 0x8004d5 <__brkval+0x1>
    21ac:	40 93 d4 04 	sts	0x04D4, r20	; 0x8004d4 <__brkval>
    21b0:	81 93       	st	Z+, r24
    21b2:	91 93       	st	Z+, r25
    21b4:	02 c0       	rjmp	.+4      	; 0x21ba <malloc+0x124>
    21b6:	e0 e0       	ldi	r30, 0x00	; 0
    21b8:	f0 e0       	ldi	r31, 0x00	; 0
    21ba:	cf 01       	movw	r24, r30
    21bc:	df 91       	pop	r29
    21be:	cf 91       	pop	r28
    21c0:	1f 91       	pop	r17
    21c2:	0f 91       	pop	r16
    21c4:	08 95       	ret

000021c6 <free>:
    21c6:	cf 93       	push	r28
    21c8:	df 93       	push	r29
    21ca:	00 97       	sbiw	r24, 0x00	; 0
    21cc:	09 f4       	brne	.+2      	; 0x21d0 <free+0xa>
    21ce:	81 c0       	rjmp	.+258    	; 0x22d2 <free+0x10c>
    21d0:	fc 01       	movw	r30, r24
    21d2:	32 97       	sbiw	r30, 0x02	; 2
    21d4:	13 82       	std	Z+3, r1	; 0x03
    21d6:	12 82       	std	Z+2, r1	; 0x02
    21d8:	a0 91 d6 04 	lds	r26, 0x04D6	; 0x8004d6 <__flp>
    21dc:	b0 91 d7 04 	lds	r27, 0x04D7	; 0x8004d7 <__flp+0x1>
    21e0:	10 97       	sbiw	r26, 0x00	; 0
    21e2:	81 f4       	brne	.+32     	; 0x2204 <free+0x3e>
    21e4:	20 81       	ld	r18, Z
    21e6:	31 81       	ldd	r19, Z+1	; 0x01
    21e8:	82 0f       	add	r24, r18
    21ea:	93 1f       	adc	r25, r19
    21ec:	20 91 d4 04 	lds	r18, 0x04D4	; 0x8004d4 <__brkval>
    21f0:	30 91 d5 04 	lds	r19, 0x04D5	; 0x8004d5 <__brkval+0x1>
    21f4:	28 17       	cp	r18, r24
    21f6:	39 07       	cpc	r19, r25
    21f8:	51 f5       	brne	.+84     	; 0x224e <free+0x88>
    21fa:	f0 93 d5 04 	sts	0x04D5, r31	; 0x8004d5 <__brkval+0x1>
    21fe:	e0 93 d4 04 	sts	0x04D4, r30	; 0x8004d4 <__brkval>
    2202:	67 c0       	rjmp	.+206    	; 0x22d2 <free+0x10c>
    2204:	ed 01       	movw	r28, r26
    2206:	20 e0       	ldi	r18, 0x00	; 0
    2208:	30 e0       	ldi	r19, 0x00	; 0
    220a:	ce 17       	cp	r28, r30
    220c:	df 07       	cpc	r29, r31
    220e:	40 f4       	brcc	.+16     	; 0x2220 <free+0x5a>
    2210:	4a 81       	ldd	r20, Y+2	; 0x02
    2212:	5b 81       	ldd	r21, Y+3	; 0x03
    2214:	9e 01       	movw	r18, r28
    2216:	41 15       	cp	r20, r1
    2218:	51 05       	cpc	r21, r1
    221a:	f1 f0       	breq	.+60     	; 0x2258 <free+0x92>
    221c:	ea 01       	movw	r28, r20
    221e:	f5 cf       	rjmp	.-22     	; 0x220a <free+0x44>
    2220:	d3 83       	std	Z+3, r29	; 0x03
    2222:	c2 83       	std	Z+2, r28	; 0x02
    2224:	40 81       	ld	r20, Z
    2226:	51 81       	ldd	r21, Z+1	; 0x01
    2228:	84 0f       	add	r24, r20
    222a:	95 1f       	adc	r25, r21
    222c:	c8 17       	cp	r28, r24
    222e:	d9 07       	cpc	r29, r25
    2230:	59 f4       	brne	.+22     	; 0x2248 <free+0x82>
    2232:	88 81       	ld	r24, Y
    2234:	99 81       	ldd	r25, Y+1	; 0x01
    2236:	84 0f       	add	r24, r20
    2238:	95 1f       	adc	r25, r21
    223a:	02 96       	adiw	r24, 0x02	; 2
    223c:	91 83       	std	Z+1, r25	; 0x01
    223e:	80 83       	st	Z, r24
    2240:	8a 81       	ldd	r24, Y+2	; 0x02
    2242:	9b 81       	ldd	r25, Y+3	; 0x03
    2244:	93 83       	std	Z+3, r25	; 0x03
    2246:	82 83       	std	Z+2, r24	; 0x02
    2248:	21 15       	cp	r18, r1
    224a:	31 05       	cpc	r19, r1
    224c:	29 f4       	brne	.+10     	; 0x2258 <free+0x92>
    224e:	f0 93 d7 04 	sts	0x04D7, r31	; 0x8004d7 <__flp+0x1>
    2252:	e0 93 d6 04 	sts	0x04D6, r30	; 0x8004d6 <__flp>
    2256:	3d c0       	rjmp	.+122    	; 0x22d2 <free+0x10c>
    2258:	e9 01       	movw	r28, r18
    225a:	fb 83       	std	Y+3, r31	; 0x03
    225c:	ea 83       	std	Y+2, r30	; 0x02
    225e:	49 91       	ld	r20, Y+
    2260:	59 91       	ld	r21, Y+
    2262:	c4 0f       	add	r28, r20
    2264:	d5 1f       	adc	r29, r21
    2266:	ec 17       	cp	r30, r28
    2268:	fd 07       	cpc	r31, r29
    226a:	61 f4       	brne	.+24     	; 0x2284 <free+0xbe>
    226c:	80 81       	ld	r24, Z
    226e:	91 81       	ldd	r25, Z+1	; 0x01
    2270:	84 0f       	add	r24, r20
    2272:	95 1f       	adc	r25, r21
    2274:	02 96       	adiw	r24, 0x02	; 2
    2276:	e9 01       	movw	r28, r18
    2278:	99 83       	std	Y+1, r25	; 0x01
    227a:	88 83       	st	Y, r24
    227c:	82 81       	ldd	r24, Z+2	; 0x02
    227e:	93 81       	ldd	r25, Z+3	; 0x03
    2280:	9b 83       	std	Y+3, r25	; 0x03
    2282:	8a 83       	std	Y+2, r24	; 0x02
    2284:	e0 e0       	ldi	r30, 0x00	; 0
    2286:	f0 e0       	ldi	r31, 0x00	; 0
    2288:	12 96       	adiw	r26, 0x02	; 2
    228a:	8d 91       	ld	r24, X+
    228c:	9c 91       	ld	r25, X
    228e:	13 97       	sbiw	r26, 0x03	; 3
    2290:	00 97       	sbiw	r24, 0x00	; 0
    2292:	19 f0       	breq	.+6      	; 0x229a <free+0xd4>
    2294:	fd 01       	movw	r30, r26
    2296:	dc 01       	movw	r26, r24
    2298:	f7 cf       	rjmp	.-18     	; 0x2288 <free+0xc2>
    229a:	8d 91       	ld	r24, X+
    229c:	9c 91       	ld	r25, X
    229e:	11 97       	sbiw	r26, 0x01	; 1
    22a0:	9d 01       	movw	r18, r26
    22a2:	2e 5f       	subi	r18, 0xFE	; 254
    22a4:	3f 4f       	sbci	r19, 0xFF	; 255
    22a6:	82 0f       	add	r24, r18
    22a8:	93 1f       	adc	r25, r19
    22aa:	20 91 d4 04 	lds	r18, 0x04D4	; 0x8004d4 <__brkval>
    22ae:	30 91 d5 04 	lds	r19, 0x04D5	; 0x8004d5 <__brkval+0x1>
    22b2:	28 17       	cp	r18, r24
    22b4:	39 07       	cpc	r19, r25
    22b6:	69 f4       	brne	.+26     	; 0x22d2 <free+0x10c>
    22b8:	30 97       	sbiw	r30, 0x00	; 0
    22ba:	29 f4       	brne	.+10     	; 0x22c6 <free+0x100>
    22bc:	10 92 d7 04 	sts	0x04D7, r1	; 0x8004d7 <__flp+0x1>
    22c0:	10 92 d6 04 	sts	0x04D6, r1	; 0x8004d6 <__flp>
    22c4:	02 c0       	rjmp	.+4      	; 0x22ca <free+0x104>
    22c6:	13 82       	std	Z+3, r1	; 0x03
    22c8:	12 82       	std	Z+2, r1	; 0x02
    22ca:	b0 93 d5 04 	sts	0x04D5, r27	; 0x8004d5 <__brkval+0x1>
    22ce:	a0 93 d4 04 	sts	0x04D4, r26	; 0x8004d4 <__brkval>
    22d2:	df 91       	pop	r29
    22d4:	cf 91       	pop	r28
    22d6:	08 95       	ret

000022d8 <atoi>:
    22d8:	fc 01       	movw	r30, r24
    22da:	88 27       	eor	r24, r24
    22dc:	99 27       	eor	r25, r25
    22de:	e8 94       	clt
    22e0:	21 91       	ld	r18, Z+
    22e2:	20 32       	cpi	r18, 0x20	; 32
    22e4:	e9 f3       	breq	.-6      	; 0x22e0 <atoi+0x8>
    22e6:	29 30       	cpi	r18, 0x09	; 9
    22e8:	10 f0       	brcs	.+4      	; 0x22ee <atoi+0x16>
    22ea:	2e 30       	cpi	r18, 0x0E	; 14
    22ec:	c8 f3       	brcs	.-14     	; 0x22e0 <atoi+0x8>
    22ee:	2b 32       	cpi	r18, 0x2B	; 43
    22f0:	41 f0       	breq	.+16     	; 0x2302 <atoi+0x2a>
    22f2:	2d 32       	cpi	r18, 0x2D	; 45
    22f4:	39 f4       	brne	.+14     	; 0x2304 <atoi+0x2c>
    22f6:	68 94       	set
    22f8:	04 c0       	rjmp	.+8      	; 0x2302 <atoi+0x2a>
    22fa:	0e 94 a7 11 	call	0x234e	; 0x234e <__mulhi_const_10>
    22fe:	82 0f       	add	r24, r18
    2300:	91 1d       	adc	r25, r1
    2302:	21 91       	ld	r18, Z+
    2304:	20 53       	subi	r18, 0x30	; 48
    2306:	2a 30       	cpi	r18, 0x0A	; 10
    2308:	c0 f3       	brcs	.-16     	; 0x22fa <atoi+0x22>
    230a:	1e f4       	brtc	.+6      	; 0x2312 <atoi+0x3a>
    230c:	90 95       	com	r25
    230e:	81 95       	neg	r24
    2310:	9f 4f       	sbci	r25, 0xFF	; 255
    2312:	08 95       	ret

00002314 <strcat>:
    2314:	fb 01       	movw	r30, r22
    2316:	dc 01       	movw	r26, r24
    2318:	0d 90       	ld	r0, X+
    231a:	00 20       	and	r0, r0
    231c:	e9 f7       	brne	.-6      	; 0x2318 <strcat+0x4>
    231e:	11 97       	sbiw	r26, 0x01	; 1
    2320:	01 90       	ld	r0, Z+
    2322:	0d 92       	st	X+, r0
    2324:	00 20       	and	r0, r0
    2326:	e1 f7       	brne	.-8      	; 0x2320 <strcat+0xc>
    2328:	08 95       	ret

0000232a <strcpy>:
    232a:	fb 01       	movw	r30, r22
    232c:	dc 01       	movw	r26, r24
    232e:	01 90       	ld	r0, Z+
    2330:	0d 92       	st	X+, r0
    2332:	00 20       	and	r0, r0
    2334:	e1 f7       	brne	.-8      	; 0x232e <strcpy+0x4>
    2336:	08 95       	ret

00002338 <__itoa_ncheck>:
    2338:	bb 27       	eor	r27, r27
    233a:	4a 30       	cpi	r20, 0x0A	; 10
    233c:	31 f4       	brne	.+12     	; 0x234a <__itoa_ncheck+0x12>
    233e:	99 23       	and	r25, r25
    2340:	22 f4       	brpl	.+8      	; 0x234a <__itoa_ncheck+0x12>
    2342:	bd e2       	ldi	r27, 0x2D	; 45
    2344:	90 95       	com	r25
    2346:	81 95       	neg	r24
    2348:	9f 4f       	sbci	r25, 0xFF	; 255
    234a:	0c 94 b0 11 	jmp	0x2360	; 0x2360 <__utoa_common>

0000234e <__mulhi_const_10>:
    234e:	7a e0       	ldi	r23, 0x0A	; 10
    2350:	97 9f       	mul	r25, r23
    2352:	90 2d       	mov	r25, r0
    2354:	87 9f       	mul	r24, r23
    2356:	80 2d       	mov	r24, r0
    2358:	91 0d       	add	r25, r1
    235a:	11 24       	eor	r1, r1
    235c:	08 95       	ret

0000235e <__utoa_ncheck>:
    235e:	bb 27       	eor	r27, r27

00002360 <__utoa_common>:
    2360:	fb 01       	movw	r30, r22
    2362:	55 27       	eor	r21, r21
    2364:	aa 27       	eor	r26, r26
    2366:	88 0f       	add	r24, r24
    2368:	99 1f       	adc	r25, r25
    236a:	aa 1f       	adc	r26, r26
    236c:	a4 17       	cp	r26, r20
    236e:	10 f0       	brcs	.+4      	; 0x2374 <__utoa_common+0x14>
    2370:	a4 1b       	sub	r26, r20
    2372:	83 95       	inc	r24
    2374:	50 51       	subi	r21, 0x10	; 16
    2376:	b9 f7       	brne	.-18     	; 0x2366 <__utoa_common+0x6>
    2378:	a0 5d       	subi	r26, 0xD0	; 208
    237a:	aa 33       	cpi	r26, 0x3A	; 58
    237c:	08 f0       	brcs	.+2      	; 0x2380 <__utoa_common+0x20>
    237e:	a9 5d       	subi	r26, 0xD9	; 217
    2380:	a1 93       	st	Z+, r26
    2382:	00 97       	sbiw	r24, 0x00	; 0
    2384:	79 f7       	brne	.-34     	; 0x2364 <__utoa_common+0x4>
    2386:	b1 11       	cpse	r27, r1
    2388:	b1 93       	st	Z+, r27
    238a:	11 92       	st	Z+, r1
    238c:	cb 01       	movw	r24, r22
    238e:	0c 94 e2 13 	jmp	0x27c4	; 0x27c4 <strrev>

00002392 <sprintf>:
    2392:	ae e0       	ldi	r26, 0x0E	; 14
    2394:	b0 e0       	ldi	r27, 0x00	; 0
    2396:	ef ec       	ldi	r30, 0xCF	; 207
    2398:	f1 e1       	ldi	r31, 0x11	; 17
    239a:	0c 94 9a 14 	jmp	0x2934	; 0x2934 <__prologue_saves__+0x1c>
    239e:	0d 89       	ldd	r16, Y+21	; 0x15
    23a0:	1e 89       	ldd	r17, Y+22	; 0x16
    23a2:	86 e0       	ldi	r24, 0x06	; 6
    23a4:	8c 83       	std	Y+4, r24	; 0x04
    23a6:	1a 83       	std	Y+2, r17	; 0x02
    23a8:	09 83       	std	Y+1, r16	; 0x01
    23aa:	8f ef       	ldi	r24, 0xFF	; 255
    23ac:	9f e7       	ldi	r25, 0x7F	; 127
    23ae:	9e 83       	std	Y+6, r25	; 0x06
    23b0:	8d 83       	std	Y+5, r24	; 0x05
    23b2:	ae 01       	movw	r20, r28
    23b4:	47 5e       	subi	r20, 0xE7	; 231
    23b6:	5f 4f       	sbci	r21, 0xFF	; 255
    23b8:	6f 89       	ldd	r22, Y+23	; 0x17
    23ba:	78 8d       	ldd	r23, Y+24	; 0x18
    23bc:	ce 01       	movw	r24, r28
    23be:	01 96       	adiw	r24, 0x01	; 1
    23c0:	0e 94 eb 11 	call	0x23d6	; 0x23d6 <vfprintf>
    23c4:	ef 81       	ldd	r30, Y+7	; 0x07
    23c6:	f8 85       	ldd	r31, Y+8	; 0x08
    23c8:	e0 0f       	add	r30, r16
    23ca:	f1 1f       	adc	r31, r17
    23cc:	10 82       	st	Z, r1
    23ce:	2e 96       	adiw	r28, 0x0e	; 14
    23d0:	e4 e0       	ldi	r30, 0x04	; 4
    23d2:	0c 94 b6 14 	jmp	0x296c	; 0x296c <__epilogue_restores__+0x1c>

000023d6 <vfprintf>:
    23d6:	ab e0       	ldi	r26, 0x0B	; 11
    23d8:	b0 e0       	ldi	r27, 0x00	; 0
    23da:	e1 ef       	ldi	r30, 0xF1	; 241
    23dc:	f1 e1       	ldi	r31, 0x11	; 17
    23de:	0c 94 8c 14 	jmp	0x2918	; 0x2918 <__prologue_saves__>
    23e2:	6c 01       	movw	r12, r24
    23e4:	7b 01       	movw	r14, r22
    23e6:	8a 01       	movw	r16, r20
    23e8:	fc 01       	movw	r30, r24
    23ea:	17 82       	std	Z+7, r1	; 0x07
    23ec:	16 82       	std	Z+6, r1	; 0x06
    23ee:	83 81       	ldd	r24, Z+3	; 0x03
    23f0:	81 ff       	sbrs	r24, 1
    23f2:	cc c1       	rjmp	.+920    	; 0x278c <vfprintf+0x3b6>
    23f4:	ce 01       	movw	r24, r28
    23f6:	01 96       	adiw	r24, 0x01	; 1
    23f8:	3c 01       	movw	r6, r24
    23fa:	f6 01       	movw	r30, r12
    23fc:	93 81       	ldd	r25, Z+3	; 0x03
    23fe:	f7 01       	movw	r30, r14
    2400:	93 fd       	sbrc	r25, 3
    2402:	85 91       	lpm	r24, Z+
    2404:	93 ff       	sbrs	r25, 3
    2406:	81 91       	ld	r24, Z+
    2408:	7f 01       	movw	r14, r30
    240a:	88 23       	and	r24, r24
    240c:	09 f4       	brne	.+2      	; 0x2410 <vfprintf+0x3a>
    240e:	ba c1       	rjmp	.+884    	; 0x2784 <vfprintf+0x3ae>
    2410:	85 32       	cpi	r24, 0x25	; 37
    2412:	39 f4       	brne	.+14     	; 0x2422 <vfprintf+0x4c>
    2414:	93 fd       	sbrc	r25, 3
    2416:	85 91       	lpm	r24, Z+
    2418:	93 ff       	sbrs	r25, 3
    241a:	81 91       	ld	r24, Z+
    241c:	7f 01       	movw	r14, r30
    241e:	85 32       	cpi	r24, 0x25	; 37
    2420:	29 f4       	brne	.+10     	; 0x242c <vfprintf+0x56>
    2422:	b6 01       	movw	r22, r12
    2424:	90 e0       	ldi	r25, 0x00	; 0
    2426:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    242a:	e7 cf       	rjmp	.-50     	; 0x23fa <vfprintf+0x24>
    242c:	91 2c       	mov	r9, r1
    242e:	21 2c       	mov	r2, r1
    2430:	31 2c       	mov	r3, r1
    2432:	ff e1       	ldi	r31, 0x1F	; 31
    2434:	f3 15       	cp	r31, r3
    2436:	d8 f0       	brcs	.+54     	; 0x246e <vfprintf+0x98>
    2438:	8b 32       	cpi	r24, 0x2B	; 43
    243a:	79 f0       	breq	.+30     	; 0x245a <vfprintf+0x84>
    243c:	38 f4       	brcc	.+14     	; 0x244c <vfprintf+0x76>
    243e:	80 32       	cpi	r24, 0x20	; 32
    2440:	79 f0       	breq	.+30     	; 0x2460 <vfprintf+0x8a>
    2442:	83 32       	cpi	r24, 0x23	; 35
    2444:	a1 f4       	brne	.+40     	; 0x246e <vfprintf+0x98>
    2446:	23 2d       	mov	r18, r3
    2448:	20 61       	ori	r18, 0x10	; 16
    244a:	1d c0       	rjmp	.+58     	; 0x2486 <vfprintf+0xb0>
    244c:	8d 32       	cpi	r24, 0x2D	; 45
    244e:	61 f0       	breq	.+24     	; 0x2468 <vfprintf+0x92>
    2450:	80 33       	cpi	r24, 0x30	; 48
    2452:	69 f4       	brne	.+26     	; 0x246e <vfprintf+0x98>
    2454:	23 2d       	mov	r18, r3
    2456:	21 60       	ori	r18, 0x01	; 1
    2458:	16 c0       	rjmp	.+44     	; 0x2486 <vfprintf+0xb0>
    245a:	83 2d       	mov	r24, r3
    245c:	82 60       	ori	r24, 0x02	; 2
    245e:	38 2e       	mov	r3, r24
    2460:	e3 2d       	mov	r30, r3
    2462:	e4 60       	ori	r30, 0x04	; 4
    2464:	3e 2e       	mov	r3, r30
    2466:	2a c0       	rjmp	.+84     	; 0x24bc <vfprintf+0xe6>
    2468:	f3 2d       	mov	r31, r3
    246a:	f8 60       	ori	r31, 0x08	; 8
    246c:	1d c0       	rjmp	.+58     	; 0x24a8 <vfprintf+0xd2>
    246e:	37 fc       	sbrc	r3, 7
    2470:	2d c0       	rjmp	.+90     	; 0x24cc <vfprintf+0xf6>
    2472:	20 ed       	ldi	r18, 0xD0	; 208
    2474:	28 0f       	add	r18, r24
    2476:	2a 30       	cpi	r18, 0x0A	; 10
    2478:	40 f0       	brcs	.+16     	; 0x248a <vfprintf+0xb4>
    247a:	8e 32       	cpi	r24, 0x2E	; 46
    247c:	b9 f4       	brne	.+46     	; 0x24ac <vfprintf+0xd6>
    247e:	36 fc       	sbrc	r3, 6
    2480:	81 c1       	rjmp	.+770    	; 0x2784 <vfprintf+0x3ae>
    2482:	23 2d       	mov	r18, r3
    2484:	20 64       	ori	r18, 0x40	; 64
    2486:	32 2e       	mov	r3, r18
    2488:	19 c0       	rjmp	.+50     	; 0x24bc <vfprintf+0xe6>
    248a:	36 fe       	sbrs	r3, 6
    248c:	06 c0       	rjmp	.+12     	; 0x249a <vfprintf+0xc4>
    248e:	8a e0       	ldi	r24, 0x0A	; 10
    2490:	98 9e       	mul	r9, r24
    2492:	20 0d       	add	r18, r0
    2494:	11 24       	eor	r1, r1
    2496:	92 2e       	mov	r9, r18
    2498:	11 c0       	rjmp	.+34     	; 0x24bc <vfprintf+0xe6>
    249a:	ea e0       	ldi	r30, 0x0A	; 10
    249c:	2e 9e       	mul	r2, r30
    249e:	20 0d       	add	r18, r0
    24a0:	11 24       	eor	r1, r1
    24a2:	22 2e       	mov	r2, r18
    24a4:	f3 2d       	mov	r31, r3
    24a6:	f0 62       	ori	r31, 0x20	; 32
    24a8:	3f 2e       	mov	r3, r31
    24aa:	08 c0       	rjmp	.+16     	; 0x24bc <vfprintf+0xe6>
    24ac:	8c 36       	cpi	r24, 0x6C	; 108
    24ae:	21 f4       	brne	.+8      	; 0x24b8 <vfprintf+0xe2>
    24b0:	83 2d       	mov	r24, r3
    24b2:	80 68       	ori	r24, 0x80	; 128
    24b4:	38 2e       	mov	r3, r24
    24b6:	02 c0       	rjmp	.+4      	; 0x24bc <vfprintf+0xe6>
    24b8:	88 36       	cpi	r24, 0x68	; 104
    24ba:	41 f4       	brne	.+16     	; 0x24cc <vfprintf+0xf6>
    24bc:	f7 01       	movw	r30, r14
    24be:	93 fd       	sbrc	r25, 3
    24c0:	85 91       	lpm	r24, Z+
    24c2:	93 ff       	sbrs	r25, 3
    24c4:	81 91       	ld	r24, Z+
    24c6:	7f 01       	movw	r14, r30
    24c8:	81 11       	cpse	r24, r1
    24ca:	b3 cf       	rjmp	.-154    	; 0x2432 <vfprintf+0x5c>
    24cc:	98 2f       	mov	r25, r24
    24ce:	9f 7d       	andi	r25, 0xDF	; 223
    24d0:	95 54       	subi	r25, 0x45	; 69
    24d2:	93 30       	cpi	r25, 0x03	; 3
    24d4:	28 f4       	brcc	.+10     	; 0x24e0 <vfprintf+0x10a>
    24d6:	0c 5f       	subi	r16, 0xFC	; 252
    24d8:	1f 4f       	sbci	r17, 0xFF	; 255
    24da:	9f e3       	ldi	r25, 0x3F	; 63
    24dc:	99 83       	std	Y+1, r25	; 0x01
    24de:	0d c0       	rjmp	.+26     	; 0x24fa <vfprintf+0x124>
    24e0:	83 36       	cpi	r24, 0x63	; 99
    24e2:	31 f0       	breq	.+12     	; 0x24f0 <vfprintf+0x11a>
    24e4:	83 37       	cpi	r24, 0x73	; 115
    24e6:	71 f0       	breq	.+28     	; 0x2504 <vfprintf+0x12e>
    24e8:	83 35       	cpi	r24, 0x53	; 83
    24ea:	09 f0       	breq	.+2      	; 0x24ee <vfprintf+0x118>
    24ec:	59 c0       	rjmp	.+178    	; 0x25a0 <vfprintf+0x1ca>
    24ee:	21 c0       	rjmp	.+66     	; 0x2532 <vfprintf+0x15c>
    24f0:	f8 01       	movw	r30, r16
    24f2:	80 81       	ld	r24, Z
    24f4:	89 83       	std	Y+1, r24	; 0x01
    24f6:	0e 5f       	subi	r16, 0xFE	; 254
    24f8:	1f 4f       	sbci	r17, 0xFF	; 255
    24fa:	88 24       	eor	r8, r8
    24fc:	83 94       	inc	r8
    24fe:	91 2c       	mov	r9, r1
    2500:	53 01       	movw	r10, r6
    2502:	13 c0       	rjmp	.+38     	; 0x252a <vfprintf+0x154>
    2504:	28 01       	movw	r4, r16
    2506:	f2 e0       	ldi	r31, 0x02	; 2
    2508:	4f 0e       	add	r4, r31
    250a:	51 1c       	adc	r5, r1
    250c:	f8 01       	movw	r30, r16
    250e:	a0 80       	ld	r10, Z
    2510:	b1 80       	ldd	r11, Z+1	; 0x01
    2512:	36 fe       	sbrs	r3, 6
    2514:	03 c0       	rjmp	.+6      	; 0x251c <vfprintf+0x146>
    2516:	69 2d       	mov	r22, r9
    2518:	70 e0       	ldi	r23, 0x00	; 0
    251a:	02 c0       	rjmp	.+4      	; 0x2520 <vfprintf+0x14a>
    251c:	6f ef       	ldi	r22, 0xFF	; 255
    251e:	7f ef       	ldi	r23, 0xFF	; 255
    2520:	c5 01       	movw	r24, r10
    2522:	0e 94 d7 13 	call	0x27ae	; 0x27ae <strnlen>
    2526:	4c 01       	movw	r8, r24
    2528:	82 01       	movw	r16, r4
    252a:	f3 2d       	mov	r31, r3
    252c:	ff 77       	andi	r31, 0x7F	; 127
    252e:	3f 2e       	mov	r3, r31
    2530:	16 c0       	rjmp	.+44     	; 0x255e <vfprintf+0x188>
    2532:	28 01       	movw	r4, r16
    2534:	22 e0       	ldi	r18, 0x02	; 2
    2536:	42 0e       	add	r4, r18
    2538:	51 1c       	adc	r5, r1
    253a:	f8 01       	movw	r30, r16
    253c:	a0 80       	ld	r10, Z
    253e:	b1 80       	ldd	r11, Z+1	; 0x01
    2540:	36 fe       	sbrs	r3, 6
    2542:	03 c0       	rjmp	.+6      	; 0x254a <vfprintf+0x174>
    2544:	69 2d       	mov	r22, r9
    2546:	70 e0       	ldi	r23, 0x00	; 0
    2548:	02 c0       	rjmp	.+4      	; 0x254e <vfprintf+0x178>
    254a:	6f ef       	ldi	r22, 0xFF	; 255
    254c:	7f ef       	ldi	r23, 0xFF	; 255
    254e:	c5 01       	movw	r24, r10
    2550:	0e 94 cc 13 	call	0x2798	; 0x2798 <strnlen_P>
    2554:	4c 01       	movw	r8, r24
    2556:	f3 2d       	mov	r31, r3
    2558:	f0 68       	ori	r31, 0x80	; 128
    255a:	3f 2e       	mov	r3, r31
    255c:	82 01       	movw	r16, r4
    255e:	33 fc       	sbrc	r3, 3
    2560:	1b c0       	rjmp	.+54     	; 0x2598 <vfprintf+0x1c2>
    2562:	82 2d       	mov	r24, r2
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	88 16       	cp	r8, r24
    2568:	99 06       	cpc	r9, r25
    256a:	b0 f4       	brcc	.+44     	; 0x2598 <vfprintf+0x1c2>
    256c:	b6 01       	movw	r22, r12
    256e:	80 e2       	ldi	r24, 0x20	; 32
    2570:	90 e0       	ldi	r25, 0x00	; 0
    2572:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2576:	2a 94       	dec	r2
    2578:	f4 cf       	rjmp	.-24     	; 0x2562 <vfprintf+0x18c>
    257a:	f5 01       	movw	r30, r10
    257c:	37 fc       	sbrc	r3, 7
    257e:	85 91       	lpm	r24, Z+
    2580:	37 fe       	sbrs	r3, 7
    2582:	81 91       	ld	r24, Z+
    2584:	5f 01       	movw	r10, r30
    2586:	b6 01       	movw	r22, r12
    2588:	90 e0       	ldi	r25, 0x00	; 0
    258a:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    258e:	21 10       	cpse	r2, r1
    2590:	2a 94       	dec	r2
    2592:	21 e0       	ldi	r18, 0x01	; 1
    2594:	82 1a       	sub	r8, r18
    2596:	91 08       	sbc	r9, r1
    2598:	81 14       	cp	r8, r1
    259a:	91 04       	cpc	r9, r1
    259c:	71 f7       	brne	.-36     	; 0x257a <vfprintf+0x1a4>
    259e:	e8 c0       	rjmp	.+464    	; 0x2770 <vfprintf+0x39a>
    25a0:	84 36       	cpi	r24, 0x64	; 100
    25a2:	11 f0       	breq	.+4      	; 0x25a8 <vfprintf+0x1d2>
    25a4:	89 36       	cpi	r24, 0x69	; 105
    25a6:	41 f5       	brne	.+80     	; 0x25f8 <vfprintf+0x222>
    25a8:	f8 01       	movw	r30, r16
    25aa:	37 fe       	sbrs	r3, 7
    25ac:	07 c0       	rjmp	.+14     	; 0x25bc <vfprintf+0x1e6>
    25ae:	60 81       	ld	r22, Z
    25b0:	71 81       	ldd	r23, Z+1	; 0x01
    25b2:	82 81       	ldd	r24, Z+2	; 0x02
    25b4:	93 81       	ldd	r25, Z+3	; 0x03
    25b6:	0c 5f       	subi	r16, 0xFC	; 252
    25b8:	1f 4f       	sbci	r17, 0xFF	; 255
    25ba:	08 c0       	rjmp	.+16     	; 0x25cc <vfprintf+0x1f6>
    25bc:	60 81       	ld	r22, Z
    25be:	71 81       	ldd	r23, Z+1	; 0x01
    25c0:	07 2e       	mov	r0, r23
    25c2:	00 0c       	add	r0, r0
    25c4:	88 0b       	sbc	r24, r24
    25c6:	99 0b       	sbc	r25, r25
    25c8:	0e 5f       	subi	r16, 0xFE	; 254
    25ca:	1f 4f       	sbci	r17, 0xFF	; 255
    25cc:	f3 2d       	mov	r31, r3
    25ce:	ff 76       	andi	r31, 0x6F	; 111
    25d0:	3f 2e       	mov	r3, r31
    25d2:	97 ff       	sbrs	r25, 7
    25d4:	09 c0       	rjmp	.+18     	; 0x25e8 <vfprintf+0x212>
    25d6:	90 95       	com	r25
    25d8:	80 95       	com	r24
    25da:	70 95       	com	r23
    25dc:	61 95       	neg	r22
    25de:	7f 4f       	sbci	r23, 0xFF	; 255
    25e0:	8f 4f       	sbci	r24, 0xFF	; 255
    25e2:	9f 4f       	sbci	r25, 0xFF	; 255
    25e4:	f0 68       	ori	r31, 0x80	; 128
    25e6:	3f 2e       	mov	r3, r31
    25e8:	2a e0       	ldi	r18, 0x0A	; 10
    25ea:	30 e0       	ldi	r19, 0x00	; 0
    25ec:	a3 01       	movw	r20, r6
    25ee:	0e 94 2e 14 	call	0x285c	; 0x285c <__ultoa_invert>
    25f2:	88 2e       	mov	r8, r24
    25f4:	86 18       	sub	r8, r6
    25f6:	45 c0       	rjmp	.+138    	; 0x2682 <vfprintf+0x2ac>
    25f8:	85 37       	cpi	r24, 0x75	; 117
    25fa:	31 f4       	brne	.+12     	; 0x2608 <vfprintf+0x232>
    25fc:	23 2d       	mov	r18, r3
    25fe:	2f 7e       	andi	r18, 0xEF	; 239
    2600:	b2 2e       	mov	r11, r18
    2602:	2a e0       	ldi	r18, 0x0A	; 10
    2604:	30 e0       	ldi	r19, 0x00	; 0
    2606:	25 c0       	rjmp	.+74     	; 0x2652 <vfprintf+0x27c>
    2608:	93 2d       	mov	r25, r3
    260a:	99 7f       	andi	r25, 0xF9	; 249
    260c:	b9 2e       	mov	r11, r25
    260e:	8f 36       	cpi	r24, 0x6F	; 111
    2610:	c1 f0       	breq	.+48     	; 0x2642 <vfprintf+0x26c>
    2612:	18 f4       	brcc	.+6      	; 0x261a <vfprintf+0x244>
    2614:	88 35       	cpi	r24, 0x58	; 88
    2616:	79 f0       	breq	.+30     	; 0x2636 <vfprintf+0x260>
    2618:	b5 c0       	rjmp	.+362    	; 0x2784 <vfprintf+0x3ae>
    261a:	80 37       	cpi	r24, 0x70	; 112
    261c:	19 f0       	breq	.+6      	; 0x2624 <vfprintf+0x24e>
    261e:	88 37       	cpi	r24, 0x78	; 120
    2620:	21 f0       	breq	.+8      	; 0x262a <vfprintf+0x254>
    2622:	b0 c0       	rjmp	.+352    	; 0x2784 <vfprintf+0x3ae>
    2624:	e9 2f       	mov	r30, r25
    2626:	e0 61       	ori	r30, 0x10	; 16
    2628:	be 2e       	mov	r11, r30
    262a:	b4 fe       	sbrs	r11, 4
    262c:	0d c0       	rjmp	.+26     	; 0x2648 <vfprintf+0x272>
    262e:	fb 2d       	mov	r31, r11
    2630:	f4 60       	ori	r31, 0x04	; 4
    2632:	bf 2e       	mov	r11, r31
    2634:	09 c0       	rjmp	.+18     	; 0x2648 <vfprintf+0x272>
    2636:	34 fe       	sbrs	r3, 4
    2638:	0a c0       	rjmp	.+20     	; 0x264e <vfprintf+0x278>
    263a:	29 2f       	mov	r18, r25
    263c:	26 60       	ori	r18, 0x06	; 6
    263e:	b2 2e       	mov	r11, r18
    2640:	06 c0       	rjmp	.+12     	; 0x264e <vfprintf+0x278>
    2642:	28 e0       	ldi	r18, 0x08	; 8
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	05 c0       	rjmp	.+10     	; 0x2652 <vfprintf+0x27c>
    2648:	20 e1       	ldi	r18, 0x10	; 16
    264a:	30 e0       	ldi	r19, 0x00	; 0
    264c:	02 c0       	rjmp	.+4      	; 0x2652 <vfprintf+0x27c>
    264e:	20 e1       	ldi	r18, 0x10	; 16
    2650:	32 e0       	ldi	r19, 0x02	; 2
    2652:	f8 01       	movw	r30, r16
    2654:	b7 fe       	sbrs	r11, 7
    2656:	07 c0       	rjmp	.+14     	; 0x2666 <vfprintf+0x290>
    2658:	60 81       	ld	r22, Z
    265a:	71 81       	ldd	r23, Z+1	; 0x01
    265c:	82 81       	ldd	r24, Z+2	; 0x02
    265e:	93 81       	ldd	r25, Z+3	; 0x03
    2660:	0c 5f       	subi	r16, 0xFC	; 252
    2662:	1f 4f       	sbci	r17, 0xFF	; 255
    2664:	06 c0       	rjmp	.+12     	; 0x2672 <vfprintf+0x29c>
    2666:	60 81       	ld	r22, Z
    2668:	71 81       	ldd	r23, Z+1	; 0x01
    266a:	80 e0       	ldi	r24, 0x00	; 0
    266c:	90 e0       	ldi	r25, 0x00	; 0
    266e:	0e 5f       	subi	r16, 0xFE	; 254
    2670:	1f 4f       	sbci	r17, 0xFF	; 255
    2672:	a3 01       	movw	r20, r6
    2674:	0e 94 2e 14 	call	0x285c	; 0x285c <__ultoa_invert>
    2678:	88 2e       	mov	r8, r24
    267a:	86 18       	sub	r8, r6
    267c:	fb 2d       	mov	r31, r11
    267e:	ff 77       	andi	r31, 0x7F	; 127
    2680:	3f 2e       	mov	r3, r31
    2682:	36 fe       	sbrs	r3, 6
    2684:	0d c0       	rjmp	.+26     	; 0x26a0 <vfprintf+0x2ca>
    2686:	23 2d       	mov	r18, r3
    2688:	2e 7f       	andi	r18, 0xFE	; 254
    268a:	a2 2e       	mov	r10, r18
    268c:	89 14       	cp	r8, r9
    268e:	58 f4       	brcc	.+22     	; 0x26a6 <vfprintf+0x2d0>
    2690:	34 fe       	sbrs	r3, 4
    2692:	0b c0       	rjmp	.+22     	; 0x26aa <vfprintf+0x2d4>
    2694:	32 fc       	sbrc	r3, 2
    2696:	09 c0       	rjmp	.+18     	; 0x26aa <vfprintf+0x2d4>
    2698:	83 2d       	mov	r24, r3
    269a:	8e 7e       	andi	r24, 0xEE	; 238
    269c:	a8 2e       	mov	r10, r24
    269e:	05 c0       	rjmp	.+10     	; 0x26aa <vfprintf+0x2d4>
    26a0:	b8 2c       	mov	r11, r8
    26a2:	a3 2c       	mov	r10, r3
    26a4:	03 c0       	rjmp	.+6      	; 0x26ac <vfprintf+0x2d6>
    26a6:	b8 2c       	mov	r11, r8
    26a8:	01 c0       	rjmp	.+2      	; 0x26ac <vfprintf+0x2d6>
    26aa:	b9 2c       	mov	r11, r9
    26ac:	a4 fe       	sbrs	r10, 4
    26ae:	0f c0       	rjmp	.+30     	; 0x26ce <vfprintf+0x2f8>
    26b0:	fe 01       	movw	r30, r28
    26b2:	e8 0d       	add	r30, r8
    26b4:	f1 1d       	adc	r31, r1
    26b6:	80 81       	ld	r24, Z
    26b8:	80 33       	cpi	r24, 0x30	; 48
    26ba:	21 f4       	brne	.+8      	; 0x26c4 <vfprintf+0x2ee>
    26bc:	9a 2d       	mov	r25, r10
    26be:	99 7e       	andi	r25, 0xE9	; 233
    26c0:	a9 2e       	mov	r10, r25
    26c2:	09 c0       	rjmp	.+18     	; 0x26d6 <vfprintf+0x300>
    26c4:	a2 fe       	sbrs	r10, 2
    26c6:	06 c0       	rjmp	.+12     	; 0x26d4 <vfprintf+0x2fe>
    26c8:	b3 94       	inc	r11
    26ca:	b3 94       	inc	r11
    26cc:	04 c0       	rjmp	.+8      	; 0x26d6 <vfprintf+0x300>
    26ce:	8a 2d       	mov	r24, r10
    26d0:	86 78       	andi	r24, 0x86	; 134
    26d2:	09 f0       	breq	.+2      	; 0x26d6 <vfprintf+0x300>
    26d4:	b3 94       	inc	r11
    26d6:	a3 fc       	sbrc	r10, 3
    26d8:	11 c0       	rjmp	.+34     	; 0x26fc <vfprintf+0x326>
    26da:	a0 fe       	sbrs	r10, 0
    26dc:	06 c0       	rjmp	.+12     	; 0x26ea <vfprintf+0x314>
    26de:	b2 14       	cp	r11, r2
    26e0:	88 f4       	brcc	.+34     	; 0x2704 <vfprintf+0x32e>
    26e2:	28 0c       	add	r2, r8
    26e4:	92 2c       	mov	r9, r2
    26e6:	9b 18       	sub	r9, r11
    26e8:	0e c0       	rjmp	.+28     	; 0x2706 <vfprintf+0x330>
    26ea:	b2 14       	cp	r11, r2
    26ec:	60 f4       	brcc	.+24     	; 0x2706 <vfprintf+0x330>
    26ee:	b6 01       	movw	r22, r12
    26f0:	80 e2       	ldi	r24, 0x20	; 32
    26f2:	90 e0       	ldi	r25, 0x00	; 0
    26f4:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    26f8:	b3 94       	inc	r11
    26fa:	f7 cf       	rjmp	.-18     	; 0x26ea <vfprintf+0x314>
    26fc:	b2 14       	cp	r11, r2
    26fe:	18 f4       	brcc	.+6      	; 0x2706 <vfprintf+0x330>
    2700:	2b 18       	sub	r2, r11
    2702:	02 c0       	rjmp	.+4      	; 0x2708 <vfprintf+0x332>
    2704:	98 2c       	mov	r9, r8
    2706:	21 2c       	mov	r2, r1
    2708:	a4 fe       	sbrs	r10, 4
    270a:	10 c0       	rjmp	.+32     	; 0x272c <vfprintf+0x356>
    270c:	b6 01       	movw	r22, r12
    270e:	80 e3       	ldi	r24, 0x30	; 48
    2710:	90 e0       	ldi	r25, 0x00	; 0
    2712:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2716:	a2 fe       	sbrs	r10, 2
    2718:	17 c0       	rjmp	.+46     	; 0x2748 <vfprintf+0x372>
    271a:	a1 fc       	sbrc	r10, 1
    271c:	03 c0       	rjmp	.+6      	; 0x2724 <vfprintf+0x34e>
    271e:	88 e7       	ldi	r24, 0x78	; 120
    2720:	90 e0       	ldi	r25, 0x00	; 0
    2722:	02 c0       	rjmp	.+4      	; 0x2728 <vfprintf+0x352>
    2724:	88 e5       	ldi	r24, 0x58	; 88
    2726:	90 e0       	ldi	r25, 0x00	; 0
    2728:	b6 01       	movw	r22, r12
    272a:	0c c0       	rjmp	.+24     	; 0x2744 <vfprintf+0x36e>
    272c:	8a 2d       	mov	r24, r10
    272e:	86 78       	andi	r24, 0x86	; 134
    2730:	59 f0       	breq	.+22     	; 0x2748 <vfprintf+0x372>
    2732:	a1 fe       	sbrs	r10, 1
    2734:	02 c0       	rjmp	.+4      	; 0x273a <vfprintf+0x364>
    2736:	8b e2       	ldi	r24, 0x2B	; 43
    2738:	01 c0       	rjmp	.+2      	; 0x273c <vfprintf+0x366>
    273a:	80 e2       	ldi	r24, 0x20	; 32
    273c:	a7 fc       	sbrc	r10, 7
    273e:	8d e2       	ldi	r24, 0x2D	; 45
    2740:	b6 01       	movw	r22, r12
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2748:	89 14       	cp	r8, r9
    274a:	38 f4       	brcc	.+14     	; 0x275a <vfprintf+0x384>
    274c:	b6 01       	movw	r22, r12
    274e:	80 e3       	ldi	r24, 0x30	; 48
    2750:	90 e0       	ldi	r25, 0x00	; 0
    2752:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2756:	9a 94       	dec	r9
    2758:	f7 cf       	rjmp	.-18     	; 0x2748 <vfprintf+0x372>
    275a:	8a 94       	dec	r8
    275c:	f3 01       	movw	r30, r6
    275e:	e8 0d       	add	r30, r8
    2760:	f1 1d       	adc	r31, r1
    2762:	80 81       	ld	r24, Z
    2764:	b6 01       	movw	r22, r12
    2766:	90 e0       	ldi	r25, 0x00	; 0
    2768:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    276c:	81 10       	cpse	r8, r1
    276e:	f5 cf       	rjmp	.-22     	; 0x275a <vfprintf+0x384>
    2770:	22 20       	and	r2, r2
    2772:	09 f4       	brne	.+2      	; 0x2776 <vfprintf+0x3a0>
    2774:	42 ce       	rjmp	.-892    	; 0x23fa <vfprintf+0x24>
    2776:	b6 01       	movw	r22, r12
    2778:	80 e2       	ldi	r24, 0x20	; 32
    277a:	90 e0       	ldi	r25, 0x00	; 0
    277c:	0e 94 f2 13 	call	0x27e4	; 0x27e4 <fputc>
    2780:	2a 94       	dec	r2
    2782:	f6 cf       	rjmp	.-20     	; 0x2770 <vfprintf+0x39a>
    2784:	f6 01       	movw	r30, r12
    2786:	86 81       	ldd	r24, Z+6	; 0x06
    2788:	97 81       	ldd	r25, Z+7	; 0x07
    278a:	02 c0       	rjmp	.+4      	; 0x2790 <vfprintf+0x3ba>
    278c:	8f ef       	ldi	r24, 0xFF	; 255
    278e:	9f ef       	ldi	r25, 0xFF	; 255
    2790:	2b 96       	adiw	r28, 0x0b	; 11
    2792:	e2 e1       	ldi	r30, 0x12	; 18
    2794:	0c 94 a8 14 	jmp	0x2950	; 0x2950 <__epilogue_restores__>

00002798 <strnlen_P>:
    2798:	fc 01       	movw	r30, r24
    279a:	05 90       	lpm	r0, Z+
    279c:	61 50       	subi	r22, 0x01	; 1
    279e:	70 40       	sbci	r23, 0x00	; 0
    27a0:	01 10       	cpse	r0, r1
    27a2:	d8 f7       	brcc	.-10     	; 0x279a <strnlen_P+0x2>
    27a4:	80 95       	com	r24
    27a6:	90 95       	com	r25
    27a8:	8e 0f       	add	r24, r30
    27aa:	9f 1f       	adc	r25, r31
    27ac:	08 95       	ret

000027ae <strnlen>:
    27ae:	fc 01       	movw	r30, r24
    27b0:	61 50       	subi	r22, 0x01	; 1
    27b2:	70 40       	sbci	r23, 0x00	; 0
    27b4:	01 90       	ld	r0, Z+
    27b6:	01 10       	cpse	r0, r1
    27b8:	d8 f7       	brcc	.-10     	; 0x27b0 <strnlen+0x2>
    27ba:	80 95       	com	r24
    27bc:	90 95       	com	r25
    27be:	8e 0f       	add	r24, r30
    27c0:	9f 1f       	adc	r25, r31
    27c2:	08 95       	ret

000027c4 <strrev>:
    27c4:	dc 01       	movw	r26, r24
    27c6:	fc 01       	movw	r30, r24
    27c8:	67 2f       	mov	r22, r23
    27ca:	71 91       	ld	r23, Z+
    27cc:	77 23       	and	r23, r23
    27ce:	e1 f7       	brne	.-8      	; 0x27c8 <strrev+0x4>
    27d0:	32 97       	sbiw	r30, 0x02	; 2
    27d2:	04 c0       	rjmp	.+8      	; 0x27dc <strrev+0x18>
    27d4:	7c 91       	ld	r23, X
    27d6:	6d 93       	st	X+, r22
    27d8:	70 83       	st	Z, r23
    27da:	62 91       	ld	r22, -Z
    27dc:	ae 17       	cp	r26, r30
    27de:	bf 07       	cpc	r27, r31
    27e0:	c8 f3       	brcs	.-14     	; 0x27d4 <strrev+0x10>
    27e2:	08 95       	ret

000027e4 <fputc>:
    27e4:	0f 93       	push	r16
    27e6:	1f 93       	push	r17
    27e8:	cf 93       	push	r28
    27ea:	df 93       	push	r29
    27ec:	fb 01       	movw	r30, r22
    27ee:	23 81       	ldd	r18, Z+3	; 0x03
    27f0:	21 fd       	sbrc	r18, 1
    27f2:	03 c0       	rjmp	.+6      	; 0x27fa <fputc+0x16>
    27f4:	8f ef       	ldi	r24, 0xFF	; 255
    27f6:	9f ef       	ldi	r25, 0xFF	; 255
    27f8:	2c c0       	rjmp	.+88     	; 0x2852 <fputc+0x6e>
    27fa:	22 ff       	sbrs	r18, 2
    27fc:	16 c0       	rjmp	.+44     	; 0x282a <fputc+0x46>
    27fe:	46 81       	ldd	r20, Z+6	; 0x06
    2800:	57 81       	ldd	r21, Z+7	; 0x07
    2802:	24 81       	ldd	r18, Z+4	; 0x04
    2804:	35 81       	ldd	r19, Z+5	; 0x05
    2806:	42 17       	cp	r20, r18
    2808:	53 07       	cpc	r21, r19
    280a:	44 f4       	brge	.+16     	; 0x281c <fputc+0x38>
    280c:	a0 81       	ld	r26, Z
    280e:	b1 81       	ldd	r27, Z+1	; 0x01
    2810:	9d 01       	movw	r18, r26
    2812:	2f 5f       	subi	r18, 0xFF	; 255
    2814:	3f 4f       	sbci	r19, 0xFF	; 255
    2816:	31 83       	std	Z+1, r19	; 0x01
    2818:	20 83       	st	Z, r18
    281a:	8c 93       	st	X, r24
    281c:	26 81       	ldd	r18, Z+6	; 0x06
    281e:	37 81       	ldd	r19, Z+7	; 0x07
    2820:	2f 5f       	subi	r18, 0xFF	; 255
    2822:	3f 4f       	sbci	r19, 0xFF	; 255
    2824:	37 83       	std	Z+7, r19	; 0x07
    2826:	26 83       	std	Z+6, r18	; 0x06
    2828:	14 c0       	rjmp	.+40     	; 0x2852 <fputc+0x6e>
    282a:	8b 01       	movw	r16, r22
    282c:	ec 01       	movw	r28, r24
    282e:	fb 01       	movw	r30, r22
    2830:	00 84       	ldd	r0, Z+8	; 0x08
    2832:	f1 85       	ldd	r31, Z+9	; 0x09
    2834:	e0 2d       	mov	r30, r0
    2836:	09 95       	icall
    2838:	89 2b       	or	r24, r25
    283a:	e1 f6       	brne	.-72     	; 0x27f4 <fputc+0x10>
    283c:	d8 01       	movw	r26, r16
    283e:	16 96       	adiw	r26, 0x06	; 6
    2840:	8d 91       	ld	r24, X+
    2842:	9c 91       	ld	r25, X
    2844:	17 97       	sbiw	r26, 0x07	; 7
    2846:	01 96       	adiw	r24, 0x01	; 1
    2848:	17 96       	adiw	r26, 0x07	; 7
    284a:	9c 93       	st	X, r25
    284c:	8e 93       	st	-X, r24
    284e:	16 97       	sbiw	r26, 0x06	; 6
    2850:	ce 01       	movw	r24, r28
    2852:	df 91       	pop	r29
    2854:	cf 91       	pop	r28
    2856:	1f 91       	pop	r17
    2858:	0f 91       	pop	r16
    285a:	08 95       	ret

0000285c <__ultoa_invert>:
    285c:	fa 01       	movw	r30, r20
    285e:	aa 27       	eor	r26, r26
    2860:	28 30       	cpi	r18, 0x08	; 8
    2862:	51 f1       	breq	.+84     	; 0x28b8 <__ultoa_invert+0x5c>
    2864:	20 31       	cpi	r18, 0x10	; 16
    2866:	81 f1       	breq	.+96     	; 0x28c8 <__ultoa_invert+0x6c>
    2868:	e8 94       	clt
    286a:	6f 93       	push	r22
    286c:	6e 7f       	andi	r22, 0xFE	; 254
    286e:	6e 5f       	subi	r22, 0xFE	; 254
    2870:	7f 4f       	sbci	r23, 0xFF	; 255
    2872:	8f 4f       	sbci	r24, 0xFF	; 255
    2874:	9f 4f       	sbci	r25, 0xFF	; 255
    2876:	af 4f       	sbci	r26, 0xFF	; 255
    2878:	b1 e0       	ldi	r27, 0x01	; 1
    287a:	3e d0       	rcall	.+124    	; 0x28f8 <__ultoa_invert+0x9c>
    287c:	b4 e0       	ldi	r27, 0x04	; 4
    287e:	3c d0       	rcall	.+120    	; 0x28f8 <__ultoa_invert+0x9c>
    2880:	67 0f       	add	r22, r23
    2882:	78 1f       	adc	r23, r24
    2884:	89 1f       	adc	r24, r25
    2886:	9a 1f       	adc	r25, r26
    2888:	a1 1d       	adc	r26, r1
    288a:	68 0f       	add	r22, r24
    288c:	79 1f       	adc	r23, r25
    288e:	8a 1f       	adc	r24, r26
    2890:	91 1d       	adc	r25, r1
    2892:	a1 1d       	adc	r26, r1
    2894:	6a 0f       	add	r22, r26
    2896:	71 1d       	adc	r23, r1
    2898:	81 1d       	adc	r24, r1
    289a:	91 1d       	adc	r25, r1
    289c:	a1 1d       	adc	r26, r1
    289e:	20 d0       	rcall	.+64     	; 0x28e0 <__ultoa_invert+0x84>
    28a0:	09 f4       	brne	.+2      	; 0x28a4 <__ultoa_invert+0x48>
    28a2:	68 94       	set
    28a4:	3f 91       	pop	r19
    28a6:	2a e0       	ldi	r18, 0x0A	; 10
    28a8:	26 9f       	mul	r18, r22
    28aa:	11 24       	eor	r1, r1
    28ac:	30 19       	sub	r19, r0
    28ae:	30 5d       	subi	r19, 0xD0	; 208
    28b0:	31 93       	st	Z+, r19
    28b2:	de f6       	brtc	.-74     	; 0x286a <__ultoa_invert+0xe>
    28b4:	cf 01       	movw	r24, r30
    28b6:	08 95       	ret
    28b8:	46 2f       	mov	r20, r22
    28ba:	47 70       	andi	r20, 0x07	; 7
    28bc:	40 5d       	subi	r20, 0xD0	; 208
    28be:	41 93       	st	Z+, r20
    28c0:	b3 e0       	ldi	r27, 0x03	; 3
    28c2:	0f d0       	rcall	.+30     	; 0x28e2 <__ultoa_invert+0x86>
    28c4:	c9 f7       	brne	.-14     	; 0x28b8 <__ultoa_invert+0x5c>
    28c6:	f6 cf       	rjmp	.-20     	; 0x28b4 <__ultoa_invert+0x58>
    28c8:	46 2f       	mov	r20, r22
    28ca:	4f 70       	andi	r20, 0x0F	; 15
    28cc:	40 5d       	subi	r20, 0xD0	; 208
    28ce:	4a 33       	cpi	r20, 0x3A	; 58
    28d0:	18 f0       	brcs	.+6      	; 0x28d8 <__ultoa_invert+0x7c>
    28d2:	49 5d       	subi	r20, 0xD9	; 217
    28d4:	31 fd       	sbrc	r19, 1
    28d6:	40 52       	subi	r20, 0x20	; 32
    28d8:	41 93       	st	Z+, r20
    28da:	02 d0       	rcall	.+4      	; 0x28e0 <__ultoa_invert+0x84>
    28dc:	a9 f7       	brne	.-22     	; 0x28c8 <__ultoa_invert+0x6c>
    28de:	ea cf       	rjmp	.-44     	; 0x28b4 <__ultoa_invert+0x58>
    28e0:	b4 e0       	ldi	r27, 0x04	; 4
    28e2:	a6 95       	lsr	r26
    28e4:	97 95       	ror	r25
    28e6:	87 95       	ror	r24
    28e8:	77 95       	ror	r23
    28ea:	67 95       	ror	r22
    28ec:	ba 95       	dec	r27
    28ee:	c9 f7       	brne	.-14     	; 0x28e2 <__ultoa_invert+0x86>
    28f0:	00 97       	sbiw	r24, 0x00	; 0
    28f2:	61 05       	cpc	r22, r1
    28f4:	71 05       	cpc	r23, r1
    28f6:	08 95       	ret
    28f8:	9b 01       	movw	r18, r22
    28fa:	ac 01       	movw	r20, r24
    28fc:	0a 2e       	mov	r0, r26
    28fe:	06 94       	lsr	r0
    2900:	57 95       	ror	r21
    2902:	47 95       	ror	r20
    2904:	37 95       	ror	r19
    2906:	27 95       	ror	r18
    2908:	ba 95       	dec	r27
    290a:	c9 f7       	brne	.-14     	; 0x28fe <__ultoa_invert+0xa2>
    290c:	62 0f       	add	r22, r18
    290e:	73 1f       	adc	r23, r19
    2910:	84 1f       	adc	r24, r20
    2912:	95 1f       	adc	r25, r21
    2914:	a0 1d       	adc	r26, r0
    2916:	08 95       	ret

00002918 <__prologue_saves__>:
    2918:	2f 92       	push	r2
    291a:	3f 92       	push	r3
    291c:	4f 92       	push	r4
    291e:	5f 92       	push	r5
    2920:	6f 92       	push	r6
    2922:	7f 92       	push	r7
    2924:	8f 92       	push	r8
    2926:	9f 92       	push	r9
    2928:	af 92       	push	r10
    292a:	bf 92       	push	r11
    292c:	cf 92       	push	r12
    292e:	df 92       	push	r13
    2930:	ef 92       	push	r14
    2932:	ff 92       	push	r15
    2934:	0f 93       	push	r16
    2936:	1f 93       	push	r17
    2938:	cf 93       	push	r28
    293a:	df 93       	push	r29
    293c:	cd b7       	in	r28, 0x3d	; 61
    293e:	de b7       	in	r29, 0x3e	; 62
    2940:	ca 1b       	sub	r28, r26
    2942:	db 0b       	sbc	r29, r27
    2944:	0f b6       	in	r0, 0x3f	; 63
    2946:	f8 94       	cli
    2948:	de bf       	out	0x3e, r29	; 62
    294a:	0f be       	out	0x3f, r0	; 63
    294c:	cd bf       	out	0x3d, r28	; 61
    294e:	09 94       	ijmp

00002950 <__epilogue_restores__>:
    2950:	2a 88       	ldd	r2, Y+18	; 0x12
    2952:	39 88       	ldd	r3, Y+17	; 0x11
    2954:	48 88       	ldd	r4, Y+16	; 0x10
    2956:	5f 84       	ldd	r5, Y+15	; 0x0f
    2958:	6e 84       	ldd	r6, Y+14	; 0x0e
    295a:	7d 84       	ldd	r7, Y+13	; 0x0d
    295c:	8c 84       	ldd	r8, Y+12	; 0x0c
    295e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2960:	aa 84       	ldd	r10, Y+10	; 0x0a
    2962:	b9 84       	ldd	r11, Y+9	; 0x09
    2964:	c8 84       	ldd	r12, Y+8	; 0x08
    2966:	df 80       	ldd	r13, Y+7	; 0x07
    2968:	ee 80       	ldd	r14, Y+6	; 0x06
    296a:	fd 80       	ldd	r15, Y+5	; 0x05
    296c:	0c 81       	ldd	r16, Y+4	; 0x04
    296e:	1b 81       	ldd	r17, Y+3	; 0x03
    2970:	aa 81       	ldd	r26, Y+2	; 0x02
    2972:	b9 81       	ldd	r27, Y+1	; 0x01
    2974:	ce 0f       	add	r28, r30
    2976:	d1 1d       	adc	r29, r1
    2978:	0f b6       	in	r0, 0x3f	; 63
    297a:	f8 94       	cli
    297c:	de bf       	out	0x3e, r29	; 62
    297e:	0f be       	out	0x3f, r0	; 63
    2980:	cd bf       	out	0x3d, r28	; 61
    2982:	ed 01       	movw	r28, r26
    2984:	08 95       	ret

00002986 <_exit>:
    2986:	f8 94       	cli

00002988 <__stop_program>:
    2988:	ff cf       	rjmp	.-2      	; 0x2988 <__stop_program>
