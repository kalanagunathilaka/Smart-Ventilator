
Smart Ventilator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000023f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000ae  00800060  000023f0  00002484  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000359  0080010e  0080010e  00002532  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002532  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002590  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000178  00000000  00000000  000025cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017cd  00000000  00000000  00002744  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009f0  00000000  00000000  00003f11  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d12  00000000  00000000  00004901  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000474  00000000  00000000  00005614  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a6  00000000  00000000  00005a88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dc7  00000000  00000000  0000622e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00006ff5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3d 00 	jmp	0x7a	; 0x7a <__ctors_end>
       4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
       c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      1c:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__vector_7>
      20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
      54:	16 06       	cpc	r1, r22
      56:	4b 06       	cpc	r4, r27
      58:	80 06       	cpc	r8, r16
      5a:	b5 06       	cpc	r11, r21
      5c:	ea 06       	cpc	r14, r26
      5e:	1f 07       	cpc	r17, r31
      60:	54 07       	cpc	r21, r20
      62:	89 07       	cpc	r24, r25
      64:	be 07       	cpc	r27, r30
      66:	f3 07       	cpc	r31, r19
      68:	28 08       	sbc	r2, r8
      6a:	5d 08       	sbc	r5, r13
      6c:	92 08       	sbc	r9, r2
      6e:	d0 09       	sbc	r29, r0
      70:	c7 08       	sbc	r12, r7
      72:	fc 08       	sbc	r15, r12
      74:	31 09       	sbc	r19, r1
      76:	66 09       	sbc	r22, r6
      78:	9b 09       	sbc	r25, r11

0000007a <__ctors_end>:
      7a:	11 24       	eor	r1, r1
      7c:	1f be       	out	0x3f, r1	; 63
      7e:	cf e5       	ldi	r28, 0x5F	; 95
      80:	d8 e0       	ldi	r29, 0x08	; 8
      82:	de bf       	out	0x3e, r29	; 62
      84:	cd bf       	out	0x3d, r28	; 61

00000086 <__do_copy_data>:
      86:	11 e0       	ldi	r17, 0x01	; 1
      88:	a0 e6       	ldi	r26, 0x60	; 96
      8a:	b0 e0       	ldi	r27, 0x00	; 0
      8c:	e0 ef       	ldi	r30, 0xF0	; 240
      8e:	f3 e2       	ldi	r31, 0x23	; 35
      90:	02 c0       	rjmp	.+4      	; 0x96 <__do_copy_data+0x10>
      92:	05 90       	lpm	r0, Z+
      94:	0d 92       	st	X+, r0
      96:	ae 30       	cpi	r26, 0x0E	; 14
      98:	b1 07       	cpc	r27, r17
      9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0xc>

0000009c <__do_clear_bss>:
      9c:	24 e0       	ldi	r18, 0x04	; 4
      9e:	ae e0       	ldi	r26, 0x0E	; 14
      a0:	b1 e0       	ldi	r27, 0x01	; 1
      a2:	01 c0       	rjmp	.+2      	; 0xa6 <.do_clear_bss_start>

000000a4 <.do_clear_bss_loop>:
      a4:	1d 92       	st	X+, r1

000000a6 <.do_clear_bss_start>:
      a6:	a7 36       	cpi	r26, 0x67	; 103
      a8:	b2 07       	cpc	r27, r18
      aa:	e1 f7       	brne	.-8      	; 0xa4 <.do_clear_bss_loop>
      ac:	0e 94 16 0a 	call	0x142c	; 0x142c <main>
      b0:	0c 94 f6 11 	jmp	0x23ec	; 0x23ec <_exit>

000000b4 <__bad_interrupt>:
      b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b8 <delay>:
        return 1;
    }
    //if normal return 1 else notify speaker and gsm
}

void getParametersFromKnobs() {
      b8:	40 e0       	ldi	r20, 0x00	; 0
      ba:	50 e0       	ldi	r21, 0x00	; 0
      bc:	0a c0       	rjmp	.+20     	; 0xd2 <delay+0x1a>
      be:	2f 5f       	subi	r18, 0xFF	; 255
      c0:	3f 4f       	sbci	r19, 0xFF	; 255
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <delay+0x10>
      c4:	20 e0       	ldi	r18, 0x00	; 0
      c6:	30 e0       	ldi	r19, 0x00	; 0
      c8:	29 37       	cpi	r18, 0x79	; 121
      ca:	31 05       	cpc	r19, r1
      cc:	c4 f3       	brlt	.-16     	; 0xbe <delay+0x6>
      ce:	4f 5f       	subi	r20, 0xFF	; 255
      d0:	5f 4f       	sbci	r21, 0xFF	; 255
      d2:	84 17       	cp	r24, r20
      d4:	95 07       	cpc	r25, r21
      d6:	b4 f7       	brge	.-20     	; 0xc4 <delay+0xc>
      d8:	08 95       	ret

000000da <toggle>:
      da:	83 b1       	in	r24, 0x03	; 3
      dc:	82 60       	ori	r24, 0x02	; 2
      de:	83 b9       	out	0x03, r24	; 3
      e0:	84 e8       	ldi	r24, 0x84	; 132
      e2:	86 bf       	out	0x36, r24	; 54
      e4:	06 b6       	in	r0, 0x36	; 54
      e6:	07 fe       	sbrs	r0, 7
      e8:	fd cf       	rjmp	.-6      	; 0xe4 <toggle+0xa>
      ea:	81 e0       	ldi	r24, 0x01	; 1
      ec:	90 e0       	ldi	r25, 0x00	; 0
      ee:	0e 94 5c 00 	call	0xb8	; 0xb8 <delay>
      f2:	83 b1       	in	r24, 0x03	; 3
      f4:	8d 7f       	andi	r24, 0xFD	; 253
      f6:	83 b9       	out	0x03, r24	; 3
      f8:	84 e8       	ldi	r24, 0x84	; 132
      fa:	86 bf       	out	0x36, r24	; 54
      fc:	06 b6       	in	r0, 0x36	; 54
      fe:	07 fe       	sbrs	r0, 7
     100:	fd cf       	rjmp	.-6      	; 0xfc <toggle+0x22>
     102:	08 95       	ret

00000104 <lcd_cmd_hf>:
     104:	93 b1       	in	r25, 0x03	; 3
     106:	9e 7f       	andi	r25, 0xFE	; 254
     108:	93 b9       	out	0x03, r25	; 3
     10a:	94 e8       	ldi	r25, 0x84	; 132
     10c:	96 bf       	out	0x36, r25	; 54
     10e:	06 b6       	in	r0, 0x36	; 54
     110:	07 fe       	sbrs	r0, 7
     112:	fd cf       	rjmp	.-6      	; 0x10e <lcd_cmd_hf+0xa>
     114:	93 b1       	in	r25, 0x03	; 3
     116:	9f 70       	andi	r25, 0x0F	; 15
     118:	93 b9       	out	0x03, r25	; 3
     11a:	94 e8       	ldi	r25, 0x84	; 132
     11c:	96 bf       	out	0x36, r25	; 54
     11e:	06 b6       	in	r0, 0x36	; 54
     120:	07 fe       	sbrs	r0, 7
     122:	fd cf       	rjmp	.-6      	; 0x11e <lcd_cmd_hf+0x1a>
     124:	93 b1       	in	r25, 0x03	; 3
     126:	80 7f       	andi	r24, 0xF0	; 240
     128:	89 2b       	or	r24, r25
     12a:	83 b9       	out	0x03, r24	; 3
     12c:	84 e8       	ldi	r24, 0x84	; 132
     12e:	86 bf       	out	0x36, r24	; 54
     130:	06 b6       	in	r0, 0x36	; 54
     132:	07 fe       	sbrs	r0, 7
     134:	fd cf       	rjmp	.-6      	; 0x130 <lcd_cmd_hf+0x2c>
     136:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     13a:	08 95       	ret

0000013c <lcd_cmd>:
     13c:	cf 93       	push	r28
     13e:	c8 2f       	mov	r28, r24
     140:	83 b1       	in	r24, 0x03	; 3
     142:	8e 7f       	andi	r24, 0xFE	; 254
     144:	83 b9       	out	0x03, r24	; 3
     146:	84 e8       	ldi	r24, 0x84	; 132
     148:	86 bf       	out	0x36, r24	; 54
     14a:	06 b6       	in	r0, 0x36	; 54
     14c:	07 fe       	sbrs	r0, 7
     14e:	fd cf       	rjmp	.-6      	; 0x14a <lcd_cmd+0xe>
     150:	83 b1       	in	r24, 0x03	; 3
     152:	8f 70       	andi	r24, 0x0F	; 15
     154:	83 b9       	out	0x03, r24	; 3
     156:	84 e8       	ldi	r24, 0x84	; 132
     158:	86 bf       	out	0x36, r24	; 54
     15a:	06 b6       	in	r0, 0x36	; 54
     15c:	07 fe       	sbrs	r0, 7
     15e:	fd cf       	rjmp	.-6      	; 0x15a <lcd_cmd+0x1e>
     160:	83 b1       	in	r24, 0x03	; 3
     162:	9c 2f       	mov	r25, r28
     164:	90 7f       	andi	r25, 0xF0	; 240
     166:	89 2b       	or	r24, r25
     168:	83 b9       	out	0x03, r24	; 3
     16a:	84 e8       	ldi	r24, 0x84	; 132
     16c:	86 bf       	out	0x36, r24	; 54
     16e:	06 b6       	in	r0, 0x36	; 54
     170:	07 fe       	sbrs	r0, 7
     172:	fd cf       	rjmp	.-6      	; 0x16e <lcd_cmd+0x32>
     174:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     178:	83 b1       	in	r24, 0x03	; 3
     17a:	8f 70       	andi	r24, 0x0F	; 15
     17c:	83 b9       	out	0x03, r24	; 3
     17e:	84 e8       	ldi	r24, 0x84	; 132
     180:	86 bf       	out	0x36, r24	; 54
     182:	06 b6       	in	r0, 0x36	; 54
     184:	07 fe       	sbrs	r0, 7
     186:	fd cf       	rjmp	.-6      	; 0x182 <lcd_cmd+0x46>
     188:	23 b1       	in	r18, 0x03	; 3
     18a:	30 e1       	ldi	r19, 0x10	; 16
     18c:	c3 9f       	mul	r28, r19
     18e:	c0 01       	movw	r24, r0
     190:	11 24       	eor	r1, r1
     192:	82 2b       	or	r24, r18
     194:	83 b9       	out	0x03, r24	; 3
     196:	84 e8       	ldi	r24, 0x84	; 132
     198:	86 bf       	out	0x36, r24	; 54
     19a:	06 b6       	in	r0, 0x36	; 54
     19c:	07 fe       	sbrs	r0, 7
     19e:	fd cf       	rjmp	.-6      	; 0x19a <lcd_cmd+0x5e>
     1a0:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     1a4:	cf 91       	pop	r28
     1a6:	08 95       	ret

000001a8 <lcd_init>:
     1a8:	80 e3       	ldi	r24, 0x30	; 48
     1aa:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1ae:	80 e3       	ldi	r24, 0x30	; 48
     1b0:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1b4:	80 e2       	ldi	r24, 0x20	; 32
     1b6:	0e 94 82 00 	call	0x104	; 0x104 <lcd_cmd_hf>
     1ba:	88 e2       	ldi	r24, 0x28	; 40
     1bc:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1c0:	8c e0       	ldi	r24, 0x0C	; 12
     1c2:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1cc:	86 e0       	ldi	r24, 0x06	; 6
     1ce:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1d2:	80 e8       	ldi	r24, 0x80	; 128
     1d4:	0e 94 9e 00 	call	0x13c	; 0x13c <lcd_cmd>
     1d8:	08 95       	ret

000001da <lcd_dwr>:
     1da:	cf 93       	push	r28
     1dc:	c8 2f       	mov	r28, r24
     1de:	83 b1       	in	r24, 0x03	; 3
     1e0:	81 60       	ori	r24, 0x01	; 1
     1e2:	83 b9       	out	0x03, r24	; 3
     1e4:	84 e8       	ldi	r24, 0x84	; 132
     1e6:	86 bf       	out	0x36, r24	; 54
     1e8:	06 b6       	in	r0, 0x36	; 54
     1ea:	07 fe       	sbrs	r0, 7
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <lcd_dwr+0xe>
     1ee:	83 b1       	in	r24, 0x03	; 3
     1f0:	8f 70       	andi	r24, 0x0F	; 15
     1f2:	83 b9       	out	0x03, r24	; 3
     1f4:	84 e8       	ldi	r24, 0x84	; 132
     1f6:	86 bf       	out	0x36, r24	; 54
     1f8:	06 b6       	in	r0, 0x36	; 54
     1fa:	07 fe       	sbrs	r0, 7
     1fc:	fd cf       	rjmp	.-6      	; 0x1f8 <lcd_dwr+0x1e>
     1fe:	83 b1       	in	r24, 0x03	; 3
     200:	9c 2f       	mov	r25, r28
     202:	90 7f       	andi	r25, 0xF0	; 240
     204:	89 2b       	or	r24, r25
     206:	83 b9       	out	0x03, r24	; 3
     208:	84 e8       	ldi	r24, 0x84	; 132
     20a:	86 bf       	out	0x36, r24	; 54
     20c:	06 b6       	in	r0, 0x36	; 54
     20e:	07 fe       	sbrs	r0, 7
     210:	fd cf       	rjmp	.-6      	; 0x20c <lcd_dwr+0x32>
     212:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     216:	83 b1       	in	r24, 0x03	; 3
     218:	8f 70       	andi	r24, 0x0F	; 15
     21a:	83 b9       	out	0x03, r24	; 3
     21c:	84 e8       	ldi	r24, 0x84	; 132
     21e:	86 bf       	out	0x36, r24	; 54
     220:	06 b6       	in	r0, 0x36	; 54
     222:	07 fe       	sbrs	r0, 7
     224:	fd cf       	rjmp	.-6      	; 0x220 <lcd_dwr+0x46>
     226:	23 b1       	in	r18, 0x03	; 3
     228:	30 e1       	ldi	r19, 0x10	; 16
     22a:	c3 9f       	mul	r28, r19
     22c:	c0 01       	movw	r24, r0
     22e:	11 24       	eor	r1, r1
     230:	82 2b       	or	r24, r18
     232:	83 b9       	out	0x03, r24	; 3
     234:	84 e8       	ldi	r24, 0x84	; 132
     236:	86 bf       	out	0x36, r24	; 54
     238:	06 b6       	in	r0, 0x36	; 54
     23a:	07 fe       	sbrs	r0, 7
     23c:	fd cf       	rjmp	.-6      	; 0x238 <lcd_dwr+0x5e>
     23e:	0e 94 6d 00 	call	0xda	; 0xda <toggle>
     242:	cf 91       	pop	r28
     244:	08 95       	ret

00000246 <lcd_msg>:
     246:	cf 93       	push	r28
     248:	df 93       	push	r29
     24a:	ec 01       	movw	r28, r24
     24c:	03 c0       	rjmp	.+6      	; 0x254 <lcd_msg+0xe>
     24e:	21 96       	adiw	r28, 0x01	; 1
     250:	0e 94 ed 00 	call	0x1da	; 0x1da <lcd_dwr>
     254:	88 81       	ld	r24, Y
     256:	81 11       	cpse	r24, r1
     258:	fa cf       	rjmp	.-12     	; 0x24e <lcd_msg+0x8>
     25a:	df 91       	pop	r29
     25c:	cf 91       	pop	r28
     25e:	08 95       	ret

00000260 <i2c_init>:
     260:	82 e6       	ldi	r24, 0x62	; 98
     262:	80 b9       	out	0x00, r24	; 0
     264:	84 e0       	ldi	r24, 0x04	; 4
     266:	86 bf       	out	0x36, r24	; 54
     268:	11 b8       	out	0x01, r1	; 1
     26a:	08 95       	ret

0000026c <i2c_start>:
     26c:	84 ea       	ldi	r24, 0xA4	; 164
     26e:	86 bf       	out	0x36, r24	; 54
     270:	06 b6       	in	r0, 0x36	; 54
     272:	07 fe       	sbrs	r0, 7
     274:	fd cf       	rjmp	.-6      	; 0x270 <i2c_start+0x4>
     276:	08 95       	ret

00000278 <i2c_write>:
     278:	83 b9       	out	0x03, r24	; 3
     27a:	84 e8       	ldi	r24, 0x84	; 132
     27c:	86 bf       	out	0x36, r24	; 54
     27e:	06 b6       	in	r0, 0x36	; 54
     280:	07 fe       	sbrs	r0, 7
     282:	fd cf       	rjmp	.-6      	; 0x27e <i2c_write+0x6>
     284:	08 95       	ret

00000286 <USART_Init>:
     286:	2a b1       	in	r18, 0x0a	; 10
     288:	28 69       	ori	r18, 0x98	; 152
     28a:	2a b9       	out	0x0a, r18	; 10
     28c:	20 b5       	in	r18, 0x20	; 32
     28e:	26 68       	ori	r18, 0x86	; 134
     290:	20 bd       	out	0x20, r18	; 32
     292:	dc 01       	movw	r26, r24
     294:	cb 01       	movw	r24, r22
     296:	88 0f       	add	r24, r24
     298:	99 1f       	adc	r25, r25
     29a:	aa 1f       	adc	r26, r26
     29c:	bb 1f       	adc	r27, r27
     29e:	88 0f       	add	r24, r24
     2a0:	99 1f       	adc	r25, r25
     2a2:	aa 1f       	adc	r26, r26
     2a4:	bb 1f       	adc	r27, r27
     2a6:	9c 01       	movw	r18, r24
     2a8:	ad 01       	movw	r20, r26
     2aa:	22 0f       	add	r18, r18
     2ac:	33 1f       	adc	r19, r19
     2ae:	44 1f       	adc	r20, r20
     2b0:	55 1f       	adc	r21, r21
     2b2:	22 0f       	add	r18, r18
     2b4:	33 1f       	adc	r19, r19
     2b6:	44 1f       	adc	r20, r20
     2b8:	55 1f       	adc	r21, r21
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	72 e1       	ldi	r23, 0x12	; 18
     2be:	8a e7       	ldi	r24, 0x7A	; 122
     2c0:	90 e0       	ldi	r25, 0x00	; 0
     2c2:	0e 94 68 0d 	call	0x1ad0	; 0x1ad0 <__udivmodsi4>
     2c6:	8f ef       	ldi	r24, 0xFF	; 255
     2c8:	82 0f       	add	r24, r18
     2ca:	89 b9       	out	0x09, r24	; 9
     2cc:	da 01       	movw	r26, r20
     2ce:	c9 01       	movw	r24, r18
     2d0:	01 97       	sbiw	r24, 0x01	; 1
     2d2:	a1 09       	sbc	r26, r1
     2d4:	b1 09       	sbc	r27, r1
     2d6:	89 2f       	mov	r24, r25
     2d8:	9a 2f       	mov	r25, r26
     2da:	ab 2f       	mov	r26, r27
     2dc:	bb 27       	eor	r27, r27
     2de:	80 bd       	out	0x20, r24	; 32
     2e0:	08 95       	ret

000002e2 <USART_TxChar>:
     2e2:	8c b9       	out	0x0c, r24	; 12
     2e4:	5d 9b       	sbis	0x0b, 5	; 11
     2e6:	fe cf       	rjmp	.-4      	; 0x2e4 <USART_TxChar+0x2>
     2e8:	08 95       	ret

000002ea <USART_SendString>:
     2ea:	0f 93       	push	r16
     2ec:	1f 93       	push	r17
     2ee:	cf 93       	push	r28
     2f0:	df 93       	push	r29
     2f2:	8c 01       	movw	r16, r24
     2f4:	c0 e0       	ldi	r28, 0x00	; 0
     2f6:	d0 e0       	ldi	r29, 0x00	; 0
     2f8:	03 c0       	rjmp	.+6      	; 0x300 <USART_SendString+0x16>
     2fa:	0e 94 71 01 	call	0x2e2	; 0x2e2 <USART_TxChar>
     2fe:	21 96       	adiw	r28, 0x01	; 1
     300:	f8 01       	movw	r30, r16
     302:	ec 0f       	add	r30, r28
     304:	fd 1f       	adc	r31, r29
     306:	80 81       	ld	r24, Z
     308:	81 11       	cpse	r24, r1
     30a:	f7 cf       	rjmp	.-18     	; 0x2fa <USART_SendString+0x10>
     30c:	df 91       	pop	r29
     30e:	cf 91       	pop	r28
     310:	1f 91       	pop	r17
     312:	0f 91       	pop	r16
     314:	08 95       	ret

00000316 <GSMConnect>:
     316:	0f 93       	push	r16
     318:	1f 93       	push	r17
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	cd b7       	in	r28, 0x3d	; 61
     320:	de b7       	in	r29, 0x3e	; 62
     322:	c4 56       	subi	r28, 0x64	; 100
     324:	d1 09       	sbc	r29, r1
     326:	0f b6       	in	r0, 0x3f	; 63
     328:	f8 94       	cli
     32a:	de bf       	out	0x3e, r29	; 62
     32c:	0f be       	out	0x3f, r0	; 63
     32e:	cd bf       	out	0x3d, r28	; 61
     330:	8e e6       	ldi	r24, 0x6E	; 110
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     338:	8f e1       	ldi	r24, 0x1F	; 31
     33a:	9e e4       	ldi	r25, 0x4E	; 78
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	f1 f7       	brne	.-4      	; 0x33c <GSMConnect+0x26>
     340:	00 c0       	rjmp	.+0      	; 0x342 <GSMConnect+0x2c>
     342:	00 00       	nop
     344:	84 e7       	ldi	r24, 0x74	; 116
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	9f 93       	push	r25
     34a:	8f 93       	push	r24
     34c:	9f 93       	push	r25
     34e:	8f 93       	push	r24
     350:	8c e7       	ldi	r24, 0x7C	; 124
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	9f 93       	push	r25
     356:	8f 93       	push	r24
     358:	83 e8       	ldi	r24, 0x83	; 131
     35a:	90 e0       	ldi	r25, 0x00	; 0
     35c:	9f 93       	push	r25
     35e:	8f 93       	push	r24
     360:	8e 01       	movw	r16, r28
     362:	0f 5f       	subi	r16, 0xFF	; 255
     364:	1f 4f       	sbci	r17, 0xFF	; 255
     366:	1f 93       	push	r17
     368:	0f 93       	push	r16
     36a:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <sprintf>
     36e:	c8 01       	movw	r24, r16
     370:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     374:	84 e6       	ldi	r24, 0x64	; 100
     376:	ee e0       	ldi	r30, 0x0E	; 14
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	df 01       	movw	r26, r30
     37c:	1d 92       	st	X+, r1
     37e:	8a 95       	dec	r24
     380:	e9 f7       	brne	.-6      	; 0x37c <GSMConnect+0x66>
     382:	8f e1       	ldi	r24, 0x1F	; 31
     384:	9e e4       	ldi	r25, 0x4E	; 78
     386:	01 97       	sbiw	r24, 0x01	; 1
     388:	f1 f7       	brne	.-4      	; 0x386 <GSMConnect+0x70>
     38a:	00 c0       	rjmp	.+0      	; 0x38c <GSMConnect+0x76>
     38c:	00 00       	nop
     38e:	8b e9       	ldi	r24, 0x9B	; 155
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	f8 94       	cli
     39a:	de bf       	out	0x3e, r29	; 62
     39c:	0f be       	out	0x3f, r0	; 63
     39e:	cd bf       	out	0x3d, r28	; 61
     3a0:	cc 59       	subi	r28, 0x9C	; 156
     3a2:	df 4f       	sbci	r29, 0xFF	; 255
     3a4:	0f b6       	in	r0, 0x3f	; 63
     3a6:	f8 94       	cli
     3a8:	de bf       	out	0x3e, r29	; 62
     3aa:	0f be       	out	0x3f, r0	; 63
     3ac:	cd bf       	out	0x3d, r28	; 61
     3ae:	df 91       	pop	r29
     3b0:	cf 91       	pop	r28
     3b2:	1f 91       	pop	r17
     3b4:	0f 91       	pop	r16
     3b6:	08 95       	ret

000003b8 <openSolenoidValves>:
     3b8:	8f 92       	push	r8
     3ba:	9f 92       	push	r9
     3bc:	af 92       	push	r10
     3be:	bf 92       	push	r11
     3c0:	cf 92       	push	r12
     3c2:	df 92       	push	r13
     3c4:	ef 92       	push	r14
     3c6:	ff 92       	push	r15
     3c8:	0f 93       	push	r16
     3ca:	1f 93       	push	r17
     3cc:	4b 01       	movw	r8, r22
     3ce:	5c 01       	movw	r10, r24
     3d0:	ca 01       	movw	r24, r20
     3d2:	b9 01       	movw	r22, r18
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	4a e7       	ldi	r20, 0x7A	; 122
     3da:	54 e4       	ldi	r21, 0x44	; 68
     3dc:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__mulsf3>
     3e0:	6b 01       	movw	r12, r22
     3e2:	7c 01       	movw	r14, r24
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	4a e7       	ldi	r20, 0x7A	; 122
     3ea:	54 e4       	ldi	r21, 0x44	; 68
     3ec:	c5 01       	movw	r24, r10
     3ee:	b4 01       	movw	r22, r8
     3f0:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__mulsf3>
     3f4:	4b 01       	movw	r8, r22
     3f6:	5c 01       	movw	r10, r24
     3f8:	9b 01       	movw	r18, r22
     3fa:	ac 01       	movw	r20, r24
     3fc:	c7 01       	movw	r24, r14
     3fe:	b6 01       	movw	r22, r12
     400:	0e 94 87 0c 	call	0x190e	; 0x190e <__gesf2>
     404:	18 16       	cp	r1, r24
     406:	0c f0       	brlt	.+2      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     408:	b7 c1       	rjmp	.+878    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     40a:	80 91 b2 03 	lds	r24, 0x03B2	; 0x8003b2 <prev_millis1>
     40e:	90 91 b3 03 	lds	r25, 0x03B3	; 0x8003b3 <prev_millis1+0x1>
     412:	89 2b       	or	r24, r25
     414:	09 f0       	breq	.+2      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     416:	40 c0       	rjmp	.+128    	; 0x498 <__EEPROM_REGION_LENGTH__+0x98>
     418:	0e 94 b2 0a 	call	0x1564	; 0x1564 <millis>
     41c:	60 93 b2 03 	sts	0x03B2, r22	; 0x8003b2 <prev_millis1>
     420:	70 93 b3 03 	sts	0x03B3, r23	; 0x8003b3 <prev_millis1+0x1>
     424:	80 93 b4 03 	sts	0x03B4, r24	; 0x8003b4 <prev_millis1+0x2>
     428:	90 93 b5 03 	sts	0x03B5, r25	; 0x8003b5 <prev_millis1+0x3>
     42c:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <__floatunsisf>
     430:	a5 01       	movw	r20, r10
     432:	94 01       	movw	r18, r8
     434:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__addsf3>
     438:	0e 94 a6 0b 	call	0x174c	; 0x174c <__fixunssfsi>
     43c:	60 93 ae 03 	sts	0x03AE, r22	; 0x8003ae <need_millis1>
     440:	70 93 af 03 	sts	0x03AF, r23	; 0x8003af <need_millis1+0x1>
     444:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <need_millis1+0x2>
     448:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <need_millis1+0x3>
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	a0 e0       	ldi	r26, 0x00	; 0
     452:	b0 e0       	ldi	r27, 0x00	; 0
     454:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     458:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     45c:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     460:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     464:	85 b3       	in	r24, 0x15	; 21
     466:	84 60       	ori	r24, 0x04	; 4
     468:	85 bb       	out	0x15, r24	; 21
     46a:	85 b3       	in	r24, 0x15	; 21
     46c:	87 7f       	andi	r24, 0xF7	; 247
     46e:	85 bb       	out	0x15, r24	; 21
     470:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     474:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     478:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     47c:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     480:	01 96       	adiw	r24, 0x01	; 1
     482:	a1 1d       	adc	r26, r1
     484:	b1 1d       	adc	r27, r1
     486:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     48a:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     48e:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     492:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     496:	70 c1       	rjmp	.+736    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     498:	0e 94 b2 0a 	call	0x1564	; 0x1564 <millis>
     49c:	00 91 ae 03 	lds	r16, 0x03AE	; 0x8003ae <need_millis1>
     4a0:	10 91 af 03 	lds	r17, 0x03AF	; 0x8003af <need_millis1+0x1>
     4a4:	20 91 b0 03 	lds	r18, 0x03B0	; 0x8003b0 <need_millis1+0x2>
     4a8:	30 91 b1 03 	lds	r19, 0x03B1	; 0x8003b1 <need_millis1+0x3>
     4ac:	06 17       	cp	r16, r22
     4ae:	17 07       	cpc	r17, r23
     4b0:	28 07       	cpc	r18, r24
     4b2:	39 07       	cpc	r19, r25
     4b4:	08 f0       	brcs	.+2      	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
     4b6:	85 c0       	rjmp	.+266    	; 0x5c2 <__EEPROM_REGION_LENGTH__+0x1c2>
     4b8:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     4bc:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     4c0:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     4c4:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     4c8:	82 30       	cpi	r24, 0x02	; 2
     4ca:	91 05       	cpc	r25, r1
     4cc:	a1 05       	cpc	r26, r1
     4ce:	b1 05       	cpc	r27, r1
     4d0:	29 f0       	breq	.+10     	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
     4d2:	03 97       	sbiw	r24, 0x03	; 3
     4d4:	a1 05       	cpc	r26, r1
     4d6:	b1 05       	cpc	r27, r1
     4d8:	a1 f1       	breq	.+104    	; 0x542 <__EEPROM_REGION_LENGTH__+0x142>
     4da:	62 c0       	rjmp	.+196    	; 0x5a0 <__EEPROM_REGION_LENGTH__+0x1a0>
     4dc:	85 b3       	in	r24, 0x15	; 21
     4de:	8b 7f       	andi	r24, 0xFB	; 251
     4e0:	85 bb       	out	0x15, r24	; 21
     4e2:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     4e6:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     4ea:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     4ee:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     4f2:	01 96       	adiw	r24, 0x01	; 1
     4f4:	a1 1d       	adc	r26, r1
     4f6:	b1 1d       	adc	r27, r1
     4f8:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     4fc:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     500:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     504:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     508:	60 91 ae 03 	lds	r22, 0x03AE	; 0x8003ae <need_millis1>
     50c:	70 91 af 03 	lds	r23, 0x03AF	; 0x8003af <need_millis1+0x1>
     510:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <need_millis1+0x2>
     514:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <need_millis1+0x3>
     518:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <__floatunsisf>
     51c:	a7 01       	movw	r20, r14
     51e:	96 01       	movw	r18, r12
     520:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__addsf3>
     524:	a5 01       	movw	r20, r10
     526:	94 01       	movw	r18, r8
     528:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__subsf3>
     52c:	0e 94 a6 0b 	call	0x174c	; 0x174c <__fixunssfsi>
     530:	60 93 ae 03 	sts	0x03AE, r22	; 0x8003ae <need_millis1>
     534:	70 93 af 03 	sts	0x03AF, r23	; 0x8003af <need_millis1+0x1>
     538:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <need_millis1+0x2>
     53c:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <need_millis1+0x3>
     540:	1b c1       	rjmp	.+566    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     542:	85 b3       	in	r24, 0x15	; 21
     544:	88 60       	ori	r24, 0x08	; 8
     546:	85 bb       	out	0x15, r24	; 21
     548:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     54c:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     550:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     554:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     558:	01 96       	adiw	r24, 0x01	; 1
     55a:	a1 1d       	adc	r26, r1
     55c:	b1 1d       	adc	r27, r1
     55e:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     562:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     566:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     56a:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     56e:	60 91 ae 03 	lds	r22, 0x03AE	; 0x8003ae <need_millis1>
     572:	70 91 af 03 	lds	r23, 0x03AF	; 0x8003af <need_millis1+0x1>
     576:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <need_millis1+0x2>
     57a:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <need_millis1+0x3>
     57e:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <__floatunsisf>
     582:	a7 01       	movw	r20, r14
     584:	96 01       	movw	r18, r12
     586:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__addsf3>
     58a:	0e 94 a6 0b 	call	0x174c	; 0x174c <__fixunssfsi>
     58e:	60 93 ae 03 	sts	0x03AE, r22	; 0x8003ae <need_millis1>
     592:	70 93 af 03 	sts	0x03AF, r23	; 0x8003af <need_millis1+0x1>
     596:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <need_millis1+0x2>
     59a:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <need_millis1+0x3>
     59e:	ec c0       	rjmp	.+472    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     5a0:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <case_num1>
     5a4:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <case_num1+0x1>
     5a8:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <case_num1+0x2>
     5ac:	10 92 05 03 	sts	0x0305, r1	; 0x800305 <case_num1+0x3>
     5b0:	10 92 b2 03 	sts	0x03B2, r1	; 0x8003b2 <prev_millis1>
     5b4:	10 92 b3 03 	sts	0x03B3, r1	; 0x8003b3 <prev_millis1+0x1>
     5b8:	10 92 b4 03 	sts	0x03B4, r1	; 0x8003b4 <prev_millis1+0x2>
     5bc:	10 92 b5 03 	sts	0x03B5, r1	; 0x8003b5 <prev_millis1+0x3>
     5c0:	db c0       	rjmp	.+438    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     5c2:	80 91 b2 03 	lds	r24, 0x03B2	; 0x8003b2 <prev_millis1>
     5c6:	90 91 b3 03 	lds	r25, 0x03B3	; 0x8003b3 <prev_millis1+0x1>
     5ca:	89 2b       	or	r24, r25
     5cc:	09 f0       	breq	.+2      	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
     5ce:	40 c0       	rjmp	.+128    	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
     5d0:	0e 94 b2 0a 	call	0x1564	; 0x1564 <millis>
     5d4:	60 93 b2 03 	sts	0x03B2, r22	; 0x8003b2 <prev_millis1>
     5d8:	70 93 b3 03 	sts	0x03B3, r23	; 0x8003b3 <prev_millis1+0x1>
     5dc:	80 93 b4 03 	sts	0x03B4, r24	; 0x8003b4 <prev_millis1+0x2>
     5e0:	90 93 b5 03 	sts	0x03B5, r25	; 0x8003b5 <prev_millis1+0x3>
     5e4:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <__floatunsisf>
     5e8:	a7 01       	movw	r20, r14
     5ea:	96 01       	movw	r18, r12
     5ec:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__addsf3>
     5f0:	0e 94 a6 0b 	call	0x174c	; 0x174c <__fixunssfsi>
     5f4:	60 93 ae 03 	sts	0x03AE, r22	; 0x8003ae <need_millis1>
     5f8:	70 93 af 03 	sts	0x03AF, r23	; 0x8003af <need_millis1+0x1>
     5fc:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <need_millis1+0x2>
     600:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <need_millis1+0x3>
     604:	81 e0       	ldi	r24, 0x01	; 1
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	a0 e0       	ldi	r26, 0x00	; 0
     60a:	b0 e0       	ldi	r27, 0x00	; 0
     60c:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     610:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     614:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     618:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     61c:	85 b3       	in	r24, 0x15	; 21
     61e:	84 60       	ori	r24, 0x04	; 4
     620:	85 bb       	out	0x15, r24	; 21
     622:	85 b3       	in	r24, 0x15	; 21
     624:	87 7f       	andi	r24, 0xF7	; 247
     626:	85 bb       	out	0x15, r24	; 21
     628:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     62c:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     630:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     634:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     638:	01 96       	adiw	r24, 0x01	; 1
     63a:	a1 1d       	adc	r26, r1
     63c:	b1 1d       	adc	r27, r1
     63e:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     642:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     646:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     64a:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     64e:	94 c0       	rjmp	.+296    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     650:	0e 94 b2 0a 	call	0x1564	; 0x1564 <millis>
     654:	00 91 ae 03 	lds	r16, 0x03AE	; 0x8003ae <need_millis1>
     658:	10 91 af 03 	lds	r17, 0x03AF	; 0x8003af <need_millis1+0x1>
     65c:	20 91 b0 03 	lds	r18, 0x03B0	; 0x8003b0 <need_millis1+0x2>
     660:	30 91 b1 03 	lds	r19, 0x03B1	; 0x8003b1 <need_millis1+0x3>
     664:	06 17       	cp	r16, r22
     666:	17 07       	cpc	r17, r23
     668:	28 07       	cpc	r18, r24
     66a:	39 07       	cpc	r19, r25
     66c:	08 f0       	brcs	.+2      	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
     66e:	84 c0       	rjmp	.+264    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     670:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     674:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     678:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     67c:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     680:	82 30       	cpi	r24, 0x02	; 2
     682:	91 05       	cpc	r25, r1
     684:	a1 05       	cpc	r26, r1
     686:	b1 05       	cpc	r27, r1
     688:	29 f0       	breq	.+10     	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
     68a:	03 97       	sbiw	r24, 0x03	; 3
     68c:	a1 05       	cpc	r26, r1
     68e:	b1 05       	cpc	r27, r1
     690:	a1 f1       	breq	.+104    	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
     692:	62 c0       	rjmp	.+196    	; 0x758 <__EEPROM_REGION_LENGTH__+0x358>
     694:	85 b3       	in	r24, 0x15	; 21
     696:	88 60       	ori	r24, 0x08	; 8
     698:	85 bb       	out	0x15, r24	; 21
     69a:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     69e:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     6a2:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     6a6:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	a1 1d       	adc	r26, r1
     6ae:	b1 1d       	adc	r27, r1
     6b0:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     6b4:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     6b8:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     6bc:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     6c0:	60 91 ae 03 	lds	r22, 0x03AE	; 0x8003ae <need_millis1>
     6c4:	70 91 af 03 	lds	r23, 0x03AF	; 0x8003af <need_millis1+0x1>
     6c8:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <need_millis1+0x2>
     6cc:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <need_millis1+0x3>
     6d0:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <__floatunsisf>
     6d4:	a5 01       	movw	r20, r10
     6d6:	94 01       	movw	r18, r8
     6d8:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__addsf3>
     6dc:	a7 01       	movw	r20, r14
     6de:	96 01       	movw	r18, r12
     6e0:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__subsf3>
     6e4:	0e 94 a6 0b 	call	0x174c	; 0x174c <__fixunssfsi>
     6e8:	60 93 ae 03 	sts	0x03AE, r22	; 0x8003ae <need_millis1>
     6ec:	70 93 af 03 	sts	0x03AF, r23	; 0x8003af <need_millis1+0x1>
     6f0:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <need_millis1+0x2>
     6f4:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <need_millis1+0x3>
     6f8:	3f c0       	rjmp	.+126    	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     6fa:	85 b3       	in	r24, 0x15	; 21
     6fc:	8b 7f       	andi	r24, 0xFB	; 251
     6fe:	85 bb       	out	0x15, r24	; 21
     700:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <case_num1>
     704:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <case_num1+0x1>
     708:	a0 91 04 03 	lds	r26, 0x0304	; 0x800304 <case_num1+0x2>
     70c:	b0 91 05 03 	lds	r27, 0x0305	; 0x800305 <case_num1+0x3>
     710:	01 96       	adiw	r24, 0x01	; 1
     712:	a1 1d       	adc	r26, r1
     714:	b1 1d       	adc	r27, r1
     716:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <case_num1>
     71a:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <case_num1+0x1>
     71e:	a0 93 04 03 	sts	0x0304, r26	; 0x800304 <case_num1+0x2>
     722:	b0 93 05 03 	sts	0x0305, r27	; 0x800305 <case_num1+0x3>
     726:	60 91 ae 03 	lds	r22, 0x03AE	; 0x8003ae <need_millis1>
     72a:	70 91 af 03 	lds	r23, 0x03AF	; 0x8003af <need_millis1+0x1>
     72e:	80 91 b0 03 	lds	r24, 0x03B0	; 0x8003b0 <need_millis1+0x2>
     732:	90 91 b1 03 	lds	r25, 0x03B1	; 0x8003b1 <need_millis1+0x3>
     736:	0e 94 d5 0b 	call	0x17aa	; 0x17aa <__floatunsisf>
     73a:	a5 01       	movw	r20, r10
     73c:	94 01       	movw	r18, r8
     73e:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__addsf3>
     742:	0e 94 a6 0b 	call	0x174c	; 0x174c <__fixunssfsi>
     746:	60 93 ae 03 	sts	0x03AE, r22	; 0x8003ae <need_millis1>
     74a:	70 93 af 03 	sts	0x03AF, r23	; 0x8003af <need_millis1+0x1>
     74e:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <need_millis1+0x2>
     752:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <need_millis1+0x3>
     756:	10 c0       	rjmp	.+32     	; 0x778 <__EEPROM_REGION_LENGTH__+0x378>
     758:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <case_num1>
     75c:	10 92 03 03 	sts	0x0303, r1	; 0x800303 <case_num1+0x1>
     760:	10 92 04 03 	sts	0x0304, r1	; 0x800304 <case_num1+0x2>
     764:	10 92 05 03 	sts	0x0305, r1	; 0x800305 <case_num1+0x3>
     768:	10 92 b2 03 	sts	0x03B2, r1	; 0x8003b2 <prev_millis1>
     76c:	10 92 b3 03 	sts	0x03B3, r1	; 0x8003b3 <prev_millis1+0x1>
     770:	10 92 b4 03 	sts	0x03B4, r1	; 0x8003b4 <prev_millis1+0x2>
     774:	10 92 b5 03 	sts	0x03B5, r1	; 0x8003b5 <prev_millis1+0x3>
     778:	1f 91       	pop	r17
     77a:	0f 91       	pop	r16
     77c:	ff 90       	pop	r15
     77e:	ef 90       	pop	r14
     780:	df 90       	pop	r13
     782:	cf 90       	pop	r12
     784:	bf 90       	pop	r11
     786:	af 90       	pop	r10
     788:	9f 90       	pop	r9
     78a:	8f 90       	pop	r8
     78c:	08 95       	ret

0000078e <getOxygenTankPressure>:
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	70 e8       	ldi	r23, 0x80	; 128
     792:	8b e3       	ldi	r24, 0x3B	; 59
     794:	96 e4       	ldi	r25, 0x46	; 70
     796:	08 95       	ret

00000798 <controlSolenoidValve>:
     798:	4f 92       	push	r4
     79a:	5f 92       	push	r5
     79c:	6f 92       	push	r6
     79e:	7f 92       	push	r7
     7a0:	8f 92       	push	r8
     7a2:	9f 92       	push	r9
     7a4:	af 92       	push	r10
     7a6:	bf 92       	push	r11
     7a8:	cf 92       	push	r12
     7aa:	df 92       	push	r13
     7ac:	ef 92       	push	r14
     7ae:	ff 92       	push	r15
     7b0:	6b 01       	movw	r12, r22
     7b2:	7c 01       	movw	r14, r24
     7b4:	ba 01       	movw	r22, r20
     7b6:	55 0f       	add	r21, r21
     7b8:	88 0b       	sbc	r24, r24
     7ba:	99 0b       	sbc	r25, r25
     7bc:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__floatsisf>
     7c0:	9b 01       	movw	r18, r22
     7c2:	ac 01       	movw	r20, r24
     7c4:	60 e0       	ldi	r22, 0x00	; 0
     7c6:	70 e0       	ldi	r23, 0x00	; 0
     7c8:	80 ef       	ldi	r24, 0xF0	; 240
     7ca:	91 e4       	ldi	r25, 0x41	; 65
     7cc:	0e 94 34 0b 	call	0x1668	; 0x1668 <__divsf3>
     7d0:	4b 01       	movw	r8, r22
     7d2:	5c 01       	movw	r10, r24
     7d4:	2a e4       	ldi	r18, 0x4A	; 74
     7d6:	3c e0       	ldi	r19, 0x0C	; 12
     7d8:	42 ea       	ldi	r20, 0xA2	; 162
     7da:	5f e3       	ldi	r21, 0x3F	; 63
     7dc:	c7 01       	movw	r24, r14
     7de:	b6 01       	movw	r22, r12
     7e0:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__mulsf3>
     7e4:	29 e2       	ldi	r18, 0x29	; 41
     7e6:	3c e5       	ldi	r19, 0x5C	; 92
     7e8:	45 ed       	ldi	r20, 0xD5	; 213
     7ea:	51 e4       	ldi	r21, 0x41	; 65
     7ec:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__subsf3>
     7f0:	21 e7       	ldi	r18, 0x71	; 113
     7f2:	3d e3       	ldi	r19, 0x3D	; 61
     7f4:	4a e4       	ldi	r20, 0x4A	; 74
     7f6:	5f e3       	ldi	r21, 0x3F	; 63
     7f8:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__mulsf3>
     7fc:	2b 01       	movw	r4, r22
     7fe:	3c 01       	movw	r6, r24
     800:	a7 01       	movw	r20, r14
     802:	96 01       	movw	r18, r12
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	88 ec       	ldi	r24, 0xC8	; 200
     80a:	92 e4       	ldi	r25, 0x42	; 66
     80c:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__subsf3>
     810:	9b 01       	movw	r18, r22
     812:	ac 01       	movw	r20, r24
     814:	c3 01       	movw	r24, r6
     816:	b2 01       	movw	r22, r4
     818:	0e 94 34 0b 	call	0x1668	; 0x1668 <__divsf3>
     81c:	2b 01       	movw	r4, r22
     81e:	3c 01       	movw	r6, r24
     820:	0e 94 c7 03 	call	0x78e	; 0x78e <getOxygenTankPressure>
     824:	9b 01       	movw	r18, r22
     826:	ac 01       	movw	r20, r24
     828:	68 ed       	ldi	r22, 0xD8	; 216
     82a:	73 e1       	ldi	r23, 0x13	; 19
     82c:	86 e0       	ldi	r24, 0x06	; 6
     82e:	98 e4       	ldi	r25, 0x48	; 72
     830:	0e 94 34 0b 	call	0x1668	; 0x1668 <__divsf3>
     834:	6b 01       	movw	r12, r22
     836:	7c 01       	movw	r14, r24
     838:	2d ec       	ldi	r18, 0xCD	; 205
     83a:	3c ec       	ldi	r19, 0xCC	; 204
     83c:	4c e9       	ldi	r20, 0x9C	; 156
     83e:	5f e3       	ldi	r21, 0x3F	; 63
     840:	c7 01       	movw	r24, r14
     842:	b6 01       	movw	r22, r12
     844:	0e 94 34 0b 	call	0x1668	; 0x1668 <__divsf3>
     848:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <sqrt>
     84c:	9b 01       	movw	r18, r22
     84e:	ac 01       	movw	r20, r24
     850:	c3 01       	movw	r24, r6
     852:	b2 01       	movw	r22, r4
     854:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__mulsf3>
     858:	6b 01       	movw	r12, r22
     85a:	7c 01       	movw	r14, r24
     85c:	20 e0       	ldi	r18, 0x00	; 0
     85e:	30 e0       	ldi	r19, 0x00	; 0
     860:	40 e8       	ldi	r20, 0x80	; 128
     862:	5f e3       	ldi	r21, 0x3F	; 63
     864:	0e 94 87 0c 	call	0x190e	; 0x190e <__gesf2>
     868:	18 16       	cp	r1, r24
     86a:	5c f4       	brge	.+22     	; 0x882 <__stack+0x23>
     86c:	a7 01       	movw	r20, r14
     86e:	96 01       	movw	r18, r12
     870:	c5 01       	movw	r24, r10
     872:	b4 01       	movw	r22, r8
     874:	0e 94 34 0b 	call	0x1668	; 0x1668 <__divsf3>
     878:	a5 01       	movw	r20, r10
     87a:	94 01       	movw	r18, r8
     87c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <openSolenoidValves>
     880:	0c c0       	rjmp	.+24     	; 0x89a <__stack+0x3b>
     882:	a7 01       	movw	r20, r14
     884:	96 01       	movw	r18, r12
     886:	c5 01       	movw	r24, r10
     888:	b4 01       	movw	r22, r8
     88a:	0e 94 8c 0c 	call	0x1918	; 0x1918 <__mulsf3>
     88e:	9b 01       	movw	r18, r22
     890:	ac 01       	movw	r20, r24
     892:	c5 01       	movw	r24, r10
     894:	b4 01       	movw	r22, r8
     896:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <openSolenoidValves>
     89a:	ff 90       	pop	r15
     89c:	ef 90       	pop	r14
     89e:	df 90       	pop	r13
     8a0:	cf 90       	pop	r12
     8a2:	bf 90       	pop	r11
     8a4:	af 90       	pop	r10
     8a6:	9f 90       	pop	r9
     8a8:	8f 90       	pop	r8
     8aa:	7f 90       	pop	r7
     8ac:	6f 90       	pop	r6
     8ae:	5f 90       	pop	r5
     8b0:	4f 90       	pop	r4
     8b2:	08 95       	ret

000008b4 <checkBloodOxygenLevel>:
     8b4:	80 e0       	ldi	r24, 0x00	; 0
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	08 95       	ret

000008ba <PatientTemp>:
     8ba:	85 e2       	ldi	r24, 0x25	; 37
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	08 95       	ret

000008c0 <automationOn>:
    //get values and update  Breath per min,Oxygen Percentage,Breath Length
}

bool automationOn() {
    return 1;//Check Automation On/Off
}
     8c0:	81 e0       	ldi	r24, 0x01	; 1
     8c2:	08 95       	ret

000008c4 <turnOn>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}
     8c4:	81 e0       	ldi	r24, 0x01	; 1
     8c6:	08 95       	ret

000008c8 <notifyDisplay>:
        } else { return 1; }
    }else{return 0;}
}

void notifyDisplay(const char *string) {
   lcd_msg(string);
     8c8:	0e 94 23 01 	call	0x246	; 0x246 <lcd_msg>
     8cc:	08 95       	ret

000008ce <concatS>:
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
}
const char *concatS(const char *string, char sPercentage[4]) {
     8ce:	ef 92       	push	r14
     8d0:	ff 92       	push	r15
     8d2:	0f 93       	push	r16
     8d4:	1f 93       	push	r17
     8d6:	cf 93       	push	r28
     8d8:	df 93       	push	r29
     8da:	8c 01       	movw	r16, r24
     8dc:	eb 01       	movw	r28, r22
    char *result = malloc(strlen(string) + strlen(sPercentage) + 1);
     8de:	fc 01       	movw	r30, r24
     8e0:	01 90       	ld	r0, Z+
     8e2:	00 20       	and	r0, r0
     8e4:	e9 f7       	brne	.-6      	; 0x8e0 <concatS+0x12>
     8e6:	31 97       	sbiw	r30, 0x01	; 1
     8e8:	cf 01       	movw	r24, r30
     8ea:	80 1b       	sub	r24, r16
     8ec:	91 0b       	sbc	r25, r17
     8ee:	fb 01       	movw	r30, r22
     8f0:	01 90       	ld	r0, Z+
     8f2:	00 20       	and	r0, r0
     8f4:	e9 f7       	brne	.-6      	; 0x8f0 <concatS+0x22>
     8f6:	31 97       	sbiw	r30, 0x01	; 1
     8f8:	e6 1b       	sub	r30, r22
     8fa:	f7 0b       	sbc	r31, r23
     8fc:	8e 0f       	add	r24, r30
     8fe:	9f 1f       	adc	r25, r31
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <malloc>
     906:	7c 01       	movw	r14, r24
    strcpy(result, string);
     908:	b8 01       	movw	r22, r16
     90a:	0e 94 d0 0e 	call	0x1da0	; 0x1da0 <strcpy>
    strcat(result, sPercentage);
     90e:	be 01       	movw	r22, r28
     910:	c7 01       	movw	r24, r14
     912:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <strcat>
    return result;
}
     916:	c7 01       	movw	r24, r14
     918:	df 91       	pop	r29
     91a:	cf 91       	pop	r28
     91c:	1f 91       	pop	r17
     91e:	0f 91       	pop	r16
     920:	ff 90       	pop	r15
     922:	ef 90       	pop	r14
     924:	08 95       	ret

00000926 <sendSMS>:




void sendSMS(char no[], const char *string) {
     926:	bf 92       	push	r11
     928:	cf 92       	push	r12
     92a:	df 92       	push	r13
     92c:	ef 92       	push	r14
     92e:	ff 92       	push	r15
     930:	0f 93       	push	r16
     932:	1f 93       	push	r17
     934:	cf 93       	push	r28
     936:	df 93       	push	r29
     938:	cd b7       	in	r28, 0x3d	; 61
     93a:	de b7       	in	r29, 0x3e	; 62
     93c:	c4 56       	subi	r28, 0x64	; 100
     93e:	d1 09       	sbc	r29, r1
     940:	0f b6       	in	r0, 0x3f	; 63
     942:	f8 94       	cli
     944:	de bf       	out	0x3e, r29	; 62
     946:	0f be       	out	0x3f, r0	; 63
     948:	cd bf       	out	0x3d, r28	; 61
     94a:	18 2f       	mov	r17, r24
     94c:	09 2f       	mov	r16, r25
     94e:	c6 2e       	mov	r12, r22
     950:	b7 2e       	mov	r11, r23
    USART_SendString("AT\r");
     952:	89 ea       	ldi	r24, 0xA9	; 169
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     95a:	8f e1       	ldi	r24, 0x1F	; 31
     95c:	9e e4       	ldi	r25, 0x4E	; 78
     95e:	01 97       	sbiw	r24, 0x01	; 1
     960:	f1 f7       	brne	.-4      	; 0x95e <sendSMS+0x38>
     962:	00 c0       	rjmp	.+0      	; 0x964 <sendSMS+0x3e>
     964:	00 00       	nop
    _delay_ms(10);
    USART_SendString("AT+CMGF=1\r");
     966:	8d ea       	ldi	r24, 0xAD	; 173
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
     96e:	ef e1       	ldi	r30, 0x1F	; 31
     970:	fe e4       	ldi	r31, 0x4E	; 78
     972:	31 97       	sbiw	r30, 0x01	; 1
     974:	f1 f7       	brne	.-4      	; 0x972 <sendSMS+0x4c>
     976:	00 c0       	rjmp	.+0      	; 0x978 <sendSMS+0x52>
     978:	00 00       	nop
    _delay_ms(10);
    char data_buffer[100];
    sprintf(data_buffer,"AT+CMGS=%s\r",no);
     97a:	0f 93       	push	r16
     97c:	1f 93       	push	r17
     97e:	88 eb       	ldi	r24, 0xB8	; 184
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	9f 93       	push	r25
     984:	8f 93       	push	r24
     986:	8e 01       	movw	r16, r28
     988:	0f 5f       	subi	r16, 0xFF	; 255
     98a:	1f 4f       	sbci	r17, 0xFF	; 255
     98c:	1f 93       	push	r17
     98e:	0f 93       	push	r16
     990:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <sprintf>
    USART_SendString(data_buffer);
     994:	c8 01       	movw	r24, r16
     996:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
    memset(USART_BUFFER, 0, 100);
     99a:	0f 2e       	mov	r0, r31
     99c:	fe e0       	ldi	r31, 0x0E	; 14
     99e:	ef 2e       	mov	r14, r31
     9a0:	f1 e0       	ldi	r31, 0x01	; 1
     9a2:	ff 2e       	mov	r15, r31
     9a4:	f0 2d       	mov	r31, r0
     9a6:	0f 2e       	mov	r0, r31
     9a8:	f4 e6       	ldi	r31, 0x64	; 100
     9aa:	df 2e       	mov	r13, r31
     9ac:	f0 2d       	mov	r31, r0
     9ae:	f7 01       	movw	r30, r14
     9b0:	8d 2d       	mov	r24, r13
     9b2:	11 92       	st	Z+, r1
     9b4:	8a 95       	dec	r24
     9b6:	e9 f7       	brne	.-6      	; 0x9b2 <sendSMS+0x8c>
    sprintf(data_buffer,"%s\r",string);
     9b8:	bf 92       	push	r11
     9ba:	cf 92       	push	r12
     9bc:	80 ec       	ldi	r24, 0xC0	; 192
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	9f 93       	push	r25
     9c2:	8f 93       	push	r24
     9c4:	1f 93       	push	r17
     9c6:	0f 93       	push	r16
     9c8:	0e 94 fc 0e 	call	0x1df8	; 0x1df8 <sprintf>
    USART_SendString(data_buffer);
     9cc:	c8 01       	movw	r24, r16
     9ce:	0e 94 75 01 	call	0x2ea	; 0x2ea <USART_SendString>
    memset(USART_BUFFER, 0, 100);//clear data buffer
     9d2:	f7 01       	movw	r30, r14
     9d4:	11 92       	st	Z+, r1
     9d6:	da 94       	dec	r13
     9d8:	e9 f7       	brne	.-6      	; 0x9d4 <sendSMS+0xae>

}
     9da:	0f b6       	in	r0, 0x3f	; 63
     9dc:	f8 94       	cli
     9de:	de bf       	out	0x3e, r29	; 62
     9e0:	0f be       	out	0x3f, r0	; 63
     9e2:	cd bf       	out	0x3d, r28	; 61
     9e4:	cc 59       	subi	r28, 0x9C	; 156
     9e6:	df 4f       	sbci	r29, 0xFF	; 255
     9e8:	0f b6       	in	r0, 0x3f	; 63
     9ea:	f8 94       	cli
     9ec:	de bf       	out	0x3e, r29	; 62
     9ee:	0f be       	out	0x3f, r0	; 63
     9f0:	cd bf       	out	0x3d, r28	; 61
     9f2:	df 91       	pop	r29
     9f4:	cf 91       	pop	r28
     9f6:	1f 91       	pop	r17
     9f8:	0f 91       	pop	r16
     9fa:	ff 90       	pop	r15
     9fc:	ef 90       	pop	r14
     9fe:	df 90       	pop	r13
     a00:	cf 90       	pop	r12
     a02:	bf 90       	pop	r11
     a04:	08 95       	ret

00000a06 <notifyGSM>:

void notifyDisplay(const char *string) {
   lcd_msg(string);
}

void notifyGSM(const char *string, int percentage) {
     a06:	0f 93       	push	r16
     a08:	1f 93       	push	r17
     a0a:	cf 93       	push	r28
     a0c:	df 93       	push	r29
     a0e:	00 d0       	rcall	.+0      	; 0xa10 <notifyGSM+0xa>
     a10:	00 d0       	rcall	.+0      	; 0xa12 <notifyGSM+0xc>
     a12:	cd b7       	in	r28, 0x3d	; 61
     a14:	de b7       	in	r29, 0x3e	; 62
     a16:	8c 01       	movw	r16, r24
     a18:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     a1a:	4a e0       	ldi	r20, 0x0A	; 10
     a1c:	be 01       	movw	r22, r28
     a1e:	6f 5f       	subi	r22, 0xFF	; 255
     a20:	7f 4f       	sbci	r23, 0xFF	; 255
     a22:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <__itoa_ncheck>
    char Spercentage[4];
    itoa(percentage,Spercentage,10);//convert int to string


    sendSMS(Mobile_no, concatS(string,Spercentage));
     a26:	be 01       	movw	r22, r28
     a28:	6f 5f       	subi	r22, 0xFF	; 255
     a2a:	7f 4f       	sbci	r23, 0xFF	; 255
     a2c:	c8 01       	movw	r24, r16
     a2e:	0e 94 67 04 	call	0x8ce	; 0x8ce <concatS>
     a32:	bc 01       	movw	r22, r24
     a34:	80 e5       	ldi	r24, 0x50	; 80
     a36:	94 e0       	ldi	r25, 0x04	; 4
     a38:	0e 94 93 04 	call	0x926	; 0x926 <sendSMS>
}
     a3c:	0f 90       	pop	r0
     a3e:	0f 90       	pop	r0
     a40:	0f 90       	pop	r0
     a42:	0f 90       	pop	r0
     a44:	df 91       	pop	r29
     a46:	cf 91       	pop	r28
     a48:	1f 91       	pop	r17
     a4a:	0f 91       	pop	r16
     a4c:	08 95       	ret

00000a4e <checkPatientTemp>:

void notifySpeaker() {

}

bool checkPatientTemp() {
     a4e:	cf 92       	push	r12
     a50:	df 92       	push	r13
     a52:	ef 92       	push	r14
     a54:	ff 92       	push	r15
     a56:	0f 93       	push	r16
     a58:	1f 93       	push	r17
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	00 d0       	rcall	.+0      	; 0xa60 <checkPatientTemp+0x12>
     a60:	00 d0       	rcall	.+0      	; 0xa62 <checkPatientTemp+0x14>
     a62:	cd b7       	in	r28, 0x3d	; 61
     a64:	de b7       	in	r29, 0x3e	; 62
    if(PatientTemp()>37.2||PatientTemp()<36.1){
     a66:	0e 94 5d 04 	call	0x8ba	; 0x8ba <PatientTemp>
     a6a:	8c 01       	movw	r16, r24
     a6c:	bc 01       	movw	r22, r24
     a6e:	99 0f       	add	r25, r25
     a70:	88 0b       	sbc	r24, r24
     a72:	99 0b       	sbc	r25, r25
     a74:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__floatsisf>
     a78:	6b 01       	movw	r12, r22
     a7a:	7c 01       	movw	r14, r24
     a7c:	2d ec       	ldi	r18, 0xCD	; 205
     a7e:	3c ec       	ldi	r19, 0xCC	; 204
     a80:	44 e1       	ldi	r20, 0x14	; 20
     a82:	52 e4       	ldi	r21, 0x42	; 66
     a84:	0e 94 87 0c 	call	0x190e	; 0x190e <__gesf2>
     a88:	18 16       	cp	r1, r24
     a8a:	54 f0       	brlt	.+20     	; 0xaa0 <checkPatientTemp+0x52>
     a8c:	26 e6       	ldi	r18, 0x66	; 102
     a8e:	36 e6       	ldi	r19, 0x66	; 102
     a90:	40 e1       	ldi	r20, 0x10	; 16
     a92:	52 e4       	ldi	r21, 0x42	; 66
     a94:	c7 01       	movw	r24, r14
     a96:	b6 01       	movw	r22, r12
     a98:	0e 94 2f 0b 	call	0x165e	; 0x165e <__cmpsf2>
     a9c:	88 23       	and	r24, r24
     a9e:	bc f4       	brge	.+46     	; 0xace <checkPatientTemp+0x80>
        notifyGSM("Temperature Not Normal-",PatientTemp());
     aa0:	b8 01       	movw	r22, r16
     aa2:	84 ec       	ldi	r24, 0xC4	; 196
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	0e 94 03 05 	call	0xa06	; 0xa06 <notifyGSM>
     aaa:	4a e0       	ldi	r20, 0x0A	; 10
     aac:	be 01       	movw	r22, r28
     aae:	6f 5f       	subi	r22, 0xFF	; 255
     ab0:	7f 4f       	sbci	r23, 0xFF	; 255
     ab2:	c8 01       	movw	r24, r16
     ab4:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <__itoa_ncheck>
		char Spercentage[4];
		itoa(PatientTemp(),Spercentage,10);//convert int to string
		notifyDisplay(concatS("Temperature Not Normal-", Spercentage)); 
     ab8:	be 01       	movw	r22, r28
     aba:	6f 5f       	subi	r22, 0xFF	; 255
     abc:	7f 4f       	sbci	r23, 0xFF	; 255
     abe:	84 ec       	ldi	r24, 0xC4	; 196
     ac0:	90 e0       	ldi	r25, 0x00	; 0
     ac2:	0e 94 67 04 	call	0x8ce	; 0x8ce <concatS>
     ac6:	0e 94 64 04 	call	0x8c8	; 0x8c8 <notifyDisplay>
        notifySpeaker();
        return 0;
     aca:	80 e0       	ldi	r24, 0x00	; 0
     acc:	01 c0       	rjmp	.+2      	; 0xad0 <checkPatientTemp+0x82>
    }else{
        return 1;
     ace:	81 e0       	ldi	r24, 0x01	; 1
    }
    //if normal return 1 else notify speaker and gsm
}
     ad0:	0f 90       	pop	r0
     ad2:	0f 90       	pop	r0
     ad4:	0f 90       	pop	r0
     ad6:	0f 90       	pop	r0
     ad8:	df 91       	pop	r29
     ada:	cf 91       	pop	r28
     adc:	1f 91       	pop	r17
     ade:	0f 91       	pop	r16
     ae0:	ff 90       	pop	r15
     ae2:	ef 90       	pop	r14
     ae4:	df 90       	pop	r13
     ae6:	cf 90       	pop	r12
     ae8:	08 95       	ret

00000aea <oxygenTankPercentage>:

}

int oxygenTankPercentage() {
    return 80;
}
     aea:	80 e5       	ldi	r24, 0x50	; 80
     aec:	90 e0       	ldi	r25, 0x00	; 0
     aee:	08 95       	ret

00000af0 <checkStatus>:

bool turnOn() {
    return 1;//return 1 if power on switched pressed else return 0
}

bool checkStatus() {
     af0:	ef 92       	push	r14
     af2:	ff 92       	push	r15
     af4:	1f 93       	push	r17
     af6:	cf 93       	push	r28
     af8:	df 93       	push	r29
     afa:	00 d0       	rcall	.+0      	; 0xafc <checkStatus+0xc>
     afc:	00 d0       	rcall	.+0      	; 0xafe <checkStatus+0xe>
     afe:	cd b7       	in	r28, 0x3d	; 61
     b00:	de b7       	in	r29, 0x3e	; 62
    if (turnOn()) {
     b02:	0e 94 62 04 	call	0x8c4	; 0x8c4 <turnOn>
     b06:	18 2f       	mov	r17, r24
     b08:	88 23       	and	r24, r24
     b0a:	e9 f0       	breq	.+58     	; 0xb46 <checkStatus+0x56>
        if (oxygenTankPercentage() < 10) {
     b0c:	0e 94 75 05 	call	0xaea	; 0xaea <oxygenTankPercentage>
     b10:	7c 01       	movw	r14, r24
     b12:	8a e0       	ldi	r24, 0x0A	; 10
     b14:	e8 16       	cp	r14, r24
     b16:	f1 04       	cpc	r15, r1
     b18:	b4 f4       	brge	.+44     	; 0xb46 <checkStatus+0x56>
            notifyGSM("Oxygen Tank Percentage : ", oxygenTankPercentage());
     b1a:	b7 01       	movw	r22, r14
     b1c:	8c ed       	ldi	r24, 0xDC	; 220
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	0e 94 03 05 	call	0xa06	; 0xa06 <notifyGSM>
     b24:	4a e0       	ldi	r20, 0x0A	; 10
     b26:	be 01       	movw	r22, r28
     b28:	6f 5f       	subi	r22, 0xFF	; 255
     b2a:	7f 4f       	sbci	r23, 0xFF	; 255
     b2c:	c7 01       	movw	r24, r14
     b2e:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <__itoa_ncheck>
			char Spercentage[4];
			itoa(oxygenTankPercentage(),Spercentage,10);//convert int to string
            notifyDisplay(concatS("Oxygen Tank Percentage ", Spercentage));
     b32:	be 01       	movw	r22, r28
     b34:	6f 5f       	subi	r22, 0xFF	; 255
     b36:	7f 4f       	sbci	r23, 0xFF	; 255
     b38:	86 ef       	ldi	r24, 0xF6	; 246
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	0e 94 67 04 	call	0x8ce	; 0x8ce <concatS>
     b40:	0e 94 64 04 	call	0x8c8	; 0x8c8 <notifyDisplay>
            return 0;
     b44:	10 e0       	ldi	r17, 0x00	; 0
        } else { return 1; }
    }else{return 0;}
}
     b46:	81 2f       	mov	r24, r17
     b48:	0f 90       	pop	r0
     b4a:	0f 90       	pop	r0
     b4c:	0f 90       	pop	r0
     b4e:	0f 90       	pop	r0
     b50:	df 91       	pop	r29
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	ff 90       	pop	r15
     b58:	ef 90       	pop	r14
     b5a:	08 95       	ret

00000b5c <startStepperMotor>:
}

int oxygenTankPercentage() {
    return 80;
}
void startStepperMotor(int breathPerMin, int BreathLength) {
     b5c:	0f 93       	push	r16
     b5e:	1f 93       	push	r17
     b60:	cf 93       	push	r28
     b62:	df 93       	push	r29
     b64:	ec 01       	movw	r28, r24
	if(prev_millis0==NULL){
     b66:	80 91 5e 04 	lds	r24, 0x045E	; 0x80045e <prev_millis0>
     b6a:	90 91 5f 04 	lds	r25, 0x045F	; 0x80045f <prev_millis0+0x1>
     b6e:	89 2b       	or	r24, r25
     b70:	09 f0       	breq	.+2      	; 0xb74 <startStepperMotor+0x18>
     b72:	3f c0       	rjmp	.+126    	; 0xbf2 <startStepperMotor+0x96>
		
		prev_millis0=millis();
     b74:	0e 94 b2 0a 	call	0x1564	; 0x1564 <millis>
     b78:	8b 01       	movw	r16, r22
     b7a:	9c 01       	movw	r18, r24
     b7c:	60 93 5e 04 	sts	0x045E, r22	; 0x80045e <prev_millis0>
     b80:	70 93 5f 04 	sts	0x045F, r23	; 0x80045f <prev_millis0+0x1>
     b84:	80 93 60 04 	sts	0x0460, r24	; 0x800460 <prev_millis0+0x2>
     b88:	90 93 61 04 	sts	0x0461, r25	; 0x800461 <prev_millis0+0x3>
		need_millis0=30000/(breathPerMin*10)+prev_millis0;
     b8c:	ce 01       	movw	r24, r28
     b8e:	88 0f       	add	r24, r24
     b90:	99 1f       	adc	r25, r25
     b92:	be 01       	movw	r22, r28
     b94:	66 0f       	add	r22, r22
     b96:	77 1f       	adc	r23, r23
     b98:	66 0f       	add	r22, r22
     b9a:	77 1f       	adc	r23, r23
     b9c:	66 0f       	add	r22, r22
     b9e:	77 1f       	adc	r23, r23
     ba0:	68 0f       	add	r22, r24
     ba2:	79 1f       	adc	r23, r25
     ba4:	80 e3       	ldi	r24, 0x30	; 48
     ba6:	95 e7       	ldi	r25, 0x75	; 117
     ba8:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     bac:	cb 01       	movw	r24, r22
     bae:	77 0f       	add	r23, r23
     bb0:	aa 0b       	sbc	r26, r26
     bb2:	bb 0b       	sbc	r27, r27
     bb4:	08 0f       	add	r16, r24
     bb6:	19 1f       	adc	r17, r25
     bb8:	2a 1f       	adc	r18, r26
     bba:	3b 1f       	adc	r19, r27
     bbc:	00 93 08 03 	sts	0x0308, r16	; 0x800308 <need_millis0>
     bc0:	10 93 09 03 	sts	0x0309, r17	; 0x800309 <need_millis0+0x1>
     bc4:	20 93 0a 03 	sts	0x030A, r18	; 0x80030a <need_millis0+0x2>
     bc8:	30 93 0b 03 	sts	0x030B, r19	; 0x80030b <need_millis0+0x3>
		case_num0=1;
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     bd4:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
		PORTC = PORTC | (1<<4);case_num0++;
     bd8:	85 b3       	in	r24, 0x15	; 21
     bda:	80 61       	ori	r24, 0x10	; 16
     bdc:	85 bb       	out	0x15, r24	; 21
     bde:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     be2:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     be6:	01 96       	adiw	r24, 0x01	; 1
     be8:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     bec:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     bf0:	e3 c3       	rjmp	.+1990   	; 0x13b8 <startStepperMotor+0x85c>
		}else if(need_millis0<millis()){
     bf2:	0e 94 b2 0a 	call	0x1564	; 0x1564 <millis>
     bf6:	00 91 08 03 	lds	r16, 0x0308	; 0x800308 <need_millis0>
     bfa:	10 91 09 03 	lds	r17, 0x0309	; 0x800309 <need_millis0+0x1>
     bfe:	20 91 0a 03 	lds	r18, 0x030A	; 0x80030a <need_millis0+0x2>
     c02:	30 91 0b 03 	lds	r19, 0x030B	; 0x80030b <need_millis0+0x3>
     c06:	06 17       	cp	r16, r22
     c08:	17 07       	cpc	r17, r23
     c0a:	28 07       	cpc	r18, r24
     c0c:	39 07       	cpc	r19, r25
     c0e:	08 f0       	brcs	.+2      	; 0xc12 <startStepperMotor+0xb6>
     c10:	d3 c3       	rjmp	.+1958   	; 0x13b8 <startStepperMotor+0x85c>
		
		switch(case_num0){
     c12:	e0 91 ac 03 	lds	r30, 0x03AC	; 0x8003ac <case_num0>
     c16:	f0 91 ad 03 	lds	r31, 0x03AD	; 0x8003ad <case_num0+0x1>
     c1a:	32 97       	sbiw	r30, 0x02	; 2
     c1c:	e3 31       	cpi	r30, 0x13	; 19
     c1e:	f1 05       	cpc	r31, r1
     c20:	08 f0       	brcs	.+2      	; 0xc24 <startStepperMotor+0xc8>
     c22:	be c3       	rjmp	.+1916   	; 0x13a0 <startStepperMotor+0x844>
     c24:	e6 5d       	subi	r30, 0xD6	; 214
     c26:	ff 4f       	sbci	r31, 0xFF	; 255
     c28:	0c 94 8a 0d 	jmp	0x1b14	; 0x1b14 <__tablejump2__>
			
			case 2:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     c2c:	85 b3       	in	r24, 0x15	; 21
     c2e:	80 64       	ori	r24, 0x40	; 64
     c30:	85 bb       	out	0x15, r24	; 21
     c32:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     c36:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     c40:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     c44:	ce 01       	movw	r24, r28
     c46:	88 0f       	add	r24, r24
     c48:	99 1f       	adc	r25, r25
     c4a:	be 01       	movw	r22, r28
     c4c:	66 0f       	add	r22, r22
     c4e:	77 1f       	adc	r23, r23
     c50:	66 0f       	add	r22, r22
     c52:	77 1f       	adc	r23, r23
     c54:	66 0f       	add	r22, r22
     c56:	77 1f       	adc	r23, r23
     c58:	68 0f       	add	r22, r24
     c5a:	79 1f       	adc	r23, r25
     c5c:	80 e3       	ldi	r24, 0x30	; 48
     c5e:	95 e7       	ldi	r25, 0x75	; 117
     c60:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     c64:	ab 01       	movw	r20, r22
     c66:	77 0f       	add	r23, r23
     c68:	66 0b       	sbc	r22, r22
     c6a:	77 0b       	sbc	r23, r23
     c6c:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     c70:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     c74:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     c78:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     c7c:	84 0f       	add	r24, r20
     c7e:	95 1f       	adc	r25, r21
     c80:	a6 1f       	adc	r26, r22
     c82:	b7 1f       	adc	r27, r23
     c84:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     c88:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     c8c:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     c90:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     c94:	91 c3       	rjmp	.+1826   	; 0x13b8 <startStepperMotor+0x85c>
			case 3:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     c96:	85 b3       	in	r24, 0x15	; 21
     c98:	8f 7e       	andi	r24, 0xEF	; 239
     c9a:	85 bb       	out	0x15, r24	; 21
     c9c:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     ca0:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     ca4:	01 96       	adiw	r24, 0x01	; 1
     ca6:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     caa:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     cae:	ce 01       	movw	r24, r28
     cb0:	88 0f       	add	r24, r24
     cb2:	99 1f       	adc	r25, r25
     cb4:	be 01       	movw	r22, r28
     cb6:	66 0f       	add	r22, r22
     cb8:	77 1f       	adc	r23, r23
     cba:	66 0f       	add	r22, r22
     cbc:	77 1f       	adc	r23, r23
     cbe:	66 0f       	add	r22, r22
     cc0:	77 1f       	adc	r23, r23
     cc2:	68 0f       	add	r22, r24
     cc4:	79 1f       	adc	r23, r25
     cc6:	80 e3       	ldi	r24, 0x30	; 48
     cc8:	95 e7       	ldi	r25, 0x75	; 117
     cca:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     cce:	ab 01       	movw	r20, r22
     cd0:	77 0f       	add	r23, r23
     cd2:	66 0b       	sbc	r22, r22
     cd4:	77 0b       	sbc	r23, r23
     cd6:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     cda:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     cde:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     ce2:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     ce6:	84 0f       	add	r24, r20
     ce8:	95 1f       	adc	r25, r21
     cea:	a6 1f       	adc	r26, r22
     cec:	b7 1f       	adc	r27, r23
     cee:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     cf2:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     cf6:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     cfa:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     cfe:	5c c3       	rjmp	.+1720   	; 0x13b8 <startStepperMotor+0x85c>
			case 4:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     d00:	85 b3       	in	r24, 0x15	; 21
     d02:	80 62       	ori	r24, 0x20	; 32
     d04:	85 bb       	out	0x15, r24	; 21
     d06:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     d0a:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     d0e:	01 96       	adiw	r24, 0x01	; 1
     d10:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     d14:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     d18:	ce 01       	movw	r24, r28
     d1a:	88 0f       	add	r24, r24
     d1c:	99 1f       	adc	r25, r25
     d1e:	be 01       	movw	r22, r28
     d20:	66 0f       	add	r22, r22
     d22:	77 1f       	adc	r23, r23
     d24:	66 0f       	add	r22, r22
     d26:	77 1f       	adc	r23, r23
     d28:	66 0f       	add	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	68 0f       	add	r22, r24
     d2e:	79 1f       	adc	r23, r25
     d30:	80 e3       	ldi	r24, 0x30	; 48
     d32:	95 e7       	ldi	r25, 0x75	; 117
     d34:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     d38:	ab 01       	movw	r20, r22
     d3a:	77 0f       	add	r23, r23
     d3c:	66 0b       	sbc	r22, r22
     d3e:	77 0b       	sbc	r23, r23
     d40:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     d44:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     d48:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     d4c:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     d50:	84 0f       	add	r24, r20
     d52:	95 1f       	adc	r25, r21
     d54:	a6 1f       	adc	r26, r22
     d56:	b7 1f       	adc	r27, r23
     d58:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     d5c:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     d60:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     d64:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     d68:	27 c3       	rjmp	.+1614   	; 0x13b8 <startStepperMotor+0x85c>
			case 5:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     d6a:	85 b3       	in	r24, 0x15	; 21
     d6c:	8f 7b       	andi	r24, 0xBF	; 191
     d6e:	85 bb       	out	0x15, r24	; 21
     d70:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     d74:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     d78:	01 96       	adiw	r24, 0x01	; 1
     d7a:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     d7e:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     d82:	ce 01       	movw	r24, r28
     d84:	88 0f       	add	r24, r24
     d86:	99 1f       	adc	r25, r25
     d88:	be 01       	movw	r22, r28
     d8a:	66 0f       	add	r22, r22
     d8c:	77 1f       	adc	r23, r23
     d8e:	66 0f       	add	r22, r22
     d90:	77 1f       	adc	r23, r23
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	68 0f       	add	r22, r24
     d98:	79 1f       	adc	r23, r25
     d9a:	80 e3       	ldi	r24, 0x30	; 48
     d9c:	95 e7       	ldi	r25, 0x75	; 117
     d9e:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     da2:	ab 01       	movw	r20, r22
     da4:	77 0f       	add	r23, r23
     da6:	66 0b       	sbc	r22, r22
     da8:	77 0b       	sbc	r23, r23
     daa:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     dae:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     db2:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     db6:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     dba:	84 0f       	add	r24, r20
     dbc:	95 1f       	adc	r25, r21
     dbe:	a6 1f       	adc	r26, r22
     dc0:	b7 1f       	adc	r27, r23
     dc2:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     dc6:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     dca:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     dce:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     dd2:	f2 c2       	rjmp	.+1508   	; 0x13b8 <startStepperMotor+0x85c>
			case 6:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     dd4:	85 b3       	in	r24, 0x15	; 21
     dd6:	80 68       	ori	r24, 0x80	; 128
     dd8:	85 bb       	out	0x15, r24	; 21
     dda:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     dde:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     de2:	01 96       	adiw	r24, 0x01	; 1
     de4:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     de8:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     dec:	ce 01       	movw	r24, r28
     dee:	88 0f       	add	r24, r24
     df0:	99 1f       	adc	r25, r25
     df2:	be 01       	movw	r22, r28
     df4:	66 0f       	add	r22, r22
     df6:	77 1f       	adc	r23, r23
     df8:	66 0f       	add	r22, r22
     dfa:	77 1f       	adc	r23, r23
     dfc:	66 0f       	add	r22, r22
     dfe:	77 1f       	adc	r23, r23
     e00:	68 0f       	add	r22, r24
     e02:	79 1f       	adc	r23, r25
     e04:	80 e3       	ldi	r24, 0x30	; 48
     e06:	95 e7       	ldi	r25, 0x75	; 117
     e08:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     e0c:	ab 01       	movw	r20, r22
     e0e:	77 0f       	add	r23, r23
     e10:	66 0b       	sbc	r22, r22
     e12:	77 0b       	sbc	r23, r23
     e14:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     e18:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     e1c:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     e20:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     e24:	84 0f       	add	r24, r20
     e26:	95 1f       	adc	r25, r21
     e28:	a6 1f       	adc	r26, r22
     e2a:	b7 1f       	adc	r27, r23
     e2c:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     e30:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     e34:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     e38:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     e3c:	bd c2       	rjmp	.+1402   	; 0x13b8 <startStepperMotor+0x85c>
			case 7:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     e3e:	85 b3       	in	r24, 0x15	; 21
     e40:	8f 7d       	andi	r24, 0xDF	; 223
     e42:	85 bb       	out	0x15, r24	; 21
     e44:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     e48:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     e4c:	01 96       	adiw	r24, 0x01	; 1
     e4e:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     e52:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     e56:	ce 01       	movw	r24, r28
     e58:	88 0f       	add	r24, r24
     e5a:	99 1f       	adc	r25, r25
     e5c:	be 01       	movw	r22, r28
     e5e:	66 0f       	add	r22, r22
     e60:	77 1f       	adc	r23, r23
     e62:	66 0f       	add	r22, r22
     e64:	77 1f       	adc	r23, r23
     e66:	66 0f       	add	r22, r22
     e68:	77 1f       	adc	r23, r23
     e6a:	68 0f       	add	r22, r24
     e6c:	79 1f       	adc	r23, r25
     e6e:	80 e3       	ldi	r24, 0x30	; 48
     e70:	95 e7       	ldi	r25, 0x75	; 117
     e72:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     e76:	ab 01       	movw	r20, r22
     e78:	77 0f       	add	r23, r23
     e7a:	66 0b       	sbc	r22, r22
     e7c:	77 0b       	sbc	r23, r23
     e7e:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     e82:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     e86:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     e8a:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     e8e:	84 0f       	add	r24, r20
     e90:	95 1f       	adc	r25, r21
     e92:	a6 1f       	adc	r26, r22
     e94:	b7 1f       	adc	r27, r23
     e96:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     e9a:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     e9e:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     ea2:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     ea6:	88 c2       	rjmp	.+1296   	; 0x13b8 <startStepperMotor+0x85c>
			case 8:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     ea8:	85 b3       	in	r24, 0x15	; 21
     eaa:	80 61       	ori	r24, 0x10	; 16
     eac:	85 bb       	out	0x15, r24	; 21
     eae:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     eb2:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     eb6:	01 96       	adiw	r24, 0x01	; 1
     eb8:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     ebc:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     ec0:	ce 01       	movw	r24, r28
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	be 01       	movw	r22, r28
     ec8:	66 0f       	add	r22, r22
     eca:	77 1f       	adc	r23, r23
     ecc:	66 0f       	add	r22, r22
     ece:	77 1f       	adc	r23, r23
     ed0:	66 0f       	add	r22, r22
     ed2:	77 1f       	adc	r23, r23
     ed4:	68 0f       	add	r22, r24
     ed6:	79 1f       	adc	r23, r25
     ed8:	80 e3       	ldi	r24, 0x30	; 48
     eda:	95 e7       	ldi	r25, 0x75	; 117
     edc:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     ee0:	ab 01       	movw	r20, r22
     ee2:	77 0f       	add	r23, r23
     ee4:	66 0b       	sbc	r22, r22
     ee6:	77 0b       	sbc	r23, r23
     ee8:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     eec:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     ef0:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     ef4:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     ef8:	84 0f       	add	r24, r20
     efa:	95 1f       	adc	r25, r21
     efc:	a6 1f       	adc	r26, r22
     efe:	b7 1f       	adc	r27, r23
     f00:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     f04:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     f08:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     f0c:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     f10:	53 c2       	rjmp	.+1190   	; 0x13b8 <startStepperMotor+0x85c>
			case 9:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     f12:	85 b3       	in	r24, 0x15	; 21
     f14:	8f 77       	andi	r24, 0x7F	; 127
     f16:	85 bb       	out	0x15, r24	; 21
     f18:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     f1c:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     f20:	01 96       	adiw	r24, 0x01	; 1
     f22:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     f26:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     f2a:	ce 01       	movw	r24, r28
     f2c:	88 0f       	add	r24, r24
     f2e:	99 1f       	adc	r25, r25
     f30:	be 01       	movw	r22, r28
     f32:	66 0f       	add	r22, r22
     f34:	77 1f       	adc	r23, r23
     f36:	66 0f       	add	r22, r22
     f38:	77 1f       	adc	r23, r23
     f3a:	66 0f       	add	r22, r22
     f3c:	77 1f       	adc	r23, r23
     f3e:	68 0f       	add	r22, r24
     f40:	79 1f       	adc	r23, r25
     f42:	80 e3       	ldi	r24, 0x30	; 48
     f44:	95 e7       	ldi	r25, 0x75	; 117
     f46:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     f4a:	ab 01       	movw	r20, r22
     f4c:	77 0f       	add	r23, r23
     f4e:	66 0b       	sbc	r22, r22
     f50:	77 0b       	sbc	r23, r23
     f52:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     f56:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     f5a:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     f5e:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     f62:	84 0f       	add	r24, r20
     f64:	95 1f       	adc	r25, r21
     f66:	a6 1f       	adc	r26, r22
     f68:	b7 1f       	adc	r27, r23
     f6a:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     f6e:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     f72:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     f76:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     f7a:	1e c2       	rjmp	.+1084   	; 0x13b8 <startStepperMotor+0x85c>
			case 10:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     f7c:	85 b3       	in	r24, 0x15	; 21
     f7e:	8f 7e       	andi	r24, 0xEF	; 239
     f80:	85 bb       	out	0x15, r24	; 21
     f82:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     f86:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     f8a:	01 96       	adiw	r24, 0x01	; 1
     f8c:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     f90:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     f94:	ce 01       	movw	r24, r28
     f96:	88 0f       	add	r24, r24
     f98:	99 1f       	adc	r25, r25
     f9a:	be 01       	movw	r22, r28
     f9c:	66 0f       	add	r22, r22
     f9e:	77 1f       	adc	r23, r23
     fa0:	66 0f       	add	r22, r22
     fa2:	77 1f       	adc	r23, r23
     fa4:	66 0f       	add	r22, r22
     fa6:	77 1f       	adc	r23, r23
     fa8:	68 0f       	add	r22, r24
     faa:	79 1f       	adc	r23, r25
     fac:	80 e3       	ldi	r24, 0x30	; 48
     fae:	95 e7       	ldi	r25, 0x75	; 117
     fb0:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
     fb4:	ab 01       	movw	r20, r22
     fb6:	77 0f       	add	r23, r23
     fb8:	66 0b       	sbc	r22, r22
     fba:	77 0b       	sbc	r23, r23
     fbc:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
     fc0:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
     fc4:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
     fc8:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
     fcc:	84 0f       	add	r24, r20
     fce:	95 1f       	adc	r25, r21
     fd0:	a6 1f       	adc	r26, r22
     fd2:	b7 1f       	adc	r27, r23
     fd4:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
     fd8:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
     fdc:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
     fe0:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
     fe4:	e9 c1       	rjmp	.+978    	; 0x13b8 <startStepperMotor+0x85c>
			case 11:PORTC = PORTC | (1<<4);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
     fe6:	85 b3       	in	r24, 0x15	; 21
     fe8:	80 61       	ori	r24, 0x10	; 16
     fea:	85 bb       	out	0x15, r24	; 21
     fec:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
     ff0:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
     ff4:	01 96       	adiw	r24, 0x01	; 1
     ff6:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
     ffa:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
     ffe:	ce 01       	movw	r24, r28
    1000:	88 0f       	add	r24, r24
    1002:	99 1f       	adc	r25, r25
    1004:	be 01       	movw	r22, r28
    1006:	66 0f       	add	r22, r22
    1008:	77 1f       	adc	r23, r23
    100a:	66 0f       	add	r22, r22
    100c:	77 1f       	adc	r23, r23
    100e:	66 0f       	add	r22, r22
    1010:	77 1f       	adc	r23, r23
    1012:	68 0f       	add	r22, r24
    1014:	79 1f       	adc	r23, r25
    1016:	80 e3       	ldi	r24, 0x30	; 48
    1018:	95 e7       	ldi	r25, 0x75	; 117
    101a:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    101e:	ab 01       	movw	r20, r22
    1020:	77 0f       	add	r23, r23
    1022:	66 0b       	sbc	r22, r22
    1024:	77 0b       	sbc	r23, r23
    1026:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    102a:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    102e:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    1032:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    1036:	84 0f       	add	r24, r20
    1038:	95 1f       	adc	r25, r21
    103a:	a6 1f       	adc	r26, r22
    103c:	b7 1f       	adc	r27, r23
    103e:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    1042:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    1046:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    104a:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    104e:	b4 c1       	rjmp	.+872    	; 0x13b8 <startStepperMotor+0x85c>
			case 12:PORTC = PORTC | (1<<7);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1050:	85 b3       	in	r24, 0x15	; 21
    1052:	80 68       	ori	r24, 0x80	; 128
    1054:	85 bb       	out	0x15, r24	; 21
    1056:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    105a:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    105e:	01 96       	adiw	r24, 0x01	; 1
    1060:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    1064:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    1068:	ce 01       	movw	r24, r28
    106a:	88 0f       	add	r24, r24
    106c:	99 1f       	adc	r25, r25
    106e:	be 01       	movw	r22, r28
    1070:	66 0f       	add	r22, r22
    1072:	77 1f       	adc	r23, r23
    1074:	66 0f       	add	r22, r22
    1076:	77 1f       	adc	r23, r23
    1078:	66 0f       	add	r22, r22
    107a:	77 1f       	adc	r23, r23
    107c:	68 0f       	add	r22, r24
    107e:	79 1f       	adc	r23, r25
    1080:	80 e3       	ldi	r24, 0x30	; 48
    1082:	95 e7       	ldi	r25, 0x75	; 117
    1084:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    1088:	ab 01       	movw	r20, r22
    108a:	77 0f       	add	r23, r23
    108c:	66 0b       	sbc	r22, r22
    108e:	77 0b       	sbc	r23, r23
    1090:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    1094:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    1098:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    109c:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    10a0:	84 0f       	add	r24, r20
    10a2:	95 1f       	adc	r25, r21
    10a4:	a6 1f       	adc	r26, r22
    10a6:	b7 1f       	adc	r27, r23
    10a8:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    10ac:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    10b0:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    10b4:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    10b8:	7f c1       	rjmp	.+766    	; 0x13b8 <startStepperMotor+0x85c>
			case 13:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    10ba:	85 b3       	in	r24, 0x15	; 21
    10bc:	8f 7e       	andi	r24, 0xEF	; 239
    10be:	85 bb       	out	0x15, r24	; 21
    10c0:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    10c4:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    10c8:	01 96       	adiw	r24, 0x01	; 1
    10ca:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    10ce:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    10d2:	ce 01       	movw	r24, r28
    10d4:	88 0f       	add	r24, r24
    10d6:	99 1f       	adc	r25, r25
    10d8:	be 01       	movw	r22, r28
    10da:	66 0f       	add	r22, r22
    10dc:	77 1f       	adc	r23, r23
    10de:	66 0f       	add	r22, r22
    10e0:	77 1f       	adc	r23, r23
    10e2:	66 0f       	add	r22, r22
    10e4:	77 1f       	adc	r23, r23
    10e6:	68 0f       	add	r22, r24
    10e8:	79 1f       	adc	r23, r25
    10ea:	80 e3       	ldi	r24, 0x30	; 48
    10ec:	95 e7       	ldi	r25, 0x75	; 117
    10ee:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    10f2:	ab 01       	movw	r20, r22
    10f4:	77 0f       	add	r23, r23
    10f6:	66 0b       	sbc	r22, r22
    10f8:	77 0b       	sbc	r23, r23
    10fa:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    10fe:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    1102:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    1106:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    110a:	84 0f       	add	r24, r20
    110c:	95 1f       	adc	r25, r21
    110e:	a6 1f       	adc	r26, r22
    1110:	b7 1f       	adc	r27, r23
    1112:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    1116:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    111a:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    111e:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    1122:	4a c1       	rjmp	.+660    	; 0x13b8 <startStepperMotor+0x85c>
			case 14:PORTC = PORTC | (1<<5);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1124:	85 b3       	in	r24, 0x15	; 21
    1126:	80 62       	ori	r24, 0x20	; 32
    1128:	85 bb       	out	0x15, r24	; 21
    112a:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    112e:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    1132:	01 96       	adiw	r24, 0x01	; 1
    1134:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    1138:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    113c:	ce 01       	movw	r24, r28
    113e:	88 0f       	add	r24, r24
    1140:	99 1f       	adc	r25, r25
    1142:	be 01       	movw	r22, r28
    1144:	66 0f       	add	r22, r22
    1146:	77 1f       	adc	r23, r23
    1148:	66 0f       	add	r22, r22
    114a:	77 1f       	adc	r23, r23
    114c:	66 0f       	add	r22, r22
    114e:	77 1f       	adc	r23, r23
    1150:	68 0f       	add	r22, r24
    1152:	79 1f       	adc	r23, r25
    1154:	80 e3       	ldi	r24, 0x30	; 48
    1156:	95 e7       	ldi	r25, 0x75	; 117
    1158:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    115c:	ab 01       	movw	r20, r22
    115e:	77 0f       	add	r23, r23
    1160:	66 0b       	sbc	r22, r22
    1162:	77 0b       	sbc	r23, r23
    1164:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    1168:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    116c:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    1170:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    1174:	84 0f       	add	r24, r20
    1176:	95 1f       	adc	r25, r21
    1178:	a6 1f       	adc	r26, r22
    117a:	b7 1f       	adc	r27, r23
    117c:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    1180:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    1184:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    1188:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    118c:	15 c1       	rjmp	.+554    	; 0x13b8 <startStepperMotor+0x85c>
			case 16:PORTC = PORTC & (~(1<<7));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    118e:	85 b3       	in	r24, 0x15	; 21
    1190:	8f 77       	andi	r24, 0x7F	; 127
    1192:	85 bb       	out	0x15, r24	; 21
    1194:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    1198:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    119c:	01 96       	adiw	r24, 0x01	; 1
    119e:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    11a2:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    11a6:	ce 01       	movw	r24, r28
    11a8:	88 0f       	add	r24, r24
    11aa:	99 1f       	adc	r25, r25
    11ac:	be 01       	movw	r22, r28
    11ae:	66 0f       	add	r22, r22
    11b0:	77 1f       	adc	r23, r23
    11b2:	66 0f       	add	r22, r22
    11b4:	77 1f       	adc	r23, r23
    11b6:	66 0f       	add	r22, r22
    11b8:	77 1f       	adc	r23, r23
    11ba:	68 0f       	add	r22, r24
    11bc:	79 1f       	adc	r23, r25
    11be:	80 e3       	ldi	r24, 0x30	; 48
    11c0:	95 e7       	ldi	r25, 0x75	; 117
    11c2:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    11c6:	ab 01       	movw	r20, r22
    11c8:	77 0f       	add	r23, r23
    11ca:	66 0b       	sbc	r22, r22
    11cc:	77 0b       	sbc	r23, r23
    11ce:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    11d2:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    11d6:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    11da:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    11de:	84 0f       	add	r24, r20
    11e0:	95 1f       	adc	r25, r21
    11e2:	a6 1f       	adc	r26, r22
    11e4:	b7 1f       	adc	r27, r23
    11e6:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    11ea:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    11ee:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    11f2:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    11f6:	e0 c0       	rjmp	.+448    	; 0x13b8 <startStepperMotor+0x85c>
			case 17:PORTC = PORTC | (1<<6);case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    11f8:	85 b3       	in	r24, 0x15	; 21
    11fa:	80 64       	ori	r24, 0x40	; 64
    11fc:	85 bb       	out	0x15, r24	; 21
    11fe:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    1202:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    1206:	01 96       	adiw	r24, 0x01	; 1
    1208:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    120c:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    1210:	ce 01       	movw	r24, r28
    1212:	88 0f       	add	r24, r24
    1214:	99 1f       	adc	r25, r25
    1216:	be 01       	movw	r22, r28
    1218:	66 0f       	add	r22, r22
    121a:	77 1f       	adc	r23, r23
    121c:	66 0f       	add	r22, r22
    121e:	77 1f       	adc	r23, r23
    1220:	66 0f       	add	r22, r22
    1222:	77 1f       	adc	r23, r23
    1224:	68 0f       	add	r22, r24
    1226:	79 1f       	adc	r23, r25
    1228:	80 e3       	ldi	r24, 0x30	; 48
    122a:	95 e7       	ldi	r25, 0x75	; 117
    122c:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    1230:	ab 01       	movw	r20, r22
    1232:	77 0f       	add	r23, r23
    1234:	66 0b       	sbc	r22, r22
    1236:	77 0b       	sbc	r23, r23
    1238:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    123c:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    1240:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    1244:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    1248:	84 0f       	add	r24, r20
    124a:	95 1f       	adc	r25, r21
    124c:	a6 1f       	adc	r26, r22
    124e:	b7 1f       	adc	r27, r23
    1250:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    1254:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    1258:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    125c:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    1260:	ab c0       	rjmp	.+342    	; 0x13b8 <startStepperMotor+0x85c>
			case 18:PORTC = PORTC & (~(1<<5));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1262:	85 b3       	in	r24, 0x15	; 21
    1264:	8f 7d       	andi	r24, 0xDF	; 223
    1266:	85 bb       	out	0x15, r24	; 21
    1268:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    126c:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    1270:	01 96       	adiw	r24, 0x01	; 1
    1272:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    1276:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    127a:	ce 01       	movw	r24, r28
    127c:	88 0f       	add	r24, r24
    127e:	99 1f       	adc	r25, r25
    1280:	be 01       	movw	r22, r28
    1282:	66 0f       	add	r22, r22
    1284:	77 1f       	adc	r23, r23
    1286:	66 0f       	add	r22, r22
    1288:	77 1f       	adc	r23, r23
    128a:	66 0f       	add	r22, r22
    128c:	77 1f       	adc	r23, r23
    128e:	68 0f       	add	r22, r24
    1290:	79 1f       	adc	r23, r25
    1292:	80 e3       	ldi	r24, 0x30	; 48
    1294:	95 e7       	ldi	r25, 0x75	; 117
    1296:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    129a:	ab 01       	movw	r20, r22
    129c:	77 0f       	add	r23, r23
    129e:	66 0b       	sbc	r22, r22
    12a0:	77 0b       	sbc	r23, r23
    12a2:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    12a6:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    12aa:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    12ae:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    12b2:	84 0f       	add	r24, r20
    12b4:	95 1f       	adc	r25, r21
    12b6:	a6 1f       	adc	r26, r22
    12b8:	b7 1f       	adc	r27, r23
    12ba:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    12be:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    12c2:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    12c6:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    12ca:	76 c0       	rjmp	.+236    	; 0x13b8 <startStepperMotor+0x85c>
			case 19:PORTC = PORTC & (~(1<<6));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    12cc:	85 b3       	in	r24, 0x15	; 21
    12ce:	8f 7b       	andi	r24, 0xBF	; 191
    12d0:	85 bb       	out	0x15, r24	; 21
    12d2:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    12d6:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    12da:	01 96       	adiw	r24, 0x01	; 1
    12dc:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    12e0:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    12e4:	ce 01       	movw	r24, r28
    12e6:	88 0f       	add	r24, r24
    12e8:	99 1f       	adc	r25, r25
    12ea:	be 01       	movw	r22, r28
    12ec:	66 0f       	add	r22, r22
    12ee:	77 1f       	adc	r23, r23
    12f0:	66 0f       	add	r22, r22
    12f2:	77 1f       	adc	r23, r23
    12f4:	66 0f       	add	r22, r22
    12f6:	77 1f       	adc	r23, r23
    12f8:	68 0f       	add	r22, r24
    12fa:	79 1f       	adc	r23, r25
    12fc:	80 e3       	ldi	r24, 0x30	; 48
    12fe:	95 e7       	ldi	r25, 0x75	; 117
    1300:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    1304:	ab 01       	movw	r20, r22
    1306:	77 0f       	add	r23, r23
    1308:	66 0b       	sbc	r22, r22
    130a:	77 0b       	sbc	r23, r23
    130c:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    1310:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    1314:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    1318:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    131c:	84 0f       	add	r24, r20
    131e:	95 1f       	adc	r25, r21
    1320:	a6 1f       	adc	r26, r22
    1322:	b7 1f       	adc	r27, r23
    1324:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    1328:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    132c:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    1330:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    1334:	41 c0       	rjmp	.+130    	; 0x13b8 <startStepperMotor+0x85c>
			case 20:PORTC = PORTC & (~(1<<4));case_num0++;need_millis0=need_millis0+30000/(breathPerMin*10);break;
    1336:	85 b3       	in	r24, 0x15	; 21
    1338:	8f 7e       	andi	r24, 0xEF	; 239
    133a:	85 bb       	out	0x15, r24	; 21
    133c:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <case_num0>
    1340:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <case_num0+0x1>
    1344:	01 96       	adiw	r24, 0x01	; 1
    1346:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <case_num0+0x1>
    134a:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <case_num0>
    134e:	ce 01       	movw	r24, r28
    1350:	88 0f       	add	r24, r24
    1352:	99 1f       	adc	r25, r25
    1354:	be 01       	movw	r22, r28
    1356:	66 0f       	add	r22, r22
    1358:	77 1f       	adc	r23, r23
    135a:	66 0f       	add	r22, r22
    135c:	77 1f       	adc	r23, r23
    135e:	66 0f       	add	r22, r22
    1360:	77 1f       	adc	r23, r23
    1362:	68 0f       	add	r22, r24
    1364:	79 1f       	adc	r23, r25
    1366:	80 e3       	ldi	r24, 0x30	; 48
    1368:	95 e7       	ldi	r25, 0x75	; 117
    136a:	0e 94 54 0d 	call	0x1aa8	; 0x1aa8 <__divmodhi4>
    136e:	ab 01       	movw	r20, r22
    1370:	77 0f       	add	r23, r23
    1372:	66 0b       	sbc	r22, r22
    1374:	77 0b       	sbc	r23, r23
    1376:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <need_millis0>
    137a:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <need_millis0+0x1>
    137e:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <need_millis0+0x2>
    1382:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <need_millis0+0x3>
    1386:	84 0f       	add	r24, r20
    1388:	95 1f       	adc	r25, r21
    138a:	a6 1f       	adc	r26, r22
    138c:	b7 1f       	adc	r27, r23
    138e:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <need_millis0>
    1392:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <need_millis0+0x1>
    1396:	a0 93 0a 03 	sts	0x030A, r26	; 0x80030a <need_millis0+0x2>
    139a:	b0 93 0b 03 	sts	0x030B, r27	; 0x80030b <need_millis0+0x3>
    139e:	0c c0       	rjmp	.+24     	; 0x13b8 <startStepperMotor+0x85c>
			default:case_num0=NULL;prev_millis0=NULL;
    13a0:	10 92 ad 03 	sts	0x03AD, r1	; 0x8003ad <case_num0+0x1>
    13a4:	10 92 ac 03 	sts	0x03AC, r1	; 0x8003ac <case_num0>
    13a8:	10 92 5e 04 	sts	0x045E, r1	; 0x80045e <prev_millis0>
    13ac:	10 92 5f 04 	sts	0x045F, r1	; 0x80045f <prev_millis0+0x1>
    13b0:	10 92 60 04 	sts	0x0460, r1	; 0x800460 <prev_millis0+0x2>
    13b4:	10 92 61 04 	sts	0x0461, r1	; 0x800461 <prev_millis0+0x3>
	



	
}
    13b8:	df 91       	pop	r29
    13ba:	cf 91       	pop	r28
    13bc:	1f 91       	pop	r17
    13be:	0f 91       	pop	r16
    13c0:	08 95       	ret

000013c2 <startOxygenAndAirSupply>:
    memset(USART_BUFFER, 0, 100);
    _delay_ms(10);
    USART_SendString("AT+SAPBR=1,1\r");
}

void startOxygenAndAirSupply(int percentage) {
    13c2:	cf 93       	push	r28
    13c4:	df 93       	push	r29
    controlOxygenPercentage(checkBloodOxygenLevel());
	controlSolenoidValve(Oxygen_percentage, Average_Breath_Per_Min);
    13c6:	c0 91 68 00 	lds	r28, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    13ca:	d0 91 69 00 	lds	r29, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    13ce:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <Oxygen_percentage>
    13d2:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    13d6:	07 2e       	mov	r0, r23
    13d8:	00 0c       	add	r0, r0
    13da:	88 0b       	sbc	r24, r24
    13dc:	99 0b       	sbc	r25, r25
    13de:	0e 94 d7 0b 	call	0x17ae	; 0x17ae <__floatsisf>
    13e2:	ae 01       	movw	r20, r28
    13e4:	0e 94 cc 03 	call	0x798	; 0x798 <controlSolenoidValve>
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    13e8:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    13ec:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    13f0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    13f4:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    13f8:	0e 94 ae 05 	call	0xb5c	; 0xb5c <startStepperMotor>
    
}
    13fc:	df 91       	pop	r29
    13fe:	cf 91       	pop	r28
    1400:	08 95       	ret

00001402 <startAirSupply>:
}



void startAirSupply() {
    startStepperMotor(Average_Breath_Per_Min, Average_Breath_length);
    1402:	60 91 6a 00 	lds	r22, 0x006A	; 0x80006a <Average_Breath_length>
    1406:	70 91 6b 00 	lds	r23, 0x006B	; 0x80006b <Average_Breath_length+0x1>
    140a:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    140e:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    1412:	0e 94 ae 05 	call	0xb5c	; 0xb5c <startStepperMotor>
    controlSolenoidValve(100, Average_Breath_Per_Min);
    1416:	40 91 68 00 	lds	r20, 0x0068	; 0x800068 <Average_Breath_Per_Min>
    141a:	50 91 69 00 	lds	r21, 0x0069	; 0x800069 <Average_Breath_Per_Min+0x1>
    141e:	60 e0       	ldi	r22, 0x00	; 0
    1420:	70 e0       	ldi	r23, 0x00	; 0
    1422:	88 ec       	ldi	r24, 0xC8	; 200
    1424:	92 e4       	ldi	r25, 0x42	; 66
    1426:	0e 94 cc 03 	call	0x798	; 0x798 <controlSolenoidValve>
    142a:	08 95       	ret

0000142c <main>:


int main(void)
{
    /* Replace with your application code */
    DDRC = DDRC | (1<<2); // solenoid valve
    142c:	84 b3       	in	r24, 0x14	; 20
    142e:	84 60       	ori	r24, 0x04	; 4
    1430:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<3); // solenoid valve
    1432:	84 b3       	in	r24, 0x14	; 20
    1434:	88 60       	ori	r24, 0x08	; 8
    1436:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<4); // stepper motor
    1438:	84 b3       	in	r24, 0x14	; 20
    143a:	80 61       	ori	r24, 0x10	; 16
    143c:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<5); // stepper motor
    143e:	84 b3       	in	r24, 0x14	; 20
    1440:	80 62       	ori	r24, 0x20	; 32
    1442:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<6); // stepper motor
    1444:	84 b3       	in	r24, 0x14	; 20
    1446:	80 64       	ori	r24, 0x40	; 64
    1448:	84 bb       	out	0x14, r24	; 20
    DDRC = DDRC | (1<<7); // stepper motor
    144a:	84 b3       	in	r24, 0x14	; 20
    144c:	80 68       	ori	r24, 0x80	; 128
    144e:	84 bb       	out	0x14, r24	; 20
	DDRB=0x0F;            //Make PB0 to PB3 = output and PB4 to PB6=input for key pad
    1450:	8f e0       	ldi	r24, 0x0F	; 15
    1452:	87 bb       	out	0x17, r24	; 23
	init_millis(8000000UL);
    1454:	60 e0       	ldi	r22, 0x00	; 0
    1456:	72 e1       	ldi	r23, 0x12	; 18
    1458:	8a e7       	ldi	r24, 0x7A	; 122
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	0e 94 9f 0a 	call	0x153e	; 0x153e <init_millis>
	sei();
    1460:	78 94       	sei
     i2c_init();
    1462:	0e 94 30 01 	call	0x260	; 0x260 <i2c_init>
	 i2c_start();
    1466:	0e 94 36 01 	call	0x26c	; 0x26c <i2c_start>
	 i2c_write(0x70);
    146a:	80 e7       	ldi	r24, 0x70	; 112
    146c:	0e 94 3c 01 	call	0x278	; 0x278 <i2c_write>
	 lcd_init();
    1470:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <lcd_init>
    USART_Init(9600);
    1474:	60 e8       	ldi	r22, 0x80	; 128
    1476:	75 e2       	ldi	r23, 0x25	; 37
    1478:	80 e0       	ldi	r24, 0x00	; 0
    147a:	90 e0       	ldi	r25, 0x00	; 0
    147c:	0e 94 43 01 	call	0x286	; 0x286 <USART_Init>
    1480:	2f ef       	ldi	r18, 0xFF	; 255
    1482:	89 e6       	ldi	r24, 0x69	; 105
    1484:	98 e1       	ldi	r25, 0x18	; 24
    1486:	21 50       	subi	r18, 0x01	; 1
    1488:	80 40       	sbci	r24, 0x00	; 0
    148a:	90 40       	sbci	r25, 0x00	; 0
    148c:	e1 f7       	brne	.-8      	; 0x1486 <main+0x5a>
    148e:	00 c0       	rjmp	.+0      	; 0x1490 <main+0x64>
    1490:	00 00       	nop
    _delay_ms(1000);
    GSMConnect();
    1492:	0e 94 8b 01 	call	0x316	; 0x316 <GSMConnect>
	 
	 
    while (1)
    {   
		
     startOxygenAndAirSupply(60);
    1496:	8c e3       	ldi	r24, 0x3C	; 60
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <startOxygenAndAirSupply>



        if(checkStatus()){
    149e:	0e 94 78 05 	call	0xaf0	; 0xaf0 <checkStatus>
    14a2:	88 23       	and	r24, r24
    14a4:	21 f1       	breq	.+72     	; 0x14ee <main+0xc2>
            if(automationOn()){
    14a6:	0e 94 60 04 	call	0x8c0	; 0x8c0 <automationOn>
    14aa:	88 23       	and	r24, r24
    14ac:	b9 f0       	breq	.+46     	; 0x14dc <main+0xb0>
                if(checkPatientTemp()){
    14ae:	0e 94 27 05 	call	0xa4e	; 0xa4e <checkPatientTemp>
    14b2:	88 23       	and	r24, r24
    14b4:	81 f3       	breq	.-32     	; 0x1496 <main+0x6a>

                    if(checkBloodOxygenLevel() < Average_Blood_Oxygen_level){
    14b6:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <checkBloodOxygenLevel>
    14ba:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <Average_Blood_Oxygen_level>
    14be:	30 91 6d 00 	lds	r19, 0x006D	; 0x80006d <Average_Blood_Oxygen_level+0x1>
    14c2:	82 17       	cp	r24, r18
    14c4:	93 07       	cpc	r25, r19
    14c6:	3c f4       	brge	.+14     	; 0x14d6 <main+0xaa>
                        startOxygenAndAirSupply(Oxygen_percentage);
    14c8:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    14cc:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    14d0:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <startOxygenAndAirSupply>
    14d4:	e0 cf       	rjmp	.-64     	; 0x1496 <main+0x6a>
                    }else{
                        startAirSupply();
    14d6:	0e 94 01 0a 	call	0x1402	; 0x1402 <startAirSupply>
    14da:	dd cf       	rjmp	.-70     	; 0x1496 <main+0x6a>
                    }
                }
            }else{
                checkPatientTemp();
    14dc:	0e 94 27 05 	call	0xa4e	; 0xa4e <checkPatientTemp>
                getParametersFromKnobs();
                startOxygenAndAirSupply(Oxygen_percentage);
    14e0:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <Oxygen_percentage>
    14e4:	90 91 67 00 	lds	r25, 0x0067	; 0x800067 <Oxygen_percentage+0x1>
    14e8:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <startOxygenAndAirSupply>
    14ec:	d4 cf       	rjmp	.-88     	; 0x1496 <main+0x6a>
            }
        }else{return 0;}
    }
}
    14ee:	80 e0       	ldi	r24, 0x00	; 0
    14f0:	90 e0       	ldi	r25, 0x00	; 0
    14f2:	08 95       	ret

000014f4 <__vector_7>:
#include <avr/interrupt.h>

#include "millis.h"

ISR(TIMER1_COMPA_vect)
{
    14f4:	1f 92       	push	r1
    14f6:	0f 92       	push	r0
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	0f 92       	push	r0
    14fc:	11 24       	eor	r1, r1
    14fe:	8f 93       	push	r24
    1500:	9f 93       	push	r25
    1502:	af 93       	push	r26
    1504:	bf 93       	push	r27
  timer1_millis++;
    1506:	80 91 b6 03 	lds	r24, 0x03B6	; 0x8003b6 <timer1_millis>
    150a:	90 91 b7 03 	lds	r25, 0x03B7	; 0x8003b7 <timer1_millis+0x1>
    150e:	a0 91 b8 03 	lds	r26, 0x03B8	; 0x8003b8 <timer1_millis+0x2>
    1512:	b0 91 b9 03 	lds	r27, 0x03B9	; 0x8003b9 <timer1_millis+0x3>
    1516:	01 96       	adiw	r24, 0x01	; 1
    1518:	a1 1d       	adc	r26, r1
    151a:	b1 1d       	adc	r27, r1
    151c:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <timer1_millis>
    1520:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <timer1_millis+0x1>
    1524:	a0 93 b8 03 	sts	0x03B8, r26	; 0x8003b8 <timer1_millis+0x2>
    1528:	b0 93 b9 03 	sts	0x03B9, r27	; 0x8003b9 <timer1_millis+0x3>
}
    152c:	bf 91       	pop	r27
    152e:	af 91       	pop	r26
    1530:	9f 91       	pop	r25
    1532:	8f 91       	pop	r24
    1534:	0f 90       	pop	r0
    1536:	0f be       	out	0x3f, r0	; 63
    1538:	0f 90       	pop	r0
    153a:	1f 90       	pop	r1
    153c:	18 95       	reti

0000153e <init_millis>:

void init_millis(unsigned long f_cpu)
{
  unsigned long ctc_match_overflow;

  ctc_match_overflow = ((f_cpu / 1000) / 8); //when timer1 is this value, 1ms has passed
    153e:	20 e4       	ldi	r18, 0x40	; 64
    1540:	3f e1       	ldi	r19, 0x1F	; 31
    1542:	40 e0       	ldi	r20, 0x00	; 0
    1544:	50 e0       	ldi	r21, 0x00	; 0
    1546:	0e 94 68 0d 	call	0x1ad0	; 0x1ad0 <__udivmodsi4>

  // (Set timer to clear when matching ctc_match_overflow) | (Set clock divisor to 8)
  TCCR1B |= (1 << WGM12) | (1 << CS11);
    154a:	8e b5       	in	r24, 0x2e	; 46
    154c:	8a 60       	ori	r24, 0x0A	; 10
    154e:	8e bd       	out	0x2e, r24	; 46

  // high byte first, then low byte
  OCR1AH = (ctc_match_overflow >> 8);
    1550:	bb 27       	eor	r27, r27
    1552:	a5 2f       	mov	r26, r21
    1554:	94 2f       	mov	r25, r20
    1556:	83 2f       	mov	r24, r19
    1558:	8b bd       	out	0x2b, r24	; 43
  OCR1AL = ctc_match_overflow;
    155a:	2a bd       	out	0x2a, r18	; 42

  // Enable the compare match interrupt
  TIMSK |= (1 << OCIE1A);
    155c:	89 b7       	in	r24, 0x39	; 57
    155e:	80 61       	ori	r24, 0x10	; 16
    1560:	89 bf       	out	0x39, r24	; 57
    1562:	08 95       	ret

00001564 <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
    1564:	f8 94       	cli
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    1566:	21 e0       	ldi	r18, 0x01	; 1
    1568:	09 c0       	rjmp	.+18     	; 0x157c <millis+0x18>
    millis_return = timer1_millis;
    156a:	60 91 b6 03 	lds	r22, 0x03B6	; 0x8003b6 <timer1_millis>
    156e:	70 91 b7 03 	lds	r23, 0x03B7	; 0x8003b7 <timer1_millis+0x1>
    1572:	80 91 b8 03 	lds	r24, 0x03B8	; 0x8003b8 <timer1_millis+0x2>
    1576:	90 91 b9 03 	lds	r25, 0x03B9	; 0x8003b9 <timer1_millis+0x3>
unsigned long millis (void)
{
  unsigned long millis_return;

  // Ensure this cannot be disrupted
  ATOMIC_BLOCK(ATOMIC_FORCEON) {
    157a:	20 e0       	ldi	r18, 0x00	; 0
    157c:	21 11       	cpse	r18, r1
    157e:	f5 cf       	rjmp	.-22     	; 0x156a <millis+0x6>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
    1580:	78 94       	sei
    millis_return = timer1_millis;
  }
  return millis_return;
}
    1582:	08 95       	ret

00001584 <__subsf3>:
    1584:	50 58       	subi	r21, 0x80	; 128

00001586 <__addsf3>:
    1586:	bb 27       	eor	r27, r27
    1588:	aa 27       	eor	r26, r26
    158a:	0e 94 da 0a 	call	0x15b4	; 0x15b4 <__addsf3x>
    158e:	0c 94 4d 0c 	jmp	0x189a	; 0x189a <__fp_round>
    1592:	0e 94 3f 0c 	call	0x187e	; 0x187e <__fp_pscA>
    1596:	38 f0       	brcs	.+14     	; 0x15a6 <__addsf3+0x20>
    1598:	0e 94 46 0c 	call	0x188c	; 0x188c <__fp_pscB>
    159c:	20 f0       	brcs	.+8      	; 0x15a6 <__addsf3+0x20>
    159e:	39 f4       	brne	.+14     	; 0x15ae <__addsf3+0x28>
    15a0:	9f 3f       	cpi	r25, 0xFF	; 255
    15a2:	19 f4       	brne	.+6      	; 0x15aa <__addsf3+0x24>
    15a4:	26 f4       	brtc	.+8      	; 0x15ae <__addsf3+0x28>
    15a6:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <__fp_nan>
    15aa:	0e f4       	brtc	.+2      	; 0x15ae <__addsf3+0x28>
    15ac:	e0 95       	com	r30
    15ae:	e7 fb       	bst	r30, 7
    15b0:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__fp_inf>

000015b4 <__addsf3x>:
    15b4:	e9 2f       	mov	r30, r25
    15b6:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <__fp_split3>
    15ba:	58 f3       	brcs	.-42     	; 0x1592 <__addsf3+0xc>
    15bc:	ba 17       	cp	r27, r26
    15be:	62 07       	cpc	r22, r18
    15c0:	73 07       	cpc	r23, r19
    15c2:	84 07       	cpc	r24, r20
    15c4:	95 07       	cpc	r25, r21
    15c6:	20 f0       	brcs	.+8      	; 0x15d0 <__addsf3x+0x1c>
    15c8:	79 f4       	brne	.+30     	; 0x15e8 <__addsf3x+0x34>
    15ca:	a6 f5       	brtc	.+104    	; 0x1634 <__addsf3x+0x80>
    15cc:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <__fp_zero>
    15d0:	0e f4       	brtc	.+2      	; 0x15d4 <__addsf3x+0x20>
    15d2:	e0 95       	com	r30
    15d4:	0b 2e       	mov	r0, r27
    15d6:	ba 2f       	mov	r27, r26
    15d8:	a0 2d       	mov	r26, r0
    15da:	0b 01       	movw	r0, r22
    15dc:	b9 01       	movw	r22, r18
    15de:	90 01       	movw	r18, r0
    15e0:	0c 01       	movw	r0, r24
    15e2:	ca 01       	movw	r24, r20
    15e4:	a0 01       	movw	r20, r0
    15e6:	11 24       	eor	r1, r1
    15e8:	ff 27       	eor	r31, r31
    15ea:	59 1b       	sub	r21, r25
    15ec:	99 f0       	breq	.+38     	; 0x1614 <__addsf3x+0x60>
    15ee:	59 3f       	cpi	r21, 0xF9	; 249
    15f0:	50 f4       	brcc	.+20     	; 0x1606 <__addsf3x+0x52>
    15f2:	50 3e       	cpi	r21, 0xE0	; 224
    15f4:	68 f1       	brcs	.+90     	; 0x1650 <__addsf3x+0x9c>
    15f6:	1a 16       	cp	r1, r26
    15f8:	f0 40       	sbci	r31, 0x00	; 0
    15fa:	a2 2f       	mov	r26, r18
    15fc:	23 2f       	mov	r18, r19
    15fe:	34 2f       	mov	r19, r20
    1600:	44 27       	eor	r20, r20
    1602:	58 5f       	subi	r21, 0xF8	; 248
    1604:	f3 cf       	rjmp	.-26     	; 0x15ec <__addsf3x+0x38>
    1606:	46 95       	lsr	r20
    1608:	37 95       	ror	r19
    160a:	27 95       	ror	r18
    160c:	a7 95       	ror	r26
    160e:	f0 40       	sbci	r31, 0x00	; 0
    1610:	53 95       	inc	r21
    1612:	c9 f7       	brne	.-14     	; 0x1606 <__addsf3x+0x52>
    1614:	7e f4       	brtc	.+30     	; 0x1634 <__addsf3x+0x80>
    1616:	1f 16       	cp	r1, r31
    1618:	ba 0b       	sbc	r27, r26
    161a:	62 0b       	sbc	r22, r18
    161c:	73 0b       	sbc	r23, r19
    161e:	84 0b       	sbc	r24, r20
    1620:	ba f0       	brmi	.+46     	; 0x1650 <__addsf3x+0x9c>
    1622:	91 50       	subi	r25, 0x01	; 1
    1624:	a1 f0       	breq	.+40     	; 0x164e <__addsf3x+0x9a>
    1626:	ff 0f       	add	r31, r31
    1628:	bb 1f       	adc	r27, r27
    162a:	66 1f       	adc	r22, r22
    162c:	77 1f       	adc	r23, r23
    162e:	88 1f       	adc	r24, r24
    1630:	c2 f7       	brpl	.-16     	; 0x1622 <__addsf3x+0x6e>
    1632:	0e c0       	rjmp	.+28     	; 0x1650 <__addsf3x+0x9c>
    1634:	ba 0f       	add	r27, r26
    1636:	62 1f       	adc	r22, r18
    1638:	73 1f       	adc	r23, r19
    163a:	84 1f       	adc	r24, r20
    163c:	48 f4       	brcc	.+18     	; 0x1650 <__addsf3x+0x9c>
    163e:	87 95       	ror	r24
    1640:	77 95       	ror	r23
    1642:	67 95       	ror	r22
    1644:	b7 95       	ror	r27
    1646:	f7 95       	ror	r31
    1648:	9e 3f       	cpi	r25, 0xFE	; 254
    164a:	08 f0       	brcs	.+2      	; 0x164e <__addsf3x+0x9a>
    164c:	b0 cf       	rjmp	.-160    	; 0x15ae <__addsf3+0x28>
    164e:	93 95       	inc	r25
    1650:	88 0f       	add	r24, r24
    1652:	08 f0       	brcs	.+2      	; 0x1656 <__addsf3x+0xa2>
    1654:	99 27       	eor	r25, r25
    1656:	ee 0f       	add	r30, r30
    1658:	97 95       	ror	r25
    165a:	87 95       	ror	r24
    165c:	08 95       	ret

0000165e <__cmpsf2>:
    165e:	0e 94 12 0c 	call	0x1824	; 0x1824 <__fp_cmp>
    1662:	08 f4       	brcc	.+2      	; 0x1666 <__cmpsf2+0x8>
    1664:	81 e0       	ldi	r24, 0x01	; 1
    1666:	08 95       	ret

00001668 <__divsf3>:
    1668:	0e 94 48 0b 	call	0x1690	; 0x1690 <__divsf3x>
    166c:	0c 94 4d 0c 	jmp	0x189a	; 0x189a <__fp_round>
    1670:	0e 94 46 0c 	call	0x188c	; 0x188c <__fp_pscB>
    1674:	58 f0       	brcs	.+22     	; 0x168c <__divsf3+0x24>
    1676:	0e 94 3f 0c 	call	0x187e	; 0x187e <__fp_pscA>
    167a:	40 f0       	brcs	.+16     	; 0x168c <__divsf3+0x24>
    167c:	29 f4       	brne	.+10     	; 0x1688 <__divsf3+0x20>
    167e:	5f 3f       	cpi	r21, 0xFF	; 255
    1680:	29 f0       	breq	.+10     	; 0x168c <__divsf3+0x24>
    1682:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__fp_inf>
    1686:	51 11       	cpse	r21, r1
    1688:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__fp_szero>
    168c:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <__fp_nan>

00001690 <__divsf3x>:
    1690:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <__fp_split3>
    1694:	68 f3       	brcs	.-38     	; 0x1670 <__divsf3+0x8>

00001696 <__divsf3_pse>:
    1696:	99 23       	and	r25, r25
    1698:	b1 f3       	breq	.-20     	; 0x1686 <__divsf3+0x1e>
    169a:	55 23       	and	r21, r21
    169c:	91 f3       	breq	.-28     	; 0x1682 <__divsf3+0x1a>
    169e:	95 1b       	sub	r25, r21
    16a0:	55 0b       	sbc	r21, r21
    16a2:	bb 27       	eor	r27, r27
    16a4:	aa 27       	eor	r26, r26
    16a6:	62 17       	cp	r22, r18
    16a8:	73 07       	cpc	r23, r19
    16aa:	84 07       	cpc	r24, r20
    16ac:	38 f0       	brcs	.+14     	; 0x16bc <__divsf3_pse+0x26>
    16ae:	9f 5f       	subi	r25, 0xFF	; 255
    16b0:	5f 4f       	sbci	r21, 0xFF	; 255
    16b2:	22 0f       	add	r18, r18
    16b4:	33 1f       	adc	r19, r19
    16b6:	44 1f       	adc	r20, r20
    16b8:	aa 1f       	adc	r26, r26
    16ba:	a9 f3       	breq	.-22     	; 0x16a6 <__divsf3_pse+0x10>
    16bc:	35 d0       	rcall	.+106    	; 0x1728 <__divsf3_pse+0x92>
    16be:	0e 2e       	mov	r0, r30
    16c0:	3a f0       	brmi	.+14     	; 0x16d0 <__divsf3_pse+0x3a>
    16c2:	e0 e8       	ldi	r30, 0x80	; 128
    16c4:	32 d0       	rcall	.+100    	; 0x172a <__divsf3_pse+0x94>
    16c6:	91 50       	subi	r25, 0x01	; 1
    16c8:	50 40       	sbci	r21, 0x00	; 0
    16ca:	e6 95       	lsr	r30
    16cc:	00 1c       	adc	r0, r0
    16ce:	ca f7       	brpl	.-14     	; 0x16c2 <__divsf3_pse+0x2c>
    16d0:	2b d0       	rcall	.+86     	; 0x1728 <__divsf3_pse+0x92>
    16d2:	fe 2f       	mov	r31, r30
    16d4:	29 d0       	rcall	.+82     	; 0x1728 <__divsf3_pse+0x92>
    16d6:	66 0f       	add	r22, r22
    16d8:	77 1f       	adc	r23, r23
    16da:	88 1f       	adc	r24, r24
    16dc:	bb 1f       	adc	r27, r27
    16de:	26 17       	cp	r18, r22
    16e0:	37 07       	cpc	r19, r23
    16e2:	48 07       	cpc	r20, r24
    16e4:	ab 07       	cpc	r26, r27
    16e6:	b0 e8       	ldi	r27, 0x80	; 128
    16e8:	09 f0       	breq	.+2      	; 0x16ec <__divsf3_pse+0x56>
    16ea:	bb 0b       	sbc	r27, r27
    16ec:	80 2d       	mov	r24, r0
    16ee:	bf 01       	movw	r22, r30
    16f0:	ff 27       	eor	r31, r31
    16f2:	93 58       	subi	r25, 0x83	; 131
    16f4:	5f 4f       	sbci	r21, 0xFF	; 255
    16f6:	3a f0       	brmi	.+14     	; 0x1706 <__divsf3_pse+0x70>
    16f8:	9e 3f       	cpi	r25, 0xFE	; 254
    16fa:	51 05       	cpc	r21, r1
    16fc:	78 f0       	brcs	.+30     	; 0x171c <__divsf3_pse+0x86>
    16fe:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__fp_inf>
    1702:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__fp_szero>
    1706:	5f 3f       	cpi	r21, 0xFF	; 255
    1708:	e4 f3       	brlt	.-8      	; 0x1702 <__divsf3_pse+0x6c>
    170a:	98 3e       	cpi	r25, 0xE8	; 232
    170c:	d4 f3       	brlt	.-12     	; 0x1702 <__divsf3_pse+0x6c>
    170e:	86 95       	lsr	r24
    1710:	77 95       	ror	r23
    1712:	67 95       	ror	r22
    1714:	b7 95       	ror	r27
    1716:	f7 95       	ror	r31
    1718:	9f 5f       	subi	r25, 0xFF	; 255
    171a:	c9 f7       	brne	.-14     	; 0x170e <__divsf3_pse+0x78>
    171c:	88 0f       	add	r24, r24
    171e:	91 1d       	adc	r25, r1
    1720:	96 95       	lsr	r25
    1722:	87 95       	ror	r24
    1724:	97 f9       	bld	r25, 7
    1726:	08 95       	ret
    1728:	e1 e0       	ldi	r30, 0x01	; 1
    172a:	66 0f       	add	r22, r22
    172c:	77 1f       	adc	r23, r23
    172e:	88 1f       	adc	r24, r24
    1730:	bb 1f       	adc	r27, r27
    1732:	62 17       	cp	r22, r18
    1734:	73 07       	cpc	r23, r19
    1736:	84 07       	cpc	r24, r20
    1738:	ba 07       	cpc	r27, r26
    173a:	20 f0       	brcs	.+8      	; 0x1744 <__divsf3_pse+0xae>
    173c:	62 1b       	sub	r22, r18
    173e:	73 0b       	sbc	r23, r19
    1740:	84 0b       	sbc	r24, r20
    1742:	ba 0b       	sbc	r27, r26
    1744:	ee 1f       	adc	r30, r30
    1746:	88 f7       	brcc	.-30     	; 0x172a <__divsf3_pse+0x94>
    1748:	e0 95       	com	r30
    174a:	08 95       	ret

0000174c <__fixunssfsi>:
    174c:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__fp_splitA>
    1750:	88 f0       	brcs	.+34     	; 0x1774 <__fixunssfsi+0x28>
    1752:	9f 57       	subi	r25, 0x7F	; 127
    1754:	98 f0       	brcs	.+38     	; 0x177c <__fixunssfsi+0x30>
    1756:	b9 2f       	mov	r27, r25
    1758:	99 27       	eor	r25, r25
    175a:	b7 51       	subi	r27, 0x17	; 23
    175c:	b0 f0       	brcs	.+44     	; 0x178a <__fixunssfsi+0x3e>
    175e:	e1 f0       	breq	.+56     	; 0x1798 <__fixunssfsi+0x4c>
    1760:	66 0f       	add	r22, r22
    1762:	77 1f       	adc	r23, r23
    1764:	88 1f       	adc	r24, r24
    1766:	99 1f       	adc	r25, r25
    1768:	1a f0       	brmi	.+6      	; 0x1770 <__fixunssfsi+0x24>
    176a:	ba 95       	dec	r27
    176c:	c9 f7       	brne	.-14     	; 0x1760 <__fixunssfsi+0x14>
    176e:	14 c0       	rjmp	.+40     	; 0x1798 <__fixunssfsi+0x4c>
    1770:	b1 30       	cpi	r27, 0x01	; 1
    1772:	91 f0       	breq	.+36     	; 0x1798 <__fixunssfsi+0x4c>
    1774:	0e 94 80 0c 	call	0x1900	; 0x1900 <__fp_zero>
    1778:	b1 e0       	ldi	r27, 0x01	; 1
    177a:	08 95       	ret
    177c:	0c 94 80 0c 	jmp	0x1900	; 0x1900 <__fp_zero>
    1780:	67 2f       	mov	r22, r23
    1782:	78 2f       	mov	r23, r24
    1784:	88 27       	eor	r24, r24
    1786:	b8 5f       	subi	r27, 0xF8	; 248
    1788:	39 f0       	breq	.+14     	; 0x1798 <__fixunssfsi+0x4c>
    178a:	b9 3f       	cpi	r27, 0xF9	; 249
    178c:	cc f3       	brlt	.-14     	; 0x1780 <__fixunssfsi+0x34>
    178e:	86 95       	lsr	r24
    1790:	77 95       	ror	r23
    1792:	67 95       	ror	r22
    1794:	b3 95       	inc	r27
    1796:	d9 f7       	brne	.-10     	; 0x178e <__fixunssfsi+0x42>
    1798:	3e f4       	brtc	.+14     	; 0x17a8 <__fixunssfsi+0x5c>
    179a:	90 95       	com	r25
    179c:	80 95       	com	r24
    179e:	70 95       	com	r23
    17a0:	61 95       	neg	r22
    17a2:	7f 4f       	sbci	r23, 0xFF	; 255
    17a4:	8f 4f       	sbci	r24, 0xFF	; 255
    17a6:	9f 4f       	sbci	r25, 0xFF	; 255
    17a8:	08 95       	ret

000017aa <__floatunsisf>:
    17aa:	e8 94       	clt
    17ac:	09 c0       	rjmp	.+18     	; 0x17c0 <__floatsisf+0x12>

000017ae <__floatsisf>:
    17ae:	97 fb       	bst	r25, 7
    17b0:	3e f4       	brtc	.+14     	; 0x17c0 <__floatsisf+0x12>
    17b2:	90 95       	com	r25
    17b4:	80 95       	com	r24
    17b6:	70 95       	com	r23
    17b8:	61 95       	neg	r22
    17ba:	7f 4f       	sbci	r23, 0xFF	; 255
    17bc:	8f 4f       	sbci	r24, 0xFF	; 255
    17be:	9f 4f       	sbci	r25, 0xFF	; 255
    17c0:	99 23       	and	r25, r25
    17c2:	a9 f0       	breq	.+42     	; 0x17ee <__floatsisf+0x40>
    17c4:	f9 2f       	mov	r31, r25
    17c6:	96 e9       	ldi	r25, 0x96	; 150
    17c8:	bb 27       	eor	r27, r27
    17ca:	93 95       	inc	r25
    17cc:	f6 95       	lsr	r31
    17ce:	87 95       	ror	r24
    17d0:	77 95       	ror	r23
    17d2:	67 95       	ror	r22
    17d4:	b7 95       	ror	r27
    17d6:	f1 11       	cpse	r31, r1
    17d8:	f8 cf       	rjmp	.-16     	; 0x17ca <__floatsisf+0x1c>
    17da:	fa f4       	brpl	.+62     	; 0x181a <__floatsisf+0x6c>
    17dc:	bb 0f       	add	r27, r27
    17de:	11 f4       	brne	.+4      	; 0x17e4 <__floatsisf+0x36>
    17e0:	60 ff       	sbrs	r22, 0
    17e2:	1b c0       	rjmp	.+54     	; 0x181a <__floatsisf+0x6c>
    17e4:	6f 5f       	subi	r22, 0xFF	; 255
    17e6:	7f 4f       	sbci	r23, 0xFF	; 255
    17e8:	8f 4f       	sbci	r24, 0xFF	; 255
    17ea:	9f 4f       	sbci	r25, 0xFF	; 255
    17ec:	16 c0       	rjmp	.+44     	; 0x181a <__floatsisf+0x6c>
    17ee:	88 23       	and	r24, r24
    17f0:	11 f0       	breq	.+4      	; 0x17f6 <__floatsisf+0x48>
    17f2:	96 e9       	ldi	r25, 0x96	; 150
    17f4:	11 c0       	rjmp	.+34     	; 0x1818 <__floatsisf+0x6a>
    17f6:	77 23       	and	r23, r23
    17f8:	21 f0       	breq	.+8      	; 0x1802 <__floatsisf+0x54>
    17fa:	9e e8       	ldi	r25, 0x8E	; 142
    17fc:	87 2f       	mov	r24, r23
    17fe:	76 2f       	mov	r23, r22
    1800:	05 c0       	rjmp	.+10     	; 0x180c <__floatsisf+0x5e>
    1802:	66 23       	and	r22, r22
    1804:	71 f0       	breq	.+28     	; 0x1822 <__floatsisf+0x74>
    1806:	96 e8       	ldi	r25, 0x86	; 134
    1808:	86 2f       	mov	r24, r22
    180a:	70 e0       	ldi	r23, 0x00	; 0
    180c:	60 e0       	ldi	r22, 0x00	; 0
    180e:	2a f0       	brmi	.+10     	; 0x181a <__floatsisf+0x6c>
    1810:	9a 95       	dec	r25
    1812:	66 0f       	add	r22, r22
    1814:	77 1f       	adc	r23, r23
    1816:	88 1f       	adc	r24, r24
    1818:	da f7       	brpl	.-10     	; 0x1810 <__floatsisf+0x62>
    181a:	88 0f       	add	r24, r24
    181c:	96 95       	lsr	r25
    181e:	87 95       	ror	r24
    1820:	97 f9       	bld	r25, 7
    1822:	08 95       	ret

00001824 <__fp_cmp>:
    1824:	99 0f       	add	r25, r25
    1826:	00 08       	sbc	r0, r0
    1828:	55 0f       	add	r21, r21
    182a:	aa 0b       	sbc	r26, r26
    182c:	e0 e8       	ldi	r30, 0x80	; 128
    182e:	fe ef       	ldi	r31, 0xFE	; 254
    1830:	16 16       	cp	r1, r22
    1832:	17 06       	cpc	r1, r23
    1834:	e8 07       	cpc	r30, r24
    1836:	f9 07       	cpc	r31, r25
    1838:	c0 f0       	brcs	.+48     	; 0x186a <__fp_cmp+0x46>
    183a:	12 16       	cp	r1, r18
    183c:	13 06       	cpc	r1, r19
    183e:	e4 07       	cpc	r30, r20
    1840:	f5 07       	cpc	r31, r21
    1842:	98 f0       	brcs	.+38     	; 0x186a <__fp_cmp+0x46>
    1844:	62 1b       	sub	r22, r18
    1846:	73 0b       	sbc	r23, r19
    1848:	84 0b       	sbc	r24, r20
    184a:	95 0b       	sbc	r25, r21
    184c:	39 f4       	brne	.+14     	; 0x185c <__fp_cmp+0x38>
    184e:	0a 26       	eor	r0, r26
    1850:	61 f0       	breq	.+24     	; 0x186a <__fp_cmp+0x46>
    1852:	23 2b       	or	r18, r19
    1854:	24 2b       	or	r18, r20
    1856:	25 2b       	or	r18, r21
    1858:	21 f4       	brne	.+8      	; 0x1862 <__fp_cmp+0x3e>
    185a:	08 95       	ret
    185c:	0a 26       	eor	r0, r26
    185e:	09 f4       	brne	.+2      	; 0x1862 <__fp_cmp+0x3e>
    1860:	a1 40       	sbci	r26, 0x01	; 1
    1862:	a6 95       	lsr	r26
    1864:	8f ef       	ldi	r24, 0xFF	; 255
    1866:	81 1d       	adc	r24, r1
    1868:	81 1d       	adc	r24, r1
    186a:	08 95       	ret

0000186c <__fp_inf>:
    186c:	97 f9       	bld	r25, 7
    186e:	9f 67       	ori	r25, 0x7F	; 127
    1870:	80 e8       	ldi	r24, 0x80	; 128
    1872:	70 e0       	ldi	r23, 0x00	; 0
    1874:	60 e0       	ldi	r22, 0x00	; 0
    1876:	08 95       	ret

00001878 <__fp_nan>:
    1878:	9f ef       	ldi	r25, 0xFF	; 255
    187a:	80 ec       	ldi	r24, 0xC0	; 192
    187c:	08 95       	ret

0000187e <__fp_pscA>:
    187e:	00 24       	eor	r0, r0
    1880:	0a 94       	dec	r0
    1882:	16 16       	cp	r1, r22
    1884:	17 06       	cpc	r1, r23
    1886:	18 06       	cpc	r1, r24
    1888:	09 06       	cpc	r0, r25
    188a:	08 95       	ret

0000188c <__fp_pscB>:
    188c:	00 24       	eor	r0, r0
    188e:	0a 94       	dec	r0
    1890:	12 16       	cp	r1, r18
    1892:	13 06       	cpc	r1, r19
    1894:	14 06       	cpc	r1, r20
    1896:	05 06       	cpc	r0, r21
    1898:	08 95       	ret

0000189a <__fp_round>:
    189a:	09 2e       	mov	r0, r25
    189c:	03 94       	inc	r0
    189e:	00 0c       	add	r0, r0
    18a0:	11 f4       	brne	.+4      	; 0x18a6 <__fp_round+0xc>
    18a2:	88 23       	and	r24, r24
    18a4:	52 f0       	brmi	.+20     	; 0x18ba <__fp_round+0x20>
    18a6:	bb 0f       	add	r27, r27
    18a8:	40 f4       	brcc	.+16     	; 0x18ba <__fp_round+0x20>
    18aa:	bf 2b       	or	r27, r31
    18ac:	11 f4       	brne	.+4      	; 0x18b2 <__fp_round+0x18>
    18ae:	60 ff       	sbrs	r22, 0
    18b0:	04 c0       	rjmp	.+8      	; 0x18ba <__fp_round+0x20>
    18b2:	6f 5f       	subi	r22, 0xFF	; 255
    18b4:	7f 4f       	sbci	r23, 0xFF	; 255
    18b6:	8f 4f       	sbci	r24, 0xFF	; 255
    18b8:	9f 4f       	sbci	r25, 0xFF	; 255
    18ba:	08 95       	ret

000018bc <__fp_split3>:
    18bc:	57 fd       	sbrc	r21, 7
    18be:	90 58       	subi	r25, 0x80	; 128
    18c0:	44 0f       	add	r20, r20
    18c2:	55 1f       	adc	r21, r21
    18c4:	59 f0       	breq	.+22     	; 0x18dc <__fp_splitA+0x10>
    18c6:	5f 3f       	cpi	r21, 0xFF	; 255
    18c8:	71 f0       	breq	.+28     	; 0x18e6 <__fp_splitA+0x1a>
    18ca:	47 95       	ror	r20

000018cc <__fp_splitA>:
    18cc:	88 0f       	add	r24, r24
    18ce:	97 fb       	bst	r25, 7
    18d0:	99 1f       	adc	r25, r25
    18d2:	61 f0       	breq	.+24     	; 0x18ec <__fp_splitA+0x20>
    18d4:	9f 3f       	cpi	r25, 0xFF	; 255
    18d6:	79 f0       	breq	.+30     	; 0x18f6 <__fp_splitA+0x2a>
    18d8:	87 95       	ror	r24
    18da:	08 95       	ret
    18dc:	12 16       	cp	r1, r18
    18de:	13 06       	cpc	r1, r19
    18e0:	14 06       	cpc	r1, r20
    18e2:	55 1f       	adc	r21, r21
    18e4:	f2 cf       	rjmp	.-28     	; 0x18ca <__fp_split3+0xe>
    18e6:	46 95       	lsr	r20
    18e8:	f1 df       	rcall	.-30     	; 0x18cc <__fp_splitA>
    18ea:	08 c0       	rjmp	.+16     	; 0x18fc <__fp_splitA+0x30>
    18ec:	16 16       	cp	r1, r22
    18ee:	17 06       	cpc	r1, r23
    18f0:	18 06       	cpc	r1, r24
    18f2:	99 1f       	adc	r25, r25
    18f4:	f1 cf       	rjmp	.-30     	; 0x18d8 <__fp_splitA+0xc>
    18f6:	86 95       	lsr	r24
    18f8:	71 05       	cpc	r23, r1
    18fa:	61 05       	cpc	r22, r1
    18fc:	08 94       	sec
    18fe:	08 95       	ret

00001900 <__fp_zero>:
    1900:	e8 94       	clt

00001902 <__fp_szero>:
    1902:	bb 27       	eor	r27, r27
    1904:	66 27       	eor	r22, r22
    1906:	77 27       	eor	r23, r23
    1908:	cb 01       	movw	r24, r22
    190a:	97 f9       	bld	r25, 7
    190c:	08 95       	ret

0000190e <__gesf2>:
    190e:	0e 94 12 0c 	call	0x1824	; 0x1824 <__fp_cmp>
    1912:	08 f4       	brcc	.+2      	; 0x1916 <__gesf2+0x8>
    1914:	8f ef       	ldi	r24, 0xFF	; 255
    1916:	08 95       	ret

00001918 <__mulsf3>:
    1918:	0e 94 9f 0c 	call	0x193e	; 0x193e <__mulsf3x>
    191c:	0c 94 4d 0c 	jmp	0x189a	; 0x189a <__fp_round>
    1920:	0e 94 3f 0c 	call	0x187e	; 0x187e <__fp_pscA>
    1924:	38 f0       	brcs	.+14     	; 0x1934 <__mulsf3+0x1c>
    1926:	0e 94 46 0c 	call	0x188c	; 0x188c <__fp_pscB>
    192a:	20 f0       	brcs	.+8      	; 0x1934 <__mulsf3+0x1c>
    192c:	95 23       	and	r25, r21
    192e:	11 f0       	breq	.+4      	; 0x1934 <__mulsf3+0x1c>
    1930:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__fp_inf>
    1934:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <__fp_nan>
    1938:	11 24       	eor	r1, r1
    193a:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__fp_szero>

0000193e <__mulsf3x>:
    193e:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <__fp_split3>
    1942:	70 f3       	brcs	.-36     	; 0x1920 <__mulsf3+0x8>

00001944 <__mulsf3_pse>:
    1944:	95 9f       	mul	r25, r21
    1946:	c1 f3       	breq	.-16     	; 0x1938 <__mulsf3+0x20>
    1948:	95 0f       	add	r25, r21
    194a:	50 e0       	ldi	r21, 0x00	; 0
    194c:	55 1f       	adc	r21, r21
    194e:	62 9f       	mul	r22, r18
    1950:	f0 01       	movw	r30, r0
    1952:	72 9f       	mul	r23, r18
    1954:	bb 27       	eor	r27, r27
    1956:	f0 0d       	add	r31, r0
    1958:	b1 1d       	adc	r27, r1
    195a:	63 9f       	mul	r22, r19
    195c:	aa 27       	eor	r26, r26
    195e:	f0 0d       	add	r31, r0
    1960:	b1 1d       	adc	r27, r1
    1962:	aa 1f       	adc	r26, r26
    1964:	64 9f       	mul	r22, r20
    1966:	66 27       	eor	r22, r22
    1968:	b0 0d       	add	r27, r0
    196a:	a1 1d       	adc	r26, r1
    196c:	66 1f       	adc	r22, r22
    196e:	82 9f       	mul	r24, r18
    1970:	22 27       	eor	r18, r18
    1972:	b0 0d       	add	r27, r0
    1974:	a1 1d       	adc	r26, r1
    1976:	62 1f       	adc	r22, r18
    1978:	73 9f       	mul	r23, r19
    197a:	b0 0d       	add	r27, r0
    197c:	a1 1d       	adc	r26, r1
    197e:	62 1f       	adc	r22, r18
    1980:	83 9f       	mul	r24, r19
    1982:	a0 0d       	add	r26, r0
    1984:	61 1d       	adc	r22, r1
    1986:	22 1f       	adc	r18, r18
    1988:	74 9f       	mul	r23, r20
    198a:	33 27       	eor	r19, r19
    198c:	a0 0d       	add	r26, r0
    198e:	61 1d       	adc	r22, r1
    1990:	23 1f       	adc	r18, r19
    1992:	84 9f       	mul	r24, r20
    1994:	60 0d       	add	r22, r0
    1996:	21 1d       	adc	r18, r1
    1998:	82 2f       	mov	r24, r18
    199a:	76 2f       	mov	r23, r22
    199c:	6a 2f       	mov	r22, r26
    199e:	11 24       	eor	r1, r1
    19a0:	9f 57       	subi	r25, 0x7F	; 127
    19a2:	50 40       	sbci	r21, 0x00	; 0
    19a4:	9a f0       	brmi	.+38     	; 0x19cc <__mulsf3_pse+0x88>
    19a6:	f1 f0       	breq	.+60     	; 0x19e4 <__mulsf3_pse+0xa0>
    19a8:	88 23       	and	r24, r24
    19aa:	4a f0       	brmi	.+18     	; 0x19be <__mulsf3_pse+0x7a>
    19ac:	ee 0f       	add	r30, r30
    19ae:	ff 1f       	adc	r31, r31
    19b0:	bb 1f       	adc	r27, r27
    19b2:	66 1f       	adc	r22, r22
    19b4:	77 1f       	adc	r23, r23
    19b6:	88 1f       	adc	r24, r24
    19b8:	91 50       	subi	r25, 0x01	; 1
    19ba:	50 40       	sbci	r21, 0x00	; 0
    19bc:	a9 f7       	brne	.-22     	; 0x19a8 <__mulsf3_pse+0x64>
    19be:	9e 3f       	cpi	r25, 0xFE	; 254
    19c0:	51 05       	cpc	r21, r1
    19c2:	80 f0       	brcs	.+32     	; 0x19e4 <__mulsf3_pse+0xa0>
    19c4:	0c 94 36 0c 	jmp	0x186c	; 0x186c <__fp_inf>
    19c8:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__fp_szero>
    19cc:	5f 3f       	cpi	r21, 0xFF	; 255
    19ce:	e4 f3       	brlt	.-8      	; 0x19c8 <__mulsf3_pse+0x84>
    19d0:	98 3e       	cpi	r25, 0xE8	; 232
    19d2:	d4 f3       	brlt	.-12     	; 0x19c8 <__mulsf3_pse+0x84>
    19d4:	86 95       	lsr	r24
    19d6:	77 95       	ror	r23
    19d8:	67 95       	ror	r22
    19da:	b7 95       	ror	r27
    19dc:	f7 95       	ror	r31
    19de:	e7 95       	ror	r30
    19e0:	9f 5f       	subi	r25, 0xFF	; 255
    19e2:	c1 f7       	brne	.-16     	; 0x19d4 <__mulsf3_pse+0x90>
    19e4:	fe 2b       	or	r31, r30
    19e6:	88 0f       	add	r24, r24
    19e8:	91 1d       	adc	r25, r1
    19ea:	96 95       	lsr	r25
    19ec:	87 95       	ror	r24
    19ee:	97 f9       	bld	r25, 7
    19f0:	08 95       	ret
    19f2:	19 f4       	brne	.+6      	; 0x19fa <__mulsf3_pse+0xb6>
    19f4:	16 f4       	brtc	.+4      	; 0x19fa <__mulsf3_pse+0xb6>
    19f6:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <__fp_nan>
    19fa:	0c 94 3f 0d 	jmp	0x1a7e	; 0x1a7e <__fp_mpack>

000019fe <sqrt>:
    19fe:	0e 94 66 0c 	call	0x18cc	; 0x18cc <__fp_splitA>
    1a02:	b8 f3       	brcs	.-18     	; 0x19f2 <__mulsf3_pse+0xae>
    1a04:	99 23       	and	r25, r25
    1a06:	c9 f3       	breq	.-14     	; 0x19fa <__mulsf3_pse+0xb6>
    1a08:	b6 f3       	brts	.-20     	; 0x19f6 <__mulsf3_pse+0xb2>
    1a0a:	9f 57       	subi	r25, 0x7F	; 127
    1a0c:	55 0b       	sbc	r21, r21
    1a0e:	87 ff       	sbrs	r24, 7
    1a10:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <__fp_norm2>
    1a14:	00 24       	eor	r0, r0
    1a16:	a0 e6       	ldi	r26, 0x60	; 96
    1a18:	40 ea       	ldi	r20, 0xA0	; 160
    1a1a:	90 01       	movw	r18, r0
    1a1c:	80 58       	subi	r24, 0x80	; 128
    1a1e:	56 95       	lsr	r21
    1a20:	97 95       	ror	r25
    1a22:	28 f4       	brcc	.+10     	; 0x1a2e <sqrt+0x30>
    1a24:	80 5c       	subi	r24, 0xC0	; 192
    1a26:	66 0f       	add	r22, r22
    1a28:	77 1f       	adc	r23, r23
    1a2a:	88 1f       	adc	r24, r24
    1a2c:	20 f0       	brcs	.+8      	; 0x1a36 <sqrt+0x38>
    1a2e:	26 17       	cp	r18, r22
    1a30:	37 07       	cpc	r19, r23
    1a32:	48 07       	cpc	r20, r24
    1a34:	30 f4       	brcc	.+12     	; 0x1a42 <sqrt+0x44>
    1a36:	62 1b       	sub	r22, r18
    1a38:	73 0b       	sbc	r23, r19
    1a3a:	84 0b       	sbc	r24, r20
    1a3c:	20 29       	or	r18, r0
    1a3e:	31 29       	or	r19, r1
    1a40:	4a 2b       	or	r20, r26
    1a42:	a6 95       	lsr	r26
    1a44:	17 94       	ror	r1
    1a46:	07 94       	ror	r0
    1a48:	20 25       	eor	r18, r0
    1a4a:	31 25       	eor	r19, r1
    1a4c:	4a 27       	eor	r20, r26
    1a4e:	58 f7       	brcc	.-42     	; 0x1a26 <sqrt+0x28>
    1a50:	66 0f       	add	r22, r22
    1a52:	77 1f       	adc	r23, r23
    1a54:	88 1f       	adc	r24, r24
    1a56:	20 f0       	brcs	.+8      	; 0x1a60 <sqrt+0x62>
    1a58:	26 17       	cp	r18, r22
    1a5a:	37 07       	cpc	r19, r23
    1a5c:	48 07       	cpc	r20, r24
    1a5e:	30 f4       	brcc	.+12     	; 0x1a6c <sqrt+0x6e>
    1a60:	62 0b       	sbc	r22, r18
    1a62:	73 0b       	sbc	r23, r19
    1a64:	84 0b       	sbc	r24, r20
    1a66:	20 0d       	add	r18, r0
    1a68:	31 1d       	adc	r19, r1
    1a6a:	41 1d       	adc	r20, r1
    1a6c:	a0 95       	com	r26
    1a6e:	81 f7       	brne	.-32     	; 0x1a50 <sqrt+0x52>
    1a70:	b9 01       	movw	r22, r18
    1a72:	84 2f       	mov	r24, r20
    1a74:	91 58       	subi	r25, 0x81	; 129
    1a76:	88 0f       	add	r24, r24
    1a78:	96 95       	lsr	r25
    1a7a:	87 95       	ror	r24
    1a7c:	08 95       	ret

00001a7e <__fp_mpack>:
    1a7e:	9f 3f       	cpi	r25, 0xFF	; 255
    1a80:	31 f0       	breq	.+12     	; 0x1a8e <__fp_mpack_finite+0xc>

00001a82 <__fp_mpack_finite>:
    1a82:	91 50       	subi	r25, 0x01	; 1
    1a84:	20 f4       	brcc	.+8      	; 0x1a8e <__fp_mpack_finite+0xc>
    1a86:	87 95       	ror	r24
    1a88:	77 95       	ror	r23
    1a8a:	67 95       	ror	r22
    1a8c:	b7 95       	ror	r27
    1a8e:	88 0f       	add	r24, r24
    1a90:	91 1d       	adc	r25, r1
    1a92:	96 95       	lsr	r25
    1a94:	87 95       	ror	r24
    1a96:	97 f9       	bld	r25, 7
    1a98:	08 95       	ret

00001a9a <__fp_norm2>:
    1a9a:	91 50       	subi	r25, 0x01	; 1
    1a9c:	50 40       	sbci	r21, 0x00	; 0
    1a9e:	66 0f       	add	r22, r22
    1aa0:	77 1f       	adc	r23, r23
    1aa2:	88 1f       	adc	r24, r24
    1aa4:	d2 f7       	brpl	.-12     	; 0x1a9a <__fp_norm2>
    1aa6:	08 95       	ret

00001aa8 <__divmodhi4>:
    1aa8:	97 fb       	bst	r25, 7
    1aaa:	07 2e       	mov	r0, r23
    1aac:	16 f4       	brtc	.+4      	; 0x1ab2 <__divmodhi4+0xa>
    1aae:	00 94       	com	r0
    1ab0:	07 d0       	rcall	.+14     	; 0x1ac0 <__divmodhi4_neg1>
    1ab2:	77 fd       	sbrc	r23, 7
    1ab4:	09 d0       	rcall	.+18     	; 0x1ac8 <__divmodhi4_neg2>
    1ab6:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <__udivmodhi4>
    1aba:	07 fc       	sbrc	r0, 7
    1abc:	05 d0       	rcall	.+10     	; 0x1ac8 <__divmodhi4_neg2>
    1abe:	3e f4       	brtc	.+14     	; 0x1ace <__divmodhi4_exit>

00001ac0 <__divmodhi4_neg1>:
    1ac0:	90 95       	com	r25
    1ac2:	81 95       	neg	r24
    1ac4:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac6:	08 95       	ret

00001ac8 <__divmodhi4_neg2>:
    1ac8:	70 95       	com	r23
    1aca:	61 95       	neg	r22
    1acc:	7f 4f       	sbci	r23, 0xFF	; 255

00001ace <__divmodhi4_exit>:
    1ace:	08 95       	ret

00001ad0 <__udivmodsi4>:
    1ad0:	a1 e2       	ldi	r26, 0x21	; 33
    1ad2:	1a 2e       	mov	r1, r26
    1ad4:	aa 1b       	sub	r26, r26
    1ad6:	bb 1b       	sub	r27, r27
    1ad8:	fd 01       	movw	r30, r26
    1ada:	0d c0       	rjmp	.+26     	; 0x1af6 <__udivmodsi4_ep>

00001adc <__udivmodsi4_loop>:
    1adc:	aa 1f       	adc	r26, r26
    1ade:	bb 1f       	adc	r27, r27
    1ae0:	ee 1f       	adc	r30, r30
    1ae2:	ff 1f       	adc	r31, r31
    1ae4:	a2 17       	cp	r26, r18
    1ae6:	b3 07       	cpc	r27, r19
    1ae8:	e4 07       	cpc	r30, r20
    1aea:	f5 07       	cpc	r31, r21
    1aec:	20 f0       	brcs	.+8      	; 0x1af6 <__udivmodsi4_ep>
    1aee:	a2 1b       	sub	r26, r18
    1af0:	b3 0b       	sbc	r27, r19
    1af2:	e4 0b       	sbc	r30, r20
    1af4:	f5 0b       	sbc	r31, r21

00001af6 <__udivmodsi4_ep>:
    1af6:	66 1f       	adc	r22, r22
    1af8:	77 1f       	adc	r23, r23
    1afa:	88 1f       	adc	r24, r24
    1afc:	99 1f       	adc	r25, r25
    1afe:	1a 94       	dec	r1
    1b00:	69 f7       	brne	.-38     	; 0x1adc <__udivmodsi4_loop>
    1b02:	60 95       	com	r22
    1b04:	70 95       	com	r23
    1b06:	80 95       	com	r24
    1b08:	90 95       	com	r25
    1b0a:	9b 01       	movw	r18, r22
    1b0c:	ac 01       	movw	r20, r24
    1b0e:	bd 01       	movw	r22, r26
    1b10:	cf 01       	movw	r24, r30
    1b12:	08 95       	ret

00001b14 <__tablejump2__>:
    1b14:	ee 0f       	add	r30, r30
    1b16:	ff 1f       	adc	r31, r31
    1b18:	05 90       	lpm	r0, Z+
    1b1a:	f4 91       	lpm	r31, Z
    1b1c:	e0 2d       	mov	r30, r0
    1b1e:	09 94       	ijmp

00001b20 <__udivmodhi4>:
    1b20:	aa 1b       	sub	r26, r26
    1b22:	bb 1b       	sub	r27, r27
    1b24:	51 e1       	ldi	r21, 0x11	; 17
    1b26:	07 c0       	rjmp	.+14     	; 0x1b36 <__udivmodhi4_ep>

00001b28 <__udivmodhi4_loop>:
    1b28:	aa 1f       	adc	r26, r26
    1b2a:	bb 1f       	adc	r27, r27
    1b2c:	a6 17       	cp	r26, r22
    1b2e:	b7 07       	cpc	r27, r23
    1b30:	10 f0       	brcs	.+4      	; 0x1b36 <__udivmodhi4_ep>
    1b32:	a6 1b       	sub	r26, r22
    1b34:	b7 0b       	sbc	r27, r23

00001b36 <__udivmodhi4_ep>:
    1b36:	88 1f       	adc	r24, r24
    1b38:	99 1f       	adc	r25, r25
    1b3a:	5a 95       	dec	r21
    1b3c:	a9 f7       	brne	.-22     	; 0x1b28 <__udivmodhi4_loop>
    1b3e:	80 95       	com	r24
    1b40:	90 95       	com	r25
    1b42:	bc 01       	movw	r22, r24
    1b44:	cd 01       	movw	r24, r26
    1b46:	08 95       	ret

00001b48 <malloc>:
    1b48:	0f 93       	push	r16
    1b4a:	1f 93       	push	r17
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	82 30       	cpi	r24, 0x02	; 2
    1b52:	91 05       	cpc	r25, r1
    1b54:	10 f4       	brcc	.+4      	; 0x1b5a <malloc+0x12>
    1b56:	82 e0       	ldi	r24, 0x02	; 2
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	e0 91 65 04 	lds	r30, 0x0465	; 0x800465 <__flp>
    1b5e:	f0 91 66 04 	lds	r31, 0x0466	; 0x800466 <__flp+0x1>
    1b62:	20 e0       	ldi	r18, 0x00	; 0
    1b64:	30 e0       	ldi	r19, 0x00	; 0
    1b66:	a0 e0       	ldi	r26, 0x00	; 0
    1b68:	b0 e0       	ldi	r27, 0x00	; 0
    1b6a:	30 97       	sbiw	r30, 0x00	; 0
    1b6c:	19 f1       	breq	.+70     	; 0x1bb4 <malloc+0x6c>
    1b6e:	40 81       	ld	r20, Z
    1b70:	51 81       	ldd	r21, Z+1	; 0x01
    1b72:	02 81       	ldd	r16, Z+2	; 0x02
    1b74:	13 81       	ldd	r17, Z+3	; 0x03
    1b76:	48 17       	cp	r20, r24
    1b78:	59 07       	cpc	r21, r25
    1b7a:	c8 f0       	brcs	.+50     	; 0x1bae <malloc+0x66>
    1b7c:	84 17       	cp	r24, r20
    1b7e:	95 07       	cpc	r25, r21
    1b80:	69 f4       	brne	.+26     	; 0x1b9c <malloc+0x54>
    1b82:	10 97       	sbiw	r26, 0x00	; 0
    1b84:	31 f0       	breq	.+12     	; 0x1b92 <malloc+0x4a>
    1b86:	12 96       	adiw	r26, 0x02	; 2
    1b88:	0c 93       	st	X, r16
    1b8a:	12 97       	sbiw	r26, 0x02	; 2
    1b8c:	13 96       	adiw	r26, 0x03	; 3
    1b8e:	1c 93       	st	X, r17
    1b90:	27 c0       	rjmp	.+78     	; 0x1be0 <malloc+0x98>
    1b92:	00 93 65 04 	sts	0x0465, r16	; 0x800465 <__flp>
    1b96:	10 93 66 04 	sts	0x0466, r17	; 0x800466 <__flp+0x1>
    1b9a:	22 c0       	rjmp	.+68     	; 0x1be0 <malloc+0x98>
    1b9c:	21 15       	cp	r18, r1
    1b9e:	31 05       	cpc	r19, r1
    1ba0:	19 f0       	breq	.+6      	; 0x1ba8 <malloc+0x60>
    1ba2:	42 17       	cp	r20, r18
    1ba4:	53 07       	cpc	r21, r19
    1ba6:	18 f4       	brcc	.+6      	; 0x1bae <malloc+0x66>
    1ba8:	9a 01       	movw	r18, r20
    1baa:	bd 01       	movw	r22, r26
    1bac:	ef 01       	movw	r28, r30
    1bae:	df 01       	movw	r26, r30
    1bb0:	f8 01       	movw	r30, r16
    1bb2:	db cf       	rjmp	.-74     	; 0x1b6a <malloc+0x22>
    1bb4:	21 15       	cp	r18, r1
    1bb6:	31 05       	cpc	r19, r1
    1bb8:	f9 f0       	breq	.+62     	; 0x1bf8 <malloc+0xb0>
    1bba:	28 1b       	sub	r18, r24
    1bbc:	39 0b       	sbc	r19, r25
    1bbe:	24 30       	cpi	r18, 0x04	; 4
    1bc0:	31 05       	cpc	r19, r1
    1bc2:	80 f4       	brcc	.+32     	; 0x1be4 <malloc+0x9c>
    1bc4:	8a 81       	ldd	r24, Y+2	; 0x02
    1bc6:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc8:	61 15       	cp	r22, r1
    1bca:	71 05       	cpc	r23, r1
    1bcc:	21 f0       	breq	.+8      	; 0x1bd6 <malloc+0x8e>
    1bce:	fb 01       	movw	r30, r22
    1bd0:	93 83       	std	Z+3, r25	; 0x03
    1bd2:	82 83       	std	Z+2, r24	; 0x02
    1bd4:	04 c0       	rjmp	.+8      	; 0x1bde <malloc+0x96>
    1bd6:	90 93 66 04 	sts	0x0466, r25	; 0x800466 <__flp+0x1>
    1bda:	80 93 65 04 	sts	0x0465, r24	; 0x800465 <__flp>
    1bde:	fe 01       	movw	r30, r28
    1be0:	32 96       	adiw	r30, 0x02	; 2
    1be2:	44 c0       	rjmp	.+136    	; 0x1c6c <malloc+0x124>
    1be4:	fe 01       	movw	r30, r28
    1be6:	e2 0f       	add	r30, r18
    1be8:	f3 1f       	adc	r31, r19
    1bea:	81 93       	st	Z+, r24
    1bec:	91 93       	st	Z+, r25
    1bee:	22 50       	subi	r18, 0x02	; 2
    1bf0:	31 09       	sbc	r19, r1
    1bf2:	39 83       	std	Y+1, r19	; 0x01
    1bf4:	28 83       	st	Y, r18
    1bf6:	3a c0       	rjmp	.+116    	; 0x1c6c <malloc+0x124>
    1bf8:	20 91 63 04 	lds	r18, 0x0463	; 0x800463 <__brkval>
    1bfc:	30 91 64 04 	lds	r19, 0x0464	; 0x800464 <__brkval+0x1>
    1c00:	23 2b       	or	r18, r19
    1c02:	41 f4       	brne	.+16     	; 0x1c14 <malloc+0xcc>
    1c04:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    1c08:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    1c0c:	30 93 64 04 	sts	0x0464, r19	; 0x800464 <__brkval+0x1>
    1c10:	20 93 63 04 	sts	0x0463, r18	; 0x800463 <__brkval>
    1c14:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1c18:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    1c1c:	21 15       	cp	r18, r1
    1c1e:	31 05       	cpc	r19, r1
    1c20:	41 f4       	brne	.+16     	; 0x1c32 <malloc+0xea>
    1c22:	2d b7       	in	r18, 0x3d	; 61
    1c24:	3e b7       	in	r19, 0x3e	; 62
    1c26:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    1c2a:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    1c2e:	24 1b       	sub	r18, r20
    1c30:	35 0b       	sbc	r19, r21
    1c32:	e0 91 63 04 	lds	r30, 0x0463	; 0x800463 <__brkval>
    1c36:	f0 91 64 04 	lds	r31, 0x0464	; 0x800464 <__brkval+0x1>
    1c3a:	e2 17       	cp	r30, r18
    1c3c:	f3 07       	cpc	r31, r19
    1c3e:	a0 f4       	brcc	.+40     	; 0x1c68 <malloc+0x120>
    1c40:	2e 1b       	sub	r18, r30
    1c42:	3f 0b       	sbc	r19, r31
    1c44:	28 17       	cp	r18, r24
    1c46:	39 07       	cpc	r19, r25
    1c48:	78 f0       	brcs	.+30     	; 0x1c68 <malloc+0x120>
    1c4a:	ac 01       	movw	r20, r24
    1c4c:	4e 5f       	subi	r20, 0xFE	; 254
    1c4e:	5f 4f       	sbci	r21, 0xFF	; 255
    1c50:	24 17       	cp	r18, r20
    1c52:	35 07       	cpc	r19, r21
    1c54:	48 f0       	brcs	.+18     	; 0x1c68 <malloc+0x120>
    1c56:	4e 0f       	add	r20, r30
    1c58:	5f 1f       	adc	r21, r31
    1c5a:	50 93 64 04 	sts	0x0464, r21	; 0x800464 <__brkval+0x1>
    1c5e:	40 93 63 04 	sts	0x0463, r20	; 0x800463 <__brkval>
    1c62:	81 93       	st	Z+, r24
    1c64:	91 93       	st	Z+, r25
    1c66:	02 c0       	rjmp	.+4      	; 0x1c6c <malloc+0x124>
    1c68:	e0 e0       	ldi	r30, 0x00	; 0
    1c6a:	f0 e0       	ldi	r31, 0x00	; 0
    1c6c:	cf 01       	movw	r24, r30
    1c6e:	df 91       	pop	r29
    1c70:	cf 91       	pop	r28
    1c72:	1f 91       	pop	r17
    1c74:	0f 91       	pop	r16
    1c76:	08 95       	ret

00001c78 <free>:
    1c78:	cf 93       	push	r28
    1c7a:	df 93       	push	r29
    1c7c:	00 97       	sbiw	r24, 0x00	; 0
    1c7e:	09 f4       	brne	.+2      	; 0x1c82 <free+0xa>
    1c80:	81 c0       	rjmp	.+258    	; 0x1d84 <free+0x10c>
    1c82:	fc 01       	movw	r30, r24
    1c84:	32 97       	sbiw	r30, 0x02	; 2
    1c86:	13 82       	std	Z+3, r1	; 0x03
    1c88:	12 82       	std	Z+2, r1	; 0x02
    1c8a:	a0 91 65 04 	lds	r26, 0x0465	; 0x800465 <__flp>
    1c8e:	b0 91 66 04 	lds	r27, 0x0466	; 0x800466 <__flp+0x1>
    1c92:	10 97       	sbiw	r26, 0x00	; 0
    1c94:	81 f4       	brne	.+32     	; 0x1cb6 <free+0x3e>
    1c96:	20 81       	ld	r18, Z
    1c98:	31 81       	ldd	r19, Z+1	; 0x01
    1c9a:	82 0f       	add	r24, r18
    1c9c:	93 1f       	adc	r25, r19
    1c9e:	20 91 63 04 	lds	r18, 0x0463	; 0x800463 <__brkval>
    1ca2:	30 91 64 04 	lds	r19, 0x0464	; 0x800464 <__brkval+0x1>
    1ca6:	28 17       	cp	r18, r24
    1ca8:	39 07       	cpc	r19, r25
    1caa:	51 f5       	brne	.+84     	; 0x1d00 <free+0x88>
    1cac:	f0 93 64 04 	sts	0x0464, r31	; 0x800464 <__brkval+0x1>
    1cb0:	e0 93 63 04 	sts	0x0463, r30	; 0x800463 <__brkval>
    1cb4:	67 c0       	rjmp	.+206    	; 0x1d84 <free+0x10c>
    1cb6:	ed 01       	movw	r28, r26
    1cb8:	20 e0       	ldi	r18, 0x00	; 0
    1cba:	30 e0       	ldi	r19, 0x00	; 0
    1cbc:	ce 17       	cp	r28, r30
    1cbe:	df 07       	cpc	r29, r31
    1cc0:	40 f4       	brcc	.+16     	; 0x1cd2 <free+0x5a>
    1cc2:	4a 81       	ldd	r20, Y+2	; 0x02
    1cc4:	5b 81       	ldd	r21, Y+3	; 0x03
    1cc6:	9e 01       	movw	r18, r28
    1cc8:	41 15       	cp	r20, r1
    1cca:	51 05       	cpc	r21, r1
    1ccc:	f1 f0       	breq	.+60     	; 0x1d0a <free+0x92>
    1cce:	ea 01       	movw	r28, r20
    1cd0:	f5 cf       	rjmp	.-22     	; 0x1cbc <free+0x44>
    1cd2:	d3 83       	std	Z+3, r29	; 0x03
    1cd4:	c2 83       	std	Z+2, r28	; 0x02
    1cd6:	40 81       	ld	r20, Z
    1cd8:	51 81       	ldd	r21, Z+1	; 0x01
    1cda:	84 0f       	add	r24, r20
    1cdc:	95 1f       	adc	r25, r21
    1cde:	c8 17       	cp	r28, r24
    1ce0:	d9 07       	cpc	r29, r25
    1ce2:	59 f4       	brne	.+22     	; 0x1cfa <free+0x82>
    1ce4:	88 81       	ld	r24, Y
    1ce6:	99 81       	ldd	r25, Y+1	; 0x01
    1ce8:	84 0f       	add	r24, r20
    1cea:	95 1f       	adc	r25, r21
    1cec:	02 96       	adiw	r24, 0x02	; 2
    1cee:	91 83       	std	Z+1, r25	; 0x01
    1cf0:	80 83       	st	Z, r24
    1cf2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cf4:	9b 81       	ldd	r25, Y+3	; 0x03
    1cf6:	93 83       	std	Z+3, r25	; 0x03
    1cf8:	82 83       	std	Z+2, r24	; 0x02
    1cfa:	21 15       	cp	r18, r1
    1cfc:	31 05       	cpc	r19, r1
    1cfe:	29 f4       	brne	.+10     	; 0x1d0a <free+0x92>
    1d00:	f0 93 66 04 	sts	0x0466, r31	; 0x800466 <__flp+0x1>
    1d04:	e0 93 65 04 	sts	0x0465, r30	; 0x800465 <__flp>
    1d08:	3d c0       	rjmp	.+122    	; 0x1d84 <free+0x10c>
    1d0a:	e9 01       	movw	r28, r18
    1d0c:	fb 83       	std	Y+3, r31	; 0x03
    1d0e:	ea 83       	std	Y+2, r30	; 0x02
    1d10:	49 91       	ld	r20, Y+
    1d12:	59 91       	ld	r21, Y+
    1d14:	c4 0f       	add	r28, r20
    1d16:	d5 1f       	adc	r29, r21
    1d18:	ec 17       	cp	r30, r28
    1d1a:	fd 07       	cpc	r31, r29
    1d1c:	61 f4       	brne	.+24     	; 0x1d36 <free+0xbe>
    1d1e:	80 81       	ld	r24, Z
    1d20:	91 81       	ldd	r25, Z+1	; 0x01
    1d22:	84 0f       	add	r24, r20
    1d24:	95 1f       	adc	r25, r21
    1d26:	02 96       	adiw	r24, 0x02	; 2
    1d28:	e9 01       	movw	r28, r18
    1d2a:	99 83       	std	Y+1, r25	; 0x01
    1d2c:	88 83       	st	Y, r24
    1d2e:	82 81       	ldd	r24, Z+2	; 0x02
    1d30:	93 81       	ldd	r25, Z+3	; 0x03
    1d32:	9b 83       	std	Y+3, r25	; 0x03
    1d34:	8a 83       	std	Y+2, r24	; 0x02
    1d36:	e0 e0       	ldi	r30, 0x00	; 0
    1d38:	f0 e0       	ldi	r31, 0x00	; 0
    1d3a:	12 96       	adiw	r26, 0x02	; 2
    1d3c:	8d 91       	ld	r24, X+
    1d3e:	9c 91       	ld	r25, X
    1d40:	13 97       	sbiw	r26, 0x03	; 3
    1d42:	00 97       	sbiw	r24, 0x00	; 0
    1d44:	19 f0       	breq	.+6      	; 0x1d4c <free+0xd4>
    1d46:	fd 01       	movw	r30, r26
    1d48:	dc 01       	movw	r26, r24
    1d4a:	f7 cf       	rjmp	.-18     	; 0x1d3a <free+0xc2>
    1d4c:	8d 91       	ld	r24, X+
    1d4e:	9c 91       	ld	r25, X
    1d50:	11 97       	sbiw	r26, 0x01	; 1
    1d52:	9d 01       	movw	r18, r26
    1d54:	2e 5f       	subi	r18, 0xFE	; 254
    1d56:	3f 4f       	sbci	r19, 0xFF	; 255
    1d58:	82 0f       	add	r24, r18
    1d5a:	93 1f       	adc	r25, r19
    1d5c:	20 91 63 04 	lds	r18, 0x0463	; 0x800463 <__brkval>
    1d60:	30 91 64 04 	lds	r19, 0x0464	; 0x800464 <__brkval+0x1>
    1d64:	28 17       	cp	r18, r24
    1d66:	39 07       	cpc	r19, r25
    1d68:	69 f4       	brne	.+26     	; 0x1d84 <free+0x10c>
    1d6a:	30 97       	sbiw	r30, 0x00	; 0
    1d6c:	29 f4       	brne	.+10     	; 0x1d78 <free+0x100>
    1d6e:	10 92 66 04 	sts	0x0466, r1	; 0x800466 <__flp+0x1>
    1d72:	10 92 65 04 	sts	0x0465, r1	; 0x800465 <__flp>
    1d76:	02 c0       	rjmp	.+4      	; 0x1d7c <free+0x104>
    1d78:	13 82       	std	Z+3, r1	; 0x03
    1d7a:	12 82       	std	Z+2, r1	; 0x02
    1d7c:	b0 93 64 04 	sts	0x0464, r27	; 0x800464 <__brkval+0x1>
    1d80:	a0 93 63 04 	sts	0x0463, r26	; 0x800463 <__brkval>
    1d84:	df 91       	pop	r29
    1d86:	cf 91       	pop	r28
    1d88:	08 95       	ret

00001d8a <strcat>:
    1d8a:	fb 01       	movw	r30, r22
    1d8c:	dc 01       	movw	r26, r24
    1d8e:	0d 90       	ld	r0, X+
    1d90:	00 20       	and	r0, r0
    1d92:	e9 f7       	brne	.-6      	; 0x1d8e <strcat+0x4>
    1d94:	11 97       	sbiw	r26, 0x01	; 1
    1d96:	01 90       	ld	r0, Z+
    1d98:	0d 92       	st	X+, r0
    1d9a:	00 20       	and	r0, r0
    1d9c:	e1 f7       	brne	.-8      	; 0x1d96 <strcat+0xc>
    1d9e:	08 95       	ret

00001da0 <strcpy>:
    1da0:	fb 01       	movw	r30, r22
    1da2:	dc 01       	movw	r26, r24
    1da4:	01 90       	ld	r0, Z+
    1da6:	0d 92       	st	X+, r0
    1da8:	00 20       	and	r0, r0
    1daa:	e1 f7       	brne	.-8      	; 0x1da4 <strcpy+0x4>
    1dac:	08 95       	ret

00001dae <__itoa_ncheck>:
    1dae:	bb 27       	eor	r27, r27
    1db0:	4a 30       	cpi	r20, 0x0A	; 10
    1db2:	31 f4       	brne	.+12     	; 0x1dc0 <__itoa_ncheck+0x12>
    1db4:	99 23       	and	r25, r25
    1db6:	22 f4       	brpl	.+8      	; 0x1dc0 <__itoa_ncheck+0x12>
    1db8:	bd e2       	ldi	r27, 0x2D	; 45
    1dba:	90 95       	com	r25
    1dbc:	81 95       	neg	r24
    1dbe:	9f 4f       	sbci	r25, 0xFF	; 255
    1dc0:	0c 94 e3 0e 	jmp	0x1dc6	; 0x1dc6 <__utoa_common>

00001dc4 <__utoa_ncheck>:
    1dc4:	bb 27       	eor	r27, r27

00001dc6 <__utoa_common>:
    1dc6:	fb 01       	movw	r30, r22
    1dc8:	55 27       	eor	r21, r21
    1dca:	aa 27       	eor	r26, r26
    1dcc:	88 0f       	add	r24, r24
    1dce:	99 1f       	adc	r25, r25
    1dd0:	aa 1f       	adc	r26, r26
    1dd2:	a4 17       	cp	r26, r20
    1dd4:	10 f0       	brcs	.+4      	; 0x1dda <__utoa_common+0x14>
    1dd6:	a4 1b       	sub	r26, r20
    1dd8:	83 95       	inc	r24
    1dda:	50 51       	subi	r21, 0x10	; 16
    1ddc:	b9 f7       	brne	.-18     	; 0x1dcc <__utoa_common+0x6>
    1dde:	a0 5d       	subi	r26, 0xD0	; 208
    1de0:	aa 33       	cpi	r26, 0x3A	; 58
    1de2:	08 f0       	brcs	.+2      	; 0x1de6 <__utoa_common+0x20>
    1de4:	a9 5d       	subi	r26, 0xD9	; 217
    1de6:	a1 93       	st	Z+, r26
    1de8:	00 97       	sbiw	r24, 0x00	; 0
    1dea:	79 f7       	brne	.-34     	; 0x1dca <__utoa_common+0x4>
    1dec:	b1 11       	cpse	r27, r1
    1dee:	b1 93       	st	Z+, r27
    1df0:	11 92       	st	Z+, r1
    1df2:	cb 01       	movw	r24, r22
    1df4:	0c 94 15 11 	jmp	0x222a	; 0x222a <strrev>

00001df8 <sprintf>:
    1df8:	ae e0       	ldi	r26, 0x0E	; 14
    1dfa:	b0 e0       	ldi	r27, 0x00	; 0
    1dfc:	e2 e0       	ldi	r30, 0x02	; 2
    1dfe:	ff e0       	ldi	r31, 0x0F	; 15
    1e00:	0c 94 cd 11 	jmp	0x239a	; 0x239a <__prologue_saves__+0x1c>
    1e04:	0d 89       	ldd	r16, Y+21	; 0x15
    1e06:	1e 89       	ldd	r17, Y+22	; 0x16
    1e08:	86 e0       	ldi	r24, 0x06	; 6
    1e0a:	8c 83       	std	Y+4, r24	; 0x04
    1e0c:	1a 83       	std	Y+2, r17	; 0x02
    1e0e:	09 83       	std	Y+1, r16	; 0x01
    1e10:	8f ef       	ldi	r24, 0xFF	; 255
    1e12:	9f e7       	ldi	r25, 0x7F	; 127
    1e14:	9e 83       	std	Y+6, r25	; 0x06
    1e16:	8d 83       	std	Y+5, r24	; 0x05
    1e18:	ae 01       	movw	r20, r28
    1e1a:	47 5e       	subi	r20, 0xE7	; 231
    1e1c:	5f 4f       	sbci	r21, 0xFF	; 255
    1e1e:	6f 89       	ldd	r22, Y+23	; 0x17
    1e20:	78 8d       	ldd	r23, Y+24	; 0x18
    1e22:	ce 01       	movw	r24, r28
    1e24:	01 96       	adiw	r24, 0x01	; 1
    1e26:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <vfprintf>
    1e2a:	ef 81       	ldd	r30, Y+7	; 0x07
    1e2c:	f8 85       	ldd	r31, Y+8	; 0x08
    1e2e:	e0 0f       	add	r30, r16
    1e30:	f1 1f       	adc	r31, r17
    1e32:	10 82       	st	Z, r1
    1e34:	2e 96       	adiw	r28, 0x0e	; 14
    1e36:	e4 e0       	ldi	r30, 0x04	; 4
    1e38:	0c 94 e9 11 	jmp	0x23d2	; 0x23d2 <__epilogue_restores__+0x1c>

00001e3c <vfprintf>:
    1e3c:	ab e0       	ldi	r26, 0x0B	; 11
    1e3e:	b0 e0       	ldi	r27, 0x00	; 0
    1e40:	e4 e2       	ldi	r30, 0x24	; 36
    1e42:	ff e0       	ldi	r31, 0x0F	; 15
    1e44:	0c 94 bf 11 	jmp	0x237e	; 0x237e <__prologue_saves__>
    1e48:	6c 01       	movw	r12, r24
    1e4a:	7b 01       	movw	r14, r22
    1e4c:	8a 01       	movw	r16, r20
    1e4e:	fc 01       	movw	r30, r24
    1e50:	17 82       	std	Z+7, r1	; 0x07
    1e52:	16 82       	std	Z+6, r1	; 0x06
    1e54:	83 81       	ldd	r24, Z+3	; 0x03
    1e56:	81 ff       	sbrs	r24, 1
    1e58:	cc c1       	rjmp	.+920    	; 0x21f2 <vfprintf+0x3b6>
    1e5a:	ce 01       	movw	r24, r28
    1e5c:	01 96       	adiw	r24, 0x01	; 1
    1e5e:	3c 01       	movw	r6, r24
    1e60:	f6 01       	movw	r30, r12
    1e62:	93 81       	ldd	r25, Z+3	; 0x03
    1e64:	f7 01       	movw	r30, r14
    1e66:	93 fd       	sbrc	r25, 3
    1e68:	85 91       	lpm	r24, Z+
    1e6a:	93 ff       	sbrs	r25, 3
    1e6c:	81 91       	ld	r24, Z+
    1e6e:	7f 01       	movw	r14, r30
    1e70:	88 23       	and	r24, r24
    1e72:	09 f4       	brne	.+2      	; 0x1e76 <vfprintf+0x3a>
    1e74:	ba c1       	rjmp	.+884    	; 0x21ea <vfprintf+0x3ae>
    1e76:	85 32       	cpi	r24, 0x25	; 37
    1e78:	39 f4       	brne	.+14     	; 0x1e88 <vfprintf+0x4c>
    1e7a:	93 fd       	sbrc	r25, 3
    1e7c:	85 91       	lpm	r24, Z+
    1e7e:	93 ff       	sbrs	r25, 3
    1e80:	81 91       	ld	r24, Z+
    1e82:	7f 01       	movw	r14, r30
    1e84:	85 32       	cpi	r24, 0x25	; 37
    1e86:	29 f4       	brne	.+10     	; 0x1e92 <vfprintf+0x56>
    1e88:	b6 01       	movw	r22, r12
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    1e90:	e7 cf       	rjmp	.-50     	; 0x1e60 <vfprintf+0x24>
    1e92:	91 2c       	mov	r9, r1
    1e94:	21 2c       	mov	r2, r1
    1e96:	31 2c       	mov	r3, r1
    1e98:	ff e1       	ldi	r31, 0x1F	; 31
    1e9a:	f3 15       	cp	r31, r3
    1e9c:	d8 f0       	brcs	.+54     	; 0x1ed4 <vfprintf+0x98>
    1e9e:	8b 32       	cpi	r24, 0x2B	; 43
    1ea0:	79 f0       	breq	.+30     	; 0x1ec0 <vfprintf+0x84>
    1ea2:	38 f4       	brcc	.+14     	; 0x1eb2 <vfprintf+0x76>
    1ea4:	80 32       	cpi	r24, 0x20	; 32
    1ea6:	79 f0       	breq	.+30     	; 0x1ec6 <vfprintf+0x8a>
    1ea8:	83 32       	cpi	r24, 0x23	; 35
    1eaa:	a1 f4       	brne	.+40     	; 0x1ed4 <vfprintf+0x98>
    1eac:	23 2d       	mov	r18, r3
    1eae:	20 61       	ori	r18, 0x10	; 16
    1eb0:	1d c0       	rjmp	.+58     	; 0x1eec <vfprintf+0xb0>
    1eb2:	8d 32       	cpi	r24, 0x2D	; 45
    1eb4:	61 f0       	breq	.+24     	; 0x1ece <vfprintf+0x92>
    1eb6:	80 33       	cpi	r24, 0x30	; 48
    1eb8:	69 f4       	brne	.+26     	; 0x1ed4 <vfprintf+0x98>
    1eba:	23 2d       	mov	r18, r3
    1ebc:	21 60       	ori	r18, 0x01	; 1
    1ebe:	16 c0       	rjmp	.+44     	; 0x1eec <vfprintf+0xb0>
    1ec0:	83 2d       	mov	r24, r3
    1ec2:	82 60       	ori	r24, 0x02	; 2
    1ec4:	38 2e       	mov	r3, r24
    1ec6:	e3 2d       	mov	r30, r3
    1ec8:	e4 60       	ori	r30, 0x04	; 4
    1eca:	3e 2e       	mov	r3, r30
    1ecc:	2a c0       	rjmp	.+84     	; 0x1f22 <vfprintf+0xe6>
    1ece:	f3 2d       	mov	r31, r3
    1ed0:	f8 60       	ori	r31, 0x08	; 8
    1ed2:	1d c0       	rjmp	.+58     	; 0x1f0e <vfprintf+0xd2>
    1ed4:	37 fc       	sbrc	r3, 7
    1ed6:	2d c0       	rjmp	.+90     	; 0x1f32 <vfprintf+0xf6>
    1ed8:	20 ed       	ldi	r18, 0xD0	; 208
    1eda:	28 0f       	add	r18, r24
    1edc:	2a 30       	cpi	r18, 0x0A	; 10
    1ede:	40 f0       	brcs	.+16     	; 0x1ef0 <vfprintf+0xb4>
    1ee0:	8e 32       	cpi	r24, 0x2E	; 46
    1ee2:	b9 f4       	brne	.+46     	; 0x1f12 <vfprintf+0xd6>
    1ee4:	36 fc       	sbrc	r3, 6
    1ee6:	81 c1       	rjmp	.+770    	; 0x21ea <vfprintf+0x3ae>
    1ee8:	23 2d       	mov	r18, r3
    1eea:	20 64       	ori	r18, 0x40	; 64
    1eec:	32 2e       	mov	r3, r18
    1eee:	19 c0       	rjmp	.+50     	; 0x1f22 <vfprintf+0xe6>
    1ef0:	36 fe       	sbrs	r3, 6
    1ef2:	06 c0       	rjmp	.+12     	; 0x1f00 <vfprintf+0xc4>
    1ef4:	8a e0       	ldi	r24, 0x0A	; 10
    1ef6:	98 9e       	mul	r9, r24
    1ef8:	20 0d       	add	r18, r0
    1efa:	11 24       	eor	r1, r1
    1efc:	92 2e       	mov	r9, r18
    1efe:	11 c0       	rjmp	.+34     	; 0x1f22 <vfprintf+0xe6>
    1f00:	ea e0       	ldi	r30, 0x0A	; 10
    1f02:	2e 9e       	mul	r2, r30
    1f04:	20 0d       	add	r18, r0
    1f06:	11 24       	eor	r1, r1
    1f08:	22 2e       	mov	r2, r18
    1f0a:	f3 2d       	mov	r31, r3
    1f0c:	f0 62       	ori	r31, 0x20	; 32
    1f0e:	3f 2e       	mov	r3, r31
    1f10:	08 c0       	rjmp	.+16     	; 0x1f22 <vfprintf+0xe6>
    1f12:	8c 36       	cpi	r24, 0x6C	; 108
    1f14:	21 f4       	brne	.+8      	; 0x1f1e <vfprintf+0xe2>
    1f16:	83 2d       	mov	r24, r3
    1f18:	80 68       	ori	r24, 0x80	; 128
    1f1a:	38 2e       	mov	r3, r24
    1f1c:	02 c0       	rjmp	.+4      	; 0x1f22 <vfprintf+0xe6>
    1f1e:	88 36       	cpi	r24, 0x68	; 104
    1f20:	41 f4       	brne	.+16     	; 0x1f32 <vfprintf+0xf6>
    1f22:	f7 01       	movw	r30, r14
    1f24:	93 fd       	sbrc	r25, 3
    1f26:	85 91       	lpm	r24, Z+
    1f28:	93 ff       	sbrs	r25, 3
    1f2a:	81 91       	ld	r24, Z+
    1f2c:	7f 01       	movw	r14, r30
    1f2e:	81 11       	cpse	r24, r1
    1f30:	b3 cf       	rjmp	.-154    	; 0x1e98 <vfprintf+0x5c>
    1f32:	98 2f       	mov	r25, r24
    1f34:	9f 7d       	andi	r25, 0xDF	; 223
    1f36:	95 54       	subi	r25, 0x45	; 69
    1f38:	93 30       	cpi	r25, 0x03	; 3
    1f3a:	28 f4       	brcc	.+10     	; 0x1f46 <vfprintf+0x10a>
    1f3c:	0c 5f       	subi	r16, 0xFC	; 252
    1f3e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f40:	9f e3       	ldi	r25, 0x3F	; 63
    1f42:	99 83       	std	Y+1, r25	; 0x01
    1f44:	0d c0       	rjmp	.+26     	; 0x1f60 <vfprintf+0x124>
    1f46:	83 36       	cpi	r24, 0x63	; 99
    1f48:	31 f0       	breq	.+12     	; 0x1f56 <vfprintf+0x11a>
    1f4a:	83 37       	cpi	r24, 0x73	; 115
    1f4c:	71 f0       	breq	.+28     	; 0x1f6a <vfprintf+0x12e>
    1f4e:	83 35       	cpi	r24, 0x53	; 83
    1f50:	09 f0       	breq	.+2      	; 0x1f54 <vfprintf+0x118>
    1f52:	59 c0       	rjmp	.+178    	; 0x2006 <vfprintf+0x1ca>
    1f54:	21 c0       	rjmp	.+66     	; 0x1f98 <vfprintf+0x15c>
    1f56:	f8 01       	movw	r30, r16
    1f58:	80 81       	ld	r24, Z
    1f5a:	89 83       	std	Y+1, r24	; 0x01
    1f5c:	0e 5f       	subi	r16, 0xFE	; 254
    1f5e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f60:	88 24       	eor	r8, r8
    1f62:	83 94       	inc	r8
    1f64:	91 2c       	mov	r9, r1
    1f66:	53 01       	movw	r10, r6
    1f68:	13 c0       	rjmp	.+38     	; 0x1f90 <vfprintf+0x154>
    1f6a:	28 01       	movw	r4, r16
    1f6c:	f2 e0       	ldi	r31, 0x02	; 2
    1f6e:	4f 0e       	add	r4, r31
    1f70:	51 1c       	adc	r5, r1
    1f72:	f8 01       	movw	r30, r16
    1f74:	a0 80       	ld	r10, Z
    1f76:	b1 80       	ldd	r11, Z+1	; 0x01
    1f78:	36 fe       	sbrs	r3, 6
    1f7a:	03 c0       	rjmp	.+6      	; 0x1f82 <vfprintf+0x146>
    1f7c:	69 2d       	mov	r22, r9
    1f7e:	70 e0       	ldi	r23, 0x00	; 0
    1f80:	02 c0       	rjmp	.+4      	; 0x1f86 <vfprintf+0x14a>
    1f82:	6f ef       	ldi	r22, 0xFF	; 255
    1f84:	7f ef       	ldi	r23, 0xFF	; 255
    1f86:	c5 01       	movw	r24, r10
    1f88:	0e 94 0a 11 	call	0x2214	; 0x2214 <strnlen>
    1f8c:	4c 01       	movw	r8, r24
    1f8e:	82 01       	movw	r16, r4
    1f90:	f3 2d       	mov	r31, r3
    1f92:	ff 77       	andi	r31, 0x7F	; 127
    1f94:	3f 2e       	mov	r3, r31
    1f96:	16 c0       	rjmp	.+44     	; 0x1fc4 <vfprintf+0x188>
    1f98:	28 01       	movw	r4, r16
    1f9a:	22 e0       	ldi	r18, 0x02	; 2
    1f9c:	42 0e       	add	r4, r18
    1f9e:	51 1c       	adc	r5, r1
    1fa0:	f8 01       	movw	r30, r16
    1fa2:	a0 80       	ld	r10, Z
    1fa4:	b1 80       	ldd	r11, Z+1	; 0x01
    1fa6:	36 fe       	sbrs	r3, 6
    1fa8:	03 c0       	rjmp	.+6      	; 0x1fb0 <vfprintf+0x174>
    1faa:	69 2d       	mov	r22, r9
    1fac:	70 e0       	ldi	r23, 0x00	; 0
    1fae:	02 c0       	rjmp	.+4      	; 0x1fb4 <vfprintf+0x178>
    1fb0:	6f ef       	ldi	r22, 0xFF	; 255
    1fb2:	7f ef       	ldi	r23, 0xFF	; 255
    1fb4:	c5 01       	movw	r24, r10
    1fb6:	0e 94 ff 10 	call	0x21fe	; 0x21fe <strnlen_P>
    1fba:	4c 01       	movw	r8, r24
    1fbc:	f3 2d       	mov	r31, r3
    1fbe:	f0 68       	ori	r31, 0x80	; 128
    1fc0:	3f 2e       	mov	r3, r31
    1fc2:	82 01       	movw	r16, r4
    1fc4:	33 fc       	sbrc	r3, 3
    1fc6:	1b c0       	rjmp	.+54     	; 0x1ffe <vfprintf+0x1c2>
    1fc8:	82 2d       	mov	r24, r2
    1fca:	90 e0       	ldi	r25, 0x00	; 0
    1fcc:	88 16       	cp	r8, r24
    1fce:	99 06       	cpc	r9, r25
    1fd0:	b0 f4       	brcc	.+44     	; 0x1ffe <vfprintf+0x1c2>
    1fd2:	b6 01       	movw	r22, r12
    1fd4:	80 e2       	ldi	r24, 0x20	; 32
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    1fdc:	2a 94       	dec	r2
    1fde:	f4 cf       	rjmp	.-24     	; 0x1fc8 <vfprintf+0x18c>
    1fe0:	f5 01       	movw	r30, r10
    1fe2:	37 fc       	sbrc	r3, 7
    1fe4:	85 91       	lpm	r24, Z+
    1fe6:	37 fe       	sbrs	r3, 7
    1fe8:	81 91       	ld	r24, Z+
    1fea:	5f 01       	movw	r10, r30
    1fec:	b6 01       	movw	r22, r12
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    1ff4:	21 10       	cpse	r2, r1
    1ff6:	2a 94       	dec	r2
    1ff8:	21 e0       	ldi	r18, 0x01	; 1
    1ffa:	82 1a       	sub	r8, r18
    1ffc:	91 08       	sbc	r9, r1
    1ffe:	81 14       	cp	r8, r1
    2000:	91 04       	cpc	r9, r1
    2002:	71 f7       	brne	.-36     	; 0x1fe0 <vfprintf+0x1a4>
    2004:	e8 c0       	rjmp	.+464    	; 0x21d6 <vfprintf+0x39a>
    2006:	84 36       	cpi	r24, 0x64	; 100
    2008:	11 f0       	breq	.+4      	; 0x200e <vfprintf+0x1d2>
    200a:	89 36       	cpi	r24, 0x69	; 105
    200c:	41 f5       	brne	.+80     	; 0x205e <vfprintf+0x222>
    200e:	f8 01       	movw	r30, r16
    2010:	37 fe       	sbrs	r3, 7
    2012:	07 c0       	rjmp	.+14     	; 0x2022 <vfprintf+0x1e6>
    2014:	60 81       	ld	r22, Z
    2016:	71 81       	ldd	r23, Z+1	; 0x01
    2018:	82 81       	ldd	r24, Z+2	; 0x02
    201a:	93 81       	ldd	r25, Z+3	; 0x03
    201c:	0c 5f       	subi	r16, 0xFC	; 252
    201e:	1f 4f       	sbci	r17, 0xFF	; 255
    2020:	08 c0       	rjmp	.+16     	; 0x2032 <vfprintf+0x1f6>
    2022:	60 81       	ld	r22, Z
    2024:	71 81       	ldd	r23, Z+1	; 0x01
    2026:	07 2e       	mov	r0, r23
    2028:	00 0c       	add	r0, r0
    202a:	88 0b       	sbc	r24, r24
    202c:	99 0b       	sbc	r25, r25
    202e:	0e 5f       	subi	r16, 0xFE	; 254
    2030:	1f 4f       	sbci	r17, 0xFF	; 255
    2032:	f3 2d       	mov	r31, r3
    2034:	ff 76       	andi	r31, 0x6F	; 111
    2036:	3f 2e       	mov	r3, r31
    2038:	97 ff       	sbrs	r25, 7
    203a:	09 c0       	rjmp	.+18     	; 0x204e <vfprintf+0x212>
    203c:	90 95       	com	r25
    203e:	80 95       	com	r24
    2040:	70 95       	com	r23
    2042:	61 95       	neg	r22
    2044:	7f 4f       	sbci	r23, 0xFF	; 255
    2046:	8f 4f       	sbci	r24, 0xFF	; 255
    2048:	9f 4f       	sbci	r25, 0xFF	; 255
    204a:	f0 68       	ori	r31, 0x80	; 128
    204c:	3f 2e       	mov	r3, r31
    204e:	2a e0       	ldi	r18, 0x0A	; 10
    2050:	30 e0       	ldi	r19, 0x00	; 0
    2052:	a3 01       	movw	r20, r6
    2054:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__ultoa_invert>
    2058:	88 2e       	mov	r8, r24
    205a:	86 18       	sub	r8, r6
    205c:	45 c0       	rjmp	.+138    	; 0x20e8 <vfprintf+0x2ac>
    205e:	85 37       	cpi	r24, 0x75	; 117
    2060:	31 f4       	brne	.+12     	; 0x206e <vfprintf+0x232>
    2062:	23 2d       	mov	r18, r3
    2064:	2f 7e       	andi	r18, 0xEF	; 239
    2066:	b2 2e       	mov	r11, r18
    2068:	2a e0       	ldi	r18, 0x0A	; 10
    206a:	30 e0       	ldi	r19, 0x00	; 0
    206c:	25 c0       	rjmp	.+74     	; 0x20b8 <vfprintf+0x27c>
    206e:	93 2d       	mov	r25, r3
    2070:	99 7f       	andi	r25, 0xF9	; 249
    2072:	b9 2e       	mov	r11, r25
    2074:	8f 36       	cpi	r24, 0x6F	; 111
    2076:	c1 f0       	breq	.+48     	; 0x20a8 <vfprintf+0x26c>
    2078:	18 f4       	brcc	.+6      	; 0x2080 <vfprintf+0x244>
    207a:	88 35       	cpi	r24, 0x58	; 88
    207c:	79 f0       	breq	.+30     	; 0x209c <vfprintf+0x260>
    207e:	b5 c0       	rjmp	.+362    	; 0x21ea <vfprintf+0x3ae>
    2080:	80 37       	cpi	r24, 0x70	; 112
    2082:	19 f0       	breq	.+6      	; 0x208a <vfprintf+0x24e>
    2084:	88 37       	cpi	r24, 0x78	; 120
    2086:	21 f0       	breq	.+8      	; 0x2090 <vfprintf+0x254>
    2088:	b0 c0       	rjmp	.+352    	; 0x21ea <vfprintf+0x3ae>
    208a:	e9 2f       	mov	r30, r25
    208c:	e0 61       	ori	r30, 0x10	; 16
    208e:	be 2e       	mov	r11, r30
    2090:	b4 fe       	sbrs	r11, 4
    2092:	0d c0       	rjmp	.+26     	; 0x20ae <vfprintf+0x272>
    2094:	fb 2d       	mov	r31, r11
    2096:	f4 60       	ori	r31, 0x04	; 4
    2098:	bf 2e       	mov	r11, r31
    209a:	09 c0       	rjmp	.+18     	; 0x20ae <vfprintf+0x272>
    209c:	34 fe       	sbrs	r3, 4
    209e:	0a c0       	rjmp	.+20     	; 0x20b4 <vfprintf+0x278>
    20a0:	29 2f       	mov	r18, r25
    20a2:	26 60       	ori	r18, 0x06	; 6
    20a4:	b2 2e       	mov	r11, r18
    20a6:	06 c0       	rjmp	.+12     	; 0x20b4 <vfprintf+0x278>
    20a8:	28 e0       	ldi	r18, 0x08	; 8
    20aa:	30 e0       	ldi	r19, 0x00	; 0
    20ac:	05 c0       	rjmp	.+10     	; 0x20b8 <vfprintf+0x27c>
    20ae:	20 e1       	ldi	r18, 0x10	; 16
    20b0:	30 e0       	ldi	r19, 0x00	; 0
    20b2:	02 c0       	rjmp	.+4      	; 0x20b8 <vfprintf+0x27c>
    20b4:	20 e1       	ldi	r18, 0x10	; 16
    20b6:	32 e0       	ldi	r19, 0x02	; 2
    20b8:	f8 01       	movw	r30, r16
    20ba:	b7 fe       	sbrs	r11, 7
    20bc:	07 c0       	rjmp	.+14     	; 0x20cc <vfprintf+0x290>
    20be:	60 81       	ld	r22, Z
    20c0:	71 81       	ldd	r23, Z+1	; 0x01
    20c2:	82 81       	ldd	r24, Z+2	; 0x02
    20c4:	93 81       	ldd	r25, Z+3	; 0x03
    20c6:	0c 5f       	subi	r16, 0xFC	; 252
    20c8:	1f 4f       	sbci	r17, 0xFF	; 255
    20ca:	06 c0       	rjmp	.+12     	; 0x20d8 <vfprintf+0x29c>
    20cc:	60 81       	ld	r22, Z
    20ce:	71 81       	ldd	r23, Z+1	; 0x01
    20d0:	80 e0       	ldi	r24, 0x00	; 0
    20d2:	90 e0       	ldi	r25, 0x00	; 0
    20d4:	0e 5f       	subi	r16, 0xFE	; 254
    20d6:	1f 4f       	sbci	r17, 0xFF	; 255
    20d8:	a3 01       	movw	r20, r6
    20da:	0e 94 61 11 	call	0x22c2	; 0x22c2 <__ultoa_invert>
    20de:	88 2e       	mov	r8, r24
    20e0:	86 18       	sub	r8, r6
    20e2:	fb 2d       	mov	r31, r11
    20e4:	ff 77       	andi	r31, 0x7F	; 127
    20e6:	3f 2e       	mov	r3, r31
    20e8:	36 fe       	sbrs	r3, 6
    20ea:	0d c0       	rjmp	.+26     	; 0x2106 <vfprintf+0x2ca>
    20ec:	23 2d       	mov	r18, r3
    20ee:	2e 7f       	andi	r18, 0xFE	; 254
    20f0:	a2 2e       	mov	r10, r18
    20f2:	89 14       	cp	r8, r9
    20f4:	58 f4       	brcc	.+22     	; 0x210c <vfprintf+0x2d0>
    20f6:	34 fe       	sbrs	r3, 4
    20f8:	0b c0       	rjmp	.+22     	; 0x2110 <vfprintf+0x2d4>
    20fa:	32 fc       	sbrc	r3, 2
    20fc:	09 c0       	rjmp	.+18     	; 0x2110 <vfprintf+0x2d4>
    20fe:	83 2d       	mov	r24, r3
    2100:	8e 7e       	andi	r24, 0xEE	; 238
    2102:	a8 2e       	mov	r10, r24
    2104:	05 c0       	rjmp	.+10     	; 0x2110 <vfprintf+0x2d4>
    2106:	b8 2c       	mov	r11, r8
    2108:	a3 2c       	mov	r10, r3
    210a:	03 c0       	rjmp	.+6      	; 0x2112 <vfprintf+0x2d6>
    210c:	b8 2c       	mov	r11, r8
    210e:	01 c0       	rjmp	.+2      	; 0x2112 <vfprintf+0x2d6>
    2110:	b9 2c       	mov	r11, r9
    2112:	a4 fe       	sbrs	r10, 4
    2114:	0f c0       	rjmp	.+30     	; 0x2134 <vfprintf+0x2f8>
    2116:	fe 01       	movw	r30, r28
    2118:	e8 0d       	add	r30, r8
    211a:	f1 1d       	adc	r31, r1
    211c:	80 81       	ld	r24, Z
    211e:	80 33       	cpi	r24, 0x30	; 48
    2120:	21 f4       	brne	.+8      	; 0x212a <vfprintf+0x2ee>
    2122:	9a 2d       	mov	r25, r10
    2124:	99 7e       	andi	r25, 0xE9	; 233
    2126:	a9 2e       	mov	r10, r25
    2128:	09 c0       	rjmp	.+18     	; 0x213c <vfprintf+0x300>
    212a:	a2 fe       	sbrs	r10, 2
    212c:	06 c0       	rjmp	.+12     	; 0x213a <vfprintf+0x2fe>
    212e:	b3 94       	inc	r11
    2130:	b3 94       	inc	r11
    2132:	04 c0       	rjmp	.+8      	; 0x213c <vfprintf+0x300>
    2134:	8a 2d       	mov	r24, r10
    2136:	86 78       	andi	r24, 0x86	; 134
    2138:	09 f0       	breq	.+2      	; 0x213c <vfprintf+0x300>
    213a:	b3 94       	inc	r11
    213c:	a3 fc       	sbrc	r10, 3
    213e:	11 c0       	rjmp	.+34     	; 0x2162 <vfprintf+0x326>
    2140:	a0 fe       	sbrs	r10, 0
    2142:	06 c0       	rjmp	.+12     	; 0x2150 <vfprintf+0x314>
    2144:	b2 14       	cp	r11, r2
    2146:	88 f4       	brcc	.+34     	; 0x216a <vfprintf+0x32e>
    2148:	28 0c       	add	r2, r8
    214a:	92 2c       	mov	r9, r2
    214c:	9b 18       	sub	r9, r11
    214e:	0e c0       	rjmp	.+28     	; 0x216c <vfprintf+0x330>
    2150:	b2 14       	cp	r11, r2
    2152:	60 f4       	brcc	.+24     	; 0x216c <vfprintf+0x330>
    2154:	b6 01       	movw	r22, r12
    2156:	80 e2       	ldi	r24, 0x20	; 32
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    215e:	b3 94       	inc	r11
    2160:	f7 cf       	rjmp	.-18     	; 0x2150 <vfprintf+0x314>
    2162:	b2 14       	cp	r11, r2
    2164:	18 f4       	brcc	.+6      	; 0x216c <vfprintf+0x330>
    2166:	2b 18       	sub	r2, r11
    2168:	02 c0       	rjmp	.+4      	; 0x216e <vfprintf+0x332>
    216a:	98 2c       	mov	r9, r8
    216c:	21 2c       	mov	r2, r1
    216e:	a4 fe       	sbrs	r10, 4
    2170:	10 c0       	rjmp	.+32     	; 0x2192 <vfprintf+0x356>
    2172:	b6 01       	movw	r22, r12
    2174:	80 e3       	ldi	r24, 0x30	; 48
    2176:	90 e0       	ldi	r25, 0x00	; 0
    2178:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    217c:	a2 fe       	sbrs	r10, 2
    217e:	17 c0       	rjmp	.+46     	; 0x21ae <vfprintf+0x372>
    2180:	a1 fc       	sbrc	r10, 1
    2182:	03 c0       	rjmp	.+6      	; 0x218a <vfprintf+0x34e>
    2184:	88 e7       	ldi	r24, 0x78	; 120
    2186:	90 e0       	ldi	r25, 0x00	; 0
    2188:	02 c0       	rjmp	.+4      	; 0x218e <vfprintf+0x352>
    218a:	88 e5       	ldi	r24, 0x58	; 88
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	b6 01       	movw	r22, r12
    2190:	0c c0       	rjmp	.+24     	; 0x21aa <vfprintf+0x36e>
    2192:	8a 2d       	mov	r24, r10
    2194:	86 78       	andi	r24, 0x86	; 134
    2196:	59 f0       	breq	.+22     	; 0x21ae <vfprintf+0x372>
    2198:	a1 fe       	sbrs	r10, 1
    219a:	02 c0       	rjmp	.+4      	; 0x21a0 <vfprintf+0x364>
    219c:	8b e2       	ldi	r24, 0x2B	; 43
    219e:	01 c0       	rjmp	.+2      	; 0x21a2 <vfprintf+0x366>
    21a0:	80 e2       	ldi	r24, 0x20	; 32
    21a2:	a7 fc       	sbrc	r10, 7
    21a4:	8d e2       	ldi	r24, 0x2D	; 45
    21a6:	b6 01       	movw	r22, r12
    21a8:	90 e0       	ldi	r25, 0x00	; 0
    21aa:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    21ae:	89 14       	cp	r8, r9
    21b0:	38 f4       	brcc	.+14     	; 0x21c0 <vfprintf+0x384>
    21b2:	b6 01       	movw	r22, r12
    21b4:	80 e3       	ldi	r24, 0x30	; 48
    21b6:	90 e0       	ldi	r25, 0x00	; 0
    21b8:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    21bc:	9a 94       	dec	r9
    21be:	f7 cf       	rjmp	.-18     	; 0x21ae <vfprintf+0x372>
    21c0:	8a 94       	dec	r8
    21c2:	f3 01       	movw	r30, r6
    21c4:	e8 0d       	add	r30, r8
    21c6:	f1 1d       	adc	r31, r1
    21c8:	80 81       	ld	r24, Z
    21ca:	b6 01       	movw	r22, r12
    21cc:	90 e0       	ldi	r25, 0x00	; 0
    21ce:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    21d2:	81 10       	cpse	r8, r1
    21d4:	f5 cf       	rjmp	.-22     	; 0x21c0 <vfprintf+0x384>
    21d6:	22 20       	and	r2, r2
    21d8:	09 f4       	brne	.+2      	; 0x21dc <vfprintf+0x3a0>
    21da:	42 ce       	rjmp	.-892    	; 0x1e60 <vfprintf+0x24>
    21dc:	b6 01       	movw	r22, r12
    21de:	80 e2       	ldi	r24, 0x20	; 32
    21e0:	90 e0       	ldi	r25, 0x00	; 0
    21e2:	0e 94 25 11 	call	0x224a	; 0x224a <fputc>
    21e6:	2a 94       	dec	r2
    21e8:	f6 cf       	rjmp	.-20     	; 0x21d6 <vfprintf+0x39a>
    21ea:	f6 01       	movw	r30, r12
    21ec:	86 81       	ldd	r24, Z+6	; 0x06
    21ee:	97 81       	ldd	r25, Z+7	; 0x07
    21f0:	02 c0       	rjmp	.+4      	; 0x21f6 <vfprintf+0x3ba>
    21f2:	8f ef       	ldi	r24, 0xFF	; 255
    21f4:	9f ef       	ldi	r25, 0xFF	; 255
    21f6:	2b 96       	adiw	r28, 0x0b	; 11
    21f8:	e2 e1       	ldi	r30, 0x12	; 18
    21fa:	0c 94 db 11 	jmp	0x23b6	; 0x23b6 <__epilogue_restores__>

000021fe <strnlen_P>:
    21fe:	fc 01       	movw	r30, r24
    2200:	05 90       	lpm	r0, Z+
    2202:	61 50       	subi	r22, 0x01	; 1
    2204:	70 40       	sbci	r23, 0x00	; 0
    2206:	01 10       	cpse	r0, r1
    2208:	d8 f7       	brcc	.-10     	; 0x2200 <strnlen_P+0x2>
    220a:	80 95       	com	r24
    220c:	90 95       	com	r25
    220e:	8e 0f       	add	r24, r30
    2210:	9f 1f       	adc	r25, r31
    2212:	08 95       	ret

00002214 <strnlen>:
    2214:	fc 01       	movw	r30, r24
    2216:	61 50       	subi	r22, 0x01	; 1
    2218:	70 40       	sbci	r23, 0x00	; 0
    221a:	01 90       	ld	r0, Z+
    221c:	01 10       	cpse	r0, r1
    221e:	d8 f7       	brcc	.-10     	; 0x2216 <strnlen+0x2>
    2220:	80 95       	com	r24
    2222:	90 95       	com	r25
    2224:	8e 0f       	add	r24, r30
    2226:	9f 1f       	adc	r25, r31
    2228:	08 95       	ret

0000222a <strrev>:
    222a:	dc 01       	movw	r26, r24
    222c:	fc 01       	movw	r30, r24
    222e:	67 2f       	mov	r22, r23
    2230:	71 91       	ld	r23, Z+
    2232:	77 23       	and	r23, r23
    2234:	e1 f7       	brne	.-8      	; 0x222e <strrev+0x4>
    2236:	32 97       	sbiw	r30, 0x02	; 2
    2238:	04 c0       	rjmp	.+8      	; 0x2242 <strrev+0x18>
    223a:	7c 91       	ld	r23, X
    223c:	6d 93       	st	X+, r22
    223e:	70 83       	st	Z, r23
    2240:	62 91       	ld	r22, -Z
    2242:	ae 17       	cp	r26, r30
    2244:	bf 07       	cpc	r27, r31
    2246:	c8 f3       	brcs	.-14     	; 0x223a <strrev+0x10>
    2248:	08 95       	ret

0000224a <fputc>:
    224a:	0f 93       	push	r16
    224c:	1f 93       	push	r17
    224e:	cf 93       	push	r28
    2250:	df 93       	push	r29
    2252:	fb 01       	movw	r30, r22
    2254:	23 81       	ldd	r18, Z+3	; 0x03
    2256:	21 fd       	sbrc	r18, 1
    2258:	03 c0       	rjmp	.+6      	; 0x2260 <fputc+0x16>
    225a:	8f ef       	ldi	r24, 0xFF	; 255
    225c:	9f ef       	ldi	r25, 0xFF	; 255
    225e:	2c c0       	rjmp	.+88     	; 0x22b8 <fputc+0x6e>
    2260:	22 ff       	sbrs	r18, 2
    2262:	16 c0       	rjmp	.+44     	; 0x2290 <fputc+0x46>
    2264:	46 81       	ldd	r20, Z+6	; 0x06
    2266:	57 81       	ldd	r21, Z+7	; 0x07
    2268:	24 81       	ldd	r18, Z+4	; 0x04
    226a:	35 81       	ldd	r19, Z+5	; 0x05
    226c:	42 17       	cp	r20, r18
    226e:	53 07       	cpc	r21, r19
    2270:	44 f4       	brge	.+16     	; 0x2282 <fputc+0x38>
    2272:	a0 81       	ld	r26, Z
    2274:	b1 81       	ldd	r27, Z+1	; 0x01
    2276:	9d 01       	movw	r18, r26
    2278:	2f 5f       	subi	r18, 0xFF	; 255
    227a:	3f 4f       	sbci	r19, 0xFF	; 255
    227c:	31 83       	std	Z+1, r19	; 0x01
    227e:	20 83       	st	Z, r18
    2280:	8c 93       	st	X, r24
    2282:	26 81       	ldd	r18, Z+6	; 0x06
    2284:	37 81       	ldd	r19, Z+7	; 0x07
    2286:	2f 5f       	subi	r18, 0xFF	; 255
    2288:	3f 4f       	sbci	r19, 0xFF	; 255
    228a:	37 83       	std	Z+7, r19	; 0x07
    228c:	26 83       	std	Z+6, r18	; 0x06
    228e:	14 c0       	rjmp	.+40     	; 0x22b8 <fputc+0x6e>
    2290:	8b 01       	movw	r16, r22
    2292:	ec 01       	movw	r28, r24
    2294:	fb 01       	movw	r30, r22
    2296:	00 84       	ldd	r0, Z+8	; 0x08
    2298:	f1 85       	ldd	r31, Z+9	; 0x09
    229a:	e0 2d       	mov	r30, r0
    229c:	09 95       	icall
    229e:	89 2b       	or	r24, r25
    22a0:	e1 f6       	brne	.-72     	; 0x225a <fputc+0x10>
    22a2:	d8 01       	movw	r26, r16
    22a4:	16 96       	adiw	r26, 0x06	; 6
    22a6:	8d 91       	ld	r24, X+
    22a8:	9c 91       	ld	r25, X
    22aa:	17 97       	sbiw	r26, 0x07	; 7
    22ac:	01 96       	adiw	r24, 0x01	; 1
    22ae:	17 96       	adiw	r26, 0x07	; 7
    22b0:	9c 93       	st	X, r25
    22b2:	8e 93       	st	-X, r24
    22b4:	16 97       	sbiw	r26, 0x06	; 6
    22b6:	ce 01       	movw	r24, r28
    22b8:	df 91       	pop	r29
    22ba:	cf 91       	pop	r28
    22bc:	1f 91       	pop	r17
    22be:	0f 91       	pop	r16
    22c0:	08 95       	ret

000022c2 <__ultoa_invert>:
    22c2:	fa 01       	movw	r30, r20
    22c4:	aa 27       	eor	r26, r26
    22c6:	28 30       	cpi	r18, 0x08	; 8
    22c8:	51 f1       	breq	.+84     	; 0x231e <__ultoa_invert+0x5c>
    22ca:	20 31       	cpi	r18, 0x10	; 16
    22cc:	81 f1       	breq	.+96     	; 0x232e <__ultoa_invert+0x6c>
    22ce:	e8 94       	clt
    22d0:	6f 93       	push	r22
    22d2:	6e 7f       	andi	r22, 0xFE	; 254
    22d4:	6e 5f       	subi	r22, 0xFE	; 254
    22d6:	7f 4f       	sbci	r23, 0xFF	; 255
    22d8:	8f 4f       	sbci	r24, 0xFF	; 255
    22da:	9f 4f       	sbci	r25, 0xFF	; 255
    22dc:	af 4f       	sbci	r26, 0xFF	; 255
    22de:	b1 e0       	ldi	r27, 0x01	; 1
    22e0:	3e d0       	rcall	.+124    	; 0x235e <__ultoa_invert+0x9c>
    22e2:	b4 e0       	ldi	r27, 0x04	; 4
    22e4:	3c d0       	rcall	.+120    	; 0x235e <__ultoa_invert+0x9c>
    22e6:	67 0f       	add	r22, r23
    22e8:	78 1f       	adc	r23, r24
    22ea:	89 1f       	adc	r24, r25
    22ec:	9a 1f       	adc	r25, r26
    22ee:	a1 1d       	adc	r26, r1
    22f0:	68 0f       	add	r22, r24
    22f2:	79 1f       	adc	r23, r25
    22f4:	8a 1f       	adc	r24, r26
    22f6:	91 1d       	adc	r25, r1
    22f8:	a1 1d       	adc	r26, r1
    22fa:	6a 0f       	add	r22, r26
    22fc:	71 1d       	adc	r23, r1
    22fe:	81 1d       	adc	r24, r1
    2300:	91 1d       	adc	r25, r1
    2302:	a1 1d       	adc	r26, r1
    2304:	20 d0       	rcall	.+64     	; 0x2346 <__ultoa_invert+0x84>
    2306:	09 f4       	brne	.+2      	; 0x230a <__ultoa_invert+0x48>
    2308:	68 94       	set
    230a:	3f 91       	pop	r19
    230c:	2a e0       	ldi	r18, 0x0A	; 10
    230e:	26 9f       	mul	r18, r22
    2310:	11 24       	eor	r1, r1
    2312:	30 19       	sub	r19, r0
    2314:	30 5d       	subi	r19, 0xD0	; 208
    2316:	31 93       	st	Z+, r19
    2318:	de f6       	brtc	.-74     	; 0x22d0 <__ultoa_invert+0xe>
    231a:	cf 01       	movw	r24, r30
    231c:	08 95       	ret
    231e:	46 2f       	mov	r20, r22
    2320:	47 70       	andi	r20, 0x07	; 7
    2322:	40 5d       	subi	r20, 0xD0	; 208
    2324:	41 93       	st	Z+, r20
    2326:	b3 e0       	ldi	r27, 0x03	; 3
    2328:	0f d0       	rcall	.+30     	; 0x2348 <__ultoa_invert+0x86>
    232a:	c9 f7       	brne	.-14     	; 0x231e <__ultoa_invert+0x5c>
    232c:	f6 cf       	rjmp	.-20     	; 0x231a <__ultoa_invert+0x58>
    232e:	46 2f       	mov	r20, r22
    2330:	4f 70       	andi	r20, 0x0F	; 15
    2332:	40 5d       	subi	r20, 0xD0	; 208
    2334:	4a 33       	cpi	r20, 0x3A	; 58
    2336:	18 f0       	brcs	.+6      	; 0x233e <__ultoa_invert+0x7c>
    2338:	49 5d       	subi	r20, 0xD9	; 217
    233a:	31 fd       	sbrc	r19, 1
    233c:	40 52       	subi	r20, 0x20	; 32
    233e:	41 93       	st	Z+, r20
    2340:	02 d0       	rcall	.+4      	; 0x2346 <__ultoa_invert+0x84>
    2342:	a9 f7       	brne	.-22     	; 0x232e <__ultoa_invert+0x6c>
    2344:	ea cf       	rjmp	.-44     	; 0x231a <__ultoa_invert+0x58>
    2346:	b4 e0       	ldi	r27, 0x04	; 4
    2348:	a6 95       	lsr	r26
    234a:	97 95       	ror	r25
    234c:	87 95       	ror	r24
    234e:	77 95       	ror	r23
    2350:	67 95       	ror	r22
    2352:	ba 95       	dec	r27
    2354:	c9 f7       	brne	.-14     	; 0x2348 <__ultoa_invert+0x86>
    2356:	00 97       	sbiw	r24, 0x00	; 0
    2358:	61 05       	cpc	r22, r1
    235a:	71 05       	cpc	r23, r1
    235c:	08 95       	ret
    235e:	9b 01       	movw	r18, r22
    2360:	ac 01       	movw	r20, r24
    2362:	0a 2e       	mov	r0, r26
    2364:	06 94       	lsr	r0
    2366:	57 95       	ror	r21
    2368:	47 95       	ror	r20
    236a:	37 95       	ror	r19
    236c:	27 95       	ror	r18
    236e:	ba 95       	dec	r27
    2370:	c9 f7       	brne	.-14     	; 0x2364 <__ultoa_invert+0xa2>
    2372:	62 0f       	add	r22, r18
    2374:	73 1f       	adc	r23, r19
    2376:	84 1f       	adc	r24, r20
    2378:	95 1f       	adc	r25, r21
    237a:	a0 1d       	adc	r26, r0
    237c:	08 95       	ret

0000237e <__prologue_saves__>:
    237e:	2f 92       	push	r2
    2380:	3f 92       	push	r3
    2382:	4f 92       	push	r4
    2384:	5f 92       	push	r5
    2386:	6f 92       	push	r6
    2388:	7f 92       	push	r7
    238a:	8f 92       	push	r8
    238c:	9f 92       	push	r9
    238e:	af 92       	push	r10
    2390:	bf 92       	push	r11
    2392:	cf 92       	push	r12
    2394:	df 92       	push	r13
    2396:	ef 92       	push	r14
    2398:	ff 92       	push	r15
    239a:	0f 93       	push	r16
    239c:	1f 93       	push	r17
    239e:	cf 93       	push	r28
    23a0:	df 93       	push	r29
    23a2:	cd b7       	in	r28, 0x3d	; 61
    23a4:	de b7       	in	r29, 0x3e	; 62
    23a6:	ca 1b       	sub	r28, r26
    23a8:	db 0b       	sbc	r29, r27
    23aa:	0f b6       	in	r0, 0x3f	; 63
    23ac:	f8 94       	cli
    23ae:	de bf       	out	0x3e, r29	; 62
    23b0:	0f be       	out	0x3f, r0	; 63
    23b2:	cd bf       	out	0x3d, r28	; 61
    23b4:	09 94       	ijmp

000023b6 <__epilogue_restores__>:
    23b6:	2a 88       	ldd	r2, Y+18	; 0x12
    23b8:	39 88       	ldd	r3, Y+17	; 0x11
    23ba:	48 88       	ldd	r4, Y+16	; 0x10
    23bc:	5f 84       	ldd	r5, Y+15	; 0x0f
    23be:	6e 84       	ldd	r6, Y+14	; 0x0e
    23c0:	7d 84       	ldd	r7, Y+13	; 0x0d
    23c2:	8c 84       	ldd	r8, Y+12	; 0x0c
    23c4:	9b 84       	ldd	r9, Y+11	; 0x0b
    23c6:	aa 84       	ldd	r10, Y+10	; 0x0a
    23c8:	b9 84       	ldd	r11, Y+9	; 0x09
    23ca:	c8 84       	ldd	r12, Y+8	; 0x08
    23cc:	df 80       	ldd	r13, Y+7	; 0x07
    23ce:	ee 80       	ldd	r14, Y+6	; 0x06
    23d0:	fd 80       	ldd	r15, Y+5	; 0x05
    23d2:	0c 81       	ldd	r16, Y+4	; 0x04
    23d4:	1b 81       	ldd	r17, Y+3	; 0x03
    23d6:	aa 81       	ldd	r26, Y+2	; 0x02
    23d8:	b9 81       	ldd	r27, Y+1	; 0x01
    23da:	ce 0f       	add	r28, r30
    23dc:	d1 1d       	adc	r29, r1
    23de:	0f b6       	in	r0, 0x3f	; 63
    23e0:	f8 94       	cli
    23e2:	de bf       	out	0x3e, r29	; 62
    23e4:	0f be       	out	0x3f, r0	; 63
    23e6:	cd bf       	out	0x3d, r28	; 61
    23e8:	ed 01       	movw	r28, r26
    23ea:	08 95       	ret

000023ec <_exit>:
    23ec:	f8 94       	cli

000023ee <__stop_program>:
    23ee:	ff cf       	rjmp	.-2      	; 0x23ee <__stop_program>
